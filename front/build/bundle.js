(()=>{var __webpack_modules__={21300:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   J0: () => (/* binding */ invariant),\n/* harmony export */   RQ: () => (/* binding */ joinPaths),\n/* harmony export */   WK: () => (/* binding */ isRouteErrorResponse),\n/* harmony export */   X3: () => (/* binding */ AbortedDeferredError),\n/* harmony export */   Zn: () => (/* binding */ stripBasename),\n/* harmony export */   Zq: () => (/* binding */ getPathContributingMatches),\n/* harmony export */   aU: () => (/* binding */ Action),\n/* harmony export */   cP: () => (/* binding */ parsePath),\n/* harmony export */   fp: () => (/* binding */ matchRoutes),\n/* harmony export */   lX: () => (/* binding */ createBrowserHistory),\n/* harmony export */   pC: () => (/* binding */ resolveTo)\n/* harmony export */ });\n/* unused harmony exports IDLE_BLOCKER, IDLE_FETCHER, IDLE_NAVIGATION, UNSAFE_DEFERRED_SYMBOL, UNSAFE_DeferredData, UNSAFE_ErrorResponseImpl, UNSAFE_convertRouteMatchToUiMatch, UNSAFE_convertRoutesToDataRoutes, UNSAFE_warning, createHashHistory, createMemoryHistory, createPath, createRouter, createStaticHandler, defer, generatePath, getStaticContextFromError, getToPathname, isDeferredData, json, matchPath, normalizePathname, redirect, redirectDocument, resolvePath */\n/**\n * @remix-run/router v1.9.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Actions represent the type of change to a location value.\n */\nvar Action;\n(function (Action) {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Action["Pop"] = "POP";\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Action["Push"] = "PUSH";\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Action["Replace"] = "REPLACE";\n})(Action || (Action = {}));\nconst PopStateEventType = "popstate";\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    initialEntries = ["/"],\n    initialIndex,\n    v5Compat = false\n  } = options;\n  let entries; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) => createMemoryLocation(entry, typeof entry === "string" ? null : entry.state, index === 0 ? "default" : undefined));\n  let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);\n  let action = Action.Pop;\n  let listener = null;\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation() {\n    return entries[index];\n  }\n  function createMemoryLocation(to, state, key) {\n    if (state === void 0) {\n      state = null;\n    }\n    let location = createLocation(entries ? getCurrentLocation().pathname : "/", to, state, key);\n    warning(location.pathname.charAt(0) === "/", "relative pathnames are not supported in memory history: " + JSON.stringify(to));\n    return location;\n  }\n  function createHref(to) {\n    return typeof to === "string" ? to : createPath(to);\n  }\n  let history = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), "http://localhost");\n    },\n    encodeLocation(to) {\n      let path = typeof to === "string" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || "",\n        search: path.search || "",\n        hash: path.hash || ""\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 1\n        });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 0\n        });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta\n        });\n      }\n    },\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n  };\n  return history;\n}\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createBrowserLocation(window, globalHistory) {\n    let {\n      pathname,\n      search,\n      hash\n    } = window.location;\n    return createLocation("", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || "default");\n  }\n  function createBrowserHref(window, to) {\n    return typeof to === "string" ? to : createPath(to);\n  }\n  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);\n}\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don\'t want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createHashLocation(window, globalHistory) {\n    let {\n      pathname = "/",\n      search = "",\n      hash = ""\n    } = parsePath(window.location.hash.substr(1));\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path="*">) since that matches internally against\n    // "/*" and we\'d expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith("/") && !pathname.startsWith(".")) {\n      pathname = "/" + pathname;\n    }\n    return createLocation("", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || "default");\n  }\n  function createHashHref(window, to) {\n    let base = window.document.querySelector("base");\n    let href = "";\n    if (base && base.getAttribute("href")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf("#");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n    return href + "#" + (typeof to === "string" ? to : createPath(to));\n  }\n  function validateHashLocation(location, to) {\n    warning(location.pathname.charAt(0) === "/", "relative pathnames are not supported in hash history.push(" + JSON.stringify(to) + ")");\n  }\n  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === "undefined") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== "undefined") console.warn(message);\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience, so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling "pause on exceptions" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\n/**\n * Creates a Location object with a unique key from the given Path\n */\nfunction createLocation(current, to, state, key) {\n  if (state === void 0) {\n    state = null;\n  }\n  let location = _extends({\n    pathname: typeof current === "string" ? current : current.pathname,\n    search: "",\n    hash: ""\n  }, typeof to === "string" ? parsePath(to) : to, {\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that\'s a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  });\n  return location;\n}\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nfunction createPath(_ref) {\n  let {\n    pathname = "/",\n    search = "",\n    hash = ""\n  } = _ref;\n  if (search && search !== "?") pathname += search.charAt(0) === "?" ? search : "?" + search;\n  if (hash && hash !== "#") pathname += hash.charAt(0) === "#" ? hash : "#" + hash;\n  return pathname;\n}\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nfunction parsePath(path) {\n  let parsedPath = {};\n  if (path) {\n    let hashIndex = path.indexOf("#");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n    let searchIndex = path.indexOf("?");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n  return parsedPath;\n}\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    window = document.defaultView,\n    v5Compat = false\n  } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener = null;\n  let index = getIndex();\n  // Index should only be null when we initialize. If not, it\'s because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), "");\n  }\n  function getIndex() {\n    let state = globalHistory.state || {\n      idx: null\n    };\n    return state.idx;\n  }\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }\n  function push(to, state) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, "", url);\n    } catch (error) {\n      // If the exception is because `state` can\'t be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === "DataCloneError") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 1\n      });\n    }\n  }\n  function replace(to, state) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, "", url);\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 0\n      });\n    }\n  }\n  function createURL(to) {\n    // window.location.origin is "null" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base = window.location.origin !== "null" ? window.location.origin : window.location.href;\n    let href = typeof to === "string" ? to : createPath(to);\n    invariant(base, "No window.location.(origin|href) available to create URL for href: " + href);\n    return new URL(href, base);\n  }\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn) {\n      if (listener) {\n        throw new Error("A history only accepts one active listener");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    }\n  };\n  return history;\n}\n//#endregion\n\nvar ResultType;\n(function (ResultType) {\n  ResultType["data"] = "data";\n  ResultType["deferred"] = "deferred";\n  ResultType["redirect"] = "redirect";\n  ResultType["error"] = "error";\n})(ResultType || (ResultType = {}));\nconst immutableRouteKeys = new Set(["lazy", "caseSensitive", "path", "id", "index", "children"]);\nfunction isIndexRoute(route) {\n  return route.index === true;\n}\n// Walk the route tree generating unique IDs where necessary, so we are working\n// solely with AgnosticDataRouteObject\'s within the Router\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties, parentPath, manifest) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  if (manifest === void 0) {\n    manifest = {};\n  }\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === "string" ? route.id : treePath.join("-");\n    invariant(route.index !== true || !route.children, "Cannot specify children on an index route");\n    invariant(!manifest[id], "Found a route id collision on id \\"" + id + "\\".  Route " + "id\'s must be globally unique within Data Router usages");\n    if (isIndexRoute(route)) {\n      let indexRoute = _extends({}, route, mapRouteProperties(route), {\n        id\n      });\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = _extends({}, route, mapRouteProperties(route), {\n        id,\n        children: undefined\n      });\n      manifest[id] = pathOrLayoutRoute;\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties, treePath, manifest);\n      }\n      return pathOrLayoutRoute;\n    }\n  });\n}\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = "/";\n  }\n  let location = typeof locationArg === "string" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || "/", basename);\n  if (pathname == null) {\n    return null;\n  }\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch(branches[i],\n    // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won\'t be\n    // encoded here but there also shouldn\'t be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    safelyDecodeURI(pathname));\n  }\n  return matches;\n}\nfunction convertRouteMatchToUiMatch(match, loaderData) {\n  let {\n    route,\n    pathname,\n    params\n  } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n  if (parentPath === void 0) {\n    parentPath = "";\n  }\n  let flattenRoute = (route, index, relativePath) => {\n    let meta = {\n      relativePath: relativePath === undefined ? route.path || "" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n    if (meta.relativePath.startsWith("/")) {\n      invariant(meta.relativePath.startsWith(parentPath), "Absolute route path \\"" + meta.relativePath + "\\" nested under path " + ("\\"" + parentPath + "\\" is not valid. An absolute child route path ") + "must start with the combined path of all its parent routes.");\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n    // Add the children before adding this route to the array, so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the "flattened" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n      // Our types know better, but runtime JS may not!\n      // @ts-expect-error\n      route.index !== true, "Index routes must not have child routes. Please remove " + ("all child routes from route path \\"" + path + "\\"."));\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n    // Routes without a path shouldn\'t ever match by themselves unless they are\n    // index routes, so don\'t add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n  routes.forEach((route, index) => {\n    var _route$path;\n    // coarse-grain check for optional params\n    if (route.path === "" || !((_route$path = route.path) != null && _route$path.includes("?"))) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n  return branches;\n}\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path) {\n  let segments = path.split("/");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments;\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith("?");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, "");\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `["one", "", "three"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, ""] : [required];\n  }\n  let restExploded = explodeOptionalSegments(rest.join("/"));\n  let result = [];\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children, so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explode _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(...restExploded.map(subpath => subpath === "" ? required : [required, subpath].join("/")));\n  // Then, if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map(exploded => path.startsWith("/") && exploded === "" ? "/" : exploded);\n}\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score // Higher score first\n  : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = s => s === "*";\nfunction computeScore(path, index) {\n  let segments = path.split("/");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === "" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ?\n  // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] :\n  // Otherwise, it doesn\'t really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\nfunction matchRouteBranch(branch, pathname) {\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = "/";\n  let matches = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === "/" ? pathname : pathname.slice(matchedPathname.length) || "/";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    if (!match) return null;\n    Object.assign(matchedParams, match.params);\n    let route = meta.route;\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n    if (match.pathnameBase !== "/") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nfunction generatePath(originalPath, params) {\n  if (params === void 0) {\n    params = {};\n  }\n  let path = originalPath;\n  if (path.endsWith("*") && path !== "*" && !path.endsWith("/*")) {\n    warning(false, "Route path \\"" + path + "\\" will be treated as if it were " + ("\\"" + path.replace(/\\*$/, "/*") + "\\" because the `*` character must ") + "always follow a `/` in the pattern. To get rid of this warning, " + ("please change the route path to \\"" + path.replace(/\\*$/, "/*") + "\\"."));\n    path = path.replace(/\\*$/, "/*");\n  }\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith("/") ? "/" : "";\n  const stringify = p => p == null ? "" : typeof p === "string" ? p : String(p);\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\n    const isLastSegment = index === array.length - 1;\n    // only apply the splat if it\'s the last segment\n    if (isLastSegment && segment === "*") {\n      const star = "*";\n      // Apply the splat\n      return stringify(params[star]);\n    }\n    const keyMatch = segment.match(/^:(\\w+)(\\??)$/);\n    if (keyMatch) {\n      const [, key, optional] = keyMatch;\n      let param = params[key];\n      invariant(optional === "?" || param != null, "Missing \\":" + key + "\\" param");\n      return stringify(param);\n    }\n    // Remove any optional markers from optional static segments\n    return segment.replace(/\\?$/g, "");\n  })\n  // Remove empty segments\n  .filter(segment => !!segment);\n  return prefix + segments.join("/");\n}\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === "string") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n  let [matcher, paramNames] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, "$1");\n  let captureGroups = match.slice(1);\n  let params = paramNames.reduce((memo, paramName, index) => {\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params["*"] later because it will be decoded then\n    if (paramName === "*") {\n      let splatValue = captureGroups[index] || "";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, "$1");\n    }\n    memo[paramName] = safelyDecodeURIComponent(captureGroups[index] || "", paramName);\n    return memo;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n  if (end === void 0) {\n    end = true;\n  }\n  warning(path === "*" || !path.endsWith("*") || path.endsWith("/*"), "Route path \\"" + path + "\\" will be treated as if it were " + ("\\"" + path.replace(/\\*$/, "/*") + "\\" because the `*` character must ") + "always follow a `/` in the pattern. To get rid of this warning, " + ("please change the route path to \\"" + path.replace(/\\*$/, "/*") + "\\"."));\n  let paramNames = [];\n  let regexpSource = "^" + path.replace(/\\/*\\*?$/, "") // Ignore trailing / and /*, we\'ll handle it below\n  .replace(/^\\/*/, "/") // Make sure it has a leading /\n  .replace(/[\\\\.*+^$?{}|()[\\]]/g, "\\\\$&") // Escape special regex chars\n  .replace(/\\/:(\\w+)/g, (_, paramName) => {\n    paramNames.push(paramName);\n    return "/([^\\\\/]+)";\n  });\n  if (path.endsWith("*")) {\n    paramNames.push("*");\n    regexpSource += path === "*" || path === "/*" ? "(.*)$" // Already matched the initial /, just match the rest\n    : "(?:\\\\/(.+)|\\\\/*)$"; // Don\'t include the / in params["*"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += "\\\\/*$";\n  } else if (path !== "" && path !== "/") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex, so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we\'ve matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += "(?:(?=\\\\/|$))";\n  } else ;\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : "i");\n  return [matcher, paramNames];\n}\nfunction safelyDecodeURI(value) {\n  try {\n    return decodeURI(value);\n  } catch (error) {\n    warning(false, "The URL path \\"" + value + "\\" could not be decoded because it is is a " + "malformed URL segment. This is probably due to a bad percent " + ("encoding (" + error + ")."));\n    return value;\n  }\n}\nfunction safelyDecodeURIComponent(value, paramName) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(false, "The value for the URL param \\"" + paramName + "\\" will not be decoded because" + (" the string \\"" + value + "\\" is a malformed URL segment. This is probably") + (" due to a bad percent encoding (" + error + ")."));\n    return value;\n  }\n}\n/**\n * @private\n */\nfunction stripBasename(pathname, basename) {\n  if (basename === "/") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  // We want to leave trailing slash behavior in the user\'s control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith("/") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== "/") {\n    // pathname does not start with basename/\n    return null;\n  }\n  return pathname.slice(startIndex) || "/";\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = "/";\n  }\n  let {\n    pathname: toPathname,\n    search = "",\n    hash = ""\n  } = typeof to === "string" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith("/") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, "").split("/");\n  let relativeSegments = relativePath.split("/");\n  relativeSegments.forEach(segment => {\n    if (segment === "..") {\n      // Keep the root "" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== ".") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join("/") : "/";\n}\nfunction getInvalidPathError(char, field, dest, path) {\n  return "Cannot include a \'" + char + "\' character in a manually specified " + ("`to." + field + "` field [" + JSON.stringify(path) + "].  Please separate it out to the ") + ("`to." + dest + "` field. Alternatively you may provide the full path as ") + "a string in <Link to=\\"...\\"> and the router will parse it for you.";\n}\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don\'t\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path="/">\n *     <Route path="accounts" element={<Link to=".."}>\n *   </Route>\n *\n *   <Route path="/">\n *     <Route path="accounts">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=".."} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nfunction getPathContributingMatches(matches) {\n  return matches.filter((match, index) => index === 0 || match.route.path && match.route.path.length > 0);\n}\n/**\n * @private\n */\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {\n  if (isPathRelative === void 0) {\n    isPathRelative = false;\n  }\n  let to;\n  if (typeof toArg === "string") {\n    to = parsePath(toArg);\n  } else {\n    to = _extends({}, toArg);\n    invariant(!to.pathname || !to.pathname.includes("?"), getInvalidPathError("?", "pathname", "search", to));\n    invariant(!to.pathname || !to.pathname.includes("#"), getInvalidPathError("#", "pathname", "hash", to));\n    invariant(!to.search || !to.search.includes("#"), getInvalidPathError("#", "search", "hash", to));\n  }\n  let isEmptyPath = toArg === "" || to.pathname === "";\n  let toPathname = isEmptyPath ? "/" : to.pathname;\n  let from;\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location\'s pathname and *not* the route pathname.\n  if (isPathRelative || toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n    if (toPathname.startsWith("..")) {\n      let toSegments = toPathname.split("/");\n      // Each leading .. segment means "go up one route" instead of "go up one\n      // URL segment".  This is a key difference from how <a href> works and a\n      // major reason we call this a "to" value instead of a "href".\n      while (toSegments[0] === "..") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join("/");\n    }\n    // If there are more ".." segments than parent routes, resolve relative to\n    // the root / URL.\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : "/";\n  }\n  let path = resolvePath(to, from);\n  // Ensure the pathname has a trailing slash if the original "to" had one\n  let hasExplicitTrailingSlash = toPathname && toPathname !== "/" && toPathname.endsWith("/");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === ".") && locationPathname.endsWith("/");\n  if (!path.pathname.endsWith("/") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += "/";\n  }\n  return path;\n}\n/**\n * @private\n */\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === "" || to.pathname === "" ? "/" : typeof to === "string" ? parsePath(to).pathname : to.pathname;\n}\n/**\n * @private\n */\nconst joinPaths = paths => paths.join("/").replace(/\\/\\/+/g, "/");\n/**\n * @private\n */\nconst normalizePathname = pathname => pathname.replace(/\\/+$/, "").replace(/^\\/*/, "/");\n/**\n * @private\n */\nconst normalizeSearch = search => !search || search === "?" ? "" : search.startsWith("?") ? search : "?" + search;\n/**\n * @private\n */\nconst normalizeHash = hash => !hash || hash === "#" ? "" : hash.startsWith("#") ? hash : "#" + hash;\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nconst json = function json(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === "number" ? {\n    status: init\n  } : init;\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has("Content-Type")) {\n    headers.set("Content-Type", "application/json; charset=utf-8");\n  }\n  return new Response(JSON.stringify(data), _extends({}, responseInit, {\n    headers\n  }));\n};\nclass AbortedDeferredError extends Error {}\nclass DeferredData {\n  constructor(data, responseInit) {\n    this.pendingKeysSet = new Set();\n    this.subscribers = new Set();\n    this.deferredKeys = [];\n    invariant(data && typeof data === "object" && !Array.isArray(data), "defer() only accepts plain objects");\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject;\n    this.abortPromise = new Promise((_, r) => reject = r);\n    this.controller = new AbortController();\n    let onAbort = () => reject(new AbortedDeferredError("Deferred data aborted"));\n    this.unlistenAbortSignal = () => this.controller.signal.removeEventListener("abort", onAbort);\n    this.controller.signal.addEventListener("abort", onAbort);\n    this.data = Object.entries(data).reduce((acc, _ref) => {\n      let [key, value] = _ref;\n      return Object.assign(acc, {\n        [key]: this.trackPromise(key, value)\n      });\n    }, {});\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n    this.init = responseInit;\n  }\n  trackPromise(key, value) {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise = Promise.race([value, this.abortPromise]).then(data => this.onSettle(promise, key, undefined, data), error => this.onSettle(promise, key, error));\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n    Object.defineProperty(promise, "_tracked", {\n      get: () => true\n    });\n    return promise;\n  }\n  onSettle(promise, key, error, data) {\n    if (this.controller.signal.aborted && error instanceof AbortedDeferredError) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, "_error", {\n        get: () => error\n      });\n      return Promise.reject(error);\n    }\n    this.pendingKeysSet.delete(key);\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n    // If the promise was resolved/rejected with undefined, we\'ll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error("Deferred data for key \\"" + key + "\\" resolved/rejected with `undefined`, " + "you must resolve/reject with a value or `null`.");\n      Object.defineProperty(promise, "_error", {\n        get: () => undefinedError\n      });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n    if (data === undefined) {\n      Object.defineProperty(promise, "_error", {\n        get: () => error\n      });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n    Object.defineProperty(promise, "_data", {\n      get: () => data\n    });\n    this.emit(false, key);\n    return data;\n  }\n  emit(aborted, settledKey) {\n    this.subscribers.forEach(subscriber => subscriber(aborted, settledKey));\n  }\n  subscribe(fn) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n  async resolveData(signal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener("abort", onAbort);\n      aborted = await new Promise(resolve => {\n        this.subscribe(aborted => {\n          signal.removeEventListener("abort", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n  get unwrappedData() {\n    invariant(this.data !== null && this.done, "Can only unwrap data on initialized and settled deferreds");\n    return Object.entries(this.data).reduce((acc, _ref2) => {\n      let [key, value] = _ref2;\n      return Object.assign(acc, {\n        [key]: unwrapTrackedPromise(value)\n      });\n    }, {});\n  }\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\nfunction isTrackedPromise(value) {\n  return value instanceof Promise && value._tracked === true;\n}\nfunction unwrapTrackedPromise(value) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\nconst defer = function defer(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === "number" ? {\n    status: init\n  } : init;\n  return new DeferredData(data, responseInit);\n};\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to "302 Found".\n */\nconst redirect = function redirect(url, init) {\n  if (init === void 0) {\n    init = 302;\n  }\n  let responseInit = init;\n  if (typeof responseInit === "number") {\n    responseInit = {\n      status: responseInit\n    };\n  } else if (typeof responseInit.status === "undefined") {\n    responseInit.status = 302;\n  }\n  let headers = new Headers(responseInit.headers);\n  headers.set("Location", url);\n  return new Response(null, _extends({}, responseInit, {\n    headers\n  }));\n};\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to "302 Found".\n */\nconst redirectDocument = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set("X-Remix-Reload-Document", "true");\n  return response;\n};\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n */\nclass ErrorResponseImpl {\n  constructor(status, statusText, data, internal) {\n    if (internal === void 0) {\n      internal = false;\n    }\n    this.status = status;\n    this.statusText = statusText || "";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === "number" && typeof error.statusText === "string" && typeof error.internal === "boolean" && "data" in error;\n}\nconst validMutationMethodsArr = ["post", "put", "patch", "delete"];\nconst validMutationMethods = new Set(validMutationMethodsArr);\nconst validRequestMethodsArr = ["get", ...validMutationMethodsArr];\nconst validRequestMethods = new Set(validRequestMethodsArr);\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\nconst IDLE_NAVIGATION = {\n  state: "idle",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_FETCHER = {\n  state: "idle",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_BLOCKER = {\n  state: "unblocked",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined\n};\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nconst defaultMapRouteProperties = route => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n});\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a router and listen to history POP navigations\n */\nfunction createRouter(init) {\n  const routerWindow = init.window ? init.window : typeof window !== "undefined" ? window : undefined;\n  const isBrowser = typeof routerWindow !== "undefined" && typeof routerWindow.document !== "undefined" && typeof routerWindow.document.createElement !== "undefined";\n  const isServer = !isBrowser;\n  invariant(init.routes.length > 0, "You must provide a non-empty routes array to createRouter");\n  let mapRouteProperties;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Routes keyed by ID\n  let manifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(init.routes, mapRouteProperties, undefined, manifest);\n  let inFlightDataRoutes;\n  let basename = init.basename || "/";\n  // Config driven behavior flags\n  let future = _extends({\n    v7_normalizeFormMethod: false,\n    v7_prependBasename: false\n  }, init.future);\n  // Cleanup function for history\n  let unlistenHistory = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don\'t get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR\'d and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors = null;\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = {\n      [route.id]: error\n    };\n  }\n  let initialized =\n  // All initialMatches need to be loaded before we\'re ready.  If we have lazy\n  // functions around still then we\'ll need to run them in initialize()\n  !initialMatches.some(m => m.route.lazy) && (\n  // And we have to either have no loaders or have been provided hydrationData\n  !initialMatches.some(m => m.route.loader) || init.hydrationData != null);\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don\'t restore on initial updateState() if we were SSR\'d\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: "idle",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map()\n  };\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction = Action.Pop;\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n  // AbortController for the active navigation\n  let pendingNavigationController;\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes = [];\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads = [];\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map();\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map();\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set();\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map();\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map();\n  // Store blocker functions in a separate Map outside of router state since\n  // we don\'t need to update UI state if they change\n  let blockerFunctions = new Map();\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let ignoreNextHistoryUpdate = false;\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We\'ll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(_ref => {\n      let {\n        action: historyAction,\n        location,\n        delta\n      } = _ref;\n      // Ignore this event if it was just us resetting the URL from a\n      // blocked POP navigation\n      if (ignoreNextHistoryUpdate) {\n        ignoreNextHistoryUpdate = false;\n        return;\n      }\n      warning(blockerFunctions.size === 0 || delta != null, "You are trying to use a blocker on a POP navigation to a location " + "that was not created by @remix-run/router. This will fail silently in " + "production. This can happen if you are navigating outside the router " + "via `window.history.pushState`/`window.location.hash` instead of using " + "router navigation APIs.  This can also happen if you are using " + "createHashRouter and the user manually changes the URL.");\n      let blockerKey = shouldBlockNavigation({\n        currentLocation: state.location,\n        nextLocation: location,\n        historyAction\n      });\n      if (blockerKey && delta != null) {\n        // Restore the URL to match the current UI, but don\'t update router state\n        ignoreNextHistoryUpdate = true;\n        init.history.go(delta * -1);\n        // Put the blocker into a blocked state\n        updateBlocker(blockerKey, {\n          state: "blocked",\n          location,\n          proceed() {\n            updateBlocker(blockerKey, {\n              state: "proceeding",\n              proceed: undefined,\n              reset: undefined,\n              location\n            });\n            // Re-do the same POP navigation we just blocked\n            init.history.go(delta);\n          },\n          reset() {\n            let blockers = new Map(state.blockers);\n            blockers.set(blockerKey, IDLE_BLOCKER);\n            updateState({\n              blockers\n            });\n          }\n        });\n        return;\n      }\n      return startNavigation(historyAction, location);\n    });\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don\'t do any handling of lazy here.  For SPA\'s it\'ll get handled\n    // in the normal navigation flow.  For SSR it\'s expected that lazy modules are\n    // resolved prior to router creation since we can\'t go into a fallbackElement\n    // UI for SSR\'d apps\n    if (!state.initialized) {\n      startNavigation(Action.Pop, state.location);\n    }\n    return router;\n  }\n  // Clean up a router and it\'s side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n  // Subscribe to state updates for the router\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n  // Update our state and notify the calling context of the change\n  function updateState(newState) {\n    state = _extends({}, state, newState);\n    subscribers.forEach(subscriber => subscriber(state));\n  }\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(location, newState) {\n    var _location$state, _location$state2;\n    // Deduce if we\'re in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We\'re past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === "loading" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== true;\n    let actionData;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we\'re wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n    // Always respect the user flag.  Otherwise don\'t reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location.state) == null ? void 0 : _location$state2._isRedirect) !== true;\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n    if (isUninterruptedRevalidation) ;else if (pendingAction === Action.Pop) ;else if (pendingAction === Action.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === Action.Replace) {\n      init.history.replace(location, location.state);\n    }\n    updateState(_extends({}, newState, {\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: "idle",\n      restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),\n      preventScrollReset,\n      blockers\n    }));\n    // Reset stateful navigation vars\n    pendingAction = Action.Pop;\n    pendingPreventScrollReset = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  }\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(to, opts) {\n    if (typeof to === "number") {\n      init.history.go(to);\n      return;\n    }\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, to, opts == null ? void 0 : opts.fromRouteId, opts == null ? void 0 : opts.relative);\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, false, normalizedPath, opts);\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n    // When using navigate as a PUSH/REPLACE we aren\'t reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we\'d get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = _extends({}, nextLocation, init.history.encodeLocation(nextLocation));\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n    let historyAction = Action.Push;\n    if (userReplace === true) {\n      historyAction = Action.Replace;\n    } else if (userReplace === false) ;else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don\'t have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = Action.Replace;\n    }\n    let preventScrollReset = opts && "preventScrollReset" in opts ? opts.preventScrollReset === true : undefined;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: "blocked",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: "proceeding",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey, IDLE_BLOCKER);\n          updateState({\n            blockers\n          });\n        }\n      });\n      return;\n    }\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace\n    });\n  }\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to "succeed" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({\n      revalidation: "loading"\n    });\n    // If we\'re currently submitting an action, we don\'t need to start a new\n    // navigation, we\'ll just let the follow up loader execution call all loaders\n    if (state.navigation.state === "submitting") {\n      return;\n    }\n    // If we\'re currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === "idle") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return;\n    }\n    // Otherwise, if we\'re currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(pendingAction || state.historyAction, state.navigation.location, {\n      overrideNavigation: state.navigation\n    });\n  }\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(historyAction, location, opts) {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(routesToUse);\n      // Cancel all pending deferred on 404s since we don\'t keep any routes\n      cancelActiveDeferreds();\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error\n        }\n      });\n      return;\n    }\n    // Short circuit if it\'s only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial load will always\n    // be "same hash".  For example, on /page#hash and submit a <Form method="post">\n    // which will default to a navigation to /page\n    if (state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, {\n        matches\n      });\n      return;\n    }\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);\n    let pendingActionData;\n    let pendingError;\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It\'s not really\n      // different from an actionError in that sense.\n      pendingError = {\n        [findNearestBoundary(matches).route.id]: opts.pendingError\n      };\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      // Call action if we received an action submission\n      let actionOutput = await handleAction(request, location, opts.submission, matches, {\n        replace: opts.replace\n      });\n      if (actionOutput.shortCircuited) {\n        return;\n      }\n      pendingActionData = actionOutput.pendingActionData;\n      pendingError = actionOutput.pendingActionError;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      // Create a GET request for the loaders\n      request = new Request(request.url, {\n        signal: request.signal\n      });\n    }\n    // Call loaders\n    let {\n      shortCircuited,\n      loaderData,\n      errors\n    } = await handleLoaders(request, location, matches, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, pendingActionData, pendingError);\n    if (shortCircuited) {\n      return;\n    }\n    // Clean up now that the action/loaders have completed.  Don\'t clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n    completeNavigation(location, _extends({\n      matches\n    }, pendingActionData ? {\n      actionData: pendingActionData\n    } : {}, {\n      loaderData,\n      errors\n    }));\n  }\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(request, location, submission, matches, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    interruptActiveLoads();\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({\n      navigation\n    });\n    // Call our action and get the result\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      result = await callLoaderOrAction("action", request, actionMatch, matches, manifest, mapRouteProperties, basename);\n      if (request.signal.aborted) {\n        return {\n          shortCircuited: true\n        };\n      }\n    }\n    if (isRedirectResult(result)) {\n      let replace;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn\'t explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we\'re currently at to avoid\n        // double back-buttons\n        replace = result.location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(state, result, {\n        submission,\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      // By default, all submissions are REPLACE navigations, but if the\n      // action threw an error that\'ll be rendered in an errorElement, we fall\n      // back to PUSH so that the user can use the back button to get back to\n      // the pre-submission form location to try again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = Action.Push;\n      }\n      return {\n        // Send back an empty object we can use to clear out any prior actionData\n        pendingActionData: {},\n        pendingActionError: {\n          [boundaryMatch.route.id]: result.error\n        }\n      };\n    }\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, {\n        type: "defer-action"\n      });\n    }\n    return {\n      pendingActionData: {\n        [actionMatch.route.id]: result.data\n      }\n    };\n  }\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(request, location, matches, overrideNavigation, submission, fetcherSubmission, replace, pendingActionData, pendingError) {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\n    // If this was a redirect from an action we don\'t have a "submission" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, activeSubmission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionData, pendingError);\n    // Cancel pending deferreds for no-longer-matched routes or routes we\'re\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(routeId => !(matches && matches.some(m => m.route.id === routeId)) || matchesToLoad && matchesToLoad.some(m => m.route.id === routeId));\n    pendingNavigationLoadId = ++incrementingLoadId;\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(location, _extends({\n        matches,\n        loaderData: {},\n        // Commit pending error if we\'re short circuiting\n        errors: pendingError || null\n      }, pendingActionData ? {\n        actionData: pendingActionData\n      } : {}, updatedFetchers ? {\n        fetchers: new Map(state.fetchers)\n      } : {}));\n      return {\n        shortCircuited: true\n      };\n    }\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    if (!isUninterruptedRevalidation) {\n      revalidatingFetchers.forEach(rf => {\n        let fetcher = state.fetchers.get(rf.key);\n        let revalidatingFetcher = getLoadingFetcher(undefined, fetcher ? fetcher.data : undefined);\n        state.fetchers.set(rf.key, revalidatingFetcher);\n      });\n      let actionData = pendingActionData || state.actionData;\n      updateState(_extends({\n        navigation: loadingNavigation\n      }, actionData ? Object.keys(actionData).length === 0 ? {\n        actionData: null\n      } : {\n        actionData\n      } : {}, revalidatingFetchers.length > 0 ? {\n        fetchers: new Map(state.fetchers)\n      } : {}));\n    }\n    revalidatingFetchers.forEach(rf => {\n      if (fetchControllers.has(rf.key)) {\n        abortFetcher(rf.key);\n      }\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(f => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener("abort", abortPendingFetchRevalidations);\n    }\n    let {\n      results,\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, request);\n    if (request.signal.aborted) {\n      return {\n        shortCircuited: true\n      };\n    }\n    // Clean up _after_ loaders have completed.  Don\'t clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener("abort", abortPendingFetchRevalidations);\n    }\n    revalidatingFetchers.forEach(rf => fetchControllers.delete(rf.key));\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(results);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn\'t get revalidated on the next set of\n        // loader executions\n        let fetcherKey = revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      await startRedirectNavigation(state, redirect.result, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, matchesToLoad, loaderResults, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe(aborted => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return _extends({\n      loaderData,\n      errors\n    }, shouldUpdateFetchers ? {\n      fetchers: new Map(state.fetchers)\n    } : {});\n  }\n  function getFetcher(key) {\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(key, routeId, href, opts) {\n    if (isServer) {\n      throw new Error("router.fetch() was called during the server render, but it shouldn\'t be. " + "You are likely calling a useFetcher() method in the body of your component. " + "Try moving it to a useEffect or a callback.");\n    }\n    if (fetchControllers.has(key)) abortFetcher(key);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, href, routeId, opts == null ? void 0 : opts.relative);\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n    if (!matches) {\n      setFetcherError(key, routeId, getInternalRouterError(404, {\n        pathname: normalizedPath\n      }));\n      return;\n    }\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, true, normalizedPath, opts);\n    if (error) {\n      setFetcherError(key, routeId, error);\n      return;\n    }\n    let match = getTargetMatch(matches, path);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, submission);\n      return;\n    }\n    // Store off the match so we can call it\'s shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, {\n      routeId,\n      path\n    });\n    handleFetcherLoader(key, routeId, path, match, matches, submission);\n  }\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n    if (!match.route.action && !match.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId: routeId\n      });\n      setFetcherError(key, routeId, error);\n      return;\n    }\n    // Put this fetcher into it\'s submitting state\n    let existingFetcher = state.fetchers.get(key);\n    let fetcher = getSubmittingFetcher(submission, existingFetcher);\n    state.fetchers.set(key, fetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    // Call the action for the fetcher\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let actionResult = await callLoaderOrAction("action", fetchRequest, match, requestMatches, manifest, mapRouteProperties, basename);\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren\'t aborted by ou our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n    if (isRedirectResult(actionResult)) {\n      fetchControllers.delete(key);\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our action started, so that\n        // should take precedence over this redirect navigation.  We already\n        // set isRevalidationRequired so all loaders for the new route should\n        // fire unless opted out via shouldRevalidate\n        let doneFetcher = getDoneFetcher(undefined);\n        state.fetchers.set(key, doneFetcher);\n        updateState({\n          fetchers: new Map(state.fetchers)\n        });\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        let loadingFetcher = getLoadingFetcher(submission);\n        state.fetchers.set(key, loadingFetcher);\n        updateState({\n          fetchers: new Map(state.fetchers)\n        });\n        return startRedirectNavigation(state, actionResult, {\n          fetcherSubmission: submission\n        });\n      }\n    }\n    // Process any non-redirect errors thrown\n    if (isErrorResult(actionResult)) {\n      setFetcherError(key, routeId, actionResult.error);\n      return;\n    }\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, {\n        type: "defer-action"\n      });\n    }\n    // Start the data load for current matches, or the next location if we\'re\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== "idle" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, "Didn\'t find any matches after fetcher action");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, submission, nextLocation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, {\n      [match.route.id]: actionResult.data\n    }, undefined // No need to send through errors since we short circuit above\n    );\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it\'s current loading state which\n    // contains it\'s action submission info + action data\n    revalidatingFetchers.filter(rf => rf.key !== key).forEach(rf => {\n      let staleKey = rf.key;\n      let existingFetcher = state.fetchers.get(staleKey);\n      let revalidatingFetcher = getLoadingFetcher(undefined, existingFetcher ? existingFetcher.data : undefined);\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      if (fetchControllers.has(staleKey)) {\n        abortFetcher(staleKey);\n      }\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(rf => abortFetcher(rf.key));\n    abortController.signal.addEventListener("abort", abortPendingFetchRevalidations);\n    let {\n      results,\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);\n    if (abortController.signal.aborted) {\n      return;\n    }\n    abortController.signal.removeEventListener("abort", abortPendingFetchRevalidations);\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach(r => fetchControllers.delete(r.key));\n    let redirect = findRedirect(results);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn\'t get revalidated on the next set of\n        // loader executions\n        let fetcherKey = revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      return startRedirectNavigation(state, redirect.result);\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, state.matches, matchesToLoad, loaderResults, undefined, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn\'t been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n    let didAbortFetchLoads = abortStaleFetchLoads(loadId);\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (state.navigation.state === "loading" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, "Expected pending action");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren\'t going through completeNavigation\n      updateState(_extends({\n        errors,\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors)\n      }, didAbortFetchLoads || revalidatingFetchers.length > 0 ? {\n        fetchers: new Map(state.fetchers)\n      } : {}));\n      isRevalidationRequired = false;\n    }\n  }\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(key, routeId, path, match, matches, submission) {\n    let existingFetcher = state.fetchers.get(key);\n    // Put this fetcher into it\'s loading state\n    let loadingFetcher = getLoadingFetcher(submission, existingFetcher ? existingFetcher.data : undefined);\n    state.fetchers.set(key, loadingFetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    // Call the loader for this fetcher route match\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal);\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let result = await callLoaderOrAction("loader", fetchRequest, match, matches, manifest, mapRouteProperties, basename);\n    // Deferred isn\'t supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result = (await resolveDeferredData(result, fetchRequest.signal, true)) || result;\n    }\n    // We can delete this so long as we weren\'t aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        let doneFetcher = getDoneFetcher(undefined);\n        state.fetchers.set(key, doneFetcher);\n        updateState({\n          fetchers: new Map(state.fetchers)\n        });\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(state, result);\n        return;\n      }\n    }\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, routeId);\n      state.fetchers.delete(key);\n      // TODO: In remix, this would reset to IDLE_NAVIGATION if it was a catch -\n      // do we need to behave any differently with our non-redirect errors?\n      // What if it was a non-redirect Response?\n      updateState({\n        fetchers: new Map(state.fetchers),\n        errors: {\n          [boundaryMatch.route.id]: result.error\n        }\n      });\n      return;\n    }\n    invariant(!isDeferredResult(result), "Unhandled fetcher deferred data");\n    // Put the fetcher back into an idle state\n    let doneFetcher = getDoneFetcher(result.data);\n    state.fetchers.set(key, doneFetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect "replaces" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we\'ve processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(state, redirect, _temp) {\n    let {\n      submission,\n      fetcherSubmission,\n      replace\n    } = _temp === void 0 ? {} : _temp;\n    if (redirect.revalidate) {\n      isRevalidationRequired = true;\n    }\n    let redirectLocation = createLocation(state.location, redirect.location, {\n      _isRedirect: true\n    });\n    invariant(redirectLocation, "Expected a location on the redirect navigation");\n    if (isBrowser) {\n      let isDocumentReload = false;\n      if (redirect.reloadDocument) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(redirect.location)) {\n        const url = init.history.createURL(redirect.location);\n        isDocumentReload =\n        // Hard reload if it\'s an absolute URL to a new origin\n        url.origin !== routerWindow.location.origin ||\n        // Hard reload if it\'s an absolute URL that does not match our basename\n        stripBasename(url.pathname, basename) == null;\n      }\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(redirect.location);\n        } else {\n          routerWindow.location.assign(redirect.location);\n        }\n        return;\n      }\n    }\n    // There\'s no need to abort on redirects, since we don\'t detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n    let redirectHistoryAction = replace === true ? Action.Replace : Action.Push;\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let {\n      formMethod,\n      formAction,\n      formEncType\n    } = state.navigation;\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    let activeSubmission = submission || fetcherSubmission;\n    if (redirectPreserveMethodStatusCodes.has(redirect.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: _extends({}, activeSubmission, {\n          formAction: redirect.location\n        }),\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    } else {\n      // If we have a navigation submission, we will preserve it through the\n      // redirect navigation\n      let overrideNavigation = getLoadingNavigation(redirectLocation, submission);\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    }\n  }\n  async function callLoadersAndMaybeResolveData(currentMatches, matches, matchesToLoad, fetchersToLoad, request) {\n    // Call all navigation loaders and revalidating fetcher loaders in parallel,\n    // then slice off the results into separate arrays so we can handle them\n    // accordingly\n    let results = await Promise.all([...matchesToLoad.map(match => callLoaderOrAction("loader", request, match, matches, manifest, mapRouteProperties, basename)), ...fetchersToLoad.map(f => {\n      if (f.matches && f.match && f.controller) {\n        return callLoaderOrAction("loader", createClientSideRequest(init.history, f.path, f.controller.signal), f.match, f.matches, manifest, mapRouteProperties, basename);\n      } else {\n        let error = {\n          type: ResultType.error,\n          error: getInternalRouterError(404, {\n            pathname: f.path\n          })\n        };\n        return error;\n      }\n    })]);\n    let loaderResults = results.slice(0, matchesToLoad.length);\n    let fetcherResults = results.slice(matchesToLoad.length);\n    await Promise.all([resolveDeferredResults(currentMatches, matchesToLoad, loaderResults, loaderResults.map(() => request.signal), false, state.loaderData), resolveDeferredResults(currentMatches, fetchersToLoad.map(f => f.match), fetcherResults, fetchersToLoad.map(f => f.controller ? f.controller.signal : null), true)]);\n    return {\n      results,\n      loaderResults,\n      fetcherResults\n    };\n  }\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n  function setFetcherError(key, routeId, error) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error\n      },\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  function deleteFetcher(key) {\n    let fetcher = state.fetchers.get(key);\n    // Don\'t abort the controller if this is a deletion of a fetcher.submit()\n    // in it\'s loading phase since - we don\'t want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === "loading" && fetchReloadIds.has(key))) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    state.fetchers.delete(key);\n  }\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, "Expected fetch controller: " + key);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, "Expected fetcher: " + key);\n      if (fetcher.state === "loading") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, "Expected fetcher: " + key);\n        if (fetcher.state === "loading") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n    return blocker;\n  }\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(blocker.state === "unblocked" && newBlocker.state === "blocked" || blocker.state === "blocked" && newBlocker.state === "blocked" || blocker.state === "blocked" && newBlocker.state === "proceeding" || blocker.state === "blocked" && newBlocker.state === "unblocked" || blocker.state === "proceeding" && newBlocker.state === "unblocked", "Invalid blocker state transition: " + blocker.state + " -> " + newBlocker.state);\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({\n      blockers\n    });\n  }\n  function shouldBlockNavigation(_ref2) {\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = _ref2;\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n    // We ony support a single active blocker at the moment since we don\'t have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, "A router only supports one blocker at a time");\n    }\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n    if (blocker && blocker.state === "proceeding") {\n      // If the blocker is currently proceeding, we don\'t need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n    // At this point, we know we\'re unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({\n      currentLocation,\n      nextLocation,\n      historyAction\n    })) {\n      return blockerKey;\n    }\n  }\n  function cancelActiveDeferreds(predicate) {\n    let cancelledRouteIds = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we\'ve not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({\n          restoreScrollPosition: y\n        });\n      }\n    }\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n  function getScrollKey(location, matches) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(location, matches.map(m => convertRouteMatchToUiMatch(m, state.loaderData)));\n      return key || location.key;\n    }\n    return location.key;\n  }\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === "number") {\n        return y;\n      }\n    }\n    return null;\n  }\n  function _internalSetRoutes(newRoutes) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(newRoutes, mapRouteProperties, undefined, manifest);\n  }\n  router = {\n    get basename() {\n      return basename;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: to => init.history.createHref(to),\n    encodeLocation: to => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it\'s temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes\n  };\n  return router;\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\nconst UNSAFE_DEFERRED_SYMBOL = Symbol("deferred");\nfunction createStaticHandler(routes, opts) {\n  invariant(routes.length > 0, "You must provide a non-empty routes array to createStaticHandler");\n  let manifest = {};\n  let basename = (opts ? opts.basename : null) || "/";\n  let mapRouteProperties;\n  if (opts != null && opts.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts != null && opts.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  let dataRoutes = convertRoutesToDataRoutes(routes, mapRouteProperties, undefined, manifest);\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   */\n  async function query(request, _temp2) {\n    let {\n      requestContext\n    } = _temp2 === void 0 ? {} : _temp2;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation("", createPath(url), null, "default");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn\'t\n    if (!isValidMethod(method) && method !== "HEAD") {\n      let error = getInternalRouterError(405, {\n        method\n      });\n      let {\n        matches: methodNotAllowedMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let result = await queryImpl(request, location, matches, requestContext);\n    if (isResponse(result)) {\n      return result;\n    }\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return _extends({\n      location,\n      basename\n    }, result);\n  }\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   */\n  async function queryRoute(request, _temp3) {\n    let {\n      routeId,\n      requestContext\n    } = _temp3 === void 0 ? {} : _temp3;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation("", createPath(url), null, "default");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn\'t\n    if (!isValidMethod(method) && method !== "HEAD" && method !== "OPTIONS") {\n      throw getInternalRouterError(405, {\n        method\n      });\n    } else if (!matches) {\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let match = routeId ? matches.find(m => m.route.id === routeId) : getTargetMatch(matches, location);\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId\n      });\n    } else if (!match) {\n      // This should never hit I don\'t think?\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let result = await queryImpl(request, location, matches, requestContext, match);\n    if (isResponse(result)) {\n      return result;\n    }\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn\'t a Response, but it\'s not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the "error" state outside of queryImpl.\n      throw error;\n    }\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n    if (result.loaderData) {\n      var _result$activeDeferre;\n      let data = Object.values(result.loaderData)[0];\n      if ((_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n    return undefined;\n  }\n  async function queryImpl(request, location, matches, requestContext, routeMatch) {\n    invariant(request.signal, "query()/queryRoute() requests must contain an AbortController signal");\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, routeMatch != null);\n        return result;\n      }\n      let result = await loadRouteData(request, matches, requestContext, routeMatch);\n      return isResponse(result) ? result : _extends({}, result, {\n        actionData: null,\n        actionHeaders: {}\n      });\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction, we throw\n      // it to bail out and then return or throw here based on whether the user\n      // returned or threw\n      if (isQueryRouteResponse(e)) {\n        if (e.type === ResultType.error) {\n          throw e.response;\n        }\n        return e.response;\n      }\n      // Redirects are always returned since they don\'t propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n  async function submit(request, matches, actionMatch, requestContext, isRouteRequest) {\n    let result;\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    } else {\n      result = await callLoaderOrAction("action", request, actionMatch, matches, manifest, mapRouteProperties, basename, {\n        isStaticRequest: true,\n        isRouteRequest,\n        requestContext\n      });\n      if (request.signal.aborted) {\n        let method = isRouteRequest ? "queryRoute" : "query";\n        throw new Error(method + "() call aborted: " + request.method + " " + request.url);\n      }\n    }\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the "throw all redirect responses" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.status,\n        headers: {\n          Location: result.location\n        }\n      });\n    }\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, {\n        type: "defer-action"\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    }\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: {\n          [actionMatch.route.id]: result.data\n        },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(request, matches, requestContext, undefined, {\n        [boundaryMatch.route.id]: result.error\n      });\n      // action status codes take precedence over loader status codes\n      return _extends({}, context, {\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : 500,\n        actionData: null,\n        actionHeaders: _extends({}, result.headers ? {\n          [actionMatch.route.id]: result.headers\n        } : {})\n      });\n    }\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal\n    });\n    let context = await loadRouteData(loaderRequest, matches, requestContext);\n    return _extends({}, context, result.statusCode ? {\n      statusCode: result.statusCode\n    } : {}, {\n      actionData: {\n        [actionMatch.route.id]: result.data\n      },\n      actionHeaders: _extends({}, result.headers ? {\n        [actionMatch.route.id]: result.headers\n      } : {})\n    });\n  }\n  async function loadRouteData(request, matches, requestContext, routeMatch, pendingActionError) {\n    let isRouteRequest = routeMatch != null;\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (isRouteRequest && !(routeMatch != null && routeMatch.route.loader) && !(routeMatch != null && routeMatch.route.lazy)) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch == null ? void 0 : routeMatch.route.id\n      });\n    }\n    let requestMatches = routeMatch ? [routeMatch] : getLoaderMatchesUntilBoundary(matches, Object.keys(pendingActionError || {})[0]);\n    let matchesToLoad = requestMatches.filter(m => m.route.loader || m.route.lazy);\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce((acc, m) => Object.assign(acc, {\n          [m.route.id]: null\n        }), {}),\n        errors: pendingActionError || null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let results = await Promise.all([...matchesToLoad.map(match => callLoaderOrAction("loader", request, match, matches, manifest, mapRouteProperties, basename, {\n      isStaticRequest: true,\n      isRouteRequest,\n      requestContext\n    }))]);\n    if (request.signal.aborted) {\n      let method = isRouteRequest ? "queryRoute" : "query";\n      throw new Error(method + "() call aborted: " + request.method + " " + request.url);\n    }\n    // Process and commit output from loaders\n    let activeDeferreds = new Map();\n    let context = processRouteLoaderData(matches, matchesToLoad, results, pendingActionError, activeDeferreds);\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set(matchesToLoad.map(match => match.route.id));\n    matches.forEach(match => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n    return _extends({}, context, {\n      matches,\n      activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null\n    });\n  }\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nfunction getStaticContextFromError(routes, context, error) {\n  let newContext = _extends({}, context, {\n    statusCode: 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error\n    }\n  });\n  return newContext;\n}\nfunction isSubmissionNavigation(opts) {\n  return opts != null && ("formData" in opts && opts.formData != null || "body" in opts && opts.body !== undefined);\n}\nfunction normalizeTo(location, matches, basename, prependBasename, to, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n  if (fromRouteId != null && relative !== "path") {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route.  When using relative:path,\n    // fromRouteId is ignored since that is always relative to the current\n    // location path\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n  // Resolve the relative path\n  let path = resolveTo(to ? to : ".", getPathContributingMatches(contextualMatches).map(m => m.pathnameBase), stripBasename(location.pathname, basename) || location.pathname, relative === "path");\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to="." and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n  // Add an ?index param for matched index routes if we don\'t already have one\n  if ((to == null || to === "" || to === ".") && activeRouteMatch && activeRouteMatch.route.index && !hasNakedIndexQuery(path.search)) {\n    path.search = path.search ? path.search.replace(/^\\?/, "?index&") : "?index";\n  }\n  // If we\'re operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== "/") {\n    path.pathname = path.pathname === "/" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(normalizeFormMethod, isFetcher, path, opts) {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return {\n      path\n    };\n  }\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, {\n        method: opts.formMethod\n      })\n    };\n  }\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, {\n      type: "invalid-body"\n    })\n  });\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || "get";\n  let formMethod = normalizeFormMethod ? rawFormMethod.toUpperCase() : rawFormMethod.toLowerCase();\n  let formAction = stripHashFromPath(path);\n  if (opts.body !== undefined) {\n    if (opts.formEncType === "text/plain") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      let text = typeof opts.body === "string" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ?\n      // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n      Array.from(opts.body.entries()).reduce((acc, _ref3) => {\n        let [name, value] = _ref3;\n        return "" + acc + name + "=" + value + "\\n";\n      }, "") : String(opts.body);\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text\n        }\n      };\n    } else if (opts.formEncType === "application/json") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      try {\n        let json = typeof opts.body === "string" ? JSON.parse(opts.body) : opts.body;\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined\n          }\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n  invariant(typeof FormData === "function", "FormData is not available in this environment");\n  let searchParams;\n  let formData;\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n  let submission = {\n    formMethod,\n    formAction,\n    formEncType: opts && opts.formEncType || "application/x-www-form-urlencoded",\n    formData,\n    json: undefined,\n    text: undefined\n  };\n  if (isMutationMethod(submission.formMethod)) {\n    return {\n      path,\n      submission\n    };\n  }\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append("index", "");\n  }\n  parsedPath.search = "?" + searchParams;\n  return {\n    path: createPath(parsedPath),\n    submission\n  };\n}\n// Filter out all routes below any caught error as they aren\'t going to\n// render so we don\'t need to load them\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex(m => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\nfunction getMatchesToLoad(history, state, matches, submission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionData, pendingError) {\n  let actionResult = pendingError ? Object.values(pendingError)[0] : pendingActionData ? Object.values(pendingActionData)[0] : undefined;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;\n  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    if (match.route.lazy) {\n      // We haven\'t loaded this route yet so we don\'t know if it\'s got a loader!\n      return true;\n    }\n    if (match.route.loader == null) {\n      return false;\n    }\n    // Always call the loader on new route instances and pending defer cancellations\n    if (isNewLoader(state.loaderData, state.matches[index], match) || cancelledDeferredRoutes.some(id => id === match.route.id)) {\n      return true;\n    }\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it\'s own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n    return shouldRevalidateLoader(match, _extends({\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params\n    }, submission, {\n      actionResult,\n      defaultShouldRevalidate:\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      isRevalidationRequired ||\n      // Clicked the same link, resubmitted a GET form\n      currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search ||\n      // Search params affect all loaders\n      currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)\n    }));\n  });\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don\'t revalidate if fetcher won\'t be present in the subsequent render\n    if (!matches.some(m => m.route.id === f.routeId)) {\n      return;\n    }\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null\n      });\n      return;\n    }\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.includes(key)) {\n      // Always revalidate if the fetcher was cancelled\n      shouldRevalidate = true;\n    } else if (fetcher && fetcher.state !== "idle" && fetcher.data === undefined) {\n      // If the fetcher hasn\'t ever completed loading yet, then this isn\'t a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, _extends({\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params\n      }, submission, {\n        actionResult,\n        defaultShouldRevalidate: isRevalidationRequired\n      }));\n    }\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController()\n      });\n    }\n  });\n  return [navigationMatches, revalidatingFetchers];\n}\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew =\n  // [a] -> [a, b]\n  !currentMatch ||\n  // [a, b] -> [a, c]\n  match.route.id !== currentMatch.route.id;\n  // Handle the case that we don\'t have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n  // Always load if this is a net-new route or we don\'t yet have data\n  return isNew || isMissingData;\n}\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith("*") && currentMatch.params["*"] !== match.params["*"]\n  );\n}\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === "boolean") {\n      return routeChoice;\n    }\n  }\n  return arg.defaultShouldRevalidate;\n}\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(route, mapRouteProperties, manifest) {\n  if (!route.lazy) {\n    return;\n  }\n  let lazyRoute = await route.lazy();\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, "No route found in manifest");\n  // Update the route in place.  This should be safe because there\'s no way\n  // we could yet be sitting on this route as we can\'t get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR "update" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to "does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?".  If not, it should be safe to update in place.\n  let routeUpdates = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue = routeToUpdate[lazyRouteProperty];\n    let isPropertyStaticallyDefined = staticRouteValue !== undefined &&\n    // This property isn\'t static since it should always be updated based\n    // on the route updates\n    lazyRouteProperty !== "hasErrorBoundary";\n    warning(!isPropertyStaticallyDefined, "Route \\"" + routeToUpdate.id + "\\" has a static property \\"" + lazyRouteProperty + "\\" " + "defined but its lazy function is also returning a value for this property. " + ("The lazy route property \\"" + lazyRouteProperty + "\\" will be ignored."));\n    if (!isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty)) {\n      routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];\n    }\n  }\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don\'t resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, _extends({}, mapRouteProperties(routeToUpdate), {\n    lazy: undefined\n  }));\n}\nasync function callLoaderOrAction(type, request, match, matches, manifest, mapRouteProperties, basename, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  let resultType;\n  let result;\n  let onReject;\n  let runHandler = handler => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject;\n    let abortPromise = new Promise((_, r) => reject = r);\n    onReject = () => reject();\n    request.signal.addEventListener("abort", onReject);\n    return Promise.race([handler({\n      request,\n      params: match.params,\n      context: opts.requestContext\n    }), abortPromise]);\n  };\n  try {\n    let handler = match.route[type];\n    if (match.route.lazy) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let handlerError;\n        let values = await Promise.all([\n        // If the handler throws, don\'t let it immediately bubble out,\n        // since we need to let the lazy() execution finish so we know if this\n        // route has a boundary that can handle the error\n        runHandler(handler).catch(e => {\n          handlerError = e;\n        }), loadLazyRouteModule(match.route, mapRouteProperties, manifest)]);\n        if (handlerError) {\n          throw handlerError;\n        }\n        result = values[0];\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadLazyRouteModule(match.route, mapRouteProperties, manifest);\n        handler = match.route[type];\n        if (handler) {\n          // Handler still run even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === "action") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don\'t\n          // hit the invariant below that errors on returning undefined.\n          return {\n            type: ResultType.data,\n            data: undefined\n          };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n    invariant(result !== undefined, "You defined " + (type === "action" ? "an action" : "a loader") + " for route " + ("\\"" + match.route.id + "\\" but didn\'t return anything from your `" + type + "` ") + "function. Please return a value or `null`.");\n  } catch (e) {\n    resultType = ResultType.error;\n    result = e;\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener("abort", onReject);\n    }\n  }\n  if (isResponse(result)) {\n    let status = result.status;\n    // Process redirects\n    if (redirectStatusCodes.has(status)) {\n      let location = result.headers.get("Location");\n      invariant(location, "Redirects returned/thrown from loaders/actions must have a Location header");\n      // Support relative routing in internal redirects\n      if (!ABSOLUTE_URL_REGEX.test(location)) {\n        location = normalizeTo(new URL(request.url), matches.slice(0, matches.indexOf(match) + 1), basename, true, location);\n      } else if (!opts.isStaticRequest) {\n        // Strip off the protocol+origin for same-origin + same-basename absolute\n        // redirects. If this is a static request, we can let it go back to the\n        // browser as-is\n        let currentUrl = new URL(request.url);\n        let url = location.startsWith("//") ? new URL(currentUrl.protocol + location) : new URL(location);\n        let isSameBasename = stripBasename(url.pathname, basename) != null;\n        if (url.origin === currentUrl.origin && isSameBasename) {\n          location = url.pathname + url.search + url.hash;\n        }\n      }\n      // Don\'t process redirects in the router during static requests requests.\n      // Instead, throw the Response and let the server handle it with an HTTP\n      // redirect.  We also update the Location header in place in this flow so\n      // basename and relative routing is taken into account\n      if (opts.isStaticRequest) {\n        result.headers.set("Location", location);\n        throw result;\n      }\n      return {\n        type: ResultType.redirect,\n        status,\n        location,\n        revalidate: result.headers.get("X-Remix-Revalidate") !== null,\n        reloadDocument: result.headers.get("X-Remix-Reload-Document") !== null\n      };\n    }\n    // For SSR single-route requests, we want to hand Responses back directly\n    // without unwrapping.  We do this with the QueryRouteResponse wrapper\n    // interface so we can know whether it was returned or thrown\n    if (opts.isRouteRequest) {\n      let queryRouteResponse = {\n        type: resultType === ResultType.error ? ResultType.error : ResultType.data,\n        response: result\n      };\n      throw queryRouteResponse;\n    }\n    let data;\n    let contentType = result.headers.get("Content-Type");\n    // Check between word boundaries instead of startsWith() due to the last\n    // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      data = await result.json();\n    } else {\n      data = await result.text();\n    }\n    if (resultType === ResultType.error) {\n      return {\n        type: resultType,\n        error: new ErrorResponseImpl(status, result.statusText, data),\n        headers: result.headers\n      };\n    }\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n  if (resultType === ResultType.error) {\n    return {\n      type: resultType,\n      error: result\n    };\n  }\n  if (isDeferredData(result)) {\n    var _result$init, _result$init2;\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: (_result$init = result.init) == null ? void 0 : _result$init.status,\n      headers: ((_result$init2 = result.init) == null ? void 0 : _result$init2.headers) && new Headers(result.init.headers)\n    };\n  }\n  return {\n    type: ResultType.data,\n    data: result\n  };\n}\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = {\n    signal\n  };\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let {\n      formMethod,\n      formEncType\n    } = submission;\n    // Didn\'t think we needed this but it turns out unlike other methods, patch\n    // won\'t be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n    if (formEncType === "application/json") {\n      init.headers = new Headers({\n        "Content-Type": formEncType\n      });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === "text/plain") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (formEncType === "application/x-www-form-urlencoded" && submission.formData) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n  return new Request(url, init);\n}\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === "string" ? value : value.name);\n  }\n  return searchParams;\n}\nfunction convertSearchParamsToFormData(searchParams) {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\nfunction processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds) {\n  // Fill in loaderData/errors from our loaders\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {};\n  // Process loader results into state.loaderData/state.errors\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(!isRedirectResult(result), "Cannot handle redirect results in processLoaderData");\n    if (isErrorResult(result)) {\n      // Look upwards from the matched route for the closest ancestor\n      // error boundary, defaulting to the root match\n      let boundaryMatch = findNearestBoundary(matches, id);\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = undefined;\n      }\n      errors = errors || {};\n      // Prefer higher error values if lower errors bubble to the same boundary\n      if (errors[boundaryMatch.route.id] == null) {\n        errors[boundaryMatch.route.id] = error;\n      }\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n      } else {\n        loaderData[id] = result.data;\n      }\n      // Error status codes always override success status codes, but if all\n      // loaders are successful we take the deepest status code.\n      if (result.statusCode != null && result.statusCode !== 200 && !foundError) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n  // If we didn\'t consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError) {\n    errors = pendingError;\n    loaderData[Object.keys(pendingError)[0]] = undefined;\n  }\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\nfunction processLoaderData(state, matches, matchesToLoad, results, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds) {\n  let {\n    loaderData,\n    errors\n  } = processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds);\n  // Process results from our revalidating fetchers\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let {\n      key,\n      match,\n      controller\n    } = revalidatingFetchers[index];\n    invariant(fetcherResults !== undefined && fetcherResults[index] !== undefined, "Did not find corresponding fetcher result");\n    let result = fetcherResults[index];\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      continue;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match == null ? void 0 : match.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = _extends({}, errors, {\n          [boundaryMatch.route.id]: result.error\n        });\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, "Unhandled fetcher revalidation redirect");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, "Unhandled fetcher deferred data");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  return {\n    loaderData,\n    errors\n  };\n}\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = _extends({}, newLoaderData);\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn\'t removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don\'t keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find(m => m.route.hasErrorBoundary === true) || matches[0];\n}\nfunction getShortCircuitMatches(routes) {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.find(r => r.index || !r.path || r.path === "/") || {\n    id: "__shim-error-route__"\n  };\n  return {\n    matches: [{\n      params: {},\n      pathname: "",\n      pathnameBase: "",\n      route\n    }],\n    route\n  };\n}\nfunction getInternalRouterError(status, _temp4) {\n  let {\n    pathname,\n    routeId,\n    method,\n    type\n  } = _temp4 === void 0 ? {} : _temp4;\n  let statusText = "Unknown Server Error";\n  let errorMessage = "Unknown @remix-run/router error";\n  if (status === 400) {\n    statusText = "Bad Request";\n    if (method && pathname && routeId) {\n      errorMessage = "You made a " + method + " request to \\"" + pathname + "\\" but " + ("did not provide a `loader` for route \\"" + routeId + "\\", ") + "so there is no way to handle the request.";\n    } else if (type === "defer-action") {\n      errorMessage = "defer() is not supported in actions";\n    } else if (type === "invalid-body") {\n      errorMessage = "Unable to encode submission body";\n    }\n  } else if (status === 403) {\n    statusText = "Forbidden";\n    errorMessage = "Route \\"" + routeId + "\\" does not match URL \\"" + pathname + "\\"";\n  } else if (status === 404) {\n    statusText = "Not Found";\n    errorMessage = "No route matches URL \\"" + pathname + "\\"";\n  } else if (status === 405) {\n    statusText = "Method Not Allowed";\n    if (method && pathname && routeId) {\n      errorMessage = "You made a " + method.toUpperCase() + " request to \\"" + pathname + "\\" but " + ("did not provide an `action` for route \\"" + routeId + "\\", ") + "so there is no way to handle the request.";\n    } else if (method) {\n      errorMessage = "Invalid request method \\"" + method.toUpperCase() + "\\"";\n    }\n  }\n  return new ErrorResponseImpl(status || 500, statusText, new Error(errorMessage), true);\n}\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(results) {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n    if (isRedirectResult(result)) {\n      return {\n        result,\n        idx: i\n      };\n    }\n  }\n}\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === "string" ? parsePath(path) : path;\n  return createPath(_extends({}, parsedPath, {\n    hash: ""\n  }));\n}\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n  if (a.hash === "") {\n    // /page -> /page#hash\n    return b.hash !== "";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== "") {\n    // /page#hash -> /page#other\n    return true;\n  }\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\nfunction isDeferredResult(result) {\n  return result.type === ResultType.deferred;\n}\nfunction isErrorResult(result) {\n  return result.type === ResultType.error;\n}\nfunction isRedirectResult(result) {\n  return (result && result.type) === ResultType.redirect;\n}\nfunction isDeferredData(value) {\n  let deferred = value;\n  return deferred && typeof deferred === "object" && typeof deferred.data === "object" && typeof deferred.subscribe === "function" && typeof deferred.cancel === "function" && typeof deferred.resolveData === "function";\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === "number" && typeof value.statusText === "string" && typeof value.headers === "object" && typeof value.body !== "undefined";\n}\nfunction isRedirectResponse(result) {\n  if (!isResponse(result)) {\n    return false;\n  }\n  let status = result.status;\n  let location = result.headers.get("Location");\n  return status >= 300 && status <= 399 && location != null;\n}\nfunction isQueryRouteResponse(obj) {\n  return obj && isResponse(obj.response) && (obj.type === ResultType.data || obj.type === ResultType.error);\n}\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toLowerCase());\n}\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toLowerCase());\n}\nasync function resolveDeferredResults(currentMatches, matchesToLoad, results, signals, isFetcher, currentLoaderData) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    // If we don\'t have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n    let currentMatch = currentMatches.find(m => m.route.id === match.route.id);\n    let isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they\'ll get aborted\n      // there if needed\n      let signal = signals[index];\n      invariant(signal, "Expected an AbortSignal for revalidating fetcher deferred result");\n      await resolveDeferredData(result, signal, isFetcher).then(result => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\nasync function resolveDeferredData(result, signal, unwrap) {\n  if (unwrap === void 0) {\n    unwrap = false;\n  }\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n  }\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data\n  };\n}\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll("index").some(v => v === "");\n}\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === "string" ? parsePath(location).search : location.search;\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || "")) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest "path contributing" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\nfunction getSubmissionFromNavigation(navigation) {\n  let {\n    formMethod,\n    formAction,\n    formEncType,\n    text,\n    formData,\n    json\n  } = navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined\n    };\n  }\n}\nfunction getLoadingNavigation(location, submission) {\n  if (submission) {\n    let navigation = {\n      state: "loading",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text\n    };\n    return navigation;\n  } else {\n    let navigation = {\n      state: "loading",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined\n    };\n    return navigation;\n  }\n}\nfunction getSubmittingNavigation(location, submission) {\n  let navigation = {\n    state: "submitting",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text\n  };\n  return navigation;\n}\nfunction getLoadingFetcher(submission, data) {\n  if (submission) {\n    let fetcher = {\n      state: "loading",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data\n    };\n    return fetcher;\n  } else {\n    let fetcher = {\n      state: "loading",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data\n    };\n    return fetcher;\n  }\n}\nfunction getSubmittingFetcher(submission, existingFetcher) {\n  let fetcher = {\n    state: "submitting",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined\n  };\n  return fetcher;\n}\nfunction getDoneFetcher(data) {\n  let fetcher = {\n    state: "idle",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data\n  };\n  return fetcher;\n}\n//#endregion\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjEzMDAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnQvLi9ub2RlX21vZHVsZXMvQHJlbWl4LXJ1bi9yb3V0ZXIvZGlzdC9yb3V0ZXIuanM/ODZiZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEByZW1peC1ydW4vcm91dGVyIHYxLjkuMFxuICpcbiAqIENvcHlyaWdodCAoYykgUmVtaXggU29mdHdhcmUgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRS5tZCBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBsaWNlbnNlIE1JVFxuICovXG5mdW5jdGlvbiBfZXh0ZW5kcygpIHtcbiAgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduID8gT2JqZWN0LmFzc2lnbi5iaW5kKCkgOiBmdW5jdGlvbiAodGFyZ2V0KSB7XG4gICAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07XG4gICAgICBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7XG4gICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7XG4gICAgICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdGFyZ2V0O1xuICB9O1xuICByZXR1cm4gX2V4dGVuZHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn1cblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vI3JlZ2lvbiBUeXBlcyBhbmQgQ29uc3RhbnRzXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuLyoqXG4gKiBBY3Rpb25zIHJlcHJlc2VudCB0aGUgdHlwZSBvZiBjaGFuZ2UgdG8gYSBsb2NhdGlvbiB2YWx1ZS5cbiAqL1xudmFyIEFjdGlvbjtcbihmdW5jdGlvbiAoQWN0aW9uKSB7XG4gIC8qKlxuICAgKiBBIFBPUCBpbmRpY2F0ZXMgYSBjaGFuZ2UgdG8gYW4gYXJiaXRyYXJ5IGluZGV4IGluIHRoZSBoaXN0b3J5IHN0YWNrLCBzdWNoXG4gICAqIGFzIGEgYmFjayBvciBmb3J3YXJkIG5hdmlnYXRpb24uIEl0IGRvZXMgbm90IGRlc2NyaWJlIHRoZSBkaXJlY3Rpb24gb2YgdGhlXG4gICAqIG5hdmlnYXRpb24sIG9ubHkgdGhhdCB0aGUgY3VycmVudCBpbmRleCBjaGFuZ2VkLlxuICAgKlxuICAgKiBOb3RlOiBUaGlzIGlzIHRoZSBkZWZhdWx0IGFjdGlvbiBmb3IgbmV3bHkgY3JlYXRlZCBoaXN0b3J5IG9iamVjdHMuXG4gICAqL1xuICBBY3Rpb25bXCJQb3BcIl0gPSBcIlBPUFwiO1xuICAvKipcbiAgICogQSBQVVNIIGluZGljYXRlcyBhIG5ldyBlbnRyeSBiZWluZyBhZGRlZCB0byB0aGUgaGlzdG9yeSBzdGFjaywgc3VjaCBhcyB3aGVuXG4gICAqIGEgbGluayBpcyBjbGlja2VkIGFuZCBhIG5ldyBwYWdlIGxvYWRzLiBXaGVuIHRoaXMgaGFwcGVucywgYWxsIHN1YnNlcXVlbnRcbiAgICogZW50cmllcyBpbiB0aGUgc3RhY2sgYXJlIGxvc3QuXG4gICAqL1xuICBBY3Rpb25bXCJQdXNoXCJdID0gXCJQVVNIXCI7XG4gIC8qKlxuICAgKiBBIFJFUExBQ0UgaW5kaWNhdGVzIHRoZSBlbnRyeSBhdCB0aGUgY3VycmVudCBpbmRleCBpbiB0aGUgaGlzdG9yeSBzdGFja1xuICAgKiBiZWluZyByZXBsYWNlZCBieSBhIG5ldyBvbmUuXG4gICAqL1xuICBBY3Rpb25bXCJSZXBsYWNlXCJdID0gXCJSRVBMQUNFXCI7XG59KShBY3Rpb24gfHwgKEFjdGlvbiA9IHt9KSk7XG5jb25zdCBQb3BTdGF0ZUV2ZW50VHlwZSA9IFwicG9wc3RhdGVcIjtcbi8qKlxuICogTWVtb3J5IGhpc3Rvcnkgc3RvcmVzIHRoZSBjdXJyZW50IGxvY2F0aW9uIGluIG1lbW9yeS4gSXQgaXMgZGVzaWduZWQgZm9yIHVzZVxuICogaW4gc3RhdGVmdWwgbm9uLWJyb3dzZXIgZW52aXJvbm1lbnRzIGxpa2UgdGVzdHMgYW5kIFJlYWN0IE5hdGl2ZS5cbiAqL1xuZnVuY3Rpb24gY3JlYXRlTWVtb3J5SGlzdG9yeShvcHRpb25zKSB7XG4gIGlmIChvcHRpb25zID09PSB2b2lkIDApIHtcbiAgICBvcHRpb25zID0ge307XG4gIH1cbiAgbGV0IHtcbiAgICBpbml0aWFsRW50cmllcyA9IFtcIi9cIl0sXG4gICAgaW5pdGlhbEluZGV4LFxuICAgIHY1Q29tcGF0ID0gZmFsc2VcbiAgfSA9IG9wdGlvbnM7XG4gIGxldCBlbnRyaWVzOyAvLyBEZWNsYXJlIHNvIHdlIGNhbiBhY2Nlc3MgZnJvbSBjcmVhdGVNZW1vcnlMb2NhdGlvblxuICBlbnRyaWVzID0gaW5pdGlhbEVudHJpZXMubWFwKChlbnRyeSwgaW5kZXgpID0+IGNyZWF0ZU1lbW9yeUxvY2F0aW9uKGVudHJ5LCB0eXBlb2YgZW50cnkgPT09IFwic3RyaW5nXCIgPyBudWxsIDogZW50cnkuc3RhdGUsIGluZGV4ID09PSAwID8gXCJkZWZhdWx0XCIgOiB1bmRlZmluZWQpKTtcbiAgbGV0IGluZGV4ID0gY2xhbXBJbmRleChpbml0aWFsSW5kZXggPT0gbnVsbCA/IGVudHJpZXMubGVuZ3RoIC0gMSA6IGluaXRpYWxJbmRleCk7XG4gIGxldCBhY3Rpb24gPSBBY3Rpb24uUG9wO1xuICBsZXQgbGlzdGVuZXIgPSBudWxsO1xuICBmdW5jdGlvbiBjbGFtcEluZGV4KG4pIHtcbiAgICByZXR1cm4gTWF0aC5taW4oTWF0aC5tYXgobiwgMCksIGVudHJpZXMubGVuZ3RoIC0gMSk7XG4gIH1cbiAgZnVuY3Rpb24gZ2V0Q3VycmVudExvY2F0aW9uKCkge1xuICAgIHJldHVybiBlbnRyaWVzW2luZGV4XTtcbiAgfVxuICBmdW5jdGlvbiBjcmVhdGVNZW1vcnlMb2NhdGlvbih0bywgc3RhdGUsIGtleSkge1xuICAgIGlmIChzdGF0ZSA9PT0gdm9pZCAwKSB7XG4gICAgICBzdGF0ZSA9IG51bGw7XG4gICAgfVxuICAgIGxldCBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKGVudHJpZXMgPyBnZXRDdXJyZW50TG9jYXRpb24oKS5wYXRobmFtZSA6IFwiL1wiLCB0bywgc3RhdGUsIGtleSk7XG4gICAgd2FybmluZyhsb2NhdGlvbi5wYXRobmFtZS5jaGFyQXQoMCkgPT09IFwiL1wiLCBcInJlbGF0aXZlIHBhdGhuYW1lcyBhcmUgbm90IHN1cHBvcnRlZCBpbiBtZW1vcnkgaGlzdG9yeTogXCIgKyBKU09OLnN0cmluZ2lmeSh0bykpO1xuICAgIHJldHVybiBsb2NhdGlvbjtcbiAgfVxuICBmdW5jdGlvbiBjcmVhdGVIcmVmKHRvKSB7XG4gICAgcmV0dXJuIHR5cGVvZiB0byA9PT0gXCJzdHJpbmdcIiA/IHRvIDogY3JlYXRlUGF0aCh0byk7XG4gIH1cbiAgbGV0IGhpc3RvcnkgPSB7XG4gICAgZ2V0IGluZGV4KCkge1xuICAgICAgcmV0dXJuIGluZGV4O1xuICAgIH0sXG4gICAgZ2V0IGFjdGlvbigpIHtcbiAgICAgIHJldHVybiBhY3Rpb247XG4gICAgfSxcbiAgICBnZXQgbG9jYXRpb24oKSB7XG4gICAgICByZXR1cm4gZ2V0Q3VycmVudExvY2F0aW9uKCk7XG4gICAgfSxcbiAgICBjcmVhdGVIcmVmLFxuICAgIGNyZWF0ZVVSTCh0bykge1xuICAgICAgcmV0dXJuIG5ldyBVUkwoY3JlYXRlSHJlZih0byksIFwiaHR0cDovL2xvY2FsaG9zdFwiKTtcbiAgICB9LFxuICAgIGVuY29kZUxvY2F0aW9uKHRvKSB7XG4gICAgICBsZXQgcGF0aCA9IHR5cGVvZiB0byA9PT0gXCJzdHJpbmdcIiA/IHBhcnNlUGF0aCh0bykgOiB0bztcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHBhdGhuYW1lOiBwYXRoLnBhdGhuYW1lIHx8IFwiXCIsXG4gICAgICAgIHNlYXJjaDogcGF0aC5zZWFyY2ggfHwgXCJcIixcbiAgICAgICAgaGFzaDogcGF0aC5oYXNoIHx8IFwiXCJcbiAgICAgIH07XG4gICAgfSxcbiAgICBwdXNoKHRvLCBzdGF0ZSkge1xuICAgICAgYWN0aW9uID0gQWN0aW9uLlB1c2g7XG4gICAgICBsZXQgbmV4dExvY2F0aW9uID0gY3JlYXRlTWVtb3J5TG9jYXRpb24odG8sIHN0YXRlKTtcbiAgICAgIGluZGV4ICs9IDE7XG4gICAgICBlbnRyaWVzLnNwbGljZShpbmRleCwgZW50cmllcy5sZW5ndGgsIG5leHRMb2NhdGlvbik7XG4gICAgICBpZiAodjVDb21wYXQgJiYgbGlzdGVuZXIpIHtcbiAgICAgICAgbGlzdGVuZXIoe1xuICAgICAgICAgIGFjdGlvbixcbiAgICAgICAgICBsb2NhdGlvbjogbmV4dExvY2F0aW9uLFxuICAgICAgICAgIGRlbHRhOiAxXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0sXG4gICAgcmVwbGFjZSh0bywgc3RhdGUpIHtcbiAgICAgIGFjdGlvbiA9IEFjdGlvbi5SZXBsYWNlO1xuICAgICAgbGV0IG5leHRMb2NhdGlvbiA9IGNyZWF0ZU1lbW9yeUxvY2F0aW9uKHRvLCBzdGF0ZSk7XG4gICAgICBlbnRyaWVzW2luZGV4XSA9IG5leHRMb2NhdGlvbjtcbiAgICAgIGlmICh2NUNvbXBhdCAmJiBsaXN0ZW5lcikge1xuICAgICAgICBsaXN0ZW5lcih7XG4gICAgICAgICAgYWN0aW9uLFxuICAgICAgICAgIGxvY2F0aW9uOiBuZXh0TG9jYXRpb24sXG4gICAgICAgICAgZGVsdGE6IDBcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSxcbiAgICBnbyhkZWx0YSkge1xuICAgICAgYWN0aW9uID0gQWN0aW9uLlBvcDtcbiAgICAgIGxldCBuZXh0SW5kZXggPSBjbGFtcEluZGV4KGluZGV4ICsgZGVsdGEpO1xuICAgICAgbGV0IG5leHRMb2NhdGlvbiA9IGVudHJpZXNbbmV4dEluZGV4XTtcbiAgICAgIGluZGV4ID0gbmV4dEluZGV4O1xuICAgICAgaWYgKGxpc3RlbmVyKSB7XG4gICAgICAgIGxpc3RlbmVyKHtcbiAgICAgICAgICBhY3Rpb24sXG4gICAgICAgICAgbG9jYXRpb246IG5leHRMb2NhdGlvbixcbiAgICAgICAgICBkZWx0YVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGxpc3Rlbihmbikge1xuICAgICAgbGlzdGVuZXIgPSBmbjtcbiAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgIGxpc3RlbmVyID0gbnVsbDtcbiAgICAgIH07XG4gICAgfVxuICB9O1xuICByZXR1cm4gaGlzdG9yeTtcbn1cbi8qKlxuICogQnJvd3NlciBoaXN0b3J5IHN0b3JlcyB0aGUgbG9jYXRpb24gaW4gcmVndWxhciBVUkxzLiBUaGlzIGlzIHRoZSBzdGFuZGFyZCBmb3JcbiAqIG1vc3Qgd2ViIGFwcHMsIGJ1dCBpdCByZXF1aXJlcyBzb21lIGNvbmZpZ3VyYXRpb24gb24gdGhlIHNlcnZlciB0byBlbnN1cmUgeW91XG4gKiBzZXJ2ZSB0aGUgc2FtZSBhcHAgYXQgbXVsdGlwbGUgVVJMcy5cbiAqXG4gKiBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9yZW1peC1ydW4vaGlzdG9yeS90cmVlL21haW4vZG9jcy9hcGktcmVmZXJlbmNlLm1kI2NyZWF0ZWJyb3dzZXJoaXN0b3J5XG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUJyb3dzZXJIaXN0b3J5KG9wdGlvbnMpIHtcbiAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkge1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuICBmdW5jdGlvbiBjcmVhdGVCcm93c2VyTG9jYXRpb24od2luZG93LCBnbG9iYWxIaXN0b3J5KSB7XG4gICAgbGV0IHtcbiAgICAgIHBhdGhuYW1lLFxuICAgICAgc2VhcmNoLFxuICAgICAgaGFzaFxuICAgIH0gPSB3aW5kb3cubG9jYXRpb247XG4gICAgcmV0dXJuIGNyZWF0ZUxvY2F0aW9uKFwiXCIsIHtcbiAgICAgIHBhdGhuYW1lLFxuICAgICAgc2VhcmNoLFxuICAgICAgaGFzaFxuICAgIH0sXG4gICAgLy8gc3RhdGUgZGVmYXVsdHMgdG8gYG51bGxgIGJlY2F1c2UgYHdpbmRvdy5oaXN0b3J5LnN0YXRlYCBkb2VzXG4gICAgZ2xvYmFsSGlzdG9yeS5zdGF0ZSAmJiBnbG9iYWxIaXN0b3J5LnN0YXRlLnVzciB8fCBudWxsLCBnbG9iYWxIaXN0b3J5LnN0YXRlICYmIGdsb2JhbEhpc3Rvcnkuc3RhdGUua2V5IHx8IFwiZGVmYXVsdFwiKTtcbiAgfVxuICBmdW5jdGlvbiBjcmVhdGVCcm93c2VySHJlZih3aW5kb3csIHRvKSB7XG4gICAgcmV0dXJuIHR5cGVvZiB0byA9PT0gXCJzdHJpbmdcIiA/IHRvIDogY3JlYXRlUGF0aCh0byk7XG4gIH1cbiAgcmV0dXJuIGdldFVybEJhc2VkSGlzdG9yeShjcmVhdGVCcm93c2VyTG9jYXRpb24sIGNyZWF0ZUJyb3dzZXJIcmVmLCBudWxsLCBvcHRpb25zKTtcbn1cbi8qKlxuICogSGFzaCBoaXN0b3J5IHN0b3JlcyB0aGUgbG9jYXRpb24gaW4gd2luZG93LmxvY2F0aW9uLmhhc2guIFRoaXMgbWFrZXMgaXQgaWRlYWxcbiAqIGZvciBzaXR1YXRpb25zIHdoZXJlIHlvdSBkb24ndCB3YW50IHRvIHNlbmQgdGhlIGxvY2F0aW9uIHRvIHRoZSBzZXJ2ZXIgZm9yXG4gKiBzb21lIHJlYXNvbiwgZWl0aGVyIGJlY2F1c2UgeW91IGRvIGNhbm5vdCBjb25maWd1cmUgaXQgb3IgdGhlIFVSTCBzcGFjZSBpc1xuICogcmVzZXJ2ZWQgZm9yIHNvbWV0aGluZyBlbHNlLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3JlbWl4LXJ1bi9oaXN0b3J5L3RyZWUvbWFpbi9kb2NzL2FwaS1yZWZlcmVuY2UubWQjY3JlYXRlaGFzaGhpc3RvcnlcbiAqL1xuZnVuY3Rpb24gY3JlYXRlSGFzaEhpc3Rvcnkob3B0aW9ucykge1xuICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG4gIGZ1bmN0aW9uIGNyZWF0ZUhhc2hMb2NhdGlvbih3aW5kb3csIGdsb2JhbEhpc3RvcnkpIHtcbiAgICBsZXQge1xuICAgICAgcGF0aG5hbWUgPSBcIi9cIixcbiAgICAgIHNlYXJjaCA9IFwiXCIsXG4gICAgICBoYXNoID0gXCJcIlxuICAgIH0gPSBwYXJzZVBhdGgod2luZG93LmxvY2F0aW9uLmhhc2guc3Vic3RyKDEpKTtcbiAgICAvLyBIYXNoIFVSTCBzaG91bGQgYWx3YXlzIGhhdmUgYSBsZWFkaW5nIC8ganVzdCBsaWtlIHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZVxuICAgIC8vIGRvZXMsIHNvIGlmIGFuIGFwcCBlbmRzIHVwIGF0IGEgcm91dGUgbGlrZSAvI3NvbWV0aGluZyB0aGVuIHdlIGFkZCBhXG4gICAgLy8gbGVhZGluZyBzbGFzaCBzbyBhbGwgb2Ygb3VyIHBhdGgtbWF0Y2hpbmcgYmVoYXZlcyB0aGUgc2FtZSBhcyBpZiBpdCB3b3VsZFxuICAgIC8vIGluIGEgYnJvd3NlciByb3V0ZXIuICBUaGlzIGlzIHBhcnRpY3VsYXJseSBpbXBvcnRhbnQgd2hlbiB0aGVyZSBleGlzdHMgYVxuICAgIC8vIHJvb3Qgc3BsYXQgcm91dGUgKDxSb3V0ZSBwYXRoPVwiKlwiPikgc2luY2UgdGhhdCBtYXRjaGVzIGludGVybmFsbHkgYWdhaW5zdFxuICAgIC8vIFwiLypcIiBhbmQgd2UnZCBleHBlY3QgLyNzb21ldGhpbmcgdG8gNDA0IGluIGEgaGFzaCByb3V0ZXIgYXBwLlxuICAgIGlmICghcGF0aG5hbWUuc3RhcnRzV2l0aChcIi9cIikgJiYgIXBhdGhuYW1lLnN0YXJ0c1dpdGgoXCIuXCIpKSB7XG4gICAgICBwYXRobmFtZSA9IFwiL1wiICsgcGF0aG5hbWU7XG4gICAgfVxuICAgIHJldHVybiBjcmVhdGVMb2NhdGlvbihcIlwiLCB7XG4gICAgICBwYXRobmFtZSxcbiAgICAgIHNlYXJjaCxcbiAgICAgIGhhc2hcbiAgICB9LFxuICAgIC8vIHN0YXRlIGRlZmF1bHRzIHRvIGBudWxsYCBiZWNhdXNlIGB3aW5kb3cuaGlzdG9yeS5zdGF0ZWAgZG9lc1xuICAgIGdsb2JhbEhpc3Rvcnkuc3RhdGUgJiYgZ2xvYmFsSGlzdG9yeS5zdGF0ZS51c3IgfHwgbnVsbCwgZ2xvYmFsSGlzdG9yeS5zdGF0ZSAmJiBnbG9iYWxIaXN0b3J5LnN0YXRlLmtleSB8fCBcImRlZmF1bHRcIik7XG4gIH1cbiAgZnVuY3Rpb24gY3JlYXRlSGFzaEhyZWYod2luZG93LCB0bykge1xuICAgIGxldCBiYXNlID0gd2luZG93LmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJiYXNlXCIpO1xuICAgIGxldCBocmVmID0gXCJcIjtcbiAgICBpZiAoYmFzZSAmJiBiYXNlLmdldEF0dHJpYnV0ZShcImhyZWZcIikpIHtcbiAgICAgIGxldCB1cmwgPSB3aW5kb3cubG9jYXRpb24uaHJlZjtcbiAgICAgIGxldCBoYXNoSW5kZXggPSB1cmwuaW5kZXhPZihcIiNcIik7XG4gICAgICBocmVmID0gaGFzaEluZGV4ID09PSAtMSA/IHVybCA6IHVybC5zbGljZSgwLCBoYXNoSW5kZXgpO1xuICAgIH1cbiAgICByZXR1cm4gaHJlZiArIFwiI1wiICsgKHR5cGVvZiB0byA9PT0gXCJzdHJpbmdcIiA/IHRvIDogY3JlYXRlUGF0aCh0bykpO1xuICB9XG4gIGZ1bmN0aW9uIHZhbGlkYXRlSGFzaExvY2F0aW9uKGxvY2F0aW9uLCB0bykge1xuICAgIHdhcm5pbmcobG9jYXRpb24ucGF0aG5hbWUuY2hhckF0KDApID09PSBcIi9cIiwgXCJyZWxhdGl2ZSBwYXRobmFtZXMgYXJlIG5vdCBzdXBwb3J0ZWQgaW4gaGFzaCBoaXN0b3J5LnB1c2goXCIgKyBKU09OLnN0cmluZ2lmeSh0bykgKyBcIilcIik7XG4gIH1cbiAgcmV0dXJuIGdldFVybEJhc2VkSGlzdG9yeShjcmVhdGVIYXNoTG9jYXRpb24sIGNyZWF0ZUhhc2hIcmVmLCB2YWxpZGF0ZUhhc2hMb2NhdGlvbiwgb3B0aW9ucyk7XG59XG5mdW5jdGlvbiBpbnZhcmlhbnQodmFsdWUsIG1lc3NhZ2UpIHtcbiAgaWYgKHZhbHVlID09PSBmYWxzZSB8fCB2YWx1ZSA9PT0gbnVsbCB8fCB0eXBlb2YgdmFsdWUgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSk7XG4gIH1cbn1cbmZ1bmN0aW9uIHdhcm5pbmcoY29uZCwgbWVzc2FnZSkge1xuICBpZiAoIWNvbmQpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgIGlmICh0eXBlb2YgY29uc29sZSAhPT0gXCJ1bmRlZmluZWRcIikgY29uc29sZS53YXJuKG1lc3NhZ2UpO1xuICAgIHRyeSB7XG4gICAgICAvLyBXZWxjb21lIHRvIGRlYnVnZ2luZyBoaXN0b3J5IVxuICAgICAgLy9cbiAgICAgIC8vIFRoaXMgZXJyb3IgaXMgdGhyb3duIGFzIGEgY29udmVuaWVuY2UsIHNvIHlvdSBjYW4gbW9yZSBlYXNpbHlcbiAgICAgIC8vIGZpbmQgdGhlIHNvdXJjZSBmb3IgYSB3YXJuaW5nIHRoYXQgYXBwZWFycyBpbiB0aGUgY29uc29sZSBieVxuICAgICAgLy8gZW5hYmxpbmcgXCJwYXVzZSBvbiBleGNlcHRpb25zXCIgaW4geW91ciBKYXZhU2NyaXB0IGRlYnVnZ2VyLlxuICAgICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWVtcHR5XG4gICAgfSBjYXRjaCAoZSkge31cbiAgfVxufVxuZnVuY3Rpb24gY3JlYXRlS2V5KCkge1xuICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIDgpO1xufVxuLyoqXG4gKiBGb3IgYnJvd3Nlci1iYXNlZCBoaXN0b3JpZXMsIHdlIGNvbWJpbmUgdGhlIHN0YXRlIGFuZCBrZXkgaW50byBhbiBvYmplY3RcbiAqL1xuZnVuY3Rpb24gZ2V0SGlzdG9yeVN0YXRlKGxvY2F0aW9uLCBpbmRleCkge1xuICByZXR1cm4ge1xuICAgIHVzcjogbG9jYXRpb24uc3RhdGUsXG4gICAga2V5OiBsb2NhdGlvbi5rZXksXG4gICAgaWR4OiBpbmRleFxuICB9O1xufVxuLyoqXG4gKiBDcmVhdGVzIGEgTG9jYXRpb24gb2JqZWN0IHdpdGggYSB1bmlxdWUga2V5IGZyb20gdGhlIGdpdmVuIFBhdGhcbiAqL1xuZnVuY3Rpb24gY3JlYXRlTG9jYXRpb24oY3VycmVudCwgdG8sIHN0YXRlLCBrZXkpIHtcbiAgaWYgKHN0YXRlID09PSB2b2lkIDApIHtcbiAgICBzdGF0ZSA9IG51bGw7XG4gIH1cbiAgbGV0IGxvY2F0aW9uID0gX2V4dGVuZHMoe1xuICAgIHBhdGhuYW1lOiB0eXBlb2YgY3VycmVudCA9PT0gXCJzdHJpbmdcIiA/IGN1cnJlbnQgOiBjdXJyZW50LnBhdGhuYW1lLFxuICAgIHNlYXJjaDogXCJcIixcbiAgICBoYXNoOiBcIlwiXG4gIH0sIHR5cGVvZiB0byA9PT0gXCJzdHJpbmdcIiA/IHBhcnNlUGF0aCh0bykgOiB0bywge1xuICAgIHN0YXRlLFxuICAgIC8vIFRPRE86IFRoaXMgY291bGQgYmUgY2xlYW5lZCB1cC4gIHB1c2gvcmVwbGFjZSBzaG91bGQgcHJvYmFibHkganVzdCB0YWtlXG4gICAgLy8gZnVsbCBMb2NhdGlvbnMgbm93IGFuZCBhdm9pZCB0aGUgbmVlZCB0byBydW4gdGhyb3VnaCB0aGlzIGZsb3cgYXQgYWxsXG4gICAgLy8gQnV0IHRoYXQncyBhIHByZXR0eSBiaWcgcmVmYWN0b3IgdG8gdGhlIGN1cnJlbnQgdGVzdCBzdWl0ZSBzbyBnb2luZyB0b1xuICAgIC8vIGtlZXAgYXMgaXMgZm9yIHRoZSB0aW1lIGJlaW5nIGFuZCBqdXN0IGxldCBhbnkgaW5jb21pbmcga2V5cyB0YWtlIHByZWNlZGVuY2VcbiAgICBrZXk6IHRvICYmIHRvLmtleSB8fCBrZXkgfHwgY3JlYXRlS2V5KClcbiAgfSk7XG4gIHJldHVybiBsb2NhdGlvbjtcbn1cbi8qKlxuICogQ3JlYXRlcyBhIHN0cmluZyBVUkwgcGF0aCBmcm9tIHRoZSBnaXZlbiBwYXRobmFtZSwgc2VhcmNoLCBhbmQgaGFzaCBjb21wb25lbnRzLlxuICovXG5mdW5jdGlvbiBjcmVhdGVQYXRoKF9yZWYpIHtcbiAgbGV0IHtcbiAgICBwYXRobmFtZSA9IFwiL1wiLFxuICAgIHNlYXJjaCA9IFwiXCIsXG4gICAgaGFzaCA9IFwiXCJcbiAgfSA9IF9yZWY7XG4gIGlmIChzZWFyY2ggJiYgc2VhcmNoICE9PSBcIj9cIikgcGF0aG5hbWUgKz0gc2VhcmNoLmNoYXJBdCgwKSA9PT0gXCI/XCIgPyBzZWFyY2ggOiBcIj9cIiArIHNlYXJjaDtcbiAgaWYgKGhhc2ggJiYgaGFzaCAhPT0gXCIjXCIpIHBhdGhuYW1lICs9IGhhc2guY2hhckF0KDApID09PSBcIiNcIiA/IGhhc2ggOiBcIiNcIiArIGhhc2g7XG4gIHJldHVybiBwYXRobmFtZTtcbn1cbi8qKlxuICogUGFyc2VzIGEgc3RyaW5nIFVSTCBwYXRoIGludG8gaXRzIHNlcGFyYXRlIHBhdGhuYW1lLCBzZWFyY2gsIGFuZCBoYXNoIGNvbXBvbmVudHMuXG4gKi9cbmZ1bmN0aW9uIHBhcnNlUGF0aChwYXRoKSB7XG4gIGxldCBwYXJzZWRQYXRoID0ge307XG4gIGlmIChwYXRoKSB7XG4gICAgbGV0IGhhc2hJbmRleCA9IHBhdGguaW5kZXhPZihcIiNcIik7XG4gICAgaWYgKGhhc2hJbmRleCA+PSAwKSB7XG4gICAgICBwYXJzZWRQYXRoLmhhc2ggPSBwYXRoLnN1YnN0cihoYXNoSW5kZXgpO1xuICAgICAgcGF0aCA9IHBhdGguc3Vic3RyKDAsIGhhc2hJbmRleCk7XG4gICAgfVxuICAgIGxldCBzZWFyY2hJbmRleCA9IHBhdGguaW5kZXhPZihcIj9cIik7XG4gICAgaWYgKHNlYXJjaEluZGV4ID49IDApIHtcbiAgICAgIHBhcnNlZFBhdGguc2VhcmNoID0gcGF0aC5zdWJzdHIoc2VhcmNoSW5kZXgpO1xuICAgICAgcGF0aCA9IHBhdGguc3Vic3RyKDAsIHNlYXJjaEluZGV4KTtcbiAgICB9XG4gICAgaWYgKHBhdGgpIHtcbiAgICAgIHBhcnNlZFBhdGgucGF0aG5hbWUgPSBwYXRoO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcGFyc2VkUGF0aDtcbn1cbmZ1bmN0aW9uIGdldFVybEJhc2VkSGlzdG9yeShnZXRMb2NhdGlvbiwgY3JlYXRlSHJlZiwgdmFsaWRhdGVMb2NhdGlvbiwgb3B0aW9ucykge1xuICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG4gIGxldCB7XG4gICAgd2luZG93ID0gZG9jdW1lbnQuZGVmYXVsdFZpZXcsXG4gICAgdjVDb21wYXQgPSBmYWxzZVxuICB9ID0gb3B0aW9ucztcbiAgbGV0IGdsb2JhbEhpc3RvcnkgPSB3aW5kb3cuaGlzdG9yeTtcbiAgbGV0IGFjdGlvbiA9IEFjdGlvbi5Qb3A7XG4gIGxldCBsaXN0ZW5lciA9IG51bGw7XG4gIGxldCBpbmRleCA9IGdldEluZGV4KCk7XG4gIC8vIEluZGV4IHNob3VsZCBvbmx5IGJlIG51bGwgd2hlbiB3ZSBpbml0aWFsaXplLiBJZiBub3QsIGl0J3MgYmVjYXVzZSB0aGVcbiAgLy8gdXNlciBjYWxsZWQgaGlzdG9yeS5wdXNoU3RhdGUgb3IgaGlzdG9yeS5yZXBsYWNlU3RhdGUgZGlyZWN0bHksIGluIHdoaWNoXG4gIC8vIGNhc2Ugd2Ugc2hvdWxkIGxvZyBhIHdhcm5pbmcgYXMgaXQgd2lsbCByZXN1bHQgaW4gYnVncy5cbiAgaWYgKGluZGV4ID09IG51bGwpIHtcbiAgICBpbmRleCA9IDA7XG4gICAgZ2xvYmFsSGlzdG9yeS5yZXBsYWNlU3RhdGUoX2V4dGVuZHMoe30sIGdsb2JhbEhpc3Rvcnkuc3RhdGUsIHtcbiAgICAgIGlkeDogaW5kZXhcbiAgICB9KSwgXCJcIik7XG4gIH1cbiAgZnVuY3Rpb24gZ2V0SW5kZXgoKSB7XG4gICAgbGV0IHN0YXRlID0gZ2xvYmFsSGlzdG9yeS5zdGF0ZSB8fCB7XG4gICAgICBpZHg6IG51bGxcbiAgICB9O1xuICAgIHJldHVybiBzdGF0ZS5pZHg7XG4gIH1cbiAgZnVuY3Rpb24gaGFuZGxlUG9wKCkge1xuICAgIGFjdGlvbiA9IEFjdGlvbi5Qb3A7XG4gICAgbGV0IG5leHRJbmRleCA9IGdldEluZGV4KCk7XG4gICAgbGV0IGRlbHRhID0gbmV4dEluZGV4ID09IG51bGwgPyBudWxsIDogbmV4dEluZGV4IC0gaW5kZXg7XG4gICAgaW5kZXggPSBuZXh0SW5kZXg7XG4gICAgaWYgKGxpc3RlbmVyKSB7XG4gICAgICBsaXN0ZW5lcih7XG4gICAgICAgIGFjdGlvbixcbiAgICAgICAgbG9jYXRpb246IGhpc3RvcnkubG9jYXRpb24sXG4gICAgICAgIGRlbHRhXG4gICAgICB9KTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gcHVzaCh0bywgc3RhdGUpIHtcbiAgICBhY3Rpb24gPSBBY3Rpb24uUHVzaDtcbiAgICBsZXQgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihoaXN0b3J5LmxvY2F0aW9uLCB0bywgc3RhdGUpO1xuICAgIGlmICh2YWxpZGF0ZUxvY2F0aW9uKSB2YWxpZGF0ZUxvY2F0aW9uKGxvY2F0aW9uLCB0byk7XG4gICAgaW5kZXggPSBnZXRJbmRleCgpICsgMTtcbiAgICBsZXQgaGlzdG9yeVN0YXRlID0gZ2V0SGlzdG9yeVN0YXRlKGxvY2F0aW9uLCBpbmRleCk7XG4gICAgbGV0IHVybCA9IGhpc3RvcnkuY3JlYXRlSHJlZihsb2NhdGlvbik7XG4gICAgLy8gdHJ5Li4uY2F0Y2ggYmVjYXVzZSBpT1MgbGltaXRzIHVzIHRvIDEwMCBwdXNoU3RhdGUgY2FsbHMgOi9cbiAgICB0cnkge1xuICAgICAgZ2xvYmFsSGlzdG9yeS5wdXNoU3RhdGUoaGlzdG9yeVN0YXRlLCBcIlwiLCB1cmwpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAvLyBJZiB0aGUgZXhjZXB0aW9uIGlzIGJlY2F1c2UgYHN0YXRlYCBjYW4ndCBiZSBzZXJpYWxpemVkLCBsZXQgdGhhdCB0aHJvd1xuICAgICAgLy8gb3V0d2FyZHMganVzdCBsaWtlIGEgcmVwbGFjZSBjYWxsIHdvdWxkIHNvIHRoZSBkZXYga25vd3MgdGhlIGNhdXNlXG4gICAgICAvLyBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnL211bHRpcGFnZS9uYXYtaGlzdG9yeS1hcGlzLmh0bWwjc2hhcmVkLWhpc3RvcnktcHVzaC9yZXBsYWNlLXN0YXRlLXN0ZXBzXG4gICAgICAvLyBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnL211bHRpcGFnZS9zdHJ1Y3R1cmVkLWRhdGEuaHRtbCNzdHJ1Y3R1cmVkc2VyaWFsaXplaW50ZXJuYWxcbiAgICAgIGlmIChlcnJvciBpbnN0YW5jZW9mIERPTUV4Y2VwdGlvbiAmJiBlcnJvci5uYW1lID09PSBcIkRhdGFDbG9uZUVycm9yXCIpIHtcbiAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICB9XG4gICAgICAvLyBUaGV5IGFyZSBnb2luZyB0byBsb3NlIHN0YXRlIGhlcmUsIGJ1dCB0aGVyZSBpcyBubyByZWFsXG4gICAgICAvLyB3YXkgdG8gd2FybiB0aGVtIGFib3V0IGl0IHNpbmNlIHRoZSBwYWdlIHdpbGwgcmVmcmVzaC4uLlxuICAgICAgd2luZG93LmxvY2F0aW9uLmFzc2lnbih1cmwpO1xuICAgIH1cbiAgICBpZiAodjVDb21wYXQgJiYgbGlzdGVuZXIpIHtcbiAgICAgIGxpc3RlbmVyKHtcbiAgICAgICAgYWN0aW9uLFxuICAgICAgICBsb2NhdGlvbjogaGlzdG9yeS5sb2NhdGlvbixcbiAgICAgICAgZGVsdGE6IDFcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiByZXBsYWNlKHRvLCBzdGF0ZSkge1xuICAgIGFjdGlvbiA9IEFjdGlvbi5SZXBsYWNlO1xuICAgIGxldCBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKGhpc3RvcnkubG9jYXRpb24sIHRvLCBzdGF0ZSk7XG4gICAgaWYgKHZhbGlkYXRlTG9jYXRpb24pIHZhbGlkYXRlTG9jYXRpb24obG9jYXRpb24sIHRvKTtcbiAgICBpbmRleCA9IGdldEluZGV4KCk7XG4gICAgbGV0IGhpc3RvcnlTdGF0ZSA9IGdldEhpc3RvcnlTdGF0ZShsb2NhdGlvbiwgaW5kZXgpO1xuICAgIGxldCB1cmwgPSBoaXN0b3J5LmNyZWF0ZUhyZWYobG9jYXRpb24pO1xuICAgIGdsb2JhbEhpc3RvcnkucmVwbGFjZVN0YXRlKGhpc3RvcnlTdGF0ZSwgXCJcIiwgdXJsKTtcbiAgICBpZiAodjVDb21wYXQgJiYgbGlzdGVuZXIpIHtcbiAgICAgIGxpc3RlbmVyKHtcbiAgICAgICAgYWN0aW9uLFxuICAgICAgICBsb2NhdGlvbjogaGlzdG9yeS5sb2NhdGlvbixcbiAgICAgICAgZGVsdGE6IDBcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBjcmVhdGVVUkwodG8pIHtcbiAgICAvLyB3aW5kb3cubG9jYXRpb24ub3JpZ2luIGlzIFwibnVsbFwiICh0aGUgbGl0ZXJhbCBzdHJpbmcgdmFsdWUpIGluIEZpcmVmb3hcbiAgICAvLyB1bmRlciBjZXJ0YWluIGNvbmRpdGlvbnMsIG5vdGFibHkgd2hlbiBzZXJ2aW5nIGZyb20gYSBsb2NhbCBIVE1MIGZpbGVcbiAgICAvLyBTZWUgaHR0cHM6Ly9idWd6aWxsYS5tb3ppbGxhLm9yZy9zaG93X2J1Zy5jZ2k/aWQ9ODc4Mjk3XG4gICAgbGV0IGJhc2UgPSB3aW5kb3cubG9jYXRpb24ub3JpZ2luICE9PSBcIm51bGxcIiA/IHdpbmRvdy5sb2NhdGlvbi5vcmlnaW4gOiB3aW5kb3cubG9jYXRpb24uaHJlZjtcbiAgICBsZXQgaHJlZiA9IHR5cGVvZiB0byA9PT0gXCJzdHJpbmdcIiA/IHRvIDogY3JlYXRlUGF0aCh0byk7XG4gICAgaW52YXJpYW50KGJhc2UsIFwiTm8gd2luZG93LmxvY2F0aW9uLihvcmlnaW58aHJlZikgYXZhaWxhYmxlIHRvIGNyZWF0ZSBVUkwgZm9yIGhyZWY6IFwiICsgaHJlZik7XG4gICAgcmV0dXJuIG5ldyBVUkwoaHJlZiwgYmFzZSk7XG4gIH1cbiAgbGV0IGhpc3RvcnkgPSB7XG4gICAgZ2V0IGFjdGlvbigpIHtcbiAgICAgIHJldHVybiBhY3Rpb247XG4gICAgfSxcbiAgICBnZXQgbG9jYXRpb24oKSB7XG4gICAgICByZXR1cm4gZ2V0TG9jYXRpb24od2luZG93LCBnbG9iYWxIaXN0b3J5KTtcbiAgICB9LFxuICAgIGxpc3Rlbihmbikge1xuICAgICAgaWYgKGxpc3RlbmVyKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkEgaGlzdG9yeSBvbmx5IGFjY2VwdHMgb25lIGFjdGl2ZSBsaXN0ZW5lclwiKTtcbiAgICAgIH1cbiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFBvcFN0YXRlRXZlbnRUeXBlLCBoYW5kbGVQb3ApO1xuICAgICAgbGlzdGVuZXIgPSBmbjtcbiAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFBvcFN0YXRlRXZlbnRUeXBlLCBoYW5kbGVQb3ApO1xuICAgICAgICBsaXN0ZW5lciA9IG51bGw7XG4gICAgICB9O1xuICAgIH0sXG4gICAgY3JlYXRlSHJlZih0bykge1xuICAgICAgcmV0dXJuIGNyZWF0ZUhyZWYod2luZG93LCB0byk7XG4gICAgfSxcbiAgICBjcmVhdGVVUkwsXG4gICAgZW5jb2RlTG9jYXRpb24odG8pIHtcbiAgICAgIC8vIEVuY29kZSBhIExvY2F0aW9uIHRoZSBzYW1lIHdheSB3aW5kb3cubG9jYXRpb24gd291bGRcbiAgICAgIGxldCB1cmwgPSBjcmVhdGVVUkwodG8pO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgcGF0aG5hbWU6IHVybC5wYXRobmFtZSxcbiAgICAgICAgc2VhcmNoOiB1cmwuc2VhcmNoLFxuICAgICAgICBoYXNoOiB1cmwuaGFzaFxuICAgICAgfTtcbiAgICB9LFxuICAgIHB1c2gsXG4gICAgcmVwbGFjZSxcbiAgICBnbyhuKSB7XG4gICAgICByZXR1cm4gZ2xvYmFsSGlzdG9yeS5nbyhuKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBoaXN0b3J5O1xufVxuLy8jZW5kcmVnaW9uXG5cbnZhciBSZXN1bHRUeXBlO1xuKGZ1bmN0aW9uIChSZXN1bHRUeXBlKSB7XG4gIFJlc3VsdFR5cGVbXCJkYXRhXCJdID0gXCJkYXRhXCI7XG4gIFJlc3VsdFR5cGVbXCJkZWZlcnJlZFwiXSA9IFwiZGVmZXJyZWRcIjtcbiAgUmVzdWx0VHlwZVtcInJlZGlyZWN0XCJdID0gXCJyZWRpcmVjdFwiO1xuICBSZXN1bHRUeXBlW1wiZXJyb3JcIl0gPSBcImVycm9yXCI7XG59KShSZXN1bHRUeXBlIHx8IChSZXN1bHRUeXBlID0ge30pKTtcbmNvbnN0IGltbXV0YWJsZVJvdXRlS2V5cyA9IG5ldyBTZXQoW1wibGF6eVwiLCBcImNhc2VTZW5zaXRpdmVcIiwgXCJwYXRoXCIsIFwiaWRcIiwgXCJpbmRleFwiLCBcImNoaWxkcmVuXCJdKTtcbmZ1bmN0aW9uIGlzSW5kZXhSb3V0ZShyb3V0ZSkge1xuICByZXR1cm4gcm91dGUuaW5kZXggPT09IHRydWU7XG59XG4vLyBXYWxrIHRoZSByb3V0ZSB0cmVlIGdlbmVyYXRpbmcgdW5pcXVlIElEcyB3aGVyZSBuZWNlc3NhcnksIHNvIHdlIGFyZSB3b3JraW5nXG4vLyBzb2xlbHkgd2l0aCBBZ25vc3RpY0RhdGFSb3V0ZU9iamVjdCdzIHdpdGhpbiB0aGUgUm91dGVyXG5mdW5jdGlvbiBjb252ZXJ0Um91dGVzVG9EYXRhUm91dGVzKHJvdXRlcywgbWFwUm91dGVQcm9wZXJ0aWVzLCBwYXJlbnRQYXRoLCBtYW5pZmVzdCkge1xuICBpZiAocGFyZW50UGF0aCA9PT0gdm9pZCAwKSB7XG4gICAgcGFyZW50UGF0aCA9IFtdO1xuICB9XG4gIGlmIChtYW5pZmVzdCA9PT0gdm9pZCAwKSB7XG4gICAgbWFuaWZlc3QgPSB7fTtcbiAgfVxuICByZXR1cm4gcm91dGVzLm1hcCgocm91dGUsIGluZGV4KSA9PiB7XG4gICAgbGV0IHRyZWVQYXRoID0gWy4uLnBhcmVudFBhdGgsIGluZGV4XTtcbiAgICBsZXQgaWQgPSB0eXBlb2Ygcm91dGUuaWQgPT09IFwic3RyaW5nXCIgPyByb3V0ZS5pZCA6IHRyZWVQYXRoLmpvaW4oXCItXCIpO1xuICAgIGludmFyaWFudChyb3V0ZS5pbmRleCAhPT0gdHJ1ZSB8fCAhcm91dGUuY2hpbGRyZW4sIFwiQ2Fubm90IHNwZWNpZnkgY2hpbGRyZW4gb24gYW4gaW5kZXggcm91dGVcIik7XG4gICAgaW52YXJpYW50KCFtYW5pZmVzdFtpZF0sIFwiRm91bmQgYSByb3V0ZSBpZCBjb2xsaXNpb24gb24gaWQgXFxcIlwiICsgaWQgKyBcIlxcXCIuICBSb3V0ZSBcIiArIFwiaWQncyBtdXN0IGJlIGdsb2JhbGx5IHVuaXF1ZSB3aXRoaW4gRGF0YSBSb3V0ZXIgdXNhZ2VzXCIpO1xuICAgIGlmIChpc0luZGV4Um91dGUocm91dGUpKSB7XG4gICAgICBsZXQgaW5kZXhSb3V0ZSA9IF9leHRlbmRzKHt9LCByb3V0ZSwgbWFwUm91dGVQcm9wZXJ0aWVzKHJvdXRlKSwge1xuICAgICAgICBpZFxuICAgICAgfSk7XG4gICAgICBtYW5pZmVzdFtpZF0gPSBpbmRleFJvdXRlO1xuICAgICAgcmV0dXJuIGluZGV4Um91dGU7XG4gICAgfSBlbHNlIHtcbiAgICAgIGxldCBwYXRoT3JMYXlvdXRSb3V0ZSA9IF9leHRlbmRzKHt9LCByb3V0ZSwgbWFwUm91dGVQcm9wZXJ0aWVzKHJvdXRlKSwge1xuICAgICAgICBpZCxcbiAgICAgICAgY2hpbGRyZW46IHVuZGVmaW5lZFxuICAgICAgfSk7XG4gICAgICBtYW5pZmVzdFtpZF0gPSBwYXRoT3JMYXlvdXRSb3V0ZTtcbiAgICAgIGlmIChyb3V0ZS5jaGlsZHJlbikge1xuICAgICAgICBwYXRoT3JMYXlvdXRSb3V0ZS5jaGlsZHJlbiA9IGNvbnZlcnRSb3V0ZXNUb0RhdGFSb3V0ZXMocm91dGUuY2hpbGRyZW4sIG1hcFJvdXRlUHJvcGVydGllcywgdHJlZVBhdGgsIG1hbmlmZXN0KTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBwYXRoT3JMYXlvdXRSb3V0ZTtcbiAgICB9XG4gIH0pO1xufVxuLyoqXG4gKiBNYXRjaGVzIHRoZSBnaXZlbiByb3V0ZXMgdG8gYSBsb2NhdGlvbiBhbmQgcmV0dXJucyB0aGUgbWF0Y2ggZGF0YS5cbiAqXG4gKiBAc2VlIGh0dHBzOi8vcmVhY3Ryb3V0ZXIuY29tL3V0aWxzL21hdGNoLXJvdXRlc1xuICovXG5mdW5jdGlvbiBtYXRjaFJvdXRlcyhyb3V0ZXMsIGxvY2F0aW9uQXJnLCBiYXNlbmFtZSkge1xuICBpZiAoYmFzZW5hbWUgPT09IHZvaWQgMCkge1xuICAgIGJhc2VuYW1lID0gXCIvXCI7XG4gIH1cbiAgbGV0IGxvY2F0aW9uID0gdHlwZW9mIGxvY2F0aW9uQXJnID09PSBcInN0cmluZ1wiID8gcGFyc2VQYXRoKGxvY2F0aW9uQXJnKSA6IGxvY2F0aW9uQXJnO1xuICBsZXQgcGF0aG5hbWUgPSBzdHJpcEJhc2VuYW1lKGxvY2F0aW9uLnBhdGhuYW1lIHx8IFwiL1wiLCBiYXNlbmFtZSk7XG4gIGlmIChwYXRobmFtZSA9PSBudWxsKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgbGV0IGJyYW5jaGVzID0gZmxhdHRlblJvdXRlcyhyb3V0ZXMpO1xuICByYW5rUm91dGVCcmFuY2hlcyhicmFuY2hlcyk7XG4gIGxldCBtYXRjaGVzID0gbnVsbDtcbiAgZm9yIChsZXQgaSA9IDA7IG1hdGNoZXMgPT0gbnVsbCAmJiBpIDwgYnJhbmNoZXMubGVuZ3RoOyArK2kpIHtcbiAgICBtYXRjaGVzID0gbWF0Y2hSb3V0ZUJyYW5jaChicmFuY2hlc1tpXSxcbiAgICAvLyBJbmNvbWluZyBwYXRobmFtZXMgYXJlIGdlbmVyYWxseSBlbmNvZGVkIGZyb20gZWl0aGVyIHdpbmRvdy5sb2NhdGlvblxuICAgIC8vIG9yIGZyb20gcm91dGVyLm5hdmlnYXRlLCBidXQgd2Ugd2FudCB0byBtYXRjaCBhZ2FpbnN0IHRoZSB1bmVuY29kZWRcbiAgICAvLyBwYXRocyBpbiB0aGUgcm91dGUgZGVmaW5pdGlvbnMuICBNZW1vcnkgcm91dGVyIGxvY2F0aW9ucyB3b24ndCBiZVxuICAgIC8vIGVuY29kZWQgaGVyZSBidXQgdGhlcmUgYWxzbyBzaG91bGRuJ3QgYmUgYW55dGhpbmcgdG8gZGVjb2RlIHNvIHRoaXNcbiAgICAvLyBzaG91bGQgYmUgYSBzYWZlIG9wZXJhdGlvbi4gIFRoaXMgYXZvaWRzIG5lZWRpbmcgbWF0Y2hSb3V0ZXMgdG8gYmVcbiAgICAvLyBoaXN0b3J5LWF3YXJlLlxuICAgIHNhZmVseURlY29kZVVSSShwYXRobmFtZSkpO1xuICB9XG4gIHJldHVybiBtYXRjaGVzO1xufVxuZnVuY3Rpb24gY29udmVydFJvdXRlTWF0Y2hUb1VpTWF0Y2gobWF0Y2gsIGxvYWRlckRhdGEpIHtcbiAgbGV0IHtcbiAgICByb3V0ZSxcbiAgICBwYXRobmFtZSxcbiAgICBwYXJhbXNcbiAgfSA9IG1hdGNoO1xuICByZXR1cm4ge1xuICAgIGlkOiByb3V0ZS5pZCxcbiAgICBwYXRobmFtZSxcbiAgICBwYXJhbXMsXG4gICAgZGF0YTogbG9hZGVyRGF0YVtyb3V0ZS5pZF0sXG4gICAgaGFuZGxlOiByb3V0ZS5oYW5kbGVcbiAgfTtcbn1cbmZ1bmN0aW9uIGZsYXR0ZW5Sb3V0ZXMocm91dGVzLCBicmFuY2hlcywgcGFyZW50c01ldGEsIHBhcmVudFBhdGgpIHtcbiAgaWYgKGJyYW5jaGVzID09PSB2b2lkIDApIHtcbiAgICBicmFuY2hlcyA9IFtdO1xuICB9XG4gIGlmIChwYXJlbnRzTWV0YSA9PT0gdm9pZCAwKSB7XG4gICAgcGFyZW50c01ldGEgPSBbXTtcbiAgfVxuICBpZiAocGFyZW50UGF0aCA9PT0gdm9pZCAwKSB7XG4gICAgcGFyZW50UGF0aCA9IFwiXCI7XG4gIH1cbiAgbGV0IGZsYXR0ZW5Sb3V0ZSA9IChyb3V0ZSwgaW5kZXgsIHJlbGF0aXZlUGF0aCkgPT4ge1xuICAgIGxldCBtZXRhID0ge1xuICAgICAgcmVsYXRpdmVQYXRoOiByZWxhdGl2ZVBhdGggPT09IHVuZGVmaW5lZCA/IHJvdXRlLnBhdGggfHwgXCJcIiA6IHJlbGF0aXZlUGF0aCxcbiAgICAgIGNhc2VTZW5zaXRpdmU6IHJvdXRlLmNhc2VTZW5zaXRpdmUgPT09IHRydWUsXG4gICAgICBjaGlsZHJlbkluZGV4OiBpbmRleCxcbiAgICAgIHJvdXRlXG4gICAgfTtcbiAgICBpZiAobWV0YS5yZWxhdGl2ZVBhdGguc3RhcnRzV2l0aChcIi9cIikpIHtcbiAgICAgIGludmFyaWFudChtZXRhLnJlbGF0aXZlUGF0aC5zdGFydHNXaXRoKHBhcmVudFBhdGgpLCBcIkFic29sdXRlIHJvdXRlIHBhdGggXFxcIlwiICsgbWV0YS5yZWxhdGl2ZVBhdGggKyBcIlxcXCIgbmVzdGVkIHVuZGVyIHBhdGggXCIgKyAoXCJcXFwiXCIgKyBwYXJlbnRQYXRoICsgXCJcXFwiIGlzIG5vdCB2YWxpZC4gQW4gYWJzb2x1dGUgY2hpbGQgcm91dGUgcGF0aCBcIikgKyBcIm11c3Qgc3RhcnQgd2l0aCB0aGUgY29tYmluZWQgcGF0aCBvZiBhbGwgaXRzIHBhcmVudCByb3V0ZXMuXCIpO1xuICAgICAgbWV0YS5yZWxhdGl2ZVBhdGggPSBtZXRhLnJlbGF0aXZlUGF0aC5zbGljZShwYXJlbnRQYXRoLmxlbmd0aCk7XG4gICAgfVxuICAgIGxldCBwYXRoID0gam9pblBhdGhzKFtwYXJlbnRQYXRoLCBtZXRhLnJlbGF0aXZlUGF0aF0pO1xuICAgIGxldCByb3V0ZXNNZXRhID0gcGFyZW50c01ldGEuY29uY2F0KG1ldGEpO1xuICAgIC8vIEFkZCB0aGUgY2hpbGRyZW4gYmVmb3JlIGFkZGluZyB0aGlzIHJvdXRlIHRvIHRoZSBhcnJheSwgc28gd2UgdHJhdmVyc2UgdGhlXG4gICAgLy8gcm91dGUgdHJlZSBkZXB0aC1maXJzdCBhbmQgY2hpbGQgcm91dGVzIGFwcGVhciBiZWZvcmUgdGhlaXIgcGFyZW50cyBpblxuICAgIC8vIHRoZSBcImZsYXR0ZW5lZFwiIHZlcnNpb24uXG4gICAgaWYgKHJvdXRlLmNoaWxkcmVuICYmIHJvdXRlLmNoaWxkcmVuLmxlbmd0aCA+IDApIHtcbiAgICAgIGludmFyaWFudChcbiAgICAgIC8vIE91ciB0eXBlcyBrbm93IGJldHRlciwgYnV0IHJ1bnRpbWUgSlMgbWF5IG5vdCFcbiAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3JcbiAgICAgIHJvdXRlLmluZGV4ICE9PSB0cnVlLCBcIkluZGV4IHJvdXRlcyBtdXN0IG5vdCBoYXZlIGNoaWxkIHJvdXRlcy4gUGxlYXNlIHJlbW92ZSBcIiArIChcImFsbCBjaGlsZCByb3V0ZXMgZnJvbSByb3V0ZSBwYXRoIFxcXCJcIiArIHBhdGggKyBcIlxcXCIuXCIpKTtcbiAgICAgIGZsYXR0ZW5Sb3V0ZXMocm91dGUuY2hpbGRyZW4sIGJyYW5jaGVzLCByb3V0ZXNNZXRhLCBwYXRoKTtcbiAgICB9XG4gICAgLy8gUm91dGVzIHdpdGhvdXQgYSBwYXRoIHNob3VsZG4ndCBldmVyIG1hdGNoIGJ5IHRoZW1zZWx2ZXMgdW5sZXNzIHRoZXkgYXJlXG4gICAgLy8gaW5kZXggcm91dGVzLCBzbyBkb24ndCBhZGQgdGhlbSB0byB0aGUgbGlzdCBvZiBwb3NzaWJsZSBicmFuY2hlcy5cbiAgICBpZiAocm91dGUucGF0aCA9PSBudWxsICYmICFyb3V0ZS5pbmRleCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBicmFuY2hlcy5wdXNoKHtcbiAgICAgIHBhdGgsXG4gICAgICBzY29yZTogY29tcHV0ZVNjb3JlKHBhdGgsIHJvdXRlLmluZGV4KSxcbiAgICAgIHJvdXRlc01ldGFcbiAgICB9KTtcbiAgfTtcbiAgcm91dGVzLmZvckVhY2goKHJvdXRlLCBpbmRleCkgPT4ge1xuICAgIHZhciBfcm91dGUkcGF0aDtcbiAgICAvLyBjb2Fyc2UtZ3JhaW4gY2hlY2sgZm9yIG9wdGlvbmFsIHBhcmFtc1xuICAgIGlmIChyb3V0ZS5wYXRoID09PSBcIlwiIHx8ICEoKF9yb3V0ZSRwYXRoID0gcm91dGUucGF0aCkgIT0gbnVsbCAmJiBfcm91dGUkcGF0aC5pbmNsdWRlcyhcIj9cIikpKSB7XG4gICAgICBmbGF0dGVuUm91dGUocm91dGUsIGluZGV4KTtcbiAgICB9IGVsc2Uge1xuICAgICAgZm9yIChsZXQgZXhwbG9kZWQgb2YgZXhwbG9kZU9wdGlvbmFsU2VnbWVudHMocm91dGUucGF0aCkpIHtcbiAgICAgICAgZmxhdHRlblJvdXRlKHJvdXRlLCBpbmRleCwgZXhwbG9kZWQpO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG4gIHJldHVybiBicmFuY2hlcztcbn1cbi8qKlxuICogQ29tcHV0ZXMgYWxsIGNvbWJpbmF0aW9ucyBvZiBvcHRpb25hbCBwYXRoIHNlZ21lbnRzIGZvciBhIGdpdmVuIHBhdGgsXG4gKiBleGNsdWRpbmcgY29tYmluYXRpb25zIHRoYXQgYXJlIGFtYmlndW91cyBhbmQgb2YgbG93ZXIgcHJpb3JpdHkuXG4gKlxuICogRm9yIGV4YW1wbGUsIGAvb25lLzp0d28/L3RocmVlLzpmb3VyPy86Zml2ZT9gIGV4cGxvZGVzIHRvOlxuICogLSBgL29uZS90aHJlZWBcbiAqIC0gYC9vbmUvOnR3by90aHJlZWBcbiAqIC0gYC9vbmUvdGhyZWUvOmZvdXJgXG4gKiAtIGAvb25lL3RocmVlLzpmaXZlYFxuICogLSBgL29uZS86dHdvL3RocmVlLzpmb3VyYFxuICogLSBgL29uZS86dHdvL3RocmVlLzpmaXZlYFxuICogLSBgL29uZS90aHJlZS86Zm91ci86Zml2ZWBcbiAqIC0gYC9vbmUvOnR3by90aHJlZS86Zm91ci86Zml2ZWBcbiAqL1xuZnVuY3Rpb24gZXhwbG9kZU9wdGlvbmFsU2VnbWVudHMocGF0aCkge1xuICBsZXQgc2VnbWVudHMgPSBwYXRoLnNwbGl0KFwiL1wiKTtcbiAgaWYgKHNlZ21lbnRzLmxlbmd0aCA9PT0gMCkgcmV0dXJuIFtdO1xuICBsZXQgW2ZpcnN0LCAuLi5yZXN0XSA9IHNlZ21lbnRzO1xuICAvLyBPcHRpb25hbCBwYXRoIHNlZ21lbnRzIGFyZSBkZW5vdGVkIGJ5IGEgdHJhaWxpbmcgYD9gXG4gIGxldCBpc09wdGlvbmFsID0gZmlyc3QuZW5kc1dpdGgoXCI/XCIpO1xuICAvLyBDb21wdXRlIHRoZSBjb3JyZXNwb25kaW5nIHJlcXVpcmVkIHNlZ21lbnQ6IGBmb28/YCAtPiBgZm9vYFxuICBsZXQgcmVxdWlyZWQgPSBmaXJzdC5yZXBsYWNlKC9cXD8kLywgXCJcIik7XG4gIGlmIChyZXN0Lmxlbmd0aCA9PT0gMCkge1xuICAgIC8vIEludGVwcmV0IGVtcHR5IHN0cmluZyBhcyBvbWl0dGluZyBhbiBvcHRpb25hbCBzZWdtZW50XG4gICAgLy8gYFtcIm9uZVwiLCBcIlwiLCBcInRocmVlXCJdYCBjb3JyZXNwb25kcyB0byBvbWl0dGluZyBgOnR3b2AgZnJvbSBgL29uZS86dHdvPy90aHJlZWAgLT4gYC9vbmUvdGhyZWVgXG4gICAgcmV0dXJuIGlzT3B0aW9uYWwgPyBbcmVxdWlyZWQsIFwiXCJdIDogW3JlcXVpcmVkXTtcbiAgfVxuICBsZXQgcmVzdEV4cGxvZGVkID0gZXhwbG9kZU9wdGlvbmFsU2VnbWVudHMocmVzdC5qb2luKFwiL1wiKSk7XG4gIGxldCByZXN1bHQgPSBbXTtcbiAgLy8gQWxsIGNoaWxkIHBhdGhzIHdpdGggdGhlIHByZWZpeC4gIERvIHRoaXMgZm9yIGFsbCBjaGlsZHJlbiBiZWZvcmUgdGhlXG4gIC8vIG9wdGlvbmFsIHZlcnNpb24gZm9yIGFsbCBjaGlsZHJlbiwgc28gd2UgZ2V0IGNvbnNpc3RlbnQgb3JkZXJpbmcgd2hlcmUgdGhlXG4gIC8vIHBhcmVudCBvcHRpb25hbCBhc3BlY3QgaXMgcHJlZmVycmVkIGFzIHJlcXVpcmVkLiAgT3RoZXJ3aXNlLCB3ZSBjYW4gZ2V0XG4gIC8vIGNoaWxkIHNlY3Rpb25zIGludGVyc3BlcnNlZCB3aGVyZSBkZWVwZXIgb3B0aW9uYWwgc2VnbWVudHMgYXJlIGhpZ2hlciB0aGFuXG4gIC8vIHBhcmVudCBvcHRpb25hbCBzZWdtZW50cywgd2hlcmUgZm9yIGV4YW1wbGUsIC86dHdvIHdvdWxkIGV4cGxvZGUgX2VhcmxpZXJfXG4gIC8vIHRoZW4gLzpvbmUuICBCeSBhbHdheXMgaW5jbHVkaW5nIHRoZSBwYXJlbnQgYXMgcmVxdWlyZWQgX2ZvciBhbGwgY2hpbGRyZW5fXG4gIC8vIGZpcnN0LCB3ZSBhdm9pZCB0aGlzIGlzc3VlXG4gIHJlc3VsdC5wdXNoKC4uLnJlc3RFeHBsb2RlZC5tYXAoc3VicGF0aCA9PiBzdWJwYXRoID09PSBcIlwiID8gcmVxdWlyZWQgOiBbcmVxdWlyZWQsIHN1YnBhdGhdLmpvaW4oXCIvXCIpKSk7XG4gIC8vIFRoZW4sIGlmIHRoaXMgaXMgYW4gb3B0aW9uYWwgdmFsdWUsIGFkZCBhbGwgY2hpbGQgdmVyc2lvbnMgd2l0aG91dFxuICBpZiAoaXNPcHRpb25hbCkge1xuICAgIHJlc3VsdC5wdXNoKC4uLnJlc3RFeHBsb2RlZCk7XG4gIH1cbiAgLy8gZm9yIGFic29sdXRlIHBhdGhzLCBlbnN1cmUgYC9gIGluc3RlYWQgb2YgZW1wdHkgc2VnbWVudFxuICByZXR1cm4gcmVzdWx0Lm1hcChleHBsb2RlZCA9PiBwYXRoLnN0YXJ0c1dpdGgoXCIvXCIpICYmIGV4cGxvZGVkID09PSBcIlwiID8gXCIvXCIgOiBleHBsb2RlZCk7XG59XG5mdW5jdGlvbiByYW5rUm91dGVCcmFuY2hlcyhicmFuY2hlcykge1xuICBicmFuY2hlcy5zb3J0KChhLCBiKSA9PiBhLnNjb3JlICE9PSBiLnNjb3JlID8gYi5zY29yZSAtIGEuc2NvcmUgLy8gSGlnaGVyIHNjb3JlIGZpcnN0XG4gIDogY29tcGFyZUluZGV4ZXMoYS5yb3V0ZXNNZXRhLm1hcChtZXRhID0+IG1ldGEuY2hpbGRyZW5JbmRleCksIGIucm91dGVzTWV0YS5tYXAobWV0YSA9PiBtZXRhLmNoaWxkcmVuSW5kZXgpKSk7XG59XG5jb25zdCBwYXJhbVJlID0gL146XFx3KyQvO1xuY29uc3QgZHluYW1pY1NlZ21lbnRWYWx1ZSA9IDM7XG5jb25zdCBpbmRleFJvdXRlVmFsdWUgPSAyO1xuY29uc3QgZW1wdHlTZWdtZW50VmFsdWUgPSAxO1xuY29uc3Qgc3RhdGljU2VnbWVudFZhbHVlID0gMTA7XG5jb25zdCBzcGxhdFBlbmFsdHkgPSAtMjtcbmNvbnN0IGlzU3BsYXQgPSBzID0+IHMgPT09IFwiKlwiO1xuZnVuY3Rpb24gY29tcHV0ZVNjb3JlKHBhdGgsIGluZGV4KSB7XG4gIGxldCBzZWdtZW50cyA9IHBhdGguc3BsaXQoXCIvXCIpO1xuICBsZXQgaW5pdGlhbFNjb3JlID0gc2VnbWVudHMubGVuZ3RoO1xuICBpZiAoc2VnbWVudHMuc29tZShpc1NwbGF0KSkge1xuICAgIGluaXRpYWxTY29yZSArPSBzcGxhdFBlbmFsdHk7XG4gIH1cbiAgaWYgKGluZGV4KSB7XG4gICAgaW5pdGlhbFNjb3JlICs9IGluZGV4Um91dGVWYWx1ZTtcbiAgfVxuICByZXR1cm4gc2VnbWVudHMuZmlsdGVyKHMgPT4gIWlzU3BsYXQocykpLnJlZHVjZSgoc2NvcmUsIHNlZ21lbnQpID0+IHNjb3JlICsgKHBhcmFtUmUudGVzdChzZWdtZW50KSA/IGR5bmFtaWNTZWdtZW50VmFsdWUgOiBzZWdtZW50ID09PSBcIlwiID8gZW1wdHlTZWdtZW50VmFsdWUgOiBzdGF0aWNTZWdtZW50VmFsdWUpLCBpbml0aWFsU2NvcmUpO1xufVxuZnVuY3Rpb24gY29tcGFyZUluZGV4ZXMoYSwgYikge1xuICBsZXQgc2libGluZ3MgPSBhLmxlbmd0aCA9PT0gYi5sZW5ndGggJiYgYS5zbGljZSgwLCAtMSkuZXZlcnkoKG4sIGkpID0+IG4gPT09IGJbaV0pO1xuICByZXR1cm4gc2libGluZ3MgP1xuICAvLyBJZiB0d28gcm91dGVzIGFyZSBzaWJsaW5ncywgd2Ugc2hvdWxkIHRyeSB0byBtYXRjaCB0aGUgZWFybGllciBzaWJsaW5nXG4gIC8vIGZpcnN0LiBUaGlzIGFsbG93cyBwZW9wbGUgdG8gaGF2ZSBmaW5lLWdyYWluZWQgY29udHJvbCBvdmVyIHRoZSBtYXRjaGluZ1xuICAvLyBiZWhhdmlvciBieSBzaW1wbHkgcHV0dGluZyByb3V0ZXMgd2l0aCBpZGVudGljYWwgcGF0aHMgaW4gdGhlIG9yZGVyIHRoZXlcbiAgLy8gd2FudCB0aGVtIHRyaWVkLlxuICBhW2EubGVuZ3RoIC0gMV0gLSBiW2IubGVuZ3RoIC0gMV0gOlxuICAvLyBPdGhlcndpc2UsIGl0IGRvZXNuJ3QgcmVhbGx5IG1ha2Ugc2Vuc2UgdG8gcmFuayBub24tc2libGluZ3MgYnkgaW5kZXgsXG4gIC8vIHNvIHRoZXkgc29ydCBlcXVhbGx5LlxuICAwO1xufVxuZnVuY3Rpb24gbWF0Y2hSb3V0ZUJyYW5jaChicmFuY2gsIHBhdGhuYW1lKSB7XG4gIGxldCB7XG4gICAgcm91dGVzTWV0YVxuICB9ID0gYnJhbmNoO1xuICBsZXQgbWF0Y2hlZFBhcmFtcyA9IHt9O1xuICBsZXQgbWF0Y2hlZFBhdGhuYW1lID0gXCIvXCI7XG4gIGxldCBtYXRjaGVzID0gW107XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgcm91dGVzTWV0YS5sZW5ndGg7ICsraSkge1xuICAgIGxldCBtZXRhID0gcm91dGVzTWV0YVtpXTtcbiAgICBsZXQgZW5kID0gaSA9PT0gcm91dGVzTWV0YS5sZW5ndGggLSAxO1xuICAgIGxldCByZW1haW5pbmdQYXRobmFtZSA9IG1hdGNoZWRQYXRobmFtZSA9PT0gXCIvXCIgPyBwYXRobmFtZSA6IHBhdGhuYW1lLnNsaWNlKG1hdGNoZWRQYXRobmFtZS5sZW5ndGgpIHx8IFwiL1wiO1xuICAgIGxldCBtYXRjaCA9IG1hdGNoUGF0aCh7XG4gICAgICBwYXRoOiBtZXRhLnJlbGF0aXZlUGF0aCxcbiAgICAgIGNhc2VTZW5zaXRpdmU6IG1ldGEuY2FzZVNlbnNpdGl2ZSxcbiAgICAgIGVuZFxuICAgIH0sIHJlbWFpbmluZ1BhdGhuYW1lKTtcbiAgICBpZiAoIW1hdGNoKSByZXR1cm4gbnVsbDtcbiAgICBPYmplY3QuYXNzaWduKG1hdGNoZWRQYXJhbXMsIG1hdGNoLnBhcmFtcyk7XG4gICAgbGV0IHJvdXRlID0gbWV0YS5yb3V0ZTtcbiAgICBtYXRjaGVzLnB1c2goe1xuICAgICAgLy8gVE9ETzogQ2FuIHRoaXMgYXMgYmUgYXZvaWRlZD9cbiAgICAgIHBhcmFtczogbWF0Y2hlZFBhcmFtcyxcbiAgICAgIHBhdGhuYW1lOiBqb2luUGF0aHMoW21hdGNoZWRQYXRobmFtZSwgbWF0Y2gucGF0aG5hbWVdKSxcbiAgICAgIHBhdGhuYW1lQmFzZTogbm9ybWFsaXplUGF0aG5hbWUoam9pblBhdGhzKFttYXRjaGVkUGF0aG5hbWUsIG1hdGNoLnBhdGhuYW1lQmFzZV0pKSxcbiAgICAgIHJvdXRlXG4gICAgfSk7XG4gICAgaWYgKG1hdGNoLnBhdGhuYW1lQmFzZSAhPT0gXCIvXCIpIHtcbiAgICAgIG1hdGNoZWRQYXRobmFtZSA9IGpvaW5QYXRocyhbbWF0Y2hlZFBhdGhuYW1lLCBtYXRjaC5wYXRobmFtZUJhc2VdKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIG1hdGNoZXM7XG59XG4vKipcbiAqIFJldHVybnMgYSBwYXRoIHdpdGggcGFyYW1zIGludGVycG9sYXRlZC5cbiAqXG4gKiBAc2VlIGh0dHBzOi8vcmVhY3Ryb3V0ZXIuY29tL3V0aWxzL2dlbmVyYXRlLXBhdGhcbiAqL1xuZnVuY3Rpb24gZ2VuZXJhdGVQYXRoKG9yaWdpbmFsUGF0aCwgcGFyYW1zKSB7XG4gIGlmIChwYXJhbXMgPT09IHZvaWQgMCkge1xuICAgIHBhcmFtcyA9IHt9O1xuICB9XG4gIGxldCBwYXRoID0gb3JpZ2luYWxQYXRoO1xuICBpZiAocGF0aC5lbmRzV2l0aChcIipcIikgJiYgcGF0aCAhPT0gXCIqXCIgJiYgIXBhdGguZW5kc1dpdGgoXCIvKlwiKSkge1xuICAgIHdhcm5pbmcoZmFsc2UsIFwiUm91dGUgcGF0aCBcXFwiXCIgKyBwYXRoICsgXCJcXFwiIHdpbGwgYmUgdHJlYXRlZCBhcyBpZiBpdCB3ZXJlIFwiICsgKFwiXFxcIlwiICsgcGF0aC5yZXBsYWNlKC9cXCokLywgXCIvKlwiKSArIFwiXFxcIiBiZWNhdXNlIHRoZSBgKmAgY2hhcmFjdGVyIG11c3QgXCIpICsgXCJhbHdheXMgZm9sbG93IGEgYC9gIGluIHRoZSBwYXR0ZXJuLiBUbyBnZXQgcmlkIG9mIHRoaXMgd2FybmluZywgXCIgKyAoXCJwbGVhc2UgY2hhbmdlIHRoZSByb3V0ZSBwYXRoIHRvIFxcXCJcIiArIHBhdGgucmVwbGFjZSgvXFwqJC8sIFwiLypcIikgKyBcIlxcXCIuXCIpKTtcbiAgICBwYXRoID0gcGF0aC5yZXBsYWNlKC9cXCokLywgXCIvKlwiKTtcbiAgfVxuICAvLyBlbnN1cmUgYC9gIGlzIGFkZGVkIGF0IHRoZSBiZWdpbm5pbmcgaWYgdGhlIHBhdGggaXMgYWJzb2x1dGVcbiAgY29uc3QgcHJlZml4ID0gcGF0aC5zdGFydHNXaXRoKFwiL1wiKSA/IFwiL1wiIDogXCJcIjtcbiAgY29uc3Qgc3RyaW5naWZ5ID0gcCA9PiBwID09IG51bGwgPyBcIlwiIDogdHlwZW9mIHAgPT09IFwic3RyaW5nXCIgPyBwIDogU3RyaW5nKHApO1xuICBjb25zdCBzZWdtZW50cyA9IHBhdGguc3BsaXQoL1xcLysvKS5tYXAoKHNlZ21lbnQsIGluZGV4LCBhcnJheSkgPT4ge1xuICAgIGNvbnN0IGlzTGFzdFNlZ21lbnQgPSBpbmRleCA9PT0gYXJyYXkubGVuZ3RoIC0gMTtcbiAgICAvLyBvbmx5IGFwcGx5IHRoZSBzcGxhdCBpZiBpdCdzIHRoZSBsYXN0IHNlZ21lbnRcbiAgICBpZiAoaXNMYXN0U2VnbWVudCAmJiBzZWdtZW50ID09PSBcIipcIikge1xuICAgICAgY29uc3Qgc3RhciA9IFwiKlwiO1xuICAgICAgLy8gQXBwbHkgdGhlIHNwbGF0XG4gICAgICByZXR1cm4gc3RyaW5naWZ5KHBhcmFtc1tzdGFyXSk7XG4gICAgfVxuICAgIGNvbnN0IGtleU1hdGNoID0gc2VnbWVudC5tYXRjaCgvXjooXFx3KykoXFw/PykkLyk7XG4gICAgaWYgKGtleU1hdGNoKSB7XG4gICAgICBjb25zdCBbLCBrZXksIG9wdGlvbmFsXSA9IGtleU1hdGNoO1xuICAgICAgbGV0IHBhcmFtID0gcGFyYW1zW2tleV07XG4gICAgICBpbnZhcmlhbnQob3B0aW9uYWwgPT09IFwiP1wiIHx8IHBhcmFtICE9IG51bGwsIFwiTWlzc2luZyBcXFwiOlwiICsga2V5ICsgXCJcXFwiIHBhcmFtXCIpO1xuICAgICAgcmV0dXJuIHN0cmluZ2lmeShwYXJhbSk7XG4gICAgfVxuICAgIC8vIFJlbW92ZSBhbnkgb3B0aW9uYWwgbWFya2VycyBmcm9tIG9wdGlvbmFsIHN0YXRpYyBzZWdtZW50c1xuICAgIHJldHVybiBzZWdtZW50LnJlcGxhY2UoL1xcPyQvZywgXCJcIik7XG4gIH0pXG4gIC8vIFJlbW92ZSBlbXB0eSBzZWdtZW50c1xuICAuZmlsdGVyKHNlZ21lbnQgPT4gISFzZWdtZW50KTtcbiAgcmV0dXJuIHByZWZpeCArIHNlZ21lbnRzLmpvaW4oXCIvXCIpO1xufVxuLyoqXG4gKiBQZXJmb3JtcyBwYXR0ZXJuIG1hdGNoaW5nIG9uIGEgVVJMIHBhdGhuYW1lIGFuZCByZXR1cm5zIGluZm9ybWF0aW9uIGFib3V0XG4gKiB0aGUgbWF0Y2guXG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0cm91dGVyLmNvbS91dGlscy9tYXRjaC1wYXRoXG4gKi9cbmZ1bmN0aW9uIG1hdGNoUGF0aChwYXR0ZXJuLCBwYXRobmFtZSkge1xuICBpZiAodHlwZW9mIHBhdHRlcm4gPT09IFwic3RyaW5nXCIpIHtcbiAgICBwYXR0ZXJuID0ge1xuICAgICAgcGF0aDogcGF0dGVybixcbiAgICAgIGNhc2VTZW5zaXRpdmU6IGZhbHNlLFxuICAgICAgZW5kOiB0cnVlXG4gICAgfTtcbiAgfVxuICBsZXQgW21hdGNoZXIsIHBhcmFtTmFtZXNdID0gY29tcGlsZVBhdGgocGF0dGVybi5wYXRoLCBwYXR0ZXJuLmNhc2VTZW5zaXRpdmUsIHBhdHRlcm4uZW5kKTtcbiAgbGV0IG1hdGNoID0gcGF0aG5hbWUubWF0Y2gobWF0Y2hlcik7XG4gIGlmICghbWF0Y2gpIHJldHVybiBudWxsO1xuICBsZXQgbWF0Y2hlZFBhdGhuYW1lID0gbWF0Y2hbMF07XG4gIGxldCBwYXRobmFtZUJhc2UgPSBtYXRjaGVkUGF0aG5hbWUucmVwbGFjZSgvKC4pXFwvKyQvLCBcIiQxXCIpO1xuICBsZXQgY2FwdHVyZUdyb3VwcyA9IG1hdGNoLnNsaWNlKDEpO1xuICBsZXQgcGFyYW1zID0gcGFyYW1OYW1lcy5yZWR1Y2UoKG1lbW8sIHBhcmFtTmFtZSwgaW5kZXgpID0+IHtcbiAgICAvLyBXZSBuZWVkIHRvIGNvbXB1dGUgdGhlIHBhdGhuYW1lQmFzZSBoZXJlIHVzaW5nIHRoZSByYXcgc3BsYXQgdmFsdWVcbiAgICAvLyBpbnN0ZWFkIG9mIHVzaW5nIHBhcmFtc1tcIipcIl0gbGF0ZXIgYmVjYXVzZSBpdCB3aWxsIGJlIGRlY29kZWQgdGhlblxuICAgIGlmIChwYXJhbU5hbWUgPT09IFwiKlwiKSB7XG4gICAgICBsZXQgc3BsYXRWYWx1ZSA9IGNhcHR1cmVHcm91cHNbaW5kZXhdIHx8IFwiXCI7XG4gICAgICBwYXRobmFtZUJhc2UgPSBtYXRjaGVkUGF0aG5hbWUuc2xpY2UoMCwgbWF0Y2hlZFBhdGhuYW1lLmxlbmd0aCAtIHNwbGF0VmFsdWUubGVuZ3RoKS5yZXBsYWNlKC8oLilcXC8rJC8sIFwiJDFcIik7XG4gICAgfVxuICAgIG1lbW9bcGFyYW1OYW1lXSA9IHNhZmVseURlY29kZVVSSUNvbXBvbmVudChjYXB0dXJlR3JvdXBzW2luZGV4XSB8fCBcIlwiLCBwYXJhbU5hbWUpO1xuICAgIHJldHVybiBtZW1vO1xuICB9LCB7fSk7XG4gIHJldHVybiB7XG4gICAgcGFyYW1zLFxuICAgIHBhdGhuYW1lOiBtYXRjaGVkUGF0aG5hbWUsXG4gICAgcGF0aG5hbWVCYXNlLFxuICAgIHBhdHRlcm5cbiAgfTtcbn1cbmZ1bmN0aW9uIGNvbXBpbGVQYXRoKHBhdGgsIGNhc2VTZW5zaXRpdmUsIGVuZCkge1xuICBpZiAoY2FzZVNlbnNpdGl2ZSA9PT0gdm9pZCAwKSB7XG4gICAgY2FzZVNlbnNpdGl2ZSA9IGZhbHNlO1xuICB9XG4gIGlmIChlbmQgPT09IHZvaWQgMCkge1xuICAgIGVuZCA9IHRydWU7XG4gIH1cbiAgd2FybmluZyhwYXRoID09PSBcIipcIiB8fCAhcGF0aC5lbmRzV2l0aChcIipcIikgfHwgcGF0aC5lbmRzV2l0aChcIi8qXCIpLCBcIlJvdXRlIHBhdGggXFxcIlwiICsgcGF0aCArIFwiXFxcIiB3aWxsIGJlIHRyZWF0ZWQgYXMgaWYgaXQgd2VyZSBcIiArIChcIlxcXCJcIiArIHBhdGgucmVwbGFjZSgvXFwqJC8sIFwiLypcIikgKyBcIlxcXCIgYmVjYXVzZSB0aGUgYCpgIGNoYXJhY3RlciBtdXN0IFwiKSArIFwiYWx3YXlzIGZvbGxvdyBhIGAvYCBpbiB0aGUgcGF0dGVybi4gVG8gZ2V0IHJpZCBvZiB0aGlzIHdhcm5pbmcsIFwiICsgKFwicGxlYXNlIGNoYW5nZSB0aGUgcm91dGUgcGF0aCB0byBcXFwiXCIgKyBwYXRoLnJlcGxhY2UoL1xcKiQvLCBcIi8qXCIpICsgXCJcXFwiLlwiKSk7XG4gIGxldCBwYXJhbU5hbWVzID0gW107XG4gIGxldCByZWdleHBTb3VyY2UgPSBcIl5cIiArIHBhdGgucmVwbGFjZSgvXFwvKlxcKj8kLywgXCJcIikgLy8gSWdub3JlIHRyYWlsaW5nIC8gYW5kIC8qLCB3ZSdsbCBoYW5kbGUgaXQgYmVsb3dcbiAgLnJlcGxhY2UoL15cXC8qLywgXCIvXCIpIC8vIE1ha2Ugc3VyZSBpdCBoYXMgYSBsZWFkaW5nIC9cbiAgLnJlcGxhY2UoL1tcXFxcLiorXiQ/e318KClbXFxdXS9nLCBcIlxcXFwkJlwiKSAvLyBFc2NhcGUgc3BlY2lhbCByZWdleCBjaGFyc1xuICAucmVwbGFjZSgvXFwvOihcXHcrKS9nLCAoXywgcGFyYW1OYW1lKSA9PiB7XG4gICAgcGFyYW1OYW1lcy5wdXNoKHBhcmFtTmFtZSk7XG4gICAgcmV0dXJuIFwiLyhbXlxcXFwvXSspXCI7XG4gIH0pO1xuICBpZiAocGF0aC5lbmRzV2l0aChcIipcIikpIHtcbiAgICBwYXJhbU5hbWVzLnB1c2goXCIqXCIpO1xuICAgIHJlZ2V4cFNvdXJjZSArPSBwYXRoID09PSBcIipcIiB8fCBwYXRoID09PSBcIi8qXCIgPyBcIiguKikkXCIgLy8gQWxyZWFkeSBtYXRjaGVkIHRoZSBpbml0aWFsIC8sIGp1c3QgbWF0Y2ggdGhlIHJlc3RcbiAgICA6IFwiKD86XFxcXC8oLispfFxcXFwvKikkXCI7IC8vIERvbid0IGluY2x1ZGUgdGhlIC8gaW4gcGFyYW1zW1wiKlwiXVxuICB9IGVsc2UgaWYgKGVuZCkge1xuICAgIC8vIFdoZW4gbWF0Y2hpbmcgdG8gdGhlIGVuZCwgaWdub3JlIHRyYWlsaW5nIHNsYXNoZXNcbiAgICByZWdleHBTb3VyY2UgKz0gXCJcXFxcLyokXCI7XG4gIH0gZWxzZSBpZiAocGF0aCAhPT0gXCJcIiAmJiBwYXRoICE9PSBcIi9cIikge1xuICAgIC8vIElmIG91ciBwYXRoIGlzIG5vbi1lbXB0eSBhbmQgY29udGFpbnMgYW55dGhpbmcgYmV5b25kIGFuIGluaXRpYWwgc2xhc2gsXG4gICAgLy8gdGhlbiB3ZSBoYXZlIF9zb21lXyBmb3JtIG9mIHBhdGggaW4gb3VyIHJlZ2V4LCBzbyB3ZSBzaG91bGQgZXhwZWN0IHRvXG4gICAgLy8gbWF0Y2ggb25seSBpZiB3ZSBmaW5kIHRoZSBlbmQgb2YgdGhpcyBwYXRoIHNlZ21lbnQuICBMb29rIGZvciBhbiBvcHRpb25hbFxuICAgIC8vIG5vbi1jYXB0dXJlZCB0cmFpbGluZyBzbGFzaCAodG8gbWF0Y2ggYSBwb3J0aW9uIG9mIHRoZSBVUkwpIG9yIHRoZSBlbmRcbiAgICAvLyBvZiB0aGUgcGF0aCAoaWYgd2UndmUgbWF0Y2hlZCB0byB0aGUgZW5kKS4gIFdlIHVzZWQgdG8gZG8gdGhpcyB3aXRoIGFcbiAgICAvLyB3b3JkIGJvdW5kYXJ5IGJ1dCB0aGF0IGdpdmVzIGZhbHNlIHBvc2l0aXZlcyBvbiByb3V0ZXMgbGlrZVxuICAgIC8vIC91c2VyLXByZWZlcmVuY2VzIHNpbmNlIGAtYCBjb3VudHMgYXMgYSB3b3JkIGJvdW5kYXJ5LlxuICAgIHJlZ2V4cFNvdXJjZSArPSBcIig/Oig/PVxcXFwvfCQpKVwiO1xuICB9IGVsc2UgO1xuICBsZXQgbWF0Y2hlciA9IG5ldyBSZWdFeHAocmVnZXhwU291cmNlLCBjYXNlU2Vuc2l0aXZlID8gdW5kZWZpbmVkIDogXCJpXCIpO1xuICByZXR1cm4gW21hdGNoZXIsIHBhcmFtTmFtZXNdO1xufVxuZnVuY3Rpb24gc2FmZWx5RGVjb2RlVVJJKHZhbHVlKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGRlY29kZVVSSSh2YWx1ZSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgd2FybmluZyhmYWxzZSwgXCJUaGUgVVJMIHBhdGggXFxcIlwiICsgdmFsdWUgKyBcIlxcXCIgY291bGQgbm90IGJlIGRlY29kZWQgYmVjYXVzZSBpdCBpcyBpcyBhIFwiICsgXCJtYWxmb3JtZWQgVVJMIHNlZ21lbnQuIFRoaXMgaXMgcHJvYmFibHkgZHVlIHRvIGEgYmFkIHBlcmNlbnQgXCIgKyAoXCJlbmNvZGluZyAoXCIgKyBlcnJvciArIFwiKS5cIikpO1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxufVxuZnVuY3Rpb24gc2FmZWx5RGVjb2RlVVJJQ29tcG9uZW50KHZhbHVlLCBwYXJhbU5hbWUpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KHZhbHVlKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICB3YXJuaW5nKGZhbHNlLCBcIlRoZSB2YWx1ZSBmb3IgdGhlIFVSTCBwYXJhbSBcXFwiXCIgKyBwYXJhbU5hbWUgKyBcIlxcXCIgd2lsbCBub3QgYmUgZGVjb2RlZCBiZWNhdXNlXCIgKyAoXCIgdGhlIHN0cmluZyBcXFwiXCIgKyB2YWx1ZSArIFwiXFxcIiBpcyBhIG1hbGZvcm1lZCBVUkwgc2VnbWVudC4gVGhpcyBpcyBwcm9iYWJseVwiKSArIChcIiBkdWUgdG8gYSBiYWQgcGVyY2VudCBlbmNvZGluZyAoXCIgKyBlcnJvciArIFwiKS5cIikpO1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxufVxuLyoqXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBzdHJpcEJhc2VuYW1lKHBhdGhuYW1lLCBiYXNlbmFtZSkge1xuICBpZiAoYmFzZW5hbWUgPT09IFwiL1wiKSByZXR1cm4gcGF0aG5hbWU7XG4gIGlmICghcGF0aG5hbWUudG9Mb3dlckNhc2UoKS5zdGFydHNXaXRoKGJhc2VuYW1lLnRvTG93ZXJDYXNlKCkpKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgLy8gV2Ugd2FudCB0byBsZWF2ZSB0cmFpbGluZyBzbGFzaCBiZWhhdmlvciBpbiB0aGUgdXNlcidzIGNvbnRyb2wsIHNvIGlmIHRoZXlcbiAgLy8gc3BlY2lmeSBhIGJhc2VuYW1lIHdpdGggYSB0cmFpbGluZyBzbGFzaCwgd2Ugc2hvdWxkIHN1cHBvcnQgaXRcbiAgbGV0IHN0YXJ0SW5kZXggPSBiYXNlbmFtZS5lbmRzV2l0aChcIi9cIikgPyBiYXNlbmFtZS5sZW5ndGggLSAxIDogYmFzZW5hbWUubGVuZ3RoO1xuICBsZXQgbmV4dENoYXIgPSBwYXRobmFtZS5jaGFyQXQoc3RhcnRJbmRleCk7XG4gIGlmIChuZXh0Q2hhciAmJiBuZXh0Q2hhciAhPT0gXCIvXCIpIHtcbiAgICAvLyBwYXRobmFtZSBkb2VzIG5vdCBzdGFydCB3aXRoIGJhc2VuYW1lL1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHJldHVybiBwYXRobmFtZS5zbGljZShzdGFydEluZGV4KSB8fCBcIi9cIjtcbn1cbi8qKlxuICogUmV0dXJucyBhIHJlc29sdmVkIHBhdGggb2JqZWN0IHJlbGF0aXZlIHRvIHRoZSBnaXZlbiBwYXRobmFtZS5cbiAqXG4gKiBAc2VlIGh0dHBzOi8vcmVhY3Ryb3V0ZXIuY29tL3V0aWxzL3Jlc29sdmUtcGF0aFxuICovXG5mdW5jdGlvbiByZXNvbHZlUGF0aCh0bywgZnJvbVBhdGhuYW1lKSB7XG4gIGlmIChmcm9tUGF0aG5hbWUgPT09IHZvaWQgMCkge1xuICAgIGZyb21QYXRobmFtZSA9IFwiL1wiO1xuICB9XG4gIGxldCB7XG4gICAgcGF0aG5hbWU6IHRvUGF0aG5hbWUsXG4gICAgc2VhcmNoID0gXCJcIixcbiAgICBoYXNoID0gXCJcIlxuICB9ID0gdHlwZW9mIHRvID09PSBcInN0cmluZ1wiID8gcGFyc2VQYXRoKHRvKSA6IHRvO1xuICBsZXQgcGF0aG5hbWUgPSB0b1BhdGhuYW1lID8gdG9QYXRobmFtZS5zdGFydHNXaXRoKFwiL1wiKSA/IHRvUGF0aG5hbWUgOiByZXNvbHZlUGF0aG5hbWUodG9QYXRobmFtZSwgZnJvbVBhdGhuYW1lKSA6IGZyb21QYXRobmFtZTtcbiAgcmV0dXJuIHtcbiAgICBwYXRobmFtZSxcbiAgICBzZWFyY2g6IG5vcm1hbGl6ZVNlYXJjaChzZWFyY2gpLFxuICAgIGhhc2g6IG5vcm1hbGl6ZUhhc2goaGFzaClcbiAgfTtcbn1cbmZ1bmN0aW9uIHJlc29sdmVQYXRobmFtZShyZWxhdGl2ZVBhdGgsIGZyb21QYXRobmFtZSkge1xuICBsZXQgc2VnbWVudHMgPSBmcm9tUGF0aG5hbWUucmVwbGFjZSgvXFwvKyQvLCBcIlwiKS5zcGxpdChcIi9cIik7XG4gIGxldCByZWxhdGl2ZVNlZ21lbnRzID0gcmVsYXRpdmVQYXRoLnNwbGl0KFwiL1wiKTtcbiAgcmVsYXRpdmVTZWdtZW50cy5mb3JFYWNoKHNlZ21lbnQgPT4ge1xuICAgIGlmIChzZWdtZW50ID09PSBcIi4uXCIpIHtcbiAgICAgIC8vIEtlZXAgdGhlIHJvb3QgXCJcIiBzZWdtZW50IHNvIHRoZSBwYXRobmFtZSBzdGFydHMgYXQgL1xuICAgICAgaWYgKHNlZ21lbnRzLmxlbmd0aCA+IDEpIHNlZ21lbnRzLnBvcCgpO1xuICAgIH0gZWxzZSBpZiAoc2VnbWVudCAhPT0gXCIuXCIpIHtcbiAgICAgIHNlZ21lbnRzLnB1c2goc2VnbWVudCk7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIHNlZ21lbnRzLmxlbmd0aCA+IDEgPyBzZWdtZW50cy5qb2luKFwiL1wiKSA6IFwiL1wiO1xufVxuZnVuY3Rpb24gZ2V0SW52YWxpZFBhdGhFcnJvcihjaGFyLCBmaWVsZCwgZGVzdCwgcGF0aCkge1xuICByZXR1cm4gXCJDYW5ub3QgaW5jbHVkZSBhICdcIiArIGNoYXIgKyBcIicgY2hhcmFjdGVyIGluIGEgbWFudWFsbHkgc3BlY2lmaWVkIFwiICsgKFwiYHRvLlwiICsgZmllbGQgKyBcImAgZmllbGQgW1wiICsgSlNPTi5zdHJpbmdpZnkocGF0aCkgKyBcIl0uICBQbGVhc2Ugc2VwYXJhdGUgaXQgb3V0IHRvIHRoZSBcIikgKyAoXCJgdG8uXCIgKyBkZXN0ICsgXCJgIGZpZWxkLiBBbHRlcm5hdGl2ZWx5IHlvdSBtYXkgcHJvdmlkZSB0aGUgZnVsbCBwYXRoIGFzIFwiKSArIFwiYSBzdHJpbmcgaW4gPExpbmsgdG89XFxcIi4uLlxcXCI+IGFuZCB0aGUgcm91dGVyIHdpbGwgcGFyc2UgaXQgZm9yIHlvdS5cIjtcbn1cbi8qKlxuICogQHByaXZhdGVcbiAqXG4gKiBXaGVuIHByb2Nlc3NpbmcgcmVsYXRpdmUgbmF2aWdhdGlvbiB3ZSB3YW50IHRvIGlnbm9yZSBhbmNlc3RvciByb3V0ZXMgdGhhdFxuICogZG8gbm90IGNvbnRyaWJ1dGUgdG8gdGhlIHBhdGgsIHN1Y2ggdGhhdCBpbmRleC9wYXRobGVzcyBsYXlvdXQgcm91dGVzIGRvbid0XG4gKiBpbnRlcmZlcmUuXG4gKlxuICogRm9yIGV4YW1wbGUsIHdoZW4gbW92aW5nIGEgcm91dGUgZWxlbWVudCBpbnRvIGFuIGluZGV4IHJvdXRlIGFuZC9vciBhXG4gKiBwYXRobGVzcyBsYXlvdXQgcm91dGUsIHJlbGF0aXZlIGxpbmsgYmVoYXZpb3IgY29udGFpbmVkIHdpdGhpbiBzaG91bGQgc3RheVxuICogdGhlIHNhbWUuICBCb3RoIG9mIHRoZSBmb2xsb3dpbmcgZXhhbXBsZXMgc2hvdWxkIGxpbmsgYmFjayB0byB0aGUgcm9vdDpcbiAqXG4gKiAgIDxSb3V0ZSBwYXRoPVwiL1wiPlxuICogICAgIDxSb3V0ZSBwYXRoPVwiYWNjb3VudHNcIiBlbGVtZW50PXs8TGluayB0bz1cIi4uXCJ9PlxuICogICA8L1JvdXRlPlxuICpcbiAqICAgPFJvdXRlIHBhdGg9XCIvXCI+XG4gKiAgICAgPFJvdXRlIHBhdGg9XCJhY2NvdW50c1wiPlxuICogICAgICAgPFJvdXRlIGVsZW1lbnQ9ezxBY2NvdW50c0xheW91dCAvPn0+ICAgICAgIC8vIDwtLSBEb2VzIG5vdCBjb250cmlidXRlXG4gKiAgICAgICAgIDxSb3V0ZSBpbmRleCBlbGVtZW50PXs8TGluayB0bz1cIi4uXCJ9IC8+ICAvLyA8LS0gRG9lcyBub3QgY29udHJpYnV0ZVxuICogICAgICAgPC9Sb3V0ZVxuICogICAgIDwvUm91dGU+XG4gKiAgIDwvUm91dGU+XG4gKi9cbmZ1bmN0aW9uIGdldFBhdGhDb250cmlidXRpbmdNYXRjaGVzKG1hdGNoZXMpIHtcbiAgcmV0dXJuIG1hdGNoZXMuZmlsdGVyKChtYXRjaCwgaW5kZXgpID0+IGluZGV4ID09PSAwIHx8IG1hdGNoLnJvdXRlLnBhdGggJiYgbWF0Y2gucm91dGUucGF0aC5sZW5ndGggPiAwKTtcbn1cbi8qKlxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gcmVzb2x2ZVRvKHRvQXJnLCByb3V0ZVBhdGhuYW1lcywgbG9jYXRpb25QYXRobmFtZSwgaXNQYXRoUmVsYXRpdmUpIHtcbiAgaWYgKGlzUGF0aFJlbGF0aXZlID09PSB2b2lkIDApIHtcbiAgICBpc1BhdGhSZWxhdGl2ZSA9IGZhbHNlO1xuICB9XG4gIGxldCB0bztcbiAgaWYgKHR5cGVvZiB0b0FyZyA9PT0gXCJzdHJpbmdcIikge1xuICAgIHRvID0gcGFyc2VQYXRoKHRvQXJnKTtcbiAgfSBlbHNlIHtcbiAgICB0byA9IF9leHRlbmRzKHt9LCB0b0FyZyk7XG4gICAgaW52YXJpYW50KCF0by5wYXRobmFtZSB8fCAhdG8ucGF0aG5hbWUuaW5jbHVkZXMoXCI/XCIpLCBnZXRJbnZhbGlkUGF0aEVycm9yKFwiP1wiLCBcInBhdGhuYW1lXCIsIFwic2VhcmNoXCIsIHRvKSk7XG4gICAgaW52YXJpYW50KCF0by5wYXRobmFtZSB8fCAhdG8ucGF0aG5hbWUuaW5jbHVkZXMoXCIjXCIpLCBnZXRJbnZhbGlkUGF0aEVycm9yKFwiI1wiLCBcInBhdGhuYW1lXCIsIFwiaGFzaFwiLCB0bykpO1xuICAgIGludmFyaWFudCghdG8uc2VhcmNoIHx8ICF0by5zZWFyY2guaW5jbHVkZXMoXCIjXCIpLCBnZXRJbnZhbGlkUGF0aEVycm9yKFwiI1wiLCBcInNlYXJjaFwiLCBcImhhc2hcIiwgdG8pKTtcbiAgfVxuICBsZXQgaXNFbXB0eVBhdGggPSB0b0FyZyA9PT0gXCJcIiB8fCB0by5wYXRobmFtZSA9PT0gXCJcIjtcbiAgbGV0IHRvUGF0aG5hbWUgPSBpc0VtcHR5UGF0aCA/IFwiL1wiIDogdG8ucGF0aG5hbWU7XG4gIGxldCBmcm9tO1xuICAvLyBSb3V0aW5nIGlzIHJlbGF0aXZlIHRvIHRoZSBjdXJyZW50IHBhdGhuYW1lIGlmIGV4cGxpY2l0bHkgcmVxdWVzdGVkLlxuICAvL1xuICAvLyBJZiBhIHBhdGhuYW1lIGlzIGV4cGxpY2l0bHkgcHJvdmlkZWQgaW4gYHRvYCwgaXQgc2hvdWxkIGJlIHJlbGF0aXZlIHRvIHRoZVxuICAvLyByb3V0ZSBjb250ZXh0LiBUaGlzIGlzIGV4cGxhaW5lZCBpbiBgTm90ZSBvbiBgPExpbmsgdG8+YCB2YWx1ZXNgIGluIG91clxuICAvLyBtaWdyYXRpb24gZ3VpZGUgZnJvbSB2NSBhcyBhIG1lYW5zIG9mIGRpc2FtYmlndWF0aW9uIGJldHdlZW4gYHRvYCB2YWx1ZXNcbiAgLy8gdGhhdCBiZWdpbiB3aXRoIGAvYCBhbmQgdGhvc2UgdGhhdCBkbyBub3QuIEhvd2V2ZXIsIHRoaXMgaXMgcHJvYmxlbWF0aWMgZm9yXG4gIC8vIGB0b2AgdmFsdWVzIHRoYXQgZG8gbm90IHByb3ZpZGUgYSBwYXRobmFtZS4gYHRvYCBjYW4gc2ltcGx5IGJlIGEgc2VhcmNoIG9yXG4gIC8vIGhhc2ggc3RyaW5nLCBpbiB3aGljaCBjYXNlIHdlIHNob3VsZCBhc3N1bWUgdGhhdCB0aGUgbmF2aWdhdGlvbiBpcyByZWxhdGl2ZVxuICAvLyB0byB0aGUgY3VycmVudCBsb2NhdGlvbidzIHBhdGhuYW1lIGFuZCAqbm90KiB0aGUgcm91dGUgcGF0aG5hbWUuXG4gIGlmIChpc1BhdGhSZWxhdGl2ZSB8fCB0b1BhdGhuYW1lID09IG51bGwpIHtcbiAgICBmcm9tID0gbG9jYXRpb25QYXRobmFtZTtcbiAgfSBlbHNlIHtcbiAgICBsZXQgcm91dGVQYXRobmFtZUluZGV4ID0gcm91dGVQYXRobmFtZXMubGVuZ3RoIC0gMTtcbiAgICBpZiAodG9QYXRobmFtZS5zdGFydHNXaXRoKFwiLi5cIikpIHtcbiAgICAgIGxldCB0b1NlZ21lbnRzID0gdG9QYXRobmFtZS5zcGxpdChcIi9cIik7XG4gICAgICAvLyBFYWNoIGxlYWRpbmcgLi4gc2VnbWVudCBtZWFucyBcImdvIHVwIG9uZSByb3V0ZVwiIGluc3RlYWQgb2YgXCJnbyB1cCBvbmVcbiAgICAgIC8vIFVSTCBzZWdtZW50XCIuICBUaGlzIGlzIGEga2V5IGRpZmZlcmVuY2UgZnJvbSBob3cgPGEgaHJlZj4gd29ya3MgYW5kIGFcbiAgICAgIC8vIG1ham9yIHJlYXNvbiB3ZSBjYWxsIHRoaXMgYSBcInRvXCIgdmFsdWUgaW5zdGVhZCBvZiBhIFwiaHJlZlwiLlxuICAgICAgd2hpbGUgKHRvU2VnbWVudHNbMF0gPT09IFwiLi5cIikge1xuICAgICAgICB0b1NlZ21lbnRzLnNoaWZ0KCk7XG4gICAgICAgIHJvdXRlUGF0aG5hbWVJbmRleCAtPSAxO1xuICAgICAgfVxuICAgICAgdG8ucGF0aG5hbWUgPSB0b1NlZ21lbnRzLmpvaW4oXCIvXCIpO1xuICAgIH1cbiAgICAvLyBJZiB0aGVyZSBhcmUgbW9yZSBcIi4uXCIgc2VnbWVudHMgdGhhbiBwYXJlbnQgcm91dGVzLCByZXNvbHZlIHJlbGF0aXZlIHRvXG4gICAgLy8gdGhlIHJvb3QgLyBVUkwuXG4gICAgZnJvbSA9IHJvdXRlUGF0aG5hbWVJbmRleCA+PSAwID8gcm91dGVQYXRobmFtZXNbcm91dGVQYXRobmFtZUluZGV4XSA6IFwiL1wiO1xuICB9XG4gIGxldCBwYXRoID0gcmVzb2x2ZVBhdGgodG8sIGZyb20pO1xuICAvLyBFbnN1cmUgdGhlIHBhdGhuYW1lIGhhcyBhIHRyYWlsaW5nIHNsYXNoIGlmIHRoZSBvcmlnaW5hbCBcInRvXCIgaGFkIG9uZVxuICBsZXQgaGFzRXhwbGljaXRUcmFpbGluZ1NsYXNoID0gdG9QYXRobmFtZSAmJiB0b1BhdGhuYW1lICE9PSBcIi9cIiAmJiB0b1BhdGhuYW1lLmVuZHNXaXRoKFwiL1wiKTtcbiAgLy8gT3IgaWYgdGhpcyB3YXMgYSBsaW5rIHRvIHRoZSBjdXJyZW50IHBhdGggd2hpY2ggaGFzIGEgdHJhaWxpbmcgc2xhc2hcbiAgbGV0IGhhc0N1cnJlbnRUcmFpbGluZ1NsYXNoID0gKGlzRW1wdHlQYXRoIHx8IHRvUGF0aG5hbWUgPT09IFwiLlwiKSAmJiBsb2NhdGlvblBhdGhuYW1lLmVuZHNXaXRoKFwiL1wiKTtcbiAgaWYgKCFwYXRoLnBhdGhuYW1lLmVuZHNXaXRoKFwiL1wiKSAmJiAoaGFzRXhwbGljaXRUcmFpbGluZ1NsYXNoIHx8IGhhc0N1cnJlbnRUcmFpbGluZ1NsYXNoKSkge1xuICAgIHBhdGgucGF0aG5hbWUgKz0gXCIvXCI7XG4gIH1cbiAgcmV0dXJuIHBhdGg7XG59XG4vKipcbiAqIEBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIGdldFRvUGF0aG5hbWUodG8pIHtcbiAgLy8gRW1wdHkgc3RyaW5ncyBzaG91bGQgYmUgdHJlYXRlZCB0aGUgc2FtZSBhcyAvIHBhdGhzXG4gIHJldHVybiB0byA9PT0gXCJcIiB8fCB0by5wYXRobmFtZSA9PT0gXCJcIiA/IFwiL1wiIDogdHlwZW9mIHRvID09PSBcInN0cmluZ1wiID8gcGFyc2VQYXRoKHRvKS5wYXRobmFtZSA6IHRvLnBhdGhuYW1lO1xufVxuLyoqXG4gKiBAcHJpdmF0ZVxuICovXG5jb25zdCBqb2luUGF0aHMgPSBwYXRocyA9PiBwYXRocy5qb2luKFwiL1wiKS5yZXBsYWNlKC9cXC9cXC8rL2csIFwiL1wiKTtcbi8qKlxuICogQHByaXZhdGVcbiAqL1xuY29uc3Qgbm9ybWFsaXplUGF0aG5hbWUgPSBwYXRobmFtZSA9PiBwYXRobmFtZS5yZXBsYWNlKC9cXC8rJC8sIFwiXCIpLnJlcGxhY2UoL15cXC8qLywgXCIvXCIpO1xuLyoqXG4gKiBAcHJpdmF0ZVxuICovXG5jb25zdCBub3JtYWxpemVTZWFyY2ggPSBzZWFyY2ggPT4gIXNlYXJjaCB8fCBzZWFyY2ggPT09IFwiP1wiID8gXCJcIiA6IHNlYXJjaC5zdGFydHNXaXRoKFwiP1wiKSA/IHNlYXJjaCA6IFwiP1wiICsgc2VhcmNoO1xuLyoqXG4gKiBAcHJpdmF0ZVxuICovXG5jb25zdCBub3JtYWxpemVIYXNoID0gaGFzaCA9PiAhaGFzaCB8fCBoYXNoID09PSBcIiNcIiA/IFwiXCIgOiBoYXNoLnN0YXJ0c1dpdGgoXCIjXCIpID8gaGFzaCA6IFwiI1wiICsgaGFzaDtcbi8qKlxuICogVGhpcyBpcyBhIHNob3J0Y3V0IGZvciBjcmVhdGluZyBgYXBwbGljYXRpb24vanNvbmAgcmVzcG9uc2VzLiBDb252ZXJ0cyBgZGF0YWBcbiAqIHRvIEpTT04gYW5kIHNldHMgdGhlIGBDb250ZW50LVR5cGVgIGhlYWRlci5cbiAqL1xuY29uc3QganNvbiA9IGZ1bmN0aW9uIGpzb24oZGF0YSwgaW5pdCkge1xuICBpZiAoaW5pdCA9PT0gdm9pZCAwKSB7XG4gICAgaW5pdCA9IHt9O1xuICB9XG4gIGxldCByZXNwb25zZUluaXQgPSB0eXBlb2YgaW5pdCA9PT0gXCJudW1iZXJcIiA/IHtcbiAgICBzdGF0dXM6IGluaXRcbiAgfSA6IGluaXQ7XG4gIGxldCBoZWFkZXJzID0gbmV3IEhlYWRlcnMocmVzcG9uc2VJbml0LmhlYWRlcnMpO1xuICBpZiAoIWhlYWRlcnMuaGFzKFwiQ29udGVudC1UeXBlXCIpKSB7XG4gICAgaGVhZGVycy5zZXQoXCJDb250ZW50LVR5cGVcIiwgXCJhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PXV0Zi04XCIpO1xuICB9XG4gIHJldHVybiBuZXcgUmVzcG9uc2UoSlNPTi5zdHJpbmdpZnkoZGF0YSksIF9leHRlbmRzKHt9LCByZXNwb25zZUluaXQsIHtcbiAgICBoZWFkZXJzXG4gIH0pKTtcbn07XG5jbGFzcyBBYm9ydGVkRGVmZXJyZWRFcnJvciBleHRlbmRzIEVycm9yIHt9XG5jbGFzcyBEZWZlcnJlZERhdGEge1xuICBjb25zdHJ1Y3RvcihkYXRhLCByZXNwb25zZUluaXQpIHtcbiAgICB0aGlzLnBlbmRpbmdLZXlzU2V0ID0gbmV3IFNldCgpO1xuICAgIHRoaXMuc3Vic2NyaWJlcnMgPSBuZXcgU2V0KCk7XG4gICAgdGhpcy5kZWZlcnJlZEtleXMgPSBbXTtcbiAgICBpbnZhcmlhbnQoZGF0YSAmJiB0eXBlb2YgZGF0YSA9PT0gXCJvYmplY3RcIiAmJiAhQXJyYXkuaXNBcnJheShkYXRhKSwgXCJkZWZlcigpIG9ubHkgYWNjZXB0cyBwbGFpbiBvYmplY3RzXCIpO1xuICAgIC8vIFNldCB1cCBhbiBBYm9ydENvbnRyb2xsZXIgKyBQcm9taXNlIHdlIGNhbiByYWNlIGFnYWluc3QgdG8gZXhpdCBlYXJseVxuICAgIC8vIGNhbmNlbGxhdGlvblxuICAgIGxldCByZWplY3Q7XG4gICAgdGhpcy5hYm9ydFByb21pc2UgPSBuZXcgUHJvbWlzZSgoXywgcikgPT4gcmVqZWN0ID0gcik7XG4gICAgdGhpcy5jb250cm9sbGVyID0gbmV3IEFib3J0Q29udHJvbGxlcigpO1xuICAgIGxldCBvbkFib3J0ID0gKCkgPT4gcmVqZWN0KG5ldyBBYm9ydGVkRGVmZXJyZWRFcnJvcihcIkRlZmVycmVkIGRhdGEgYWJvcnRlZFwiKSk7XG4gICAgdGhpcy51bmxpc3RlbkFib3J0U2lnbmFsID0gKCkgPT4gdGhpcy5jb250cm9sbGVyLnNpZ25hbC5yZW1vdmVFdmVudExpc3RlbmVyKFwiYWJvcnRcIiwgb25BYm9ydCk7XG4gICAgdGhpcy5jb250cm9sbGVyLnNpZ25hbC5hZGRFdmVudExpc3RlbmVyKFwiYWJvcnRcIiwgb25BYm9ydCk7XG4gICAgdGhpcy5kYXRhID0gT2JqZWN0LmVudHJpZXMoZGF0YSkucmVkdWNlKChhY2MsIF9yZWYpID0+IHtcbiAgICAgIGxldCBba2V5LCB2YWx1ZV0gPSBfcmVmO1xuICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oYWNjLCB7XG4gICAgICAgIFtrZXldOiB0aGlzLnRyYWNrUHJvbWlzZShrZXksIHZhbHVlKVxuICAgICAgfSk7XG4gICAgfSwge30pO1xuICAgIGlmICh0aGlzLmRvbmUpIHtcbiAgICAgIC8vIEFsbCBpbmNvbWluZyB2YWx1ZXMgd2VyZSByZXNvbHZlZFxuICAgICAgdGhpcy51bmxpc3RlbkFib3J0U2lnbmFsKCk7XG4gICAgfVxuICAgIHRoaXMuaW5pdCA9IHJlc3BvbnNlSW5pdDtcbiAgfVxuICB0cmFja1Byb21pc2Uoa2V5LCB2YWx1ZSkge1xuICAgIGlmICghKHZhbHVlIGluc3RhbmNlb2YgUHJvbWlzZSkpIHtcbiAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG4gICAgdGhpcy5kZWZlcnJlZEtleXMucHVzaChrZXkpO1xuICAgIHRoaXMucGVuZGluZ0tleXNTZXQuYWRkKGtleSk7XG4gICAgLy8gV2Ugc3RvcmUgYSBsaXR0bGUgd3JhcHBlciBwcm9taXNlIHRoYXQgd2lsbCBiZSBleHRlbmRlZCB3aXRoXG4gICAgLy8gX2RhdGEvX2Vycm9yIHByb3BzIHVwb24gcmVzb2x2ZS9yZWplY3RcbiAgICBsZXQgcHJvbWlzZSA9IFByb21pc2UucmFjZShbdmFsdWUsIHRoaXMuYWJvcnRQcm9taXNlXSkudGhlbihkYXRhID0+IHRoaXMub25TZXR0bGUocHJvbWlzZSwga2V5LCB1bmRlZmluZWQsIGRhdGEpLCBlcnJvciA9PiB0aGlzLm9uU2V0dGxlKHByb21pc2UsIGtleSwgZXJyb3IpKTtcbiAgICAvLyBSZWdpc3RlciByZWplY3Rpb24gbGlzdGVuZXJzIHRvIGF2b2lkIHVuY2F1Z2h0IHByb21pc2UgcmVqZWN0aW9ucyBvblxuICAgIC8vIGVycm9ycyBvciBhYm9ydGVkIGRlZmVycmVkIHZhbHVlc1xuICAgIHByb21pc2UuY2F0Y2goKCkgPT4ge30pO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShwcm9taXNlLCBcIl90cmFja2VkXCIsIHtcbiAgICAgIGdldDogKCkgPT4gdHJ1ZVxuICAgIH0pO1xuICAgIHJldHVybiBwcm9taXNlO1xuICB9XG4gIG9uU2V0dGxlKHByb21pc2UsIGtleSwgZXJyb3IsIGRhdGEpIHtcbiAgICBpZiAodGhpcy5jb250cm9sbGVyLnNpZ25hbC5hYm9ydGVkICYmIGVycm9yIGluc3RhbmNlb2YgQWJvcnRlZERlZmVycmVkRXJyb3IpIHtcbiAgICAgIHRoaXMudW5saXN0ZW5BYm9ydFNpZ25hbCgpO1xuICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHByb21pc2UsIFwiX2Vycm9yXCIsIHtcbiAgICAgICAgZ2V0OiAoKSA9PiBlcnJvclxuICAgICAgfSk7XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpO1xuICAgIH1cbiAgICB0aGlzLnBlbmRpbmdLZXlzU2V0LmRlbGV0ZShrZXkpO1xuICAgIGlmICh0aGlzLmRvbmUpIHtcbiAgICAgIC8vIE5vdGhpbmcgbGVmdCB0byBhYm9ydCFcbiAgICAgIHRoaXMudW5saXN0ZW5BYm9ydFNpZ25hbCgpO1xuICAgIH1cbiAgICAvLyBJZiB0aGUgcHJvbWlzZSB3YXMgcmVzb2x2ZWQvcmVqZWN0ZWQgd2l0aCB1bmRlZmluZWQsIHdlJ2xsIHRocm93IGFuIGVycm9yIGFzIHlvdVxuICAgIC8vIHNob3VsZCBhbHdheXMgcmVzb2x2ZSB3aXRoIGEgdmFsdWUgb3IgbnVsbFxuICAgIGlmIChlcnJvciA9PT0gdW5kZWZpbmVkICYmIGRhdGEgPT09IHVuZGVmaW5lZCkge1xuICAgICAgbGV0IHVuZGVmaW5lZEVycm9yID0gbmV3IEVycm9yKFwiRGVmZXJyZWQgZGF0YSBmb3Iga2V5IFxcXCJcIiArIGtleSArIFwiXFxcIiByZXNvbHZlZC9yZWplY3RlZCB3aXRoIGB1bmRlZmluZWRgLCBcIiArIFwieW91IG11c3QgcmVzb2x2ZS9yZWplY3Qgd2l0aCBhIHZhbHVlIG9yIGBudWxsYC5cIik7XG4gICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkocHJvbWlzZSwgXCJfZXJyb3JcIiwge1xuICAgICAgICBnZXQ6ICgpID0+IHVuZGVmaW5lZEVycm9yXG4gICAgICB9KTtcbiAgICAgIHRoaXMuZW1pdChmYWxzZSwga2V5KTtcbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdCh1bmRlZmluZWRFcnJvcik7XG4gICAgfVxuICAgIGlmIChkYXRhID09PSB1bmRlZmluZWQpIHtcbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShwcm9taXNlLCBcIl9lcnJvclwiLCB7XG4gICAgICAgIGdldDogKCkgPT4gZXJyb3JcbiAgICAgIH0pO1xuICAgICAgdGhpcy5lbWl0KGZhbHNlLCBrZXkpO1xuICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHByb21pc2UsIFwiX2RhdGFcIiwge1xuICAgICAgZ2V0OiAoKSA9PiBkYXRhXG4gICAgfSk7XG4gICAgdGhpcy5lbWl0KGZhbHNlLCBrZXkpO1xuICAgIHJldHVybiBkYXRhO1xuICB9XG4gIGVtaXQoYWJvcnRlZCwgc2V0dGxlZEtleSkge1xuICAgIHRoaXMuc3Vic2NyaWJlcnMuZm9yRWFjaChzdWJzY3JpYmVyID0+IHN1YnNjcmliZXIoYWJvcnRlZCwgc2V0dGxlZEtleSkpO1xuICB9XG4gIHN1YnNjcmliZShmbikge1xuICAgIHRoaXMuc3Vic2NyaWJlcnMuYWRkKGZuKTtcbiAgICByZXR1cm4gKCkgPT4gdGhpcy5zdWJzY3JpYmVycy5kZWxldGUoZm4pO1xuICB9XG4gIGNhbmNlbCgpIHtcbiAgICB0aGlzLmNvbnRyb2xsZXIuYWJvcnQoKTtcbiAgICB0aGlzLnBlbmRpbmdLZXlzU2V0LmZvckVhY2goKHYsIGspID0+IHRoaXMucGVuZGluZ0tleXNTZXQuZGVsZXRlKGspKTtcbiAgICB0aGlzLmVtaXQodHJ1ZSk7XG4gIH1cbiAgYXN5bmMgcmVzb2x2ZURhdGEoc2lnbmFsKSB7XG4gICAgbGV0IGFib3J0ZWQgPSBmYWxzZTtcbiAgICBpZiAoIXRoaXMuZG9uZSkge1xuICAgICAgbGV0IG9uQWJvcnQgPSAoKSA9PiB0aGlzLmNhbmNlbCgpO1xuICAgICAgc2lnbmFsLmFkZEV2ZW50TGlzdGVuZXIoXCJhYm9ydFwiLCBvbkFib3J0KTtcbiAgICAgIGFib3J0ZWQgPSBhd2FpdCBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgICAgdGhpcy5zdWJzY3JpYmUoYWJvcnRlZCA9PiB7XG4gICAgICAgICAgc2lnbmFsLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJhYm9ydFwiLCBvbkFib3J0KTtcbiAgICAgICAgICBpZiAoYWJvcnRlZCB8fCB0aGlzLmRvbmUpIHtcbiAgICAgICAgICAgIHJlc29sdmUoYWJvcnRlZCk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gYWJvcnRlZDtcbiAgfVxuICBnZXQgZG9uZSgpIHtcbiAgICByZXR1cm4gdGhpcy5wZW5kaW5nS2V5c1NldC5zaXplID09PSAwO1xuICB9XG4gIGdldCB1bndyYXBwZWREYXRhKCkge1xuICAgIGludmFyaWFudCh0aGlzLmRhdGEgIT09IG51bGwgJiYgdGhpcy5kb25lLCBcIkNhbiBvbmx5IHVud3JhcCBkYXRhIG9uIGluaXRpYWxpemVkIGFuZCBzZXR0bGVkIGRlZmVycmVkc1wiKTtcbiAgICByZXR1cm4gT2JqZWN0LmVudHJpZXModGhpcy5kYXRhKS5yZWR1Y2UoKGFjYywgX3JlZjIpID0+IHtcbiAgICAgIGxldCBba2V5LCB2YWx1ZV0gPSBfcmVmMjtcbiAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKGFjYywge1xuICAgICAgICBba2V5XTogdW53cmFwVHJhY2tlZFByb21pc2UodmFsdWUpXG4gICAgICB9KTtcbiAgICB9LCB7fSk7XG4gIH1cbiAgZ2V0IHBlbmRpbmdLZXlzKCkge1xuICAgIHJldHVybiBBcnJheS5mcm9tKHRoaXMucGVuZGluZ0tleXNTZXQpO1xuICB9XG59XG5mdW5jdGlvbiBpc1RyYWNrZWRQcm9taXNlKHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFByb21pc2UgJiYgdmFsdWUuX3RyYWNrZWQgPT09IHRydWU7XG59XG5mdW5jdGlvbiB1bndyYXBUcmFja2VkUHJvbWlzZSh2YWx1ZSkge1xuICBpZiAoIWlzVHJhY2tlZFByb21pc2UodmFsdWUpKSB7XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9XG4gIGlmICh2YWx1ZS5fZXJyb3IpIHtcbiAgICB0aHJvdyB2YWx1ZS5fZXJyb3I7XG4gIH1cbiAgcmV0dXJuIHZhbHVlLl9kYXRhO1xufVxuY29uc3QgZGVmZXIgPSBmdW5jdGlvbiBkZWZlcihkYXRhLCBpbml0KSB7XG4gIGlmIChpbml0ID09PSB2b2lkIDApIHtcbiAgICBpbml0ID0ge307XG4gIH1cbiAgbGV0IHJlc3BvbnNlSW5pdCA9IHR5cGVvZiBpbml0ID09PSBcIm51bWJlclwiID8ge1xuICAgIHN0YXR1czogaW5pdFxuICB9IDogaW5pdDtcbiAgcmV0dXJuIG5ldyBEZWZlcnJlZERhdGEoZGF0YSwgcmVzcG9uc2VJbml0KTtcbn07XG4vKipcbiAqIEEgcmVkaXJlY3QgcmVzcG9uc2UuIFNldHMgdGhlIHN0YXR1cyBjb2RlIGFuZCB0aGUgYExvY2F0aW9uYCBoZWFkZXIuXG4gKiBEZWZhdWx0cyB0byBcIjMwMiBGb3VuZFwiLlxuICovXG5jb25zdCByZWRpcmVjdCA9IGZ1bmN0aW9uIHJlZGlyZWN0KHVybCwgaW5pdCkge1xuICBpZiAoaW5pdCA9PT0gdm9pZCAwKSB7XG4gICAgaW5pdCA9IDMwMjtcbiAgfVxuICBsZXQgcmVzcG9uc2VJbml0ID0gaW5pdDtcbiAgaWYgKHR5cGVvZiByZXNwb25zZUluaXQgPT09IFwibnVtYmVyXCIpIHtcbiAgICByZXNwb25zZUluaXQgPSB7XG4gICAgICBzdGF0dXM6IHJlc3BvbnNlSW5pdFxuICAgIH07XG4gIH0gZWxzZSBpZiAodHlwZW9mIHJlc3BvbnNlSW5pdC5zdGF0dXMgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICByZXNwb25zZUluaXQuc3RhdHVzID0gMzAyO1xuICB9XG4gIGxldCBoZWFkZXJzID0gbmV3IEhlYWRlcnMocmVzcG9uc2VJbml0LmhlYWRlcnMpO1xuICBoZWFkZXJzLnNldChcIkxvY2F0aW9uXCIsIHVybCk7XG4gIHJldHVybiBuZXcgUmVzcG9uc2UobnVsbCwgX2V4dGVuZHMoe30sIHJlc3BvbnNlSW5pdCwge1xuICAgIGhlYWRlcnNcbiAgfSkpO1xufTtcbi8qKlxuICogQSByZWRpcmVjdCByZXNwb25zZSB0aGF0IHdpbGwgZm9yY2UgYSBkb2N1bWVudCByZWxvYWQgdG8gdGhlIG5ldyBsb2NhdGlvbi5cbiAqIFNldHMgdGhlIHN0YXR1cyBjb2RlIGFuZCB0aGUgYExvY2F0aW9uYCBoZWFkZXIuXG4gKiBEZWZhdWx0cyB0byBcIjMwMiBGb3VuZFwiLlxuICovXG5jb25zdCByZWRpcmVjdERvY3VtZW50ID0gKHVybCwgaW5pdCkgPT4ge1xuICBsZXQgcmVzcG9uc2UgPSByZWRpcmVjdCh1cmwsIGluaXQpO1xuICByZXNwb25zZS5oZWFkZXJzLnNldChcIlgtUmVtaXgtUmVsb2FkLURvY3VtZW50XCIsIFwidHJ1ZVwiKTtcbiAgcmV0dXJuIHJlc3BvbnNlO1xufTtcbi8qKlxuICogQHByaXZhdGVcbiAqIFV0aWxpdHkgY2xhc3Mgd2UgdXNlIHRvIGhvbGQgYXV0by11bndyYXBwZWQgNHh4LzV4eCBSZXNwb25zZSBib2RpZXNcbiAqL1xuY2xhc3MgRXJyb3JSZXNwb25zZUltcGwge1xuICBjb25zdHJ1Y3RvcihzdGF0dXMsIHN0YXR1c1RleHQsIGRhdGEsIGludGVybmFsKSB7XG4gICAgaWYgKGludGVybmFsID09PSB2b2lkIDApIHtcbiAgICAgIGludGVybmFsID0gZmFsc2U7XG4gICAgfVxuICAgIHRoaXMuc3RhdHVzID0gc3RhdHVzO1xuICAgIHRoaXMuc3RhdHVzVGV4dCA9IHN0YXR1c1RleHQgfHwgXCJcIjtcbiAgICB0aGlzLmludGVybmFsID0gaW50ZXJuYWw7XG4gICAgaWYgKGRhdGEgaW5zdGFuY2VvZiBFcnJvcikge1xuICAgICAgdGhpcy5kYXRhID0gZGF0YS50b1N0cmluZygpO1xuICAgICAgdGhpcy5lcnJvciA9IGRhdGE7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZGF0YSA9IGRhdGE7XG4gICAgfVxuICB9XG59XG4vKipcbiAqIENoZWNrIGlmIHRoZSBnaXZlbiBlcnJvciBpcyBhbiBFcnJvclJlc3BvbnNlIGdlbmVyYXRlZCBmcm9tIGEgNHh4LzV4eFxuICogUmVzcG9uc2UgdGhyb3duIGZyb20gYW4gYWN0aW9uL2xvYWRlclxuICovXG5mdW5jdGlvbiBpc1JvdXRlRXJyb3JSZXNwb25zZShlcnJvcikge1xuICByZXR1cm4gZXJyb3IgIT0gbnVsbCAmJiB0eXBlb2YgZXJyb3Iuc3RhdHVzID09PSBcIm51bWJlclwiICYmIHR5cGVvZiBlcnJvci5zdGF0dXNUZXh0ID09PSBcInN0cmluZ1wiICYmIHR5cGVvZiBlcnJvci5pbnRlcm5hbCA9PT0gXCJib29sZWFuXCIgJiYgXCJkYXRhXCIgaW4gZXJyb3I7XG59XG5jb25zdCB2YWxpZE11dGF0aW9uTWV0aG9kc0FyciA9IFtcInBvc3RcIiwgXCJwdXRcIiwgXCJwYXRjaFwiLCBcImRlbGV0ZVwiXTtcbmNvbnN0IHZhbGlkTXV0YXRpb25NZXRob2RzID0gbmV3IFNldCh2YWxpZE11dGF0aW9uTWV0aG9kc0Fycik7XG5jb25zdCB2YWxpZFJlcXVlc3RNZXRob2RzQXJyID0gW1wiZ2V0XCIsIC4uLnZhbGlkTXV0YXRpb25NZXRob2RzQXJyXTtcbmNvbnN0IHZhbGlkUmVxdWVzdE1ldGhvZHMgPSBuZXcgU2V0KHZhbGlkUmVxdWVzdE1ldGhvZHNBcnIpO1xuY29uc3QgcmVkaXJlY3RTdGF0dXNDb2RlcyA9IG5ldyBTZXQoWzMwMSwgMzAyLCAzMDMsIDMwNywgMzA4XSk7XG5jb25zdCByZWRpcmVjdFByZXNlcnZlTWV0aG9kU3RhdHVzQ29kZXMgPSBuZXcgU2V0KFszMDcsIDMwOF0pO1xuY29uc3QgSURMRV9OQVZJR0FUSU9OID0ge1xuICBzdGF0ZTogXCJpZGxlXCIsXG4gIGxvY2F0aW9uOiB1bmRlZmluZWQsXG4gIGZvcm1NZXRob2Q6IHVuZGVmaW5lZCxcbiAgZm9ybUFjdGlvbjogdW5kZWZpbmVkLFxuICBmb3JtRW5jVHlwZTogdW5kZWZpbmVkLFxuICBmb3JtRGF0YTogdW5kZWZpbmVkLFxuICBqc29uOiB1bmRlZmluZWQsXG4gIHRleHQ6IHVuZGVmaW5lZFxufTtcbmNvbnN0IElETEVfRkVUQ0hFUiA9IHtcbiAgc3RhdGU6IFwiaWRsZVwiLFxuICBkYXRhOiB1bmRlZmluZWQsXG4gIGZvcm1NZXRob2Q6IHVuZGVmaW5lZCxcbiAgZm9ybUFjdGlvbjogdW5kZWZpbmVkLFxuICBmb3JtRW5jVHlwZTogdW5kZWZpbmVkLFxuICBmb3JtRGF0YTogdW5kZWZpbmVkLFxuICBqc29uOiB1bmRlZmluZWQsXG4gIHRleHQ6IHVuZGVmaW5lZFxufTtcbmNvbnN0IElETEVfQkxPQ0tFUiA9IHtcbiAgc3RhdGU6IFwidW5ibG9ja2VkXCIsXG4gIHByb2NlZWQ6IHVuZGVmaW5lZCxcbiAgcmVzZXQ6IHVuZGVmaW5lZCxcbiAgbG9jYXRpb246IHVuZGVmaW5lZFxufTtcbmNvbnN0IEFCU09MVVRFX1VSTF9SRUdFWCA9IC9eKD86W2Etel1bYS16MC05Ky4tXSo6fFxcL1xcLykvaTtcbmNvbnN0IGRlZmF1bHRNYXBSb3V0ZVByb3BlcnRpZXMgPSByb3V0ZSA9PiAoe1xuICBoYXNFcnJvckJvdW5kYXJ5OiBCb29sZWFuKHJvdXRlLmhhc0Vycm9yQm91bmRhcnkpXG59KTtcbi8vI2VuZHJlZ2lvblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vI3JlZ2lvbiBjcmVhdGVSb3V0ZXJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vKipcbiAqIENyZWF0ZSBhIHJvdXRlciBhbmQgbGlzdGVuIHRvIGhpc3RvcnkgUE9QIG5hdmlnYXRpb25zXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZVJvdXRlcihpbml0KSB7XG4gIGNvbnN0IHJvdXRlcldpbmRvdyA9IGluaXQud2luZG93ID8gaW5pdC53aW5kb3cgOiB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93IDogdW5kZWZpbmVkO1xuICBjb25zdCBpc0Jyb3dzZXIgPSB0eXBlb2Ygcm91dGVyV2luZG93ICE9PSBcInVuZGVmaW5lZFwiICYmIHR5cGVvZiByb3V0ZXJXaW5kb3cuZG9jdW1lbnQgIT09IFwidW5kZWZpbmVkXCIgJiYgdHlwZW9mIHJvdXRlcldpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50ICE9PSBcInVuZGVmaW5lZFwiO1xuICBjb25zdCBpc1NlcnZlciA9ICFpc0Jyb3dzZXI7XG4gIGludmFyaWFudChpbml0LnJvdXRlcy5sZW5ndGggPiAwLCBcIllvdSBtdXN0IHByb3ZpZGUgYSBub24tZW1wdHkgcm91dGVzIGFycmF5IHRvIGNyZWF0ZVJvdXRlclwiKTtcbiAgbGV0IG1hcFJvdXRlUHJvcGVydGllcztcbiAgaWYgKGluaXQubWFwUm91dGVQcm9wZXJ0aWVzKSB7XG4gICAgbWFwUm91dGVQcm9wZXJ0aWVzID0gaW5pdC5tYXBSb3V0ZVByb3BlcnRpZXM7XG4gIH0gZWxzZSBpZiAoaW5pdC5kZXRlY3RFcnJvckJvdW5kYXJ5KSB7XG4gICAgLy8gSWYgdGhleSBhcmUgc3RpbGwgdXNpbmcgdGhlIGRlcHJlY2F0ZWQgdmVyc2lvbiwgd3JhcCBpdCB3aXRoIHRoZSBuZXcgQVBJXG4gICAgbGV0IGRldGVjdEVycm9yQm91bmRhcnkgPSBpbml0LmRldGVjdEVycm9yQm91bmRhcnk7XG4gICAgbWFwUm91dGVQcm9wZXJ0aWVzID0gcm91dGUgPT4gKHtcbiAgICAgIGhhc0Vycm9yQm91bmRhcnk6IGRldGVjdEVycm9yQm91bmRhcnkocm91dGUpXG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgbWFwUm91dGVQcm9wZXJ0aWVzID0gZGVmYXVsdE1hcFJvdXRlUHJvcGVydGllcztcbiAgfVxuICAvLyBSb3V0ZXMga2V5ZWQgYnkgSURcbiAgbGV0IG1hbmlmZXN0ID0ge307XG4gIC8vIFJvdXRlcyBpbiB0cmVlIGZvcm1hdCBmb3IgbWF0Y2hpbmdcbiAgbGV0IGRhdGFSb3V0ZXMgPSBjb252ZXJ0Um91dGVzVG9EYXRhUm91dGVzKGluaXQucm91dGVzLCBtYXBSb3V0ZVByb3BlcnRpZXMsIHVuZGVmaW5lZCwgbWFuaWZlc3QpO1xuICBsZXQgaW5GbGlnaHREYXRhUm91dGVzO1xuICBsZXQgYmFzZW5hbWUgPSBpbml0LmJhc2VuYW1lIHx8IFwiL1wiO1xuICAvLyBDb25maWcgZHJpdmVuIGJlaGF2aW9yIGZsYWdzXG4gIGxldCBmdXR1cmUgPSBfZXh0ZW5kcyh7XG4gICAgdjdfbm9ybWFsaXplRm9ybU1ldGhvZDogZmFsc2UsXG4gICAgdjdfcHJlcGVuZEJhc2VuYW1lOiBmYWxzZVxuICB9LCBpbml0LmZ1dHVyZSk7XG4gIC8vIENsZWFudXAgZnVuY3Rpb24gZm9yIGhpc3RvcnlcbiAgbGV0IHVubGlzdGVuSGlzdG9yeSA9IG51bGw7XG4gIC8vIEV4dGVybmFsbHktcHJvdmlkZWQgZnVuY3Rpb25zIHRvIGNhbGwgb24gYWxsIHN0YXRlIGNoYW5nZXNcbiAgbGV0IHN1YnNjcmliZXJzID0gbmV3IFNldCgpO1xuICAvLyBFeHRlcm5hbGx5LXByb3ZpZGVkIG9iamVjdCB0byBob2xkIHNjcm9sbCByZXN0b3JhdGlvbiBsb2NhdGlvbnMgZHVyaW5nIHJvdXRpbmdcbiAgbGV0IHNhdmVkU2Nyb2xsUG9zaXRpb25zID0gbnVsbDtcbiAgLy8gRXh0ZXJuYWxseS1wcm92aWRlZCBmdW5jdGlvbiB0byBnZXQgc2Nyb2xsIHJlc3RvcmF0aW9uIGtleXNcbiAgbGV0IGdldFNjcm9sbFJlc3RvcmF0aW9uS2V5ID0gbnVsbDtcbiAgLy8gRXh0ZXJuYWxseS1wcm92aWRlZCBmdW5jdGlvbiB0byBnZXQgY3VycmVudCBzY3JvbGwgcG9zaXRpb25cbiAgbGV0IGdldFNjcm9sbFBvc2l0aW9uID0gbnVsbDtcbiAgLy8gT25lLXRpbWUgZmxhZyB0byBjb250cm9sIHRoZSBpbml0aWFsIGh5ZHJhdGlvbiBzY3JvbGwgcmVzdG9yYXRpb24uICBCZWNhdXNlXG4gIC8vIHdlIGRvbid0IGdldCB0aGUgc2F2ZWQgcG9zaXRpb25zIGZyb20gPFNjcm9sbFJlc3RvcmF0aW9uIC8+IHVudGlsIF9hZnRlcl9cbiAgLy8gdGhlIGluaXRpYWwgcmVuZGVyLCB3ZSBuZWVkIHRvIG1hbnVhbGx5IHRyaWdnZXIgYSBzZXBhcmF0ZSB1cGRhdGVTdGF0ZSB0b1xuICAvLyBzZW5kIGFsb25nIHRoZSByZXN0b3JlU2Nyb2xsUG9zaXRpb25cbiAgLy8gU2V0IHRvIHRydWUgaWYgd2UgaGF2ZSBgaHlkcmF0aW9uRGF0YWAgc2luY2Ugd2UgYXNzdW1lIHdlIHdlcmUgU1NSJ2QgYW5kIHRoYXRcbiAgLy8gU1NSIGRpZCB0aGUgaW5pdGlhbCBzY3JvbGwgcmVzdG9yYXRpb24uXG4gIGxldCBpbml0aWFsU2Nyb2xsUmVzdG9yZWQgPSBpbml0Lmh5ZHJhdGlvbkRhdGEgIT0gbnVsbDtcbiAgbGV0IGluaXRpYWxNYXRjaGVzID0gbWF0Y2hSb3V0ZXMoZGF0YVJvdXRlcywgaW5pdC5oaXN0b3J5LmxvY2F0aW9uLCBiYXNlbmFtZSk7XG4gIGxldCBpbml0aWFsRXJyb3JzID0gbnVsbDtcbiAgaWYgKGluaXRpYWxNYXRjaGVzID09IG51bGwpIHtcbiAgICAvLyBJZiB3ZSBkbyBub3QgbWF0Y2ggYSB1c2VyLXByb3ZpZGVkLXJvdXRlLCBmYWxsIGJhY2sgdG8gdGhlIHJvb3RcbiAgICAvLyB0byBhbGxvdyB0aGUgZXJyb3IgYm91bmRhcnkgdG8gdGFrZSBvdmVyXG4gICAgbGV0IGVycm9yID0gZ2V0SW50ZXJuYWxSb3V0ZXJFcnJvcig0MDQsIHtcbiAgICAgIHBhdGhuYW1lOiBpbml0Lmhpc3RvcnkubG9jYXRpb24ucGF0aG5hbWVcbiAgICB9KTtcbiAgICBsZXQge1xuICAgICAgbWF0Y2hlcyxcbiAgICAgIHJvdXRlXG4gICAgfSA9IGdldFNob3J0Q2lyY3VpdE1hdGNoZXMoZGF0YVJvdXRlcyk7XG4gICAgaW5pdGlhbE1hdGNoZXMgPSBtYXRjaGVzO1xuICAgIGluaXRpYWxFcnJvcnMgPSB7XG4gICAgICBbcm91dGUuaWRdOiBlcnJvclxuICAgIH07XG4gIH1cbiAgbGV0IGluaXRpYWxpemVkID1cbiAgLy8gQWxsIGluaXRpYWxNYXRjaGVzIG5lZWQgdG8gYmUgbG9hZGVkIGJlZm9yZSB3ZSdyZSByZWFkeS4gIElmIHdlIGhhdmUgbGF6eVxuICAvLyBmdW5jdGlvbnMgYXJvdW5kIHN0aWxsIHRoZW4gd2UnbGwgbmVlZCB0byBydW4gdGhlbSBpbiBpbml0aWFsaXplKClcbiAgIWluaXRpYWxNYXRjaGVzLnNvbWUobSA9PiBtLnJvdXRlLmxhenkpICYmIChcbiAgLy8gQW5kIHdlIGhhdmUgdG8gZWl0aGVyIGhhdmUgbm8gbG9hZGVycyBvciBoYXZlIGJlZW4gcHJvdmlkZWQgaHlkcmF0aW9uRGF0YVxuICAhaW5pdGlhbE1hdGNoZXMuc29tZShtID0+IG0ucm91dGUubG9hZGVyKSB8fCBpbml0Lmh5ZHJhdGlvbkRhdGEgIT0gbnVsbCk7XG4gIGxldCByb3V0ZXI7XG4gIGxldCBzdGF0ZSA9IHtcbiAgICBoaXN0b3J5QWN0aW9uOiBpbml0Lmhpc3RvcnkuYWN0aW9uLFxuICAgIGxvY2F0aW9uOiBpbml0Lmhpc3RvcnkubG9jYXRpb24sXG4gICAgbWF0Y2hlczogaW5pdGlhbE1hdGNoZXMsXG4gICAgaW5pdGlhbGl6ZWQsXG4gICAgbmF2aWdhdGlvbjogSURMRV9OQVZJR0FUSU9OLFxuICAgIC8vIERvbid0IHJlc3RvcmUgb24gaW5pdGlhbCB1cGRhdGVTdGF0ZSgpIGlmIHdlIHdlcmUgU1NSJ2RcbiAgICByZXN0b3JlU2Nyb2xsUG9zaXRpb246IGluaXQuaHlkcmF0aW9uRGF0YSAhPSBudWxsID8gZmFsc2UgOiBudWxsLFxuICAgIHByZXZlbnRTY3JvbGxSZXNldDogZmFsc2UsXG4gICAgcmV2YWxpZGF0aW9uOiBcImlkbGVcIixcbiAgICBsb2FkZXJEYXRhOiBpbml0Lmh5ZHJhdGlvbkRhdGEgJiYgaW5pdC5oeWRyYXRpb25EYXRhLmxvYWRlckRhdGEgfHwge30sXG4gICAgYWN0aW9uRGF0YTogaW5pdC5oeWRyYXRpb25EYXRhICYmIGluaXQuaHlkcmF0aW9uRGF0YS5hY3Rpb25EYXRhIHx8IG51bGwsXG4gICAgZXJyb3JzOiBpbml0Lmh5ZHJhdGlvbkRhdGEgJiYgaW5pdC5oeWRyYXRpb25EYXRhLmVycm9ycyB8fCBpbml0aWFsRXJyb3JzLFxuICAgIGZldGNoZXJzOiBuZXcgTWFwKCksXG4gICAgYmxvY2tlcnM6IG5ldyBNYXAoKVxuICB9O1xuICAvLyAtLSBTdGF0ZWZ1bCBpbnRlcm5hbCB2YXJpYWJsZXMgdG8gbWFuYWdlIG5hdmlnYXRpb25zIC0tXG4gIC8vIEN1cnJlbnQgbmF2aWdhdGlvbiBpbiBwcm9ncmVzcyAodG8gYmUgY29tbWl0dGVkIGluIGNvbXBsZXRlTmF2aWdhdGlvbilcbiAgbGV0IHBlbmRpbmdBY3Rpb24gPSBBY3Rpb24uUG9wO1xuICAvLyBTaG91bGQgdGhlIGN1cnJlbnQgbmF2aWdhdGlvbiBwcmV2ZW50IHRoZSBzY3JvbGwgcmVzZXQgaWYgc2Nyb2xsIGNhbm5vdFxuICAvLyBiZSByZXN0b3JlZD9cbiAgbGV0IHBlbmRpbmdQcmV2ZW50U2Nyb2xsUmVzZXQgPSBmYWxzZTtcbiAgLy8gQWJvcnRDb250cm9sbGVyIGZvciB0aGUgYWN0aXZlIG5hdmlnYXRpb25cbiAgbGV0IHBlbmRpbmdOYXZpZ2F0aW9uQ29udHJvbGxlcjtcbiAgLy8gV2UgdXNlIHRoaXMgdG8gYXZvaWQgdG91Y2hpbmcgaGlzdG9yeSBpbiBjb21wbGV0ZU5hdmlnYXRpb24gaWYgYVxuICAvLyByZXZhbGlkYXRpb24gaXMgZW50aXJlbHkgdW5pbnRlcnJ1cHRlZFxuICBsZXQgaXNVbmludGVycnVwdGVkUmV2YWxpZGF0aW9uID0gZmFsc2U7XG4gIC8vIFVzZSB0aGlzIGludGVybmFsIGZsYWcgdG8gZm9yY2UgcmV2YWxpZGF0aW9uIG9mIGFsbCBsb2FkZXJzOlxuICAvLyAgLSBzdWJtaXNzaW9ucyAoY29tcGxldGVkIG9yIGludGVycnVwdGVkKVxuICAvLyAgLSB1c2VSZXZhbGlkYXRvcigpXG4gIC8vICAtIFgtUmVtaXgtUmV2YWxpZGF0ZSAoZnJvbSByZWRpcmVjdClcbiAgbGV0IGlzUmV2YWxpZGF0aW9uUmVxdWlyZWQgPSBmYWxzZTtcbiAgLy8gVXNlIHRoaXMgaW50ZXJuYWwgYXJyYXkgdG8gY2FwdHVyZSByb3V0ZXMgdGhhdCByZXF1aXJlIHJldmFsaWRhdGlvbiBkdWVcbiAgLy8gdG8gYSBjYW5jZWxsZWQgZGVmZXJyZWQgb24gYWN0aW9uIHN1Ym1pc3Npb25cbiAgbGV0IGNhbmNlbGxlZERlZmVycmVkUm91dGVzID0gW107XG4gIC8vIFVzZSB0aGlzIGludGVybmFsIGFycmF5IHRvIGNhcHR1cmUgZmV0Y2hlciBsb2FkcyB0aGF0IHdlcmUgY2FuY2VsbGVkIGJ5IGFuXG4gIC8vIGFjdGlvbiBuYXZpZ2F0aW9uIGFuZCByZXF1aXJlIHJldmFsaWRhdGlvblxuICBsZXQgY2FuY2VsbGVkRmV0Y2hlckxvYWRzID0gW107XG4gIC8vIEFib3J0Q29udHJvbGxlcnMgZm9yIGFueSBpbi1mbGlnaHQgZmV0Y2hlcnNcbiAgbGV0IGZldGNoQ29udHJvbGxlcnMgPSBuZXcgTWFwKCk7XG4gIC8vIFRyYWNrIGxvYWRzIGJhc2VkIG9uIHRoZSBvcmRlciBpbiB3aGljaCB0aGV5IHN0YXJ0ZWRcbiAgbGV0IGluY3JlbWVudGluZ0xvYWRJZCA9IDA7XG4gIC8vIFRyYWNrIHRoZSBvdXRzdGFuZGluZyBwZW5kaW5nIG5hdmlnYXRpb24gZGF0YSBsb2FkIHRvIGJlIGNvbXBhcmVkIGFnYWluc3RcbiAgLy8gdGhlIGdsb2JhbGx5IGluY3JlbWVudGluZyBsb2FkIHdoZW4gYSBmZXRjaGVyIGxvYWQgbGFuZHMgYWZ0ZXIgYSBjb21wbGV0ZWRcbiAgLy8gbmF2aWdhdGlvblxuICBsZXQgcGVuZGluZ05hdmlnYXRpb25Mb2FkSWQgPSAtMTtcbiAgLy8gRmV0Y2hlcnMgdGhhdCB0cmlnZ2VyZWQgZGF0YSByZWxvYWRzIGFzIGEgcmVzdWx0IG9mIHRoZWlyIGFjdGlvbnNcbiAgbGV0IGZldGNoUmVsb2FkSWRzID0gbmV3IE1hcCgpO1xuICAvLyBGZXRjaGVycyB0aGF0IHRyaWdnZXJlZCByZWRpcmVjdCBuYXZpZ2F0aW9uc1xuICBsZXQgZmV0Y2hSZWRpcmVjdElkcyA9IG5ldyBTZXQoKTtcbiAgLy8gTW9zdCByZWNlbnQgaHJlZi9tYXRjaCBmb3IgZmV0Y2hlci5sb2FkIGNhbGxzIGZvciBmZXRjaGVyc1xuICBsZXQgZmV0Y2hMb2FkTWF0Y2hlcyA9IG5ldyBNYXAoKTtcbiAgLy8gU3RvcmUgRGVmZXJyZWREYXRhIGluc3RhbmNlcyBmb3IgYWN0aXZlIHJvdXRlIG1hdGNoZXMuICBXaGVuIGFcbiAgLy8gcm91dGUgbG9hZGVyIHJldHVybnMgZGVmZXIoKSB3ZSBzdGljayBvbmUgaW4gaGVyZS4gIFRoZW4sIHdoZW4gYSBuZXN0ZWRcbiAgLy8gcHJvbWlzZSByZXNvbHZlcyB3ZSB1cGRhdGUgbG9hZGVyRGF0YS4gIElmIGEgbmV3IG5hdmlnYXRpb24gc3RhcnRzIHdlXG4gIC8vIGNhbmNlbCBhY3RpdmUgZGVmZXJyZWRzIGZvciBlbGltaW5hdGVkIHJvdXRlcy5cbiAgbGV0IGFjdGl2ZURlZmVycmVkcyA9IG5ldyBNYXAoKTtcbiAgLy8gU3RvcmUgYmxvY2tlciBmdW5jdGlvbnMgaW4gYSBzZXBhcmF0ZSBNYXAgb3V0c2lkZSBvZiByb3V0ZXIgc3RhdGUgc2luY2VcbiAgLy8gd2UgZG9uJ3QgbmVlZCB0byB1cGRhdGUgVUkgc3RhdGUgaWYgdGhleSBjaGFuZ2VcbiAgbGV0IGJsb2NrZXJGdW5jdGlvbnMgPSBuZXcgTWFwKCk7XG4gIC8vIEZsYWcgdG8gaWdub3JlIHRoZSBuZXh0IGhpc3RvcnkgdXBkYXRlLCBzbyB3ZSBjYW4gcmV2ZXJ0IHRoZSBVUkwgY2hhbmdlIG9uXG4gIC8vIGEgUE9QIG5hdmlnYXRpb24gdGhhdCB3YXMgYmxvY2tlZCBieSB0aGUgdXNlciB3aXRob3V0IHRvdWNoaW5nIHJvdXRlciBzdGF0ZVxuICBsZXQgaWdub3JlTmV4dEhpc3RvcnlVcGRhdGUgPSBmYWxzZTtcbiAgLy8gSW5pdGlhbGl6ZSB0aGUgcm91dGVyLCBhbGwgc2lkZSBlZmZlY3RzIHNob3VsZCBiZSBraWNrZWQgb2ZmIGZyb20gaGVyZS5cbiAgLy8gSW1wbGVtZW50ZWQgYXMgYSBGbHVlbnQgQVBJIGZvciBlYXNlIG9mOlxuICAvLyAgIGxldCByb3V0ZXIgPSBjcmVhdGVSb3V0ZXIoaW5pdCkuaW5pdGlhbGl6ZSgpO1xuICBmdW5jdGlvbiBpbml0aWFsaXplKCkge1xuICAgIC8vIElmIGhpc3RvcnkgaW5mb3JtcyB1cyBvZiBhIFBPUCBuYXZpZ2F0aW9uLCBzdGFydCB0aGUgbmF2aWdhdGlvbiBidXQgZG8gbm90IHVwZGF0ZVxuICAgIC8vIHN0YXRlLiAgV2UnbGwgdXBkYXRlIG91ciBvd24gc3RhdGUgb25jZSB0aGUgbmF2aWdhdGlvbiBjb21wbGV0ZXNcbiAgICB1bmxpc3Rlbkhpc3RvcnkgPSBpbml0Lmhpc3RvcnkubGlzdGVuKF9yZWYgPT4ge1xuICAgICAgbGV0IHtcbiAgICAgICAgYWN0aW9uOiBoaXN0b3J5QWN0aW9uLFxuICAgICAgICBsb2NhdGlvbixcbiAgICAgICAgZGVsdGFcbiAgICAgIH0gPSBfcmVmO1xuICAgICAgLy8gSWdub3JlIHRoaXMgZXZlbnQgaWYgaXQgd2FzIGp1c3QgdXMgcmVzZXR0aW5nIHRoZSBVUkwgZnJvbSBhXG4gICAgICAvLyBibG9ja2VkIFBPUCBuYXZpZ2F0aW9uXG4gICAgICBpZiAoaWdub3JlTmV4dEhpc3RvcnlVcGRhdGUpIHtcbiAgICAgICAgaWdub3JlTmV4dEhpc3RvcnlVcGRhdGUgPSBmYWxzZTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgd2FybmluZyhibG9ja2VyRnVuY3Rpb25zLnNpemUgPT09IDAgfHwgZGVsdGEgIT0gbnVsbCwgXCJZb3UgYXJlIHRyeWluZyB0byB1c2UgYSBibG9ja2VyIG9uIGEgUE9QIG5hdmlnYXRpb24gdG8gYSBsb2NhdGlvbiBcIiArIFwidGhhdCB3YXMgbm90IGNyZWF0ZWQgYnkgQHJlbWl4LXJ1bi9yb3V0ZXIuIFRoaXMgd2lsbCBmYWlsIHNpbGVudGx5IGluIFwiICsgXCJwcm9kdWN0aW9uLiBUaGlzIGNhbiBoYXBwZW4gaWYgeW91IGFyZSBuYXZpZ2F0aW5nIG91dHNpZGUgdGhlIHJvdXRlciBcIiArIFwidmlhIGB3aW5kb3cuaGlzdG9yeS5wdXNoU3RhdGVgL2B3aW5kb3cubG9jYXRpb24uaGFzaGAgaW5zdGVhZCBvZiB1c2luZyBcIiArIFwicm91dGVyIG5hdmlnYXRpb24gQVBJcy4gIFRoaXMgY2FuIGFsc28gaGFwcGVuIGlmIHlvdSBhcmUgdXNpbmcgXCIgKyBcImNyZWF0ZUhhc2hSb3V0ZXIgYW5kIHRoZSB1c2VyIG1hbnVhbGx5IGNoYW5nZXMgdGhlIFVSTC5cIik7XG4gICAgICBsZXQgYmxvY2tlcktleSA9IHNob3VsZEJsb2NrTmF2aWdhdGlvbih7XG4gICAgICAgIGN1cnJlbnRMb2NhdGlvbjogc3RhdGUubG9jYXRpb24sXG4gICAgICAgIG5leHRMb2NhdGlvbjogbG9jYXRpb24sXG4gICAgICAgIGhpc3RvcnlBY3Rpb25cbiAgICAgIH0pO1xuICAgICAgaWYgKGJsb2NrZXJLZXkgJiYgZGVsdGEgIT0gbnVsbCkge1xuICAgICAgICAvLyBSZXN0b3JlIHRoZSBVUkwgdG8gbWF0Y2ggdGhlIGN1cnJlbnQgVUksIGJ1dCBkb24ndCB1cGRhdGUgcm91dGVyIHN0YXRlXG4gICAgICAgIGlnbm9yZU5leHRIaXN0b3J5VXBkYXRlID0gdHJ1ZTtcbiAgICAgICAgaW5pdC5oaXN0b3J5LmdvKGRlbHRhICogLTEpO1xuICAgICAgICAvLyBQdXQgdGhlIGJsb2NrZXIgaW50byBhIGJsb2NrZWQgc3RhdGVcbiAgICAgICAgdXBkYXRlQmxvY2tlcihibG9ja2VyS2V5LCB7XG4gICAgICAgICAgc3RhdGU6IFwiYmxvY2tlZFwiLFxuICAgICAgICAgIGxvY2F0aW9uLFxuICAgICAgICAgIHByb2NlZWQoKSB7XG4gICAgICAgICAgICB1cGRhdGVCbG9ja2VyKGJsb2NrZXJLZXksIHtcbiAgICAgICAgICAgICAgc3RhdGU6IFwicHJvY2VlZGluZ1wiLFxuICAgICAgICAgICAgICBwcm9jZWVkOiB1bmRlZmluZWQsXG4gICAgICAgICAgICAgIHJlc2V0OiB1bmRlZmluZWQsXG4gICAgICAgICAgICAgIGxvY2F0aW9uXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIC8vIFJlLWRvIHRoZSBzYW1lIFBPUCBuYXZpZ2F0aW9uIHdlIGp1c3QgYmxvY2tlZFxuICAgICAgICAgICAgaW5pdC5oaXN0b3J5LmdvKGRlbHRhKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIHJlc2V0KCkge1xuICAgICAgICAgICAgbGV0IGJsb2NrZXJzID0gbmV3IE1hcChzdGF0ZS5ibG9ja2Vycyk7XG4gICAgICAgICAgICBibG9ja2Vycy5zZXQoYmxvY2tlcktleSwgSURMRV9CTE9DS0VSKTtcbiAgICAgICAgICAgIHVwZGF0ZVN0YXRlKHtcbiAgICAgICAgICAgICAgYmxvY2tlcnNcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBzdGFydE5hdmlnYXRpb24oaGlzdG9yeUFjdGlvbiwgbG9jYXRpb24pO1xuICAgIH0pO1xuICAgIC8vIEtpY2sgb2ZmIGluaXRpYWwgZGF0YSBsb2FkIGlmIG5lZWRlZC4gIFVzZSBQb3AgdG8gYXZvaWQgbW9kaWZ5aW5nIGhpc3RvcnlcbiAgICAvLyBOb3RlIHdlIGRvbid0IGRvIGFueSBoYW5kbGluZyBvZiBsYXp5IGhlcmUuICBGb3IgU1BBJ3MgaXQnbGwgZ2V0IGhhbmRsZWRcbiAgICAvLyBpbiB0aGUgbm9ybWFsIG5hdmlnYXRpb24gZmxvdy4gIEZvciBTU1IgaXQncyBleHBlY3RlZCB0aGF0IGxhenkgbW9kdWxlcyBhcmVcbiAgICAvLyByZXNvbHZlZCBwcmlvciB0byByb3V0ZXIgY3JlYXRpb24gc2luY2Ugd2UgY2FuJ3QgZ28gaW50byBhIGZhbGxiYWNrRWxlbWVudFxuICAgIC8vIFVJIGZvciBTU1InZCBhcHBzXG4gICAgaWYgKCFzdGF0ZS5pbml0aWFsaXplZCkge1xuICAgICAgc3RhcnROYXZpZ2F0aW9uKEFjdGlvbi5Qb3AsIHN0YXRlLmxvY2F0aW9uKTtcbiAgICB9XG4gICAgcmV0dXJuIHJvdXRlcjtcbiAgfVxuICAvLyBDbGVhbiB1cCBhIHJvdXRlciBhbmQgaXQncyBzaWRlIGVmZmVjdHNcbiAgZnVuY3Rpb24gZGlzcG9zZSgpIHtcbiAgICBpZiAodW5saXN0ZW5IaXN0b3J5KSB7XG4gICAgICB1bmxpc3Rlbkhpc3RvcnkoKTtcbiAgICB9XG4gICAgc3Vic2NyaWJlcnMuY2xlYXIoKTtcbiAgICBwZW5kaW5nTmF2aWdhdGlvbkNvbnRyb2xsZXIgJiYgcGVuZGluZ05hdmlnYXRpb25Db250cm9sbGVyLmFib3J0KCk7XG4gICAgc3RhdGUuZmV0Y2hlcnMuZm9yRWFjaCgoXywga2V5KSA9PiBkZWxldGVGZXRjaGVyKGtleSkpO1xuICAgIHN0YXRlLmJsb2NrZXJzLmZvckVhY2goKF8sIGtleSkgPT4gZGVsZXRlQmxvY2tlcihrZXkpKTtcbiAgfVxuICAvLyBTdWJzY3JpYmUgdG8gc3RhdGUgdXBkYXRlcyBmb3IgdGhlIHJvdXRlclxuICBmdW5jdGlvbiBzdWJzY3JpYmUoZm4pIHtcbiAgICBzdWJzY3JpYmVycy5hZGQoZm4pO1xuICAgIHJldHVybiAoKSA9PiBzdWJzY3JpYmVycy5kZWxldGUoZm4pO1xuICB9XG4gIC8vIFVwZGF0ZSBvdXIgc3RhdGUgYW5kIG5vdGlmeSB0aGUgY2FsbGluZyBjb250ZXh0IG9mIHRoZSBjaGFuZ2VcbiAgZnVuY3Rpb24gdXBkYXRlU3RhdGUobmV3U3RhdGUpIHtcbiAgICBzdGF0ZSA9IF9leHRlbmRzKHt9LCBzdGF0ZSwgbmV3U3RhdGUpO1xuICAgIHN1YnNjcmliZXJzLmZvckVhY2goc3Vic2NyaWJlciA9PiBzdWJzY3JpYmVyKHN0YXRlKSk7XG4gIH1cbiAgLy8gQ29tcGxldGUgYSBuYXZpZ2F0aW9uIHJldHVybmluZyB0aGUgc3RhdGUubmF2aWdhdGlvbiBiYWNrIHRvIHRoZSBJRExFX05BVklHQVRJT05cbiAgLy8gYW5kIHNldHRpbmcgc3RhdGUuW2hpc3RvcnlBY3Rpb24vbG9jYXRpb24vbWF0Y2hlc10gdG8gdGhlIG5ldyByb3V0ZS5cbiAgLy8gLSBMb2NhdGlvbiBpcyBhIHJlcXVpcmVkIHBhcmFtXG4gIC8vIC0gTmF2aWdhdGlvbiB3aWxsIGFsd2F5cyBiZSBzZXQgdG8gSURMRV9OQVZJR0FUSU9OXG4gIC8vIC0gQ2FuIHBhc3MgYW55IG90aGVyIHN0YXRlIGluIG5ld1N0YXRlXG4gIGZ1bmN0aW9uIGNvbXBsZXRlTmF2aWdhdGlvbihsb2NhdGlvbiwgbmV3U3RhdGUpIHtcbiAgICB2YXIgX2xvY2F0aW9uJHN0YXRlLCBfbG9jYXRpb24kc3RhdGUyO1xuICAgIC8vIERlZHVjZSBpZiB3ZSdyZSBpbiBhIGxvYWRpbmcvYWN0aW9uUmVsb2FkIHN0YXRlOlxuICAgIC8vIC0gV2UgaGF2ZSBjb21taXR0ZWQgYWN0aW9uRGF0YSBpbiB0aGUgc3RvcmVcbiAgICAvLyAtIFRoZSBjdXJyZW50IG5hdmlnYXRpb24gd2FzIGEgbXV0YXRpb24gc3VibWlzc2lvblxuICAgIC8vIC0gV2UncmUgcGFzdCB0aGUgc3VibWl0dGluZyBzdGF0ZSBhbmQgaW50byB0aGUgbG9hZGluZyBzdGF0ZVxuICAgIC8vIC0gVGhlIGxvY2F0aW9uIGJlaW5nIGxvYWRlZCBpcyBub3QgdGhlIHJlc3VsdCBvZiBhIHJlZGlyZWN0XG4gICAgbGV0IGlzQWN0aW9uUmVsb2FkID0gc3RhdGUuYWN0aW9uRGF0YSAhPSBudWxsICYmIHN0YXRlLm5hdmlnYXRpb24uZm9ybU1ldGhvZCAhPSBudWxsICYmIGlzTXV0YXRpb25NZXRob2Qoc3RhdGUubmF2aWdhdGlvbi5mb3JtTWV0aG9kKSAmJiBzdGF0ZS5uYXZpZ2F0aW9uLnN0YXRlID09PSBcImxvYWRpbmdcIiAmJiAoKF9sb2NhdGlvbiRzdGF0ZSA9IGxvY2F0aW9uLnN0YXRlKSA9PSBudWxsID8gdm9pZCAwIDogX2xvY2F0aW9uJHN0YXRlLl9pc1JlZGlyZWN0KSAhPT0gdHJ1ZTtcbiAgICBsZXQgYWN0aW9uRGF0YTtcbiAgICBpZiAobmV3U3RhdGUuYWN0aW9uRGF0YSkge1xuICAgICAgaWYgKE9iamVjdC5rZXlzKG5ld1N0YXRlLmFjdGlvbkRhdGEpLmxlbmd0aCA+IDApIHtcbiAgICAgICAgYWN0aW9uRGF0YSA9IG5ld1N0YXRlLmFjdGlvbkRhdGE7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBFbXB0eSBhY3Rpb25EYXRhIC0+IGNsZWFyIHByaW9yIGFjdGlvbkRhdGEgZHVlIHRvIGFuIGFjdGlvbiBlcnJvclxuICAgICAgICBhY3Rpb25EYXRhID0gbnVsbDtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGlzQWN0aW9uUmVsb2FkKSB7XG4gICAgICAvLyBLZWVwIHRoZSBjdXJyZW50IGRhdGEgaWYgd2UncmUgd3JhcHBpbmcgdXAgdGhlIGFjdGlvbiByZWxvYWRcbiAgICAgIGFjdGlvbkRhdGEgPSBzdGF0ZS5hY3Rpb25EYXRhO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBDbGVhciBhY3Rpb25EYXRhIG9uIGFueSBvdGhlciBjb21wbGV0ZWQgbmF2aWdhdGlvbnNcbiAgICAgIGFjdGlvbkRhdGEgPSBudWxsO1xuICAgIH1cbiAgICAvLyBBbHdheXMgcHJlc2VydmUgYW55IGV4aXN0aW5nIGxvYWRlckRhdGEgZnJvbSByZS11c2VkIHJvdXRlc1xuICAgIGxldCBsb2FkZXJEYXRhID0gbmV3U3RhdGUubG9hZGVyRGF0YSA/IG1lcmdlTG9hZGVyRGF0YShzdGF0ZS5sb2FkZXJEYXRhLCBuZXdTdGF0ZS5sb2FkZXJEYXRhLCBuZXdTdGF0ZS5tYXRjaGVzIHx8IFtdLCBuZXdTdGF0ZS5lcnJvcnMpIDogc3RhdGUubG9hZGVyRGF0YTtcbiAgICAvLyBPbiBhIHN1Y2Nlc3NmdWwgbmF2aWdhdGlvbiB3ZSBjYW4gYXNzdW1lIHdlIGdvdCB0aHJvdWdoIGFsbCBibG9ja2Vyc1xuICAgIC8vIHNvIHdlIGNhbiBzdGFydCBmcmVzaFxuICAgIGxldCBibG9ja2VycyA9IHN0YXRlLmJsb2NrZXJzO1xuICAgIGlmIChibG9ja2Vycy5zaXplID4gMCkge1xuICAgICAgYmxvY2tlcnMgPSBuZXcgTWFwKGJsb2NrZXJzKTtcbiAgICAgIGJsb2NrZXJzLmZvckVhY2goKF8sIGspID0+IGJsb2NrZXJzLnNldChrLCBJRExFX0JMT0NLRVIpKTtcbiAgICB9XG4gICAgLy8gQWx3YXlzIHJlc3BlY3QgdGhlIHVzZXIgZmxhZy4gIE90aGVyd2lzZSBkb24ndCByZXNldCBvbiBtdXRhdGlvblxuICAgIC8vIHN1Ym1pc3Npb24gbmF2aWdhdGlvbnMgdW5sZXNzIHRoZXkgcmVkaXJlY3RcbiAgICBsZXQgcHJldmVudFNjcm9sbFJlc2V0ID0gcGVuZGluZ1ByZXZlbnRTY3JvbGxSZXNldCA9PT0gdHJ1ZSB8fCBzdGF0ZS5uYXZpZ2F0aW9uLmZvcm1NZXRob2QgIT0gbnVsbCAmJiBpc011dGF0aW9uTWV0aG9kKHN0YXRlLm5hdmlnYXRpb24uZm9ybU1ldGhvZCkgJiYgKChfbG9jYXRpb24kc3RhdGUyID0gbG9jYXRpb24uc3RhdGUpID09IG51bGwgPyB2b2lkIDAgOiBfbG9jYXRpb24kc3RhdGUyLl9pc1JlZGlyZWN0KSAhPT0gdHJ1ZTtcbiAgICBpZiAoaW5GbGlnaHREYXRhUm91dGVzKSB7XG4gICAgICBkYXRhUm91dGVzID0gaW5GbGlnaHREYXRhUm91dGVzO1xuICAgICAgaW5GbGlnaHREYXRhUm91dGVzID0gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBpZiAoaXNVbmludGVycnVwdGVkUmV2YWxpZGF0aW9uKSA7ZWxzZSBpZiAocGVuZGluZ0FjdGlvbiA9PT0gQWN0aW9uLlBvcCkgO2Vsc2UgaWYgKHBlbmRpbmdBY3Rpb24gPT09IEFjdGlvbi5QdXNoKSB7XG4gICAgICBpbml0Lmhpc3RvcnkucHVzaChsb2NhdGlvbiwgbG9jYXRpb24uc3RhdGUpO1xuICAgIH0gZWxzZSBpZiAocGVuZGluZ0FjdGlvbiA9PT0gQWN0aW9uLlJlcGxhY2UpIHtcbiAgICAgIGluaXQuaGlzdG9yeS5yZXBsYWNlKGxvY2F0aW9uLCBsb2NhdGlvbi5zdGF0ZSk7XG4gICAgfVxuICAgIHVwZGF0ZVN0YXRlKF9leHRlbmRzKHt9LCBuZXdTdGF0ZSwge1xuICAgICAgYWN0aW9uRGF0YSxcbiAgICAgIGxvYWRlckRhdGEsXG4gICAgICBoaXN0b3J5QWN0aW9uOiBwZW5kaW5nQWN0aW9uLFxuICAgICAgbG9jYXRpb24sXG4gICAgICBpbml0aWFsaXplZDogdHJ1ZSxcbiAgICAgIG5hdmlnYXRpb246IElETEVfTkFWSUdBVElPTixcbiAgICAgIHJldmFsaWRhdGlvbjogXCJpZGxlXCIsXG4gICAgICByZXN0b3JlU2Nyb2xsUG9zaXRpb246IGdldFNhdmVkU2Nyb2xsUG9zaXRpb24obG9jYXRpb24sIG5ld1N0YXRlLm1hdGNoZXMgfHwgc3RhdGUubWF0Y2hlcyksXG4gICAgICBwcmV2ZW50U2Nyb2xsUmVzZXQsXG4gICAgICBibG9ja2Vyc1xuICAgIH0pKTtcbiAgICAvLyBSZXNldCBzdGF0ZWZ1bCBuYXZpZ2F0aW9uIHZhcnNcbiAgICBwZW5kaW5nQWN0aW9uID0gQWN0aW9uLlBvcDtcbiAgICBwZW5kaW5nUHJldmVudFNjcm9sbFJlc2V0ID0gZmFsc2U7XG4gICAgaXNVbmludGVycnVwdGVkUmV2YWxpZGF0aW9uID0gZmFsc2U7XG4gICAgaXNSZXZhbGlkYXRpb25SZXF1aXJlZCA9IGZhbHNlO1xuICAgIGNhbmNlbGxlZERlZmVycmVkUm91dGVzID0gW107XG4gICAgY2FuY2VsbGVkRmV0Y2hlckxvYWRzID0gW107XG4gIH1cbiAgLy8gVHJpZ2dlciBhIG5hdmlnYXRpb24gZXZlbnQsIHdoaWNoIGNhbiBlaXRoZXIgYmUgYSBudW1lcmljYWwgUE9QIG9yIGEgUFVTSFxuICAvLyByZXBsYWNlIHdpdGggYW4gb3B0aW9uYWwgc3VibWlzc2lvblxuICBhc3luYyBmdW5jdGlvbiBuYXZpZ2F0ZSh0bywgb3B0cykge1xuICAgIGlmICh0eXBlb2YgdG8gPT09IFwibnVtYmVyXCIpIHtcbiAgICAgIGluaXQuaGlzdG9yeS5nbyh0byk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGxldCBub3JtYWxpemVkUGF0aCA9IG5vcm1hbGl6ZVRvKHN0YXRlLmxvY2F0aW9uLCBzdGF0ZS5tYXRjaGVzLCBiYXNlbmFtZSwgZnV0dXJlLnY3X3ByZXBlbmRCYXNlbmFtZSwgdG8sIG9wdHMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdHMuZnJvbVJvdXRlSWQsIG9wdHMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdHMucmVsYXRpdmUpO1xuICAgIGxldCB7XG4gICAgICBwYXRoLFxuICAgICAgc3VibWlzc2lvbixcbiAgICAgIGVycm9yXG4gICAgfSA9IG5vcm1hbGl6ZU5hdmlnYXRlT3B0aW9ucyhmdXR1cmUudjdfbm9ybWFsaXplRm9ybU1ldGhvZCwgZmFsc2UsIG5vcm1hbGl6ZWRQYXRoLCBvcHRzKTtcbiAgICBsZXQgY3VycmVudExvY2F0aW9uID0gc3RhdGUubG9jYXRpb247XG4gICAgbGV0IG5leHRMb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHN0YXRlLmxvY2F0aW9uLCBwYXRoLCBvcHRzICYmIG9wdHMuc3RhdGUpO1xuICAgIC8vIFdoZW4gdXNpbmcgbmF2aWdhdGUgYXMgYSBQVVNIL1JFUExBQ0Ugd2UgYXJlbid0IHJlYWRpbmcgYW4gYWxyZWFkeS1lbmNvZGVkXG4gICAgLy8gVVJMIGZyb20gd2luZG93LmxvY2F0aW9uLCBzbyB3ZSBuZWVkIHRvIGVuY29kZSBpdCBoZXJlIHNvIHRoZSBiZWhhdmlvclxuICAgIC8vIHJlbWFpbnMgdGhlIHNhbWUgYXMgUE9QIGFuZCBub24tZGF0YS1yb3V0ZXIgdXNhZ2VzLiAgbmV3IFVSTCgpIGRvZXMgYWxsXG4gICAgLy8gdGhlIHNhbWUgZW5jb2Rpbmcgd2UnZCBnZXQgZnJvbSBhIGhpc3RvcnkucHVzaFN0YXRlL3dpbmRvdy5sb2NhdGlvbiByZWFkXG4gICAgLy8gd2l0aG91dCBoYXZpbmcgdG8gdG91Y2ggaGlzdG9yeVxuICAgIG5leHRMb2NhdGlvbiA9IF9leHRlbmRzKHt9LCBuZXh0TG9jYXRpb24sIGluaXQuaGlzdG9yeS5lbmNvZGVMb2NhdGlvbihuZXh0TG9jYXRpb24pKTtcbiAgICBsZXQgdXNlclJlcGxhY2UgPSBvcHRzICYmIG9wdHMucmVwbGFjZSAhPSBudWxsID8gb3B0cy5yZXBsYWNlIDogdW5kZWZpbmVkO1xuICAgIGxldCBoaXN0b3J5QWN0aW9uID0gQWN0aW9uLlB1c2g7XG4gICAgaWYgKHVzZXJSZXBsYWNlID09PSB0cnVlKSB7XG4gICAgICBoaXN0b3J5QWN0aW9uID0gQWN0aW9uLlJlcGxhY2U7XG4gICAgfSBlbHNlIGlmICh1c2VyUmVwbGFjZSA9PT0gZmFsc2UpIDtlbHNlIGlmIChzdWJtaXNzaW9uICE9IG51bGwgJiYgaXNNdXRhdGlvbk1ldGhvZChzdWJtaXNzaW9uLmZvcm1NZXRob2QpICYmIHN1Ym1pc3Npb24uZm9ybUFjdGlvbiA9PT0gc3RhdGUubG9jYXRpb24ucGF0aG5hbWUgKyBzdGF0ZS5sb2NhdGlvbi5zZWFyY2gpIHtcbiAgICAgIC8vIEJ5IGRlZmF1bHQgb24gc3VibWlzc2lvbnMgdG8gdGhlIGN1cnJlbnQgbG9jYXRpb24gd2UgUkVQTEFDRSBzbyB0aGF0XG4gICAgICAvLyB1c2VycyBkb24ndCBoYXZlIHRvIGRvdWJsZS1jbGljayB0aGUgYmFjayBidXR0b24gdG8gZ2V0IHRvIHRoZSBwcmlvclxuICAgICAgLy8gbG9jYXRpb24uICBJZiB0aGUgdXNlciByZWRpcmVjdHMgdG8gYSBkaWZmZXJlbnQgbG9jYXRpb24gZnJvbSB0aGVcbiAgICAgIC8vIGFjdGlvbi9sb2FkZXIgdGhpcyB3aWxsIGJlIGlnbm9yZWQgYW5kIHRoZSByZWRpcmVjdCB3aWxsIGJlIGEgUFVTSFxuICAgICAgaGlzdG9yeUFjdGlvbiA9IEFjdGlvbi5SZXBsYWNlO1xuICAgIH1cbiAgICBsZXQgcHJldmVudFNjcm9sbFJlc2V0ID0gb3B0cyAmJiBcInByZXZlbnRTY3JvbGxSZXNldFwiIGluIG9wdHMgPyBvcHRzLnByZXZlbnRTY3JvbGxSZXNldCA9PT0gdHJ1ZSA6IHVuZGVmaW5lZDtcbiAgICBsZXQgYmxvY2tlcktleSA9IHNob3VsZEJsb2NrTmF2aWdhdGlvbih7XG4gICAgICBjdXJyZW50TG9jYXRpb24sXG4gICAgICBuZXh0TG9jYXRpb24sXG4gICAgICBoaXN0b3J5QWN0aW9uXG4gICAgfSk7XG4gICAgaWYgKGJsb2NrZXJLZXkpIHtcbiAgICAgIC8vIFB1dCB0aGUgYmxvY2tlciBpbnRvIGEgYmxvY2tlZCBzdGF0ZVxuICAgICAgdXBkYXRlQmxvY2tlcihibG9ja2VyS2V5LCB7XG4gICAgICAgIHN0YXRlOiBcImJsb2NrZWRcIixcbiAgICAgICAgbG9jYXRpb246IG5leHRMb2NhdGlvbixcbiAgICAgICAgcHJvY2VlZCgpIHtcbiAgICAgICAgICB1cGRhdGVCbG9ja2VyKGJsb2NrZXJLZXksIHtcbiAgICAgICAgICAgIHN0YXRlOiBcInByb2NlZWRpbmdcIixcbiAgICAgICAgICAgIHByb2NlZWQ6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIHJlc2V0OiB1bmRlZmluZWQsXG4gICAgICAgICAgICBsb2NhdGlvbjogbmV4dExvY2F0aW9uXG4gICAgICAgICAgfSk7XG4gICAgICAgICAgLy8gU2VuZCB0aGUgc2FtZSBuYXZpZ2F0aW9uIHRocm91Z2hcbiAgICAgICAgICBuYXZpZ2F0ZSh0bywgb3B0cyk7XG4gICAgICAgIH0sXG4gICAgICAgIHJlc2V0KCkge1xuICAgICAgICAgIGxldCBibG9ja2VycyA9IG5ldyBNYXAoc3RhdGUuYmxvY2tlcnMpO1xuICAgICAgICAgIGJsb2NrZXJzLnNldChibG9ja2VyS2V5LCBJRExFX0JMT0NLRVIpO1xuICAgICAgICAgIHVwZGF0ZVN0YXRlKHtcbiAgICAgICAgICAgIGJsb2NrZXJzXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICByZXR1cm4gYXdhaXQgc3RhcnROYXZpZ2F0aW9uKGhpc3RvcnlBY3Rpb24sIG5leHRMb2NhdGlvbiwge1xuICAgICAgc3VibWlzc2lvbixcbiAgICAgIC8vIFNlbmQgdGhyb3VnaCB0aGUgZm9ybURhdGEgc2VyaWFsaXphdGlvbiBlcnJvciBpZiB3ZSBoYXZlIG9uZSBzbyB3ZSBjYW5cbiAgICAgIC8vIHJlbmRlciBhdCB0aGUgcmlnaHQgZXJyb3IgYm91bmRhcnkgYWZ0ZXIgd2UgbWF0Y2ggcm91dGVzXG4gICAgICBwZW5kaW5nRXJyb3I6IGVycm9yLFxuICAgICAgcHJldmVudFNjcm9sbFJlc2V0LFxuICAgICAgcmVwbGFjZTogb3B0cyAmJiBvcHRzLnJlcGxhY2VcbiAgICB9KTtcbiAgfVxuICAvLyBSZXZhbGlkYXRlIGFsbCBjdXJyZW50IGxvYWRlcnMuICBJZiBhIG5hdmlnYXRpb24gaXMgaW4gcHJvZ3Jlc3Mgb3IgaWYgdGhpc1xuICAvLyBpcyBpbnRlcnJ1cHRlZCBieSBhIG5hdmlnYXRpb24sIGFsbG93IHRoaXMgdG8gXCJzdWNjZWVkXCIgYnkgY2FsbGluZyBhbGxcbiAgLy8gbG9hZGVycyBkdXJpbmcgdGhlIG5leHQgbG9hZGVyIHJvdW5kXG4gIGZ1bmN0aW9uIHJldmFsaWRhdGUoKSB7XG4gICAgaW50ZXJydXB0QWN0aXZlTG9hZHMoKTtcbiAgICB1cGRhdGVTdGF0ZSh7XG4gICAgICByZXZhbGlkYXRpb246IFwibG9hZGluZ1wiXG4gICAgfSk7XG4gICAgLy8gSWYgd2UncmUgY3VycmVudGx5IHN1Ym1pdHRpbmcgYW4gYWN0aW9uLCB3ZSBkb24ndCBuZWVkIHRvIHN0YXJ0IGEgbmV3XG4gICAgLy8gbmF2aWdhdGlvbiwgd2UnbGwganVzdCBsZXQgdGhlIGZvbGxvdyB1cCBsb2FkZXIgZXhlY3V0aW9uIGNhbGwgYWxsIGxvYWRlcnNcbiAgICBpZiAoc3RhdGUubmF2aWdhdGlvbi5zdGF0ZSA9PT0gXCJzdWJtaXR0aW5nXCIpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgLy8gSWYgd2UncmUgY3VycmVudGx5IGluIGFuIGlkbGUgc3RhdGUsIHN0YXJ0IGEgbmV3IG5hdmlnYXRpb24gZm9yIHRoZSBjdXJyZW50XG4gICAgLy8gYWN0aW9uL2xvY2F0aW9uIGFuZCBtYXJrIGl0IGFzIHVuaW50ZXJydXB0ZWQsIHdoaWNoIHdpbGwgc2tpcCB0aGUgaGlzdG9yeVxuICAgIC8vIHVwZGF0ZSBpbiBjb21wbGV0ZU5hdmlnYXRpb25cbiAgICBpZiAoc3RhdGUubmF2aWdhdGlvbi5zdGF0ZSA9PT0gXCJpZGxlXCIpIHtcbiAgICAgIHN0YXJ0TmF2aWdhdGlvbihzdGF0ZS5oaXN0b3J5QWN0aW9uLCBzdGF0ZS5sb2NhdGlvbiwge1xuICAgICAgICBzdGFydFVuaW50ZXJydXB0ZWRSZXZhbGlkYXRpb246IHRydWVcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICAvLyBPdGhlcndpc2UsIGlmIHdlJ3JlIGN1cnJlbnRseSBpbiBhIGxvYWRpbmcgc3RhdGUsIGp1c3Qgc3RhcnQgYSBuZXdcbiAgICAvLyBuYXZpZ2F0aW9uIHRvIHRoZSBuYXZpZ2F0aW9uLmxvY2F0aW9uIGJ1dCBkbyBub3QgdHJpZ2dlciBhbiB1bmludGVycnVwdGVkXG4gICAgLy8gcmV2YWxpZGF0aW9uIHNvIHRoYXQgaGlzdG9yeSBjb3JyZWN0bHkgdXBkYXRlcyBvbmNlIHRoZSBuYXZpZ2F0aW9uIGNvbXBsZXRlc1xuICAgIHN0YXJ0TmF2aWdhdGlvbihwZW5kaW5nQWN0aW9uIHx8IHN0YXRlLmhpc3RvcnlBY3Rpb24sIHN0YXRlLm5hdmlnYXRpb24ubG9jYXRpb24sIHtcbiAgICAgIG92ZXJyaWRlTmF2aWdhdGlvbjogc3RhdGUubmF2aWdhdGlvblxuICAgIH0pO1xuICB9XG4gIC8vIFN0YXJ0IGEgbmF2aWdhdGlvbiB0byB0aGUgZ2l2ZW4gYWN0aW9uL2xvY2F0aW9uLiAgQ2FuIG9wdGlvbmFsbHkgcHJvdmlkZSBhXG4gIC8vIG92ZXJyaWRlTmF2aWdhdGlvbiB3aGljaCB3aWxsIG92ZXJyaWRlIHRoZSBub3JtYWxMb2FkIGluIHRoZSBjYXNlIG9mIGEgcmVkaXJlY3RcbiAgLy8gbmF2aWdhdGlvblxuICBhc3luYyBmdW5jdGlvbiBzdGFydE5hdmlnYXRpb24oaGlzdG9yeUFjdGlvbiwgbG9jYXRpb24sIG9wdHMpIHtcbiAgICAvLyBBYm9ydCBhbnkgaW4tcHJvZ3Jlc3MgbmF2aWdhdGlvbnMgYW5kIHN0YXJ0IGEgbmV3IG9uZS4gVW5zZXQgYW55IG9uZ29pbmdcbiAgICAvLyB1bmludGVycnVwdGVkIHJldmFsaWRhdGlvbnMgdW5sZXNzIHRvbGQgb3RoZXJ3aXNlLCBzaW5jZSB3ZSB3YW50IHRoaXNcbiAgICAvLyBuZXcgbmF2aWdhdGlvbiB0byB1cGRhdGUgaGlzdG9yeSBub3JtYWxseVxuICAgIHBlbmRpbmdOYXZpZ2F0aW9uQ29udHJvbGxlciAmJiBwZW5kaW5nTmF2aWdhdGlvbkNvbnRyb2xsZXIuYWJvcnQoKTtcbiAgICBwZW5kaW5nTmF2aWdhdGlvbkNvbnRyb2xsZXIgPSBudWxsO1xuICAgIHBlbmRpbmdBY3Rpb24gPSBoaXN0b3J5QWN0aW9uO1xuICAgIGlzVW5pbnRlcnJ1cHRlZFJldmFsaWRhdGlvbiA9IChvcHRzICYmIG9wdHMuc3RhcnRVbmludGVycnVwdGVkUmV2YWxpZGF0aW9uKSA9PT0gdHJ1ZTtcbiAgICAvLyBTYXZlIHRoZSBjdXJyZW50IHNjcm9sbCBwb3NpdGlvbiBldmVyeSB0aW1lIHdlIHN0YXJ0IGEgbmV3IG5hdmlnYXRpb24sXG4gICAgLy8gYW5kIHRyYWNrIHdoZXRoZXIgd2Ugc2hvdWxkIHJlc2V0IHNjcm9sbCBvbiBjb21wbGV0aW9uXG4gICAgc2F2ZVNjcm9sbFBvc2l0aW9uKHN0YXRlLmxvY2F0aW9uLCBzdGF0ZS5tYXRjaGVzKTtcbiAgICBwZW5kaW5nUHJldmVudFNjcm9sbFJlc2V0ID0gKG9wdHMgJiYgb3B0cy5wcmV2ZW50U2Nyb2xsUmVzZXQpID09PSB0cnVlO1xuICAgIGxldCByb3V0ZXNUb1VzZSA9IGluRmxpZ2h0RGF0YVJvdXRlcyB8fCBkYXRhUm91dGVzO1xuICAgIGxldCBsb2FkaW5nTmF2aWdhdGlvbiA9IG9wdHMgJiYgb3B0cy5vdmVycmlkZU5hdmlnYXRpb247XG4gICAgbGV0IG1hdGNoZXMgPSBtYXRjaFJvdXRlcyhyb3V0ZXNUb1VzZSwgbG9jYXRpb24sIGJhc2VuYW1lKTtcbiAgICAvLyBTaG9ydCBjaXJjdWl0IHdpdGggYSA0MDQgb24gdGhlIHJvb3QgZXJyb3IgYm91bmRhcnkgaWYgd2UgbWF0Y2ggbm90aGluZ1xuICAgIGlmICghbWF0Y2hlcykge1xuICAgICAgbGV0IGVycm9yID0gZ2V0SW50ZXJuYWxSb3V0ZXJFcnJvcig0MDQsIHtcbiAgICAgICAgcGF0aG5hbWU6IGxvY2F0aW9uLnBhdGhuYW1lXG4gICAgICB9KTtcbiAgICAgIGxldCB7XG4gICAgICAgIG1hdGNoZXM6IG5vdEZvdW5kTWF0Y2hlcyxcbiAgICAgICAgcm91dGVcbiAgICAgIH0gPSBnZXRTaG9ydENpcmN1aXRNYXRjaGVzKHJvdXRlc1RvVXNlKTtcbiAgICAgIC8vIENhbmNlbCBhbGwgcGVuZGluZyBkZWZlcnJlZCBvbiA0MDRzIHNpbmNlIHdlIGRvbid0IGtlZXAgYW55IHJvdXRlc1xuICAgICAgY2FuY2VsQWN0aXZlRGVmZXJyZWRzKCk7XG4gICAgICBjb21wbGV0ZU5hdmlnYXRpb24obG9jYXRpb24sIHtcbiAgICAgICAgbWF0Y2hlczogbm90Rm91bmRNYXRjaGVzLFxuICAgICAgICBsb2FkZXJEYXRhOiB7fSxcbiAgICAgICAgZXJyb3JzOiB7XG4gICAgICAgICAgW3JvdXRlLmlkXTogZXJyb3JcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIC8vIFNob3J0IGNpcmN1aXQgaWYgaXQncyBvbmx5IGEgaGFzaCBjaGFuZ2UgYW5kIG5vdCBhIHJldmFsaWRhdGlvbiBvclxuICAgIC8vIG11dGF0aW9uIHN1Ym1pc3Npb24uXG4gICAgLy9cbiAgICAvLyBJZ25vcmUgb24gaW5pdGlhbCBwYWdlIGxvYWRzIGJlY2F1c2Ugc2luY2UgdGhlIGluaXRpYWwgbG9hZCB3aWxsIGFsd2F5c1xuICAgIC8vIGJlIFwic2FtZSBoYXNoXCIuICBGb3IgZXhhbXBsZSwgb24gL3BhZ2UjaGFzaCBhbmQgc3VibWl0IGEgPEZvcm0gbWV0aG9kPVwicG9zdFwiPlxuICAgIC8vIHdoaWNoIHdpbGwgZGVmYXVsdCB0byBhIG5hdmlnYXRpb24gdG8gL3BhZ2VcbiAgICBpZiAoc3RhdGUuaW5pdGlhbGl6ZWQgJiYgIWlzUmV2YWxpZGF0aW9uUmVxdWlyZWQgJiYgaXNIYXNoQ2hhbmdlT25seShzdGF0ZS5sb2NhdGlvbiwgbG9jYXRpb24pICYmICEob3B0cyAmJiBvcHRzLnN1Ym1pc3Npb24gJiYgaXNNdXRhdGlvbk1ldGhvZChvcHRzLnN1Ym1pc3Npb24uZm9ybU1ldGhvZCkpKSB7XG4gICAgICBjb21wbGV0ZU5hdmlnYXRpb24obG9jYXRpb24sIHtcbiAgICAgICAgbWF0Y2hlc1xuICAgICAgfSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIC8vIENyZWF0ZSBhIGNvbnRyb2xsZXIvUmVxdWVzdCBmb3IgdGhpcyBuYXZpZ2F0aW9uXG4gICAgcGVuZGluZ05hdmlnYXRpb25Db250cm9sbGVyID0gbmV3IEFib3J0Q29udHJvbGxlcigpO1xuICAgIGxldCByZXF1ZXN0ID0gY3JlYXRlQ2xpZW50U2lkZVJlcXVlc3QoaW5pdC5oaXN0b3J5LCBsb2NhdGlvbiwgcGVuZGluZ05hdmlnYXRpb25Db250cm9sbGVyLnNpZ25hbCwgb3B0cyAmJiBvcHRzLnN1Ym1pc3Npb24pO1xuICAgIGxldCBwZW5kaW5nQWN0aW9uRGF0YTtcbiAgICBsZXQgcGVuZGluZ0Vycm9yO1xuICAgIGlmIChvcHRzICYmIG9wdHMucGVuZGluZ0Vycm9yKSB7XG4gICAgICAvLyBJZiB3ZSBoYXZlIGEgcGVuZGluZ0Vycm9yLCBpdCBtZWFucyB0aGUgdXNlciBhdHRlbXB0ZWQgYSBHRVQgc3VibWlzc2lvblxuICAgICAgLy8gd2l0aCBiaW5hcnkgRm9ybURhdGEgc28gYXNzaWduIGhlcmUgYW5kIHNraXAgdG8gaGFuZGxlTG9hZGVycy4gIFRoYXRcbiAgICAgIC8vIHdheSB3ZSBoYW5kbGUgY2FsbGluZyBsb2FkZXJzIGFib3ZlIHRoZSBib3VuZGFyeSBldGMuICBJdCdzIG5vdCByZWFsbHlcbiAgICAgIC8vIGRpZmZlcmVudCBmcm9tIGFuIGFjdGlvbkVycm9yIGluIHRoYXQgc2Vuc2UuXG4gICAgICBwZW5kaW5nRXJyb3IgPSB7XG4gICAgICAgIFtmaW5kTmVhcmVzdEJvdW5kYXJ5KG1hdGNoZXMpLnJvdXRlLmlkXTogb3B0cy5wZW5kaW5nRXJyb3JcbiAgICAgIH07XG4gICAgfSBlbHNlIGlmIChvcHRzICYmIG9wdHMuc3VibWlzc2lvbiAmJiBpc011dGF0aW9uTWV0aG9kKG9wdHMuc3VibWlzc2lvbi5mb3JtTWV0aG9kKSkge1xuICAgICAgLy8gQ2FsbCBhY3Rpb24gaWYgd2UgcmVjZWl2ZWQgYW4gYWN0aW9uIHN1Ym1pc3Npb25cbiAgICAgIGxldCBhY3Rpb25PdXRwdXQgPSBhd2FpdCBoYW5kbGVBY3Rpb24ocmVxdWVzdCwgbG9jYXRpb24sIG9wdHMuc3VibWlzc2lvbiwgbWF0Y2hlcywge1xuICAgICAgICByZXBsYWNlOiBvcHRzLnJlcGxhY2VcbiAgICAgIH0pO1xuICAgICAgaWYgKGFjdGlvbk91dHB1dC5zaG9ydENpcmN1aXRlZCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBwZW5kaW5nQWN0aW9uRGF0YSA9IGFjdGlvbk91dHB1dC5wZW5kaW5nQWN0aW9uRGF0YTtcbiAgICAgIHBlbmRpbmdFcnJvciA9IGFjdGlvbk91dHB1dC5wZW5kaW5nQWN0aW9uRXJyb3I7XG4gICAgICBsb2FkaW5nTmF2aWdhdGlvbiA9IGdldExvYWRpbmdOYXZpZ2F0aW9uKGxvY2F0aW9uLCBvcHRzLnN1Ym1pc3Npb24pO1xuICAgICAgLy8gQ3JlYXRlIGEgR0VUIHJlcXVlc3QgZm9yIHRoZSBsb2FkZXJzXG4gICAgICByZXF1ZXN0ID0gbmV3IFJlcXVlc3QocmVxdWVzdC51cmwsIHtcbiAgICAgICAgc2lnbmFsOiByZXF1ZXN0LnNpZ25hbFxuICAgICAgfSk7XG4gICAgfVxuICAgIC8vIENhbGwgbG9hZGVyc1xuICAgIGxldCB7XG4gICAgICBzaG9ydENpcmN1aXRlZCxcbiAgICAgIGxvYWRlckRhdGEsXG4gICAgICBlcnJvcnNcbiAgICB9ID0gYXdhaXQgaGFuZGxlTG9hZGVycyhyZXF1ZXN0LCBsb2NhdGlvbiwgbWF0Y2hlcywgbG9hZGluZ05hdmlnYXRpb24sIG9wdHMgJiYgb3B0cy5zdWJtaXNzaW9uLCBvcHRzICYmIG9wdHMuZmV0Y2hlclN1Ym1pc3Npb24sIG9wdHMgJiYgb3B0cy5yZXBsYWNlLCBwZW5kaW5nQWN0aW9uRGF0YSwgcGVuZGluZ0Vycm9yKTtcbiAgICBpZiAoc2hvcnRDaXJjdWl0ZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgLy8gQ2xlYW4gdXAgbm93IHRoYXQgdGhlIGFjdGlvbi9sb2FkZXJzIGhhdmUgY29tcGxldGVkLiAgRG9uJ3QgY2xlYW4gdXAgaWZcbiAgICAvLyB3ZSBzaG9ydCBjaXJjdWl0ZWQgYmVjYXVzZSBwZW5kaW5nTmF2aWdhdGlvbkNvbnRyb2xsZXIgd2lsbCBoYXZlIGFscmVhZHlcbiAgICAvLyBiZWVuIGFzc2lnbmVkIHRvIGEgbmV3IGNvbnRyb2xsZXIgZm9yIHRoZSBuZXh0IG5hdmlnYXRpb25cbiAgICBwZW5kaW5nTmF2aWdhdGlvbkNvbnRyb2xsZXIgPSBudWxsO1xuICAgIGNvbXBsZXRlTmF2aWdhdGlvbihsb2NhdGlvbiwgX2V4dGVuZHMoe1xuICAgICAgbWF0Y2hlc1xuICAgIH0sIHBlbmRpbmdBY3Rpb25EYXRhID8ge1xuICAgICAgYWN0aW9uRGF0YTogcGVuZGluZ0FjdGlvbkRhdGFcbiAgICB9IDoge30sIHtcbiAgICAgIGxvYWRlckRhdGEsXG4gICAgICBlcnJvcnNcbiAgICB9KSk7XG4gIH1cbiAgLy8gQ2FsbCB0aGUgYWN0aW9uIG1hdGNoZWQgYnkgdGhlIGxlYWYgcm91dGUgZm9yIHRoaXMgbmF2aWdhdGlvbiBhbmQgaGFuZGxlXG4gIC8vIHJlZGlyZWN0cy9lcnJvcnNcbiAgYXN5bmMgZnVuY3Rpb24gaGFuZGxlQWN0aW9uKHJlcXVlc3QsIGxvY2F0aW9uLCBzdWJtaXNzaW9uLCBtYXRjaGVzLCBvcHRzKSB7XG4gICAgaWYgKG9wdHMgPT09IHZvaWQgMCkge1xuICAgICAgb3B0cyA9IHt9O1xuICAgIH1cbiAgICBpbnRlcnJ1cHRBY3RpdmVMb2FkcygpO1xuICAgIC8vIFB1dCB1cyBpbiBhIHN1Ym1pdHRpbmcgc3RhdGVcbiAgICBsZXQgbmF2aWdhdGlvbiA9IGdldFN1Ym1pdHRpbmdOYXZpZ2F0aW9uKGxvY2F0aW9uLCBzdWJtaXNzaW9uKTtcbiAgICB1cGRhdGVTdGF0ZSh7XG4gICAgICBuYXZpZ2F0aW9uXG4gICAgfSk7XG4gICAgLy8gQ2FsbCBvdXIgYWN0aW9uIGFuZCBnZXQgdGhlIHJlc3VsdFxuICAgIGxldCByZXN1bHQ7XG4gICAgbGV0IGFjdGlvbk1hdGNoID0gZ2V0VGFyZ2V0TWF0Y2gobWF0Y2hlcywgbG9jYXRpb24pO1xuICAgIGlmICghYWN0aW9uTWF0Y2gucm91dGUuYWN0aW9uICYmICFhY3Rpb25NYXRjaC5yb3V0ZS5sYXp5KSB7XG4gICAgICByZXN1bHQgPSB7XG4gICAgICAgIHR5cGU6IFJlc3VsdFR5cGUuZXJyb3IsXG4gICAgICAgIGVycm9yOiBnZXRJbnRlcm5hbFJvdXRlckVycm9yKDQwNSwge1xuICAgICAgICAgIG1ldGhvZDogcmVxdWVzdC5tZXRob2QsXG4gICAgICAgICAgcGF0aG5hbWU6IGxvY2F0aW9uLnBhdGhuYW1lLFxuICAgICAgICAgIHJvdXRlSWQ6IGFjdGlvbk1hdGNoLnJvdXRlLmlkXG4gICAgICAgIH0pXG4gICAgICB9O1xuICAgIH0gZWxzZSB7XG4gICAgICByZXN1bHQgPSBhd2FpdCBjYWxsTG9hZGVyT3JBY3Rpb24oXCJhY3Rpb25cIiwgcmVxdWVzdCwgYWN0aW9uTWF0Y2gsIG1hdGNoZXMsIG1hbmlmZXN0LCBtYXBSb3V0ZVByb3BlcnRpZXMsIGJhc2VuYW1lKTtcbiAgICAgIGlmIChyZXF1ZXN0LnNpZ25hbC5hYm9ydGVkKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgc2hvcnRDaXJjdWl0ZWQ6IHRydWVcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKGlzUmVkaXJlY3RSZXN1bHQocmVzdWx0KSkge1xuICAgICAgbGV0IHJlcGxhY2U7XG4gICAgICBpZiAob3B0cyAmJiBvcHRzLnJlcGxhY2UgIT0gbnVsbCkge1xuICAgICAgICByZXBsYWNlID0gb3B0cy5yZXBsYWNlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gSWYgdGhlIHVzZXIgZGlkbid0IGV4cGxpY2l0eSBpbmRpY2F0ZSByZXBsYWNlIGJlaGF2aW9yLCByZXBsYWNlIGlmXG4gICAgICAgIC8vIHdlIHJlZGlyZWN0ZWQgdG8gdGhlIGV4YWN0IHNhbWUgbG9jYXRpb24gd2UncmUgY3VycmVudGx5IGF0IHRvIGF2b2lkXG4gICAgICAgIC8vIGRvdWJsZSBiYWNrLWJ1dHRvbnNcbiAgICAgICAgcmVwbGFjZSA9IHJlc3VsdC5sb2NhdGlvbiA9PT0gc3RhdGUubG9jYXRpb24ucGF0aG5hbWUgKyBzdGF0ZS5sb2NhdGlvbi5zZWFyY2g7XG4gICAgICB9XG4gICAgICBhd2FpdCBzdGFydFJlZGlyZWN0TmF2aWdhdGlvbihzdGF0ZSwgcmVzdWx0LCB7XG4gICAgICAgIHN1Ym1pc3Npb24sXG4gICAgICAgIHJlcGxhY2VcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgc2hvcnRDaXJjdWl0ZWQ6IHRydWVcbiAgICAgIH07XG4gICAgfVxuICAgIGlmIChpc0Vycm9yUmVzdWx0KHJlc3VsdCkpIHtcbiAgICAgIC8vIFN0b3JlIG9mZiB0aGUgcGVuZGluZyBlcnJvciAtIHdlIHVzZSBpdCB0byBkZXRlcm1pbmUgd2hpY2ggbG9hZGVyc1xuICAgICAgLy8gdG8gY2FsbCBhbmQgd2lsbCBjb21taXQgaXQgd2hlbiB3ZSBjb21wbGV0ZSB0aGUgbmF2aWdhdGlvblxuICAgICAgbGV0IGJvdW5kYXJ5TWF0Y2ggPSBmaW5kTmVhcmVzdEJvdW5kYXJ5KG1hdGNoZXMsIGFjdGlvbk1hdGNoLnJvdXRlLmlkKTtcbiAgICAgIC8vIEJ5IGRlZmF1bHQsIGFsbCBzdWJtaXNzaW9ucyBhcmUgUkVQTEFDRSBuYXZpZ2F0aW9ucywgYnV0IGlmIHRoZVxuICAgICAgLy8gYWN0aW9uIHRocmV3IGFuIGVycm9yIHRoYXQnbGwgYmUgcmVuZGVyZWQgaW4gYW4gZXJyb3JFbGVtZW50LCB3ZSBmYWxsXG4gICAgICAvLyBiYWNrIHRvIFBVU0ggc28gdGhhdCB0aGUgdXNlciBjYW4gdXNlIHRoZSBiYWNrIGJ1dHRvbiB0byBnZXQgYmFjayB0b1xuICAgICAgLy8gdGhlIHByZS1zdWJtaXNzaW9uIGZvcm0gbG9jYXRpb24gdG8gdHJ5IGFnYWluXG4gICAgICBpZiAoKG9wdHMgJiYgb3B0cy5yZXBsYWNlKSAhPT0gdHJ1ZSkge1xuICAgICAgICBwZW5kaW5nQWN0aW9uID0gQWN0aW9uLlB1c2g7XG4gICAgICB9XG4gICAgICByZXR1cm4ge1xuICAgICAgICAvLyBTZW5kIGJhY2sgYW4gZW1wdHkgb2JqZWN0IHdlIGNhbiB1c2UgdG8gY2xlYXIgb3V0IGFueSBwcmlvciBhY3Rpb25EYXRhXG4gICAgICAgIHBlbmRpbmdBY3Rpb25EYXRhOiB7fSxcbiAgICAgICAgcGVuZGluZ0FjdGlvbkVycm9yOiB7XG4gICAgICAgICAgW2JvdW5kYXJ5TWF0Y2gucm91dGUuaWRdOiByZXN1bHQuZXJyb3JcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9XG4gICAgaWYgKGlzRGVmZXJyZWRSZXN1bHQocmVzdWx0KSkge1xuICAgICAgdGhyb3cgZ2V0SW50ZXJuYWxSb3V0ZXJFcnJvcig0MDAsIHtcbiAgICAgICAgdHlwZTogXCJkZWZlci1hY3Rpb25cIlxuICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICBwZW5kaW5nQWN0aW9uRGF0YToge1xuICAgICAgICBbYWN0aW9uTWF0Y2gucm91dGUuaWRdOiByZXN1bHQuZGF0YVxuICAgICAgfVxuICAgIH07XG4gIH1cbiAgLy8gQ2FsbCBhbGwgYXBwbGljYWJsZSBsb2FkZXJzIGZvciB0aGUgZ2l2ZW4gbWF0Y2hlcywgaGFuZGxpbmcgcmVkaXJlY3RzLFxuICAvLyBlcnJvcnMsIGV0Yy5cbiAgYXN5bmMgZnVuY3Rpb24gaGFuZGxlTG9hZGVycyhyZXF1ZXN0LCBsb2NhdGlvbiwgbWF0Y2hlcywgb3ZlcnJpZGVOYXZpZ2F0aW9uLCBzdWJtaXNzaW9uLCBmZXRjaGVyU3VibWlzc2lvbiwgcmVwbGFjZSwgcGVuZGluZ0FjdGlvbkRhdGEsIHBlbmRpbmdFcnJvcikge1xuICAgIC8vIEZpZ3VyZSBvdXQgdGhlIHJpZ2h0IG5hdmlnYXRpb24gd2Ugd2FudCB0byB1c2UgZm9yIGRhdGEgbG9hZGluZ1xuICAgIGxldCBsb2FkaW5nTmF2aWdhdGlvbiA9IG92ZXJyaWRlTmF2aWdhdGlvbiB8fCBnZXRMb2FkaW5nTmF2aWdhdGlvbihsb2NhdGlvbiwgc3VibWlzc2lvbik7XG4gICAgLy8gSWYgdGhpcyB3YXMgYSByZWRpcmVjdCBmcm9tIGFuIGFjdGlvbiB3ZSBkb24ndCBoYXZlIGEgXCJzdWJtaXNzaW9uXCIgYnV0XG4gICAgLy8gd2UgaGF2ZSBpdCBvbiB0aGUgbG9hZGluZyBuYXZpZ2F0aW9uIHNvIHVzZSB0aGF0IGlmIGF2YWlsYWJsZVxuICAgIGxldCBhY3RpdmVTdWJtaXNzaW9uID0gc3VibWlzc2lvbiB8fCBmZXRjaGVyU3VibWlzc2lvbiB8fCBnZXRTdWJtaXNzaW9uRnJvbU5hdmlnYXRpb24obG9hZGluZ05hdmlnYXRpb24pO1xuICAgIGxldCByb3V0ZXNUb1VzZSA9IGluRmxpZ2h0RGF0YVJvdXRlcyB8fCBkYXRhUm91dGVzO1xuICAgIGxldCBbbWF0Y2hlc1RvTG9hZCwgcmV2YWxpZGF0aW5nRmV0Y2hlcnNdID0gZ2V0TWF0Y2hlc1RvTG9hZChpbml0Lmhpc3RvcnksIHN0YXRlLCBtYXRjaGVzLCBhY3RpdmVTdWJtaXNzaW9uLCBsb2NhdGlvbiwgaXNSZXZhbGlkYXRpb25SZXF1aXJlZCwgY2FuY2VsbGVkRGVmZXJyZWRSb3V0ZXMsIGNhbmNlbGxlZEZldGNoZXJMb2FkcywgZmV0Y2hMb2FkTWF0Y2hlcywgZmV0Y2hSZWRpcmVjdElkcywgcm91dGVzVG9Vc2UsIGJhc2VuYW1lLCBwZW5kaW5nQWN0aW9uRGF0YSwgcGVuZGluZ0Vycm9yKTtcbiAgICAvLyBDYW5jZWwgcGVuZGluZyBkZWZlcnJlZHMgZm9yIG5vLWxvbmdlci1tYXRjaGVkIHJvdXRlcyBvciByb3V0ZXMgd2UncmVcbiAgICAvLyBhYm91dCB0byByZWxvYWQuICBOb3RlIHRoYXQgaWYgdGhpcyBpcyBhbiBhY3Rpb24gcmVsb2FkIHdlIHdvdWxkIGhhdmVcbiAgICAvLyBhbHJlYWR5IGNhbmNlbGxlZCBhbGwgcGVuZGluZyBkZWZlcnJlZHMgc28gdGhpcyB3b3VsZCBiZSBhIG5vLW9wXG4gICAgY2FuY2VsQWN0aXZlRGVmZXJyZWRzKHJvdXRlSWQgPT4gIShtYXRjaGVzICYmIG1hdGNoZXMuc29tZShtID0+IG0ucm91dGUuaWQgPT09IHJvdXRlSWQpKSB8fCBtYXRjaGVzVG9Mb2FkICYmIG1hdGNoZXNUb0xvYWQuc29tZShtID0+IG0ucm91dGUuaWQgPT09IHJvdXRlSWQpKTtcbiAgICBwZW5kaW5nTmF2aWdhdGlvbkxvYWRJZCA9ICsraW5jcmVtZW50aW5nTG9hZElkO1xuICAgIC8vIFNob3J0IGNpcmN1aXQgaWYgd2UgaGF2ZSBubyBsb2FkZXJzIHRvIHJ1blxuICAgIGlmIChtYXRjaGVzVG9Mb2FkLmxlbmd0aCA9PT0gMCAmJiByZXZhbGlkYXRpbmdGZXRjaGVycy5sZW5ndGggPT09IDApIHtcbiAgICAgIGxldCB1cGRhdGVkRmV0Y2hlcnMgPSBtYXJrRmV0Y2hSZWRpcmVjdHNEb25lKCk7XG4gICAgICBjb21wbGV0ZU5hdmlnYXRpb24obG9jYXRpb24sIF9leHRlbmRzKHtcbiAgICAgICAgbWF0Y2hlcyxcbiAgICAgICAgbG9hZGVyRGF0YToge30sXG4gICAgICAgIC8vIENvbW1pdCBwZW5kaW5nIGVycm9yIGlmIHdlJ3JlIHNob3J0IGNpcmN1aXRpbmdcbiAgICAgICAgZXJyb3JzOiBwZW5kaW5nRXJyb3IgfHwgbnVsbFxuICAgICAgfSwgcGVuZGluZ0FjdGlvbkRhdGEgPyB7XG4gICAgICAgIGFjdGlvbkRhdGE6IHBlbmRpbmdBY3Rpb25EYXRhXG4gICAgICB9IDoge30sIHVwZGF0ZWRGZXRjaGVycyA/IHtcbiAgICAgICAgZmV0Y2hlcnM6IG5ldyBNYXAoc3RhdGUuZmV0Y2hlcnMpXG4gICAgICB9IDoge30pKTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHNob3J0Q2lyY3VpdGVkOiB0cnVlXG4gICAgICB9O1xuICAgIH1cbiAgICAvLyBJZiB0aGlzIGlzIGFuIHVuaW50ZXJydXB0ZWQgcmV2YWxpZGF0aW9uLCB3ZSByZW1haW4gaW4gb3VyIGN1cnJlbnQgaWRsZVxuICAgIC8vIHN0YXRlLiAgSWYgbm90LCB3ZSBuZWVkIHRvIHN3aXRjaCB0byBvdXIgbG9hZGluZyBzdGF0ZSBhbmQgbG9hZCBkYXRhLFxuICAgIC8vIHByZXNlcnZpbmcgYW55IG5ldyBhY3Rpb24gZGF0YSBvciBleGlzdGluZyBhY3Rpb24gZGF0YSAoaW4gdGhlIGNhc2Ugb2ZcbiAgICAvLyBhIHJldmFsaWRhdGlvbiBpbnRlcnJ1cHRpbmcgYW4gYWN0aW9uUmVsb2FkKVxuICAgIGlmICghaXNVbmludGVycnVwdGVkUmV2YWxpZGF0aW9uKSB7XG4gICAgICByZXZhbGlkYXRpbmdGZXRjaGVycy5mb3JFYWNoKHJmID0+IHtcbiAgICAgICAgbGV0IGZldGNoZXIgPSBzdGF0ZS5mZXRjaGVycy5nZXQocmYua2V5KTtcbiAgICAgICAgbGV0IHJldmFsaWRhdGluZ0ZldGNoZXIgPSBnZXRMb2FkaW5nRmV0Y2hlcih1bmRlZmluZWQsIGZldGNoZXIgPyBmZXRjaGVyLmRhdGEgOiB1bmRlZmluZWQpO1xuICAgICAgICBzdGF0ZS5mZXRjaGVycy5zZXQocmYua2V5LCByZXZhbGlkYXRpbmdGZXRjaGVyKTtcbiAgICAgIH0pO1xuICAgICAgbGV0IGFjdGlvbkRhdGEgPSBwZW5kaW5nQWN0aW9uRGF0YSB8fCBzdGF0ZS5hY3Rpb25EYXRhO1xuICAgICAgdXBkYXRlU3RhdGUoX2V4dGVuZHMoe1xuICAgICAgICBuYXZpZ2F0aW9uOiBsb2FkaW5nTmF2aWdhdGlvblxuICAgICAgfSwgYWN0aW9uRGF0YSA/IE9iamVjdC5rZXlzKGFjdGlvbkRhdGEpLmxlbmd0aCA9PT0gMCA/IHtcbiAgICAgICAgYWN0aW9uRGF0YTogbnVsbFxuICAgICAgfSA6IHtcbiAgICAgICAgYWN0aW9uRGF0YVxuICAgICAgfSA6IHt9LCByZXZhbGlkYXRpbmdGZXRjaGVycy5sZW5ndGggPiAwID8ge1xuICAgICAgICBmZXRjaGVyczogbmV3IE1hcChzdGF0ZS5mZXRjaGVycylcbiAgICAgIH0gOiB7fSkpO1xuICAgIH1cbiAgICByZXZhbGlkYXRpbmdGZXRjaGVycy5mb3JFYWNoKHJmID0+IHtcbiAgICAgIGlmIChmZXRjaENvbnRyb2xsZXJzLmhhcyhyZi5rZXkpKSB7XG4gICAgICAgIGFib3J0RmV0Y2hlcihyZi5rZXkpO1xuICAgICAgfVxuICAgICAgaWYgKHJmLmNvbnRyb2xsZXIpIHtcbiAgICAgICAgLy8gRmV0Y2hlcnMgdXNlIGFuIGluZGVwZW5kZW50IEFib3J0Q29udHJvbGxlciBzbyB0aGF0IGFib3J0aW5nIGEgZmV0Y2hlclxuICAgICAgICAvLyAodmlhIGRlbGV0ZUZldGNoZXIpIGRvZXMgbm90IGFib3J0IHRoZSB0cmlnZ2VyaW5nIG5hdmlnYXRpb24gdGhhdFxuICAgICAgICAvLyB0cmlnZ2VyZWQgdGhlIHJldmFsaWRhdGlvblxuICAgICAgICBmZXRjaENvbnRyb2xsZXJzLnNldChyZi5rZXksIHJmLmNvbnRyb2xsZXIpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIC8vIFByb3h5IG5hdmlnYXRpb24gYWJvcnQgdGhyb3VnaCB0byByZXZhbGlkYXRpb24gZmV0Y2hlcnNcbiAgICBsZXQgYWJvcnRQZW5kaW5nRmV0Y2hSZXZhbGlkYXRpb25zID0gKCkgPT4gcmV2YWxpZGF0aW5nRmV0Y2hlcnMuZm9yRWFjaChmID0+IGFib3J0RmV0Y2hlcihmLmtleSkpO1xuICAgIGlmIChwZW5kaW5nTmF2aWdhdGlvbkNvbnRyb2xsZXIpIHtcbiAgICAgIHBlbmRpbmdOYXZpZ2F0aW9uQ29udHJvbGxlci5zaWduYWwuYWRkRXZlbnRMaXN0ZW5lcihcImFib3J0XCIsIGFib3J0UGVuZGluZ0ZldGNoUmV2YWxpZGF0aW9ucyk7XG4gICAgfVxuICAgIGxldCB7XG4gICAgICByZXN1bHRzLFxuICAgICAgbG9hZGVyUmVzdWx0cyxcbiAgICAgIGZldGNoZXJSZXN1bHRzXG4gICAgfSA9IGF3YWl0IGNhbGxMb2FkZXJzQW5kTWF5YmVSZXNvbHZlRGF0YShzdGF0ZS5tYXRjaGVzLCBtYXRjaGVzLCBtYXRjaGVzVG9Mb2FkLCByZXZhbGlkYXRpbmdGZXRjaGVycywgcmVxdWVzdCk7XG4gICAgaWYgKHJlcXVlc3Quc2lnbmFsLmFib3J0ZWQpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHNob3J0Q2lyY3VpdGVkOiB0cnVlXG4gICAgICB9O1xuICAgIH1cbiAgICAvLyBDbGVhbiB1cCBfYWZ0ZXJfIGxvYWRlcnMgaGF2ZSBjb21wbGV0ZWQuICBEb24ndCBjbGVhbiB1cCBpZiB3ZSBzaG9ydFxuICAgIC8vIGNpcmN1aXRlZCBiZWNhdXNlIGZldGNoQ29udHJvbGxlcnMgd291bGQgaGF2ZSBiZWVuIGFib3J0ZWQgYW5kXG4gICAgLy8gcmVhc3NpZ25lZCB0byBuZXcgY29udHJvbGxlcnMgZm9yIHRoZSBuZXh0IG5hdmlnYXRpb25cbiAgICBpZiAocGVuZGluZ05hdmlnYXRpb25Db250cm9sbGVyKSB7XG4gICAgICBwZW5kaW5nTmF2aWdhdGlvbkNvbnRyb2xsZXIuc2lnbmFsLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJhYm9ydFwiLCBhYm9ydFBlbmRpbmdGZXRjaFJldmFsaWRhdGlvbnMpO1xuICAgIH1cbiAgICByZXZhbGlkYXRpbmdGZXRjaGVycy5mb3JFYWNoKHJmID0+IGZldGNoQ29udHJvbGxlcnMuZGVsZXRlKHJmLmtleSkpO1xuICAgIC8vIElmIGFueSBsb2FkZXJzIHJldHVybmVkIGEgcmVkaXJlY3QgUmVzcG9uc2UsIHN0YXJ0IGEgbmV3IFJFUExBQ0UgbmF2aWdhdGlvblxuICAgIGxldCByZWRpcmVjdCA9IGZpbmRSZWRpcmVjdChyZXN1bHRzKTtcbiAgICBpZiAocmVkaXJlY3QpIHtcbiAgICAgIGlmIChyZWRpcmVjdC5pZHggPj0gbWF0Y2hlc1RvTG9hZC5sZW5ndGgpIHtcbiAgICAgICAgLy8gSWYgdGhpcyByZWRpcmVjdCBjYW1lIGZyb20gYSBmZXRjaGVyIG1ha2Ugc3VyZSB3ZSBtYXJrIGl0IGluXG4gICAgICAgIC8vIGZldGNoUmVkaXJlY3RJZHMgc28gaXQgZG9lc24ndCBnZXQgcmV2YWxpZGF0ZWQgb24gdGhlIG5leHQgc2V0IG9mXG4gICAgICAgIC8vIGxvYWRlciBleGVjdXRpb25zXG4gICAgICAgIGxldCBmZXRjaGVyS2V5ID0gcmV2YWxpZGF0aW5nRmV0Y2hlcnNbcmVkaXJlY3QuaWR4IC0gbWF0Y2hlc1RvTG9hZC5sZW5ndGhdLmtleTtcbiAgICAgICAgZmV0Y2hSZWRpcmVjdElkcy5hZGQoZmV0Y2hlcktleSk7XG4gICAgICB9XG4gICAgICBhd2FpdCBzdGFydFJlZGlyZWN0TmF2aWdhdGlvbihzdGF0ZSwgcmVkaXJlY3QucmVzdWx0LCB7XG4gICAgICAgIHJlcGxhY2VcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgc2hvcnRDaXJjdWl0ZWQ6IHRydWVcbiAgICAgIH07XG4gICAgfVxuICAgIC8vIFByb2Nlc3MgYW5kIGNvbW1pdCBvdXRwdXQgZnJvbSBsb2FkZXJzXG4gICAgbGV0IHtcbiAgICAgIGxvYWRlckRhdGEsXG4gICAgICBlcnJvcnNcbiAgICB9ID0gcHJvY2Vzc0xvYWRlckRhdGEoc3RhdGUsIG1hdGNoZXMsIG1hdGNoZXNUb0xvYWQsIGxvYWRlclJlc3VsdHMsIHBlbmRpbmdFcnJvciwgcmV2YWxpZGF0aW5nRmV0Y2hlcnMsIGZldGNoZXJSZXN1bHRzLCBhY3RpdmVEZWZlcnJlZHMpO1xuICAgIC8vIFdpcmUgdXAgc3Vic2NyaWJlcnMgdG8gdXBkYXRlIGxvYWRlckRhdGEgYXMgcHJvbWlzZXMgc2V0dGxlXG4gICAgYWN0aXZlRGVmZXJyZWRzLmZvckVhY2goKGRlZmVycmVkRGF0YSwgcm91dGVJZCkgPT4ge1xuICAgICAgZGVmZXJyZWREYXRhLnN1YnNjcmliZShhYm9ydGVkID0+IHtcbiAgICAgICAgLy8gTm90ZTogTm8gbmVlZCB0byB1cGRhdGVTdGF0ZSBoZXJlIHNpbmNlIHRoZSBUcmFja2VkUHJvbWlzZSBvblxuICAgICAgICAvLyBsb2FkZXJEYXRhIGlzIHN0YWJsZSBhY3Jvc3MgcmVzb2x2ZS9yZWplY3RcbiAgICAgICAgLy8gUmVtb3ZlIHRoaXMgaW5zdGFuY2UgaWYgd2Ugd2VyZSBhYm9ydGVkIG9yIGlmIHByb21pc2VzIGhhdmUgc2V0dGxlZFxuICAgICAgICBpZiAoYWJvcnRlZCB8fCBkZWZlcnJlZERhdGEuZG9uZSkge1xuICAgICAgICAgIGFjdGl2ZURlZmVycmVkcy5kZWxldGUocm91dGVJZCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0pO1xuICAgIGxldCB1cGRhdGVkRmV0Y2hlcnMgPSBtYXJrRmV0Y2hSZWRpcmVjdHNEb25lKCk7XG4gICAgbGV0IGRpZEFib3J0RmV0Y2hMb2FkcyA9IGFib3J0U3RhbGVGZXRjaExvYWRzKHBlbmRpbmdOYXZpZ2F0aW9uTG9hZElkKTtcbiAgICBsZXQgc2hvdWxkVXBkYXRlRmV0Y2hlcnMgPSB1cGRhdGVkRmV0Y2hlcnMgfHwgZGlkQWJvcnRGZXRjaExvYWRzIHx8IHJldmFsaWRhdGluZ0ZldGNoZXJzLmxlbmd0aCA+IDA7XG4gICAgcmV0dXJuIF9leHRlbmRzKHtcbiAgICAgIGxvYWRlckRhdGEsXG4gICAgICBlcnJvcnNcbiAgICB9LCBzaG91bGRVcGRhdGVGZXRjaGVycyA/IHtcbiAgICAgIGZldGNoZXJzOiBuZXcgTWFwKHN0YXRlLmZldGNoZXJzKVxuICAgIH0gOiB7fSk7XG4gIH1cbiAgZnVuY3Rpb24gZ2V0RmV0Y2hlcihrZXkpIHtcbiAgICByZXR1cm4gc3RhdGUuZmV0Y2hlcnMuZ2V0KGtleSkgfHwgSURMRV9GRVRDSEVSO1xuICB9XG4gIC8vIFRyaWdnZXIgYSBmZXRjaGVyIGxvYWQvc3VibWl0IGZvciB0aGUgZ2l2ZW4gZmV0Y2hlciBrZXlcbiAgZnVuY3Rpb24gZmV0Y2goa2V5LCByb3V0ZUlkLCBocmVmLCBvcHRzKSB7XG4gICAgaWYgKGlzU2VydmVyKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJyb3V0ZXIuZmV0Y2goKSB3YXMgY2FsbGVkIGR1cmluZyB0aGUgc2VydmVyIHJlbmRlciwgYnV0IGl0IHNob3VsZG4ndCBiZS4gXCIgKyBcIllvdSBhcmUgbGlrZWx5IGNhbGxpbmcgYSB1c2VGZXRjaGVyKCkgbWV0aG9kIGluIHRoZSBib2R5IG9mIHlvdXIgY29tcG9uZW50LiBcIiArIFwiVHJ5IG1vdmluZyBpdCB0byBhIHVzZUVmZmVjdCBvciBhIGNhbGxiYWNrLlwiKTtcbiAgICB9XG4gICAgaWYgKGZldGNoQ29udHJvbGxlcnMuaGFzKGtleSkpIGFib3J0RmV0Y2hlcihrZXkpO1xuICAgIGxldCByb3V0ZXNUb1VzZSA9IGluRmxpZ2h0RGF0YVJvdXRlcyB8fCBkYXRhUm91dGVzO1xuICAgIGxldCBub3JtYWxpemVkUGF0aCA9IG5vcm1hbGl6ZVRvKHN0YXRlLmxvY2F0aW9uLCBzdGF0ZS5tYXRjaGVzLCBiYXNlbmFtZSwgZnV0dXJlLnY3X3ByZXBlbmRCYXNlbmFtZSwgaHJlZiwgcm91dGVJZCwgb3B0cyA9PSBudWxsID8gdm9pZCAwIDogb3B0cy5yZWxhdGl2ZSk7XG4gICAgbGV0IG1hdGNoZXMgPSBtYXRjaFJvdXRlcyhyb3V0ZXNUb1VzZSwgbm9ybWFsaXplZFBhdGgsIGJhc2VuYW1lKTtcbiAgICBpZiAoIW1hdGNoZXMpIHtcbiAgICAgIHNldEZldGNoZXJFcnJvcihrZXksIHJvdXRlSWQsIGdldEludGVybmFsUm91dGVyRXJyb3IoNDA0LCB7XG4gICAgICAgIHBhdGhuYW1lOiBub3JtYWxpemVkUGF0aFxuICAgICAgfSkpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBsZXQge1xuICAgICAgcGF0aCxcbiAgICAgIHN1Ym1pc3Npb24sXG4gICAgICBlcnJvclxuICAgIH0gPSBub3JtYWxpemVOYXZpZ2F0ZU9wdGlvbnMoZnV0dXJlLnY3X25vcm1hbGl6ZUZvcm1NZXRob2QsIHRydWUsIG5vcm1hbGl6ZWRQYXRoLCBvcHRzKTtcbiAgICBpZiAoZXJyb3IpIHtcbiAgICAgIHNldEZldGNoZXJFcnJvcihrZXksIHJvdXRlSWQsIGVycm9yKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgbGV0IG1hdGNoID0gZ2V0VGFyZ2V0TWF0Y2gobWF0Y2hlcywgcGF0aCk7XG4gICAgcGVuZGluZ1ByZXZlbnRTY3JvbGxSZXNldCA9IChvcHRzICYmIG9wdHMucHJldmVudFNjcm9sbFJlc2V0KSA9PT0gdHJ1ZTtcbiAgICBpZiAoc3VibWlzc2lvbiAmJiBpc011dGF0aW9uTWV0aG9kKHN1Ym1pc3Npb24uZm9ybU1ldGhvZCkpIHtcbiAgICAgIGhhbmRsZUZldGNoZXJBY3Rpb24oa2V5LCByb3V0ZUlkLCBwYXRoLCBtYXRjaCwgbWF0Y2hlcywgc3VibWlzc2lvbik7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIC8vIFN0b3JlIG9mZiB0aGUgbWF0Y2ggc28gd2UgY2FuIGNhbGwgaXQncyBzaG91bGRSZXZhbGlkYXRlIG9uIHN1YnNlcXVlbnRcbiAgICAvLyByZXZhbGlkYXRpb25zXG4gICAgZmV0Y2hMb2FkTWF0Y2hlcy5zZXQoa2V5LCB7XG4gICAgICByb3V0ZUlkLFxuICAgICAgcGF0aFxuICAgIH0pO1xuICAgIGhhbmRsZUZldGNoZXJMb2FkZXIoa2V5LCByb3V0ZUlkLCBwYXRoLCBtYXRjaCwgbWF0Y2hlcywgc3VibWlzc2lvbik7XG4gIH1cbiAgLy8gQ2FsbCB0aGUgYWN0aW9uIGZvciB0aGUgbWF0Y2hlZCBmZXRjaGVyLnN1Ym1pdCgpLCBhbmQgdGhlbiBoYW5kbGUgcmVkaXJlY3RzLFxuICAvLyBlcnJvcnMsIGFuZCByZXZhbGlkYXRpb25cbiAgYXN5bmMgZnVuY3Rpb24gaGFuZGxlRmV0Y2hlckFjdGlvbihrZXksIHJvdXRlSWQsIHBhdGgsIG1hdGNoLCByZXF1ZXN0TWF0Y2hlcywgc3VibWlzc2lvbikge1xuICAgIGludGVycnVwdEFjdGl2ZUxvYWRzKCk7XG4gICAgZmV0Y2hMb2FkTWF0Y2hlcy5kZWxldGUoa2V5KTtcbiAgICBpZiAoIW1hdGNoLnJvdXRlLmFjdGlvbiAmJiAhbWF0Y2gucm91dGUubGF6eSkge1xuICAgICAgbGV0IGVycm9yID0gZ2V0SW50ZXJuYWxSb3V0ZXJFcnJvcig0MDUsIHtcbiAgICAgICAgbWV0aG9kOiBzdWJtaXNzaW9uLmZvcm1NZXRob2QsXG4gICAgICAgIHBhdGhuYW1lOiBwYXRoLFxuICAgICAgICByb3V0ZUlkOiByb3V0ZUlkXG4gICAgICB9KTtcbiAgICAgIHNldEZldGNoZXJFcnJvcihrZXksIHJvdXRlSWQsIGVycm9yKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgLy8gUHV0IHRoaXMgZmV0Y2hlciBpbnRvIGl0J3Mgc3VibWl0dGluZyBzdGF0ZVxuICAgIGxldCBleGlzdGluZ0ZldGNoZXIgPSBzdGF0ZS5mZXRjaGVycy5nZXQoa2V5KTtcbiAgICBsZXQgZmV0Y2hlciA9IGdldFN1Ym1pdHRpbmdGZXRjaGVyKHN1Ym1pc3Npb24sIGV4aXN0aW5nRmV0Y2hlcik7XG4gICAgc3RhdGUuZmV0Y2hlcnMuc2V0KGtleSwgZmV0Y2hlcik7XG4gICAgdXBkYXRlU3RhdGUoe1xuICAgICAgZmV0Y2hlcnM6IG5ldyBNYXAoc3RhdGUuZmV0Y2hlcnMpXG4gICAgfSk7XG4gICAgLy8gQ2FsbCB0aGUgYWN0aW9uIGZvciB0aGUgZmV0Y2hlclxuICAgIGxldCBhYm9ydENvbnRyb2xsZXIgPSBuZXcgQWJvcnRDb250cm9sbGVyKCk7XG4gICAgbGV0IGZldGNoUmVxdWVzdCA9IGNyZWF0ZUNsaWVudFNpZGVSZXF1ZXN0KGluaXQuaGlzdG9yeSwgcGF0aCwgYWJvcnRDb250cm9sbGVyLnNpZ25hbCwgc3VibWlzc2lvbik7XG4gICAgZmV0Y2hDb250cm9sbGVycy5zZXQoa2V5LCBhYm9ydENvbnRyb2xsZXIpO1xuICAgIGxldCBvcmlnaW5hdGluZ0xvYWRJZCA9IGluY3JlbWVudGluZ0xvYWRJZDtcbiAgICBsZXQgYWN0aW9uUmVzdWx0ID0gYXdhaXQgY2FsbExvYWRlck9yQWN0aW9uKFwiYWN0aW9uXCIsIGZldGNoUmVxdWVzdCwgbWF0Y2gsIHJlcXVlc3RNYXRjaGVzLCBtYW5pZmVzdCwgbWFwUm91dGVQcm9wZXJ0aWVzLCBiYXNlbmFtZSk7XG4gICAgaWYgKGZldGNoUmVxdWVzdC5zaWduYWwuYWJvcnRlZCkge1xuICAgICAgLy8gV2UgY2FuIGRlbGV0ZSB0aGlzIHNvIGxvbmcgYXMgd2Ugd2VyZW4ndCBhYm9ydGVkIGJ5IG91IG91ciBvd24gZmV0Y2hlclxuICAgICAgLy8gcmUtc3VibWl0IHdoaWNoIHdvdWxkIGhhdmUgcHV0IF9uZXdfIGNvbnRyb2xsZXIgaXMgaW4gZmV0Y2hDb250cm9sbGVyc1xuICAgICAgaWYgKGZldGNoQ29udHJvbGxlcnMuZ2V0KGtleSkgPT09IGFib3J0Q29udHJvbGxlcikge1xuICAgICAgICBmZXRjaENvbnRyb2xsZXJzLmRlbGV0ZShrZXkpO1xuICAgICAgfVxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoaXNSZWRpcmVjdFJlc3VsdChhY3Rpb25SZXN1bHQpKSB7XG4gICAgICBmZXRjaENvbnRyb2xsZXJzLmRlbGV0ZShrZXkpO1xuICAgICAgaWYgKHBlbmRpbmdOYXZpZ2F0aW9uTG9hZElkID4gb3JpZ2luYXRpbmdMb2FkSWQpIHtcbiAgICAgICAgLy8gQSBuZXcgbmF2aWdhdGlvbiB3YXMga2lja2VkIG9mZiBhZnRlciBvdXIgYWN0aW9uIHN0YXJ0ZWQsIHNvIHRoYXRcbiAgICAgICAgLy8gc2hvdWxkIHRha2UgcHJlY2VkZW5jZSBvdmVyIHRoaXMgcmVkaXJlY3QgbmF2aWdhdGlvbi4gIFdlIGFscmVhZHlcbiAgICAgICAgLy8gc2V0IGlzUmV2YWxpZGF0aW9uUmVxdWlyZWQgc28gYWxsIGxvYWRlcnMgZm9yIHRoZSBuZXcgcm91dGUgc2hvdWxkXG4gICAgICAgIC8vIGZpcmUgdW5sZXNzIG9wdGVkIG91dCB2aWEgc2hvdWxkUmV2YWxpZGF0ZVxuICAgICAgICBsZXQgZG9uZUZldGNoZXIgPSBnZXREb25lRmV0Y2hlcih1bmRlZmluZWQpO1xuICAgICAgICBzdGF0ZS5mZXRjaGVycy5zZXQoa2V5LCBkb25lRmV0Y2hlcik7XG4gICAgICAgIHVwZGF0ZVN0YXRlKHtcbiAgICAgICAgICBmZXRjaGVyczogbmV3IE1hcChzdGF0ZS5mZXRjaGVycylcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGZldGNoUmVkaXJlY3RJZHMuYWRkKGtleSk7XG4gICAgICAgIGxldCBsb2FkaW5nRmV0Y2hlciA9IGdldExvYWRpbmdGZXRjaGVyKHN1Ym1pc3Npb24pO1xuICAgICAgICBzdGF0ZS5mZXRjaGVycy5zZXQoa2V5LCBsb2FkaW5nRmV0Y2hlcik7XG4gICAgICAgIHVwZGF0ZVN0YXRlKHtcbiAgICAgICAgICBmZXRjaGVyczogbmV3IE1hcChzdGF0ZS5mZXRjaGVycylcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBzdGFydFJlZGlyZWN0TmF2aWdhdGlvbihzdGF0ZSwgYWN0aW9uUmVzdWx0LCB7XG4gICAgICAgICAgZmV0Y2hlclN1Ym1pc3Npb246IHN1Ym1pc3Npb25cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICAgIC8vIFByb2Nlc3MgYW55IG5vbi1yZWRpcmVjdCBlcnJvcnMgdGhyb3duXG4gICAgaWYgKGlzRXJyb3JSZXN1bHQoYWN0aW9uUmVzdWx0KSkge1xuICAgICAgc2V0RmV0Y2hlckVycm9yKGtleSwgcm91dGVJZCwgYWN0aW9uUmVzdWx0LmVycm9yKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKGlzRGVmZXJyZWRSZXN1bHQoYWN0aW9uUmVzdWx0KSkge1xuICAgICAgdGhyb3cgZ2V0SW50ZXJuYWxSb3V0ZXJFcnJvcig0MDAsIHtcbiAgICAgICAgdHlwZTogXCJkZWZlci1hY3Rpb25cIlxuICAgICAgfSk7XG4gICAgfVxuICAgIC8vIFN0YXJ0IHRoZSBkYXRhIGxvYWQgZm9yIGN1cnJlbnQgbWF0Y2hlcywgb3IgdGhlIG5leHQgbG9jYXRpb24gaWYgd2UncmVcbiAgICAvLyBpbiB0aGUgbWlkZGxlIG9mIGEgbmF2aWdhdGlvblxuICAgIGxldCBuZXh0TG9jYXRpb24gPSBzdGF0ZS5uYXZpZ2F0aW9uLmxvY2F0aW9uIHx8IHN0YXRlLmxvY2F0aW9uO1xuICAgIGxldCByZXZhbGlkYXRpb25SZXF1ZXN0ID0gY3JlYXRlQ2xpZW50U2lkZVJlcXVlc3QoaW5pdC5oaXN0b3J5LCBuZXh0TG9jYXRpb24sIGFib3J0Q29udHJvbGxlci5zaWduYWwpO1xuICAgIGxldCByb3V0ZXNUb1VzZSA9IGluRmxpZ2h0RGF0YVJvdXRlcyB8fCBkYXRhUm91dGVzO1xuICAgIGxldCBtYXRjaGVzID0gc3RhdGUubmF2aWdhdGlvbi5zdGF0ZSAhPT0gXCJpZGxlXCIgPyBtYXRjaFJvdXRlcyhyb3V0ZXNUb1VzZSwgc3RhdGUubmF2aWdhdGlvbi5sb2NhdGlvbiwgYmFzZW5hbWUpIDogc3RhdGUubWF0Y2hlcztcbiAgICBpbnZhcmlhbnQobWF0Y2hlcywgXCJEaWRuJ3QgZmluZCBhbnkgbWF0Y2hlcyBhZnRlciBmZXRjaGVyIGFjdGlvblwiKTtcbiAgICBsZXQgbG9hZElkID0gKytpbmNyZW1lbnRpbmdMb2FkSWQ7XG4gICAgZmV0Y2hSZWxvYWRJZHMuc2V0KGtleSwgbG9hZElkKTtcbiAgICBsZXQgbG9hZEZldGNoZXIgPSBnZXRMb2FkaW5nRmV0Y2hlcihzdWJtaXNzaW9uLCBhY3Rpb25SZXN1bHQuZGF0YSk7XG4gICAgc3RhdGUuZmV0Y2hlcnMuc2V0KGtleSwgbG9hZEZldGNoZXIpO1xuICAgIGxldCBbbWF0Y2hlc1RvTG9hZCwgcmV2YWxpZGF0aW5nRmV0Y2hlcnNdID0gZ2V0TWF0Y2hlc1RvTG9hZChpbml0Lmhpc3RvcnksIHN0YXRlLCBtYXRjaGVzLCBzdWJtaXNzaW9uLCBuZXh0TG9jYXRpb24sIGlzUmV2YWxpZGF0aW9uUmVxdWlyZWQsIGNhbmNlbGxlZERlZmVycmVkUm91dGVzLCBjYW5jZWxsZWRGZXRjaGVyTG9hZHMsIGZldGNoTG9hZE1hdGNoZXMsIGZldGNoUmVkaXJlY3RJZHMsIHJvdXRlc1RvVXNlLCBiYXNlbmFtZSwge1xuICAgICAgW21hdGNoLnJvdXRlLmlkXTogYWN0aW9uUmVzdWx0LmRhdGFcbiAgICB9LCB1bmRlZmluZWQgLy8gTm8gbmVlZCB0byBzZW5kIHRocm91Z2ggZXJyb3JzIHNpbmNlIHdlIHNob3J0IGNpcmN1aXQgYWJvdmVcbiAgICApO1xuICAgIC8vIFB1dCBhbGwgcmV2YWxpZGF0aW5nIGZldGNoZXJzIGludG8gdGhlIGxvYWRpbmcgc3RhdGUsIGV4Y2VwdCBmb3IgdGhlXG4gICAgLy8gY3VycmVudCBmZXRjaGVyIHdoaWNoIHdlIHdhbnQgdG8ga2VlcCBpbiBpdCdzIGN1cnJlbnQgbG9hZGluZyBzdGF0ZSB3aGljaFxuICAgIC8vIGNvbnRhaW5zIGl0J3MgYWN0aW9uIHN1Ym1pc3Npb24gaW5mbyArIGFjdGlvbiBkYXRhXG4gICAgcmV2YWxpZGF0aW5nRmV0Y2hlcnMuZmlsdGVyKHJmID0+IHJmLmtleSAhPT0ga2V5KS5mb3JFYWNoKHJmID0+IHtcbiAgICAgIGxldCBzdGFsZUtleSA9IHJmLmtleTtcbiAgICAgIGxldCBleGlzdGluZ0ZldGNoZXIgPSBzdGF0ZS5mZXRjaGVycy5nZXQoc3RhbGVLZXkpO1xuICAgICAgbGV0IHJldmFsaWRhdGluZ0ZldGNoZXIgPSBnZXRMb2FkaW5nRmV0Y2hlcih1bmRlZmluZWQsIGV4aXN0aW5nRmV0Y2hlciA/IGV4aXN0aW5nRmV0Y2hlci5kYXRhIDogdW5kZWZpbmVkKTtcbiAgICAgIHN0YXRlLmZldGNoZXJzLnNldChzdGFsZUtleSwgcmV2YWxpZGF0aW5nRmV0Y2hlcik7XG4gICAgICBpZiAoZmV0Y2hDb250cm9sbGVycy5oYXMoc3RhbGVLZXkpKSB7XG4gICAgICAgIGFib3J0RmV0Y2hlcihzdGFsZUtleSk7XG4gICAgICB9XG4gICAgICBpZiAocmYuY29udHJvbGxlcikge1xuICAgICAgICBmZXRjaENvbnRyb2xsZXJzLnNldChzdGFsZUtleSwgcmYuY29udHJvbGxlcik7XG4gICAgICB9XG4gICAgfSk7XG4gICAgdXBkYXRlU3RhdGUoe1xuICAgICAgZmV0Y2hlcnM6IG5ldyBNYXAoc3RhdGUuZmV0Y2hlcnMpXG4gICAgfSk7XG4gICAgbGV0IGFib3J0UGVuZGluZ0ZldGNoUmV2YWxpZGF0aW9ucyA9ICgpID0+IHJldmFsaWRhdGluZ0ZldGNoZXJzLmZvckVhY2gocmYgPT4gYWJvcnRGZXRjaGVyKHJmLmtleSkpO1xuICAgIGFib3J0Q29udHJvbGxlci5zaWduYWwuYWRkRXZlbnRMaXN0ZW5lcihcImFib3J0XCIsIGFib3J0UGVuZGluZ0ZldGNoUmV2YWxpZGF0aW9ucyk7XG4gICAgbGV0IHtcbiAgICAgIHJlc3VsdHMsXG4gICAgICBsb2FkZXJSZXN1bHRzLFxuICAgICAgZmV0Y2hlclJlc3VsdHNcbiAgICB9ID0gYXdhaXQgY2FsbExvYWRlcnNBbmRNYXliZVJlc29sdmVEYXRhKHN0YXRlLm1hdGNoZXMsIG1hdGNoZXMsIG1hdGNoZXNUb0xvYWQsIHJldmFsaWRhdGluZ0ZldGNoZXJzLCByZXZhbGlkYXRpb25SZXF1ZXN0KTtcbiAgICBpZiAoYWJvcnRDb250cm9sbGVyLnNpZ25hbC5hYm9ydGVkKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGFib3J0Q29udHJvbGxlci5zaWduYWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImFib3J0XCIsIGFib3J0UGVuZGluZ0ZldGNoUmV2YWxpZGF0aW9ucyk7XG4gICAgZmV0Y2hSZWxvYWRJZHMuZGVsZXRlKGtleSk7XG4gICAgZmV0Y2hDb250cm9sbGVycy5kZWxldGUoa2V5KTtcbiAgICByZXZhbGlkYXRpbmdGZXRjaGVycy5mb3JFYWNoKHIgPT4gZmV0Y2hDb250cm9sbGVycy5kZWxldGUoci5rZXkpKTtcbiAgICBsZXQgcmVkaXJlY3QgPSBmaW5kUmVkaXJlY3QocmVzdWx0cyk7XG4gICAgaWYgKHJlZGlyZWN0KSB7XG4gICAgICBpZiAocmVkaXJlY3QuaWR4ID49IG1hdGNoZXNUb0xvYWQubGVuZ3RoKSB7XG4gICAgICAgIC8vIElmIHRoaXMgcmVkaXJlY3QgY2FtZSBmcm9tIGEgZmV0Y2hlciBtYWtlIHN1cmUgd2UgbWFyayBpdCBpblxuICAgICAgICAvLyBmZXRjaFJlZGlyZWN0SWRzIHNvIGl0IGRvZXNuJ3QgZ2V0IHJldmFsaWRhdGVkIG9uIHRoZSBuZXh0IHNldCBvZlxuICAgICAgICAvLyBsb2FkZXIgZXhlY3V0aW9uc1xuICAgICAgICBsZXQgZmV0Y2hlcktleSA9IHJldmFsaWRhdGluZ0ZldGNoZXJzW3JlZGlyZWN0LmlkeCAtIG1hdGNoZXNUb0xvYWQubGVuZ3RoXS5rZXk7XG4gICAgICAgIGZldGNoUmVkaXJlY3RJZHMuYWRkKGZldGNoZXJLZXkpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHN0YXJ0UmVkaXJlY3ROYXZpZ2F0aW9uKHN0YXRlLCByZWRpcmVjdC5yZXN1bHQpO1xuICAgIH1cbiAgICAvLyBQcm9jZXNzIGFuZCBjb21taXQgb3V0cHV0IGZyb20gbG9hZGVyc1xuICAgIGxldCB7XG4gICAgICBsb2FkZXJEYXRhLFxuICAgICAgZXJyb3JzXG4gICAgfSA9IHByb2Nlc3NMb2FkZXJEYXRhKHN0YXRlLCBzdGF0ZS5tYXRjaGVzLCBtYXRjaGVzVG9Mb2FkLCBsb2FkZXJSZXN1bHRzLCB1bmRlZmluZWQsIHJldmFsaWRhdGluZ0ZldGNoZXJzLCBmZXRjaGVyUmVzdWx0cywgYWN0aXZlRGVmZXJyZWRzKTtcbiAgICAvLyBTaW5jZSB3ZSBsZXQgcmV2YWxpZGF0aW9ucyBjb21wbGV0ZSBldmVuIGlmIHRoZSBzdWJtaXR0aW5nIGZldGNoZXIgd2FzXG4gICAgLy8gZGVsZXRlZCwgb25seSBwdXQgaXQgYmFjayB0byBpZGxlIGlmIGl0IGhhc24ndCBiZWVuIGRlbGV0ZWRcbiAgICBpZiAoc3RhdGUuZmV0Y2hlcnMuaGFzKGtleSkpIHtcbiAgICAgIGxldCBkb25lRmV0Y2hlciA9IGdldERvbmVGZXRjaGVyKGFjdGlvblJlc3VsdC5kYXRhKTtcbiAgICAgIHN0YXRlLmZldGNoZXJzLnNldChrZXksIGRvbmVGZXRjaGVyKTtcbiAgICB9XG4gICAgbGV0IGRpZEFib3J0RmV0Y2hMb2FkcyA9IGFib3J0U3RhbGVGZXRjaExvYWRzKGxvYWRJZCk7XG4gICAgLy8gSWYgd2UgYXJlIGN1cnJlbnRseSBpbiBhIG5hdmlnYXRpb24gbG9hZGluZyBzdGF0ZSBhbmQgdGhpcyBmZXRjaGVyIGlzXG4gICAgLy8gbW9yZSByZWNlbnQgdGhhbiB0aGUgbmF2aWdhdGlvbiwgd2Ugd2FudCB0aGUgbmV3ZXIgZGF0YSBzbyBhYm9ydCB0aGVcbiAgICAvLyBuYXZpZ2F0aW9uIGFuZCBjb21wbGV0ZSBpdCB3aXRoIHRoZSBmZXRjaGVyIGRhdGFcbiAgICBpZiAoc3RhdGUubmF2aWdhdGlvbi5zdGF0ZSA9PT0gXCJsb2FkaW5nXCIgJiYgbG9hZElkID4gcGVuZGluZ05hdmlnYXRpb25Mb2FkSWQpIHtcbiAgICAgIGludmFyaWFudChwZW5kaW5nQWN0aW9uLCBcIkV4cGVjdGVkIHBlbmRpbmcgYWN0aW9uXCIpO1xuICAgICAgcGVuZGluZ05hdmlnYXRpb25Db250cm9sbGVyICYmIHBlbmRpbmdOYXZpZ2F0aW9uQ29udHJvbGxlci5hYm9ydCgpO1xuICAgICAgY29tcGxldGVOYXZpZ2F0aW9uKHN0YXRlLm5hdmlnYXRpb24ubG9jYXRpb24sIHtcbiAgICAgICAgbWF0Y2hlcyxcbiAgICAgICAgbG9hZGVyRGF0YSxcbiAgICAgICAgZXJyb3JzLFxuICAgICAgICBmZXRjaGVyczogbmV3IE1hcChzdGF0ZS5mZXRjaGVycylcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBvdGhlcndpc2UganVzdCB1cGRhdGUgd2l0aCB0aGUgZmV0Y2hlciBkYXRhLCBwcmVzZXJ2aW5nIGFueSBleGlzdGluZ1xuICAgICAgLy8gbG9hZGVyRGF0YSBmb3IgbG9hZGVycyB0aGF0IGRpZCBub3QgbmVlZCB0byByZWxvYWQuICBXZSBoYXZlIHRvXG4gICAgICAvLyBtYW51YWxseSBtZXJnZSBoZXJlIHNpbmNlIHdlIGFyZW4ndCBnb2luZyB0aHJvdWdoIGNvbXBsZXRlTmF2aWdhdGlvblxuICAgICAgdXBkYXRlU3RhdGUoX2V4dGVuZHMoe1xuICAgICAgICBlcnJvcnMsXG4gICAgICAgIGxvYWRlckRhdGE6IG1lcmdlTG9hZGVyRGF0YShzdGF0ZS5sb2FkZXJEYXRhLCBsb2FkZXJEYXRhLCBtYXRjaGVzLCBlcnJvcnMpXG4gICAgICB9LCBkaWRBYm9ydEZldGNoTG9hZHMgfHwgcmV2YWxpZGF0aW5nRmV0Y2hlcnMubGVuZ3RoID4gMCA/IHtcbiAgICAgICAgZmV0Y2hlcnM6IG5ldyBNYXAoc3RhdGUuZmV0Y2hlcnMpXG4gICAgICB9IDoge30pKTtcbiAgICAgIGlzUmV2YWxpZGF0aW9uUmVxdWlyZWQgPSBmYWxzZTtcbiAgICB9XG4gIH1cbiAgLy8gQ2FsbCB0aGUgbWF0Y2hlZCBsb2FkZXIgZm9yIGZldGNoZXIubG9hZCgpLCBoYW5kbGluZyByZWRpcmVjdHMsIGVycm9ycywgZXRjLlxuICBhc3luYyBmdW5jdGlvbiBoYW5kbGVGZXRjaGVyTG9hZGVyKGtleSwgcm91dGVJZCwgcGF0aCwgbWF0Y2gsIG1hdGNoZXMsIHN1Ym1pc3Npb24pIHtcbiAgICBsZXQgZXhpc3RpbmdGZXRjaGVyID0gc3RhdGUuZmV0Y2hlcnMuZ2V0KGtleSk7XG4gICAgLy8gUHV0IHRoaXMgZmV0Y2hlciBpbnRvIGl0J3MgbG9hZGluZyBzdGF0ZVxuICAgIGxldCBsb2FkaW5nRmV0Y2hlciA9IGdldExvYWRpbmdGZXRjaGVyKHN1Ym1pc3Npb24sIGV4aXN0aW5nRmV0Y2hlciA/IGV4aXN0aW5nRmV0Y2hlci5kYXRhIDogdW5kZWZpbmVkKTtcbiAgICBzdGF0ZS5mZXRjaGVycy5zZXQoa2V5LCBsb2FkaW5nRmV0Y2hlcik7XG4gICAgdXBkYXRlU3RhdGUoe1xuICAgICAgZmV0Y2hlcnM6IG5ldyBNYXAoc3RhdGUuZmV0Y2hlcnMpXG4gICAgfSk7XG4gICAgLy8gQ2FsbCB0aGUgbG9hZGVyIGZvciB0aGlzIGZldGNoZXIgcm91dGUgbWF0Y2hcbiAgICBsZXQgYWJvcnRDb250cm9sbGVyID0gbmV3IEFib3J0Q29udHJvbGxlcigpO1xuICAgIGxldCBmZXRjaFJlcXVlc3QgPSBjcmVhdGVDbGllbnRTaWRlUmVxdWVzdChpbml0Lmhpc3RvcnksIHBhdGgsIGFib3J0Q29udHJvbGxlci5zaWduYWwpO1xuICAgIGZldGNoQ29udHJvbGxlcnMuc2V0KGtleSwgYWJvcnRDb250cm9sbGVyKTtcbiAgICBsZXQgb3JpZ2luYXRpbmdMb2FkSWQgPSBpbmNyZW1lbnRpbmdMb2FkSWQ7XG4gICAgbGV0IHJlc3VsdCA9IGF3YWl0IGNhbGxMb2FkZXJPckFjdGlvbihcImxvYWRlclwiLCBmZXRjaFJlcXVlc3QsIG1hdGNoLCBtYXRjaGVzLCBtYW5pZmVzdCwgbWFwUm91dGVQcm9wZXJ0aWVzLCBiYXNlbmFtZSk7XG4gICAgLy8gRGVmZXJyZWQgaXNuJ3Qgc3VwcG9ydGVkIGZvciBmZXRjaGVyIGxvYWRzLCBhd2FpdCBldmVyeXRoaW5nIGFuZCB0cmVhdCBpdFxuICAgIC8vIGFzIGEgbm9ybWFsIGxvYWQuICByZXNvbHZlRGVmZXJyZWREYXRhIHdpbGwgcmV0dXJuIHVuZGVmaW5lZCBpZiB0aGlzXG4gICAgLy8gZmV0Y2hlciBnZXRzIGFib3J0ZWQsIHNvIHdlIGp1c3QgbGVhdmUgcmVzdWx0IHVudG91Y2hlZCBhbmQgc2hvcnQgY2lyY3VpdFxuICAgIC8vIGJlbG93IGlmIHRoYXQgaGFwcGVuc1xuICAgIGlmIChpc0RlZmVycmVkUmVzdWx0KHJlc3VsdCkpIHtcbiAgICAgIHJlc3VsdCA9IChhd2FpdCByZXNvbHZlRGVmZXJyZWREYXRhKHJlc3VsdCwgZmV0Y2hSZXF1ZXN0LnNpZ25hbCwgdHJ1ZSkpIHx8IHJlc3VsdDtcbiAgICB9XG4gICAgLy8gV2UgY2FuIGRlbGV0ZSB0aGlzIHNvIGxvbmcgYXMgd2Ugd2VyZW4ndCBhYm9ydGVkIGJ5IG91ciBvdXIgb3duIGZldGNoZXJcbiAgICAvLyByZS1sb2FkIHdoaWNoIHdvdWxkIGhhdmUgcHV0IF9uZXdfIGNvbnRyb2xsZXIgaXMgaW4gZmV0Y2hDb250cm9sbGVyc1xuICAgIGlmIChmZXRjaENvbnRyb2xsZXJzLmdldChrZXkpID09PSBhYm9ydENvbnRyb2xsZXIpIHtcbiAgICAgIGZldGNoQ29udHJvbGxlcnMuZGVsZXRlKGtleSk7XG4gICAgfVxuICAgIGlmIChmZXRjaFJlcXVlc3Quc2lnbmFsLmFib3J0ZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgLy8gSWYgdGhlIGxvYWRlciB0aHJldyBhIHJlZGlyZWN0IFJlc3BvbnNlLCBzdGFydCBhIG5ldyBSRVBMQUNFIG5hdmlnYXRpb25cbiAgICBpZiAoaXNSZWRpcmVjdFJlc3VsdChyZXN1bHQpKSB7XG4gICAgICBpZiAocGVuZGluZ05hdmlnYXRpb25Mb2FkSWQgPiBvcmlnaW5hdGluZ0xvYWRJZCkge1xuICAgICAgICAvLyBBIG5ldyBuYXZpZ2F0aW9uIHdhcyBraWNrZWQgb2ZmIGFmdGVyIG91ciBsb2FkZXIgc3RhcnRlZCwgc28gdGhhdFxuICAgICAgICAvLyBzaG91bGQgdGFrZSBwcmVjZWRlbmNlIG92ZXIgdGhpcyByZWRpcmVjdCBuYXZpZ2F0aW9uXG4gICAgICAgIGxldCBkb25lRmV0Y2hlciA9IGdldERvbmVGZXRjaGVyKHVuZGVmaW5lZCk7XG4gICAgICAgIHN0YXRlLmZldGNoZXJzLnNldChrZXksIGRvbmVGZXRjaGVyKTtcbiAgICAgICAgdXBkYXRlU3RhdGUoe1xuICAgICAgICAgIGZldGNoZXJzOiBuZXcgTWFwKHN0YXRlLmZldGNoZXJzKVxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZmV0Y2hSZWRpcmVjdElkcy5hZGQoa2V5KTtcbiAgICAgICAgYXdhaXQgc3RhcnRSZWRpcmVjdE5hdmlnYXRpb24oc3RhdGUsIHJlc3VsdCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICB9XG4gICAgLy8gUHJvY2VzcyBhbnkgbm9uLXJlZGlyZWN0IGVycm9ycyB0aHJvd25cbiAgICBpZiAoaXNFcnJvclJlc3VsdChyZXN1bHQpKSB7XG4gICAgICBsZXQgYm91bmRhcnlNYXRjaCA9IGZpbmROZWFyZXN0Qm91bmRhcnkoc3RhdGUubWF0Y2hlcywgcm91dGVJZCk7XG4gICAgICBzdGF0ZS5mZXRjaGVycy5kZWxldGUoa2V5KTtcbiAgICAgIC8vIFRPRE86IEluIHJlbWl4LCB0aGlzIHdvdWxkIHJlc2V0IHRvIElETEVfTkFWSUdBVElPTiBpZiBpdCB3YXMgYSBjYXRjaCAtXG4gICAgICAvLyBkbyB3ZSBuZWVkIHRvIGJlaGF2ZSBhbnkgZGlmZmVyZW50bHkgd2l0aCBvdXIgbm9uLXJlZGlyZWN0IGVycm9ycz9cbiAgICAgIC8vIFdoYXQgaWYgaXQgd2FzIGEgbm9uLXJlZGlyZWN0IFJlc3BvbnNlP1xuICAgICAgdXBkYXRlU3RhdGUoe1xuICAgICAgICBmZXRjaGVyczogbmV3IE1hcChzdGF0ZS5mZXRjaGVycyksXG4gICAgICAgIGVycm9yczoge1xuICAgICAgICAgIFtib3VuZGFyeU1hdGNoLnJvdXRlLmlkXTogcmVzdWx0LmVycm9yXG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpbnZhcmlhbnQoIWlzRGVmZXJyZWRSZXN1bHQocmVzdWx0KSwgXCJVbmhhbmRsZWQgZmV0Y2hlciBkZWZlcnJlZCBkYXRhXCIpO1xuICAgIC8vIFB1dCB0aGUgZmV0Y2hlciBiYWNrIGludG8gYW4gaWRsZSBzdGF0ZVxuICAgIGxldCBkb25lRmV0Y2hlciA9IGdldERvbmVGZXRjaGVyKHJlc3VsdC5kYXRhKTtcbiAgICBzdGF0ZS5mZXRjaGVycy5zZXQoa2V5LCBkb25lRmV0Y2hlcik7XG4gICAgdXBkYXRlU3RhdGUoe1xuICAgICAgZmV0Y2hlcnM6IG5ldyBNYXAoc3RhdGUuZmV0Y2hlcnMpXG4gICAgfSk7XG4gIH1cbiAgLyoqXG4gICAqIFV0aWxpdHkgZnVuY3Rpb24gdG8gaGFuZGxlIHJlZGlyZWN0cyByZXR1cm5lZCBmcm9tIGFuIGFjdGlvbiBvciBsb2FkZXIuXG4gICAqIE5vcm1hbGx5LCBhIHJlZGlyZWN0IFwicmVwbGFjZXNcIiB0aGUgbmF2aWdhdGlvbiB0aGF0IHRyaWdnZXJlZCBpdC4gIFNvLCBmb3JcbiAgICogZXhhbXBsZTpcbiAgICpcbiAgICogIC0gdXNlciBpcyBvbiAvYVxuICAgKiAgLSB1c2VyIGNsaWNrcyBhIGxpbmsgdG8gL2JcbiAgICogIC0gbG9hZGVyIGZvciAvYiByZWRpcmVjdHMgdG8gL2NcbiAgICpcbiAgICogSW4gYSBub24tSlMgYXBwIHRoZSBicm93c2VyIHdvdWxkIHRyYWNrIHRoZSBpbi1mbGlnaHQgbmF2aWdhdGlvbiB0byAvYiBhbmRcbiAgICogdGhlbiByZXBsYWNlIGl0IHdpdGggL2Mgd2hlbiBpdCBlbmNvdW50ZXJlZCB0aGUgcmVkaXJlY3QgcmVzcG9uc2UuICBJblxuICAgKiB0aGUgZW5kIGl0IHdvdWxkIG9ubHkgZXZlciB1cGRhdGUgdGhlIFVSTCBiYXIgd2l0aCAvYy5cbiAgICpcbiAgICogSW4gY2xpZW50LXNpZGUgcm91dGluZyB1c2luZyBwdXNoU3RhdGUvcmVwbGFjZVN0YXRlLCB3ZSBhaW0gdG8gZW11bGF0ZVxuICAgKiB0aGlzIGJlaGF2aW9yIGFuZCB3ZSBhbHNvIGRvIG5vdCB1cGRhdGUgaGlzdG9yeSB1bnRpbCB0aGUgZW5kIG9mIHRoZVxuICAgKiBuYXZpZ2F0aW9uIChpbmNsdWRpbmcgcHJvY2Vzc2VkIHJlZGlyZWN0cykuICBUaGlzIG1lYW5zIHRoYXQgd2UgbmV2ZXJcbiAgICogYWN0dWFsbHkgdG91Y2ggaGlzdG9yeSB1bnRpbCB3ZSd2ZSBwcm9jZXNzZWQgcmVkaXJlY3RzLCBzbyB3ZSBqdXN0IHVzZVxuICAgKiB0aGUgaGlzdG9yeSBhY3Rpb24gZnJvbSB0aGUgb3JpZ2luYWwgbmF2aWdhdGlvbiAoUFVTSCBvciBSRVBMQUNFKS5cbiAgICovXG4gIGFzeW5jIGZ1bmN0aW9uIHN0YXJ0UmVkaXJlY3ROYXZpZ2F0aW9uKHN0YXRlLCByZWRpcmVjdCwgX3RlbXApIHtcbiAgICBsZXQge1xuICAgICAgc3VibWlzc2lvbixcbiAgICAgIGZldGNoZXJTdWJtaXNzaW9uLFxuICAgICAgcmVwbGFjZVxuICAgIH0gPSBfdGVtcCA9PT0gdm9pZCAwID8ge30gOiBfdGVtcDtcbiAgICBpZiAocmVkaXJlY3QucmV2YWxpZGF0ZSkge1xuICAgICAgaXNSZXZhbGlkYXRpb25SZXF1aXJlZCA9IHRydWU7XG4gICAgfVxuICAgIGxldCByZWRpcmVjdExvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24oc3RhdGUubG9jYXRpb24sIHJlZGlyZWN0LmxvY2F0aW9uLCB7XG4gICAgICBfaXNSZWRpcmVjdDogdHJ1ZVxuICAgIH0pO1xuICAgIGludmFyaWFudChyZWRpcmVjdExvY2F0aW9uLCBcIkV4cGVjdGVkIGEgbG9jYXRpb24gb24gdGhlIHJlZGlyZWN0IG5hdmlnYXRpb25cIik7XG4gICAgaWYgKGlzQnJvd3Nlcikge1xuICAgICAgbGV0IGlzRG9jdW1lbnRSZWxvYWQgPSBmYWxzZTtcbiAgICAgIGlmIChyZWRpcmVjdC5yZWxvYWREb2N1bWVudCkge1xuICAgICAgICAvLyBIYXJkIHJlbG9hZCBpZiB0aGUgcmVzcG9uc2UgY29udGFpbmVkIFgtUmVtaXgtUmVsb2FkLURvY3VtZW50XG4gICAgICAgIGlzRG9jdW1lbnRSZWxvYWQgPSB0cnVlO1xuICAgICAgfSBlbHNlIGlmIChBQlNPTFVURV9VUkxfUkVHRVgudGVzdChyZWRpcmVjdC5sb2NhdGlvbikpIHtcbiAgICAgICAgY29uc3QgdXJsID0gaW5pdC5oaXN0b3J5LmNyZWF0ZVVSTChyZWRpcmVjdC5sb2NhdGlvbik7XG4gICAgICAgIGlzRG9jdW1lbnRSZWxvYWQgPVxuICAgICAgICAvLyBIYXJkIHJlbG9hZCBpZiBpdCdzIGFuIGFic29sdXRlIFVSTCB0byBhIG5ldyBvcmlnaW5cbiAgICAgICAgdXJsLm9yaWdpbiAhPT0gcm91dGVyV2luZG93LmxvY2F0aW9uLm9yaWdpbiB8fFxuICAgICAgICAvLyBIYXJkIHJlbG9hZCBpZiBpdCdzIGFuIGFic29sdXRlIFVSTCB0aGF0IGRvZXMgbm90IG1hdGNoIG91ciBiYXNlbmFtZVxuICAgICAgICBzdHJpcEJhc2VuYW1lKHVybC5wYXRobmFtZSwgYmFzZW5hbWUpID09IG51bGw7XG4gICAgICB9XG4gICAgICBpZiAoaXNEb2N1bWVudFJlbG9hZCkge1xuICAgICAgICBpZiAocmVwbGFjZSkge1xuICAgICAgICAgIHJvdXRlcldpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKHJlZGlyZWN0LmxvY2F0aW9uKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByb3V0ZXJXaW5kb3cubG9jYXRpb24uYXNzaWduKHJlZGlyZWN0LmxvY2F0aW9uKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgfVxuICAgIC8vIFRoZXJlJ3Mgbm8gbmVlZCB0byBhYm9ydCBvbiByZWRpcmVjdHMsIHNpbmNlIHdlIGRvbid0IGRldGVjdCB0aGVcbiAgICAvLyByZWRpcmVjdCB1bnRpbCB0aGUgYWN0aW9uL2xvYWRlcnMgaGF2ZSBzZXR0bGVkXG4gICAgcGVuZGluZ05hdmlnYXRpb25Db250cm9sbGVyID0gbnVsbDtcbiAgICBsZXQgcmVkaXJlY3RIaXN0b3J5QWN0aW9uID0gcmVwbGFjZSA9PT0gdHJ1ZSA/IEFjdGlvbi5SZXBsYWNlIDogQWN0aW9uLlB1c2g7XG4gICAgLy8gVXNlIHRoZSBpbmNvbWluZyBzdWJtaXNzaW9uIGlmIHByb3ZpZGVkLCBmYWxsYmFjayBvbiB0aGUgYWN0aXZlIG9uZSBpblxuICAgIC8vIHN0YXRlLm5hdmlnYXRpb25cbiAgICBsZXQge1xuICAgICAgZm9ybU1ldGhvZCxcbiAgICAgIGZvcm1BY3Rpb24sXG4gICAgICBmb3JtRW5jVHlwZVxuICAgIH0gPSBzdGF0ZS5uYXZpZ2F0aW9uO1xuICAgIGlmICghc3VibWlzc2lvbiAmJiAhZmV0Y2hlclN1Ym1pc3Npb24gJiYgZm9ybU1ldGhvZCAmJiBmb3JtQWN0aW9uICYmIGZvcm1FbmNUeXBlKSB7XG4gICAgICBzdWJtaXNzaW9uID0gZ2V0U3VibWlzc2lvbkZyb21OYXZpZ2F0aW9uKHN0YXRlLm5hdmlnYXRpb24pO1xuICAgIH1cbiAgICAvLyBJZiB0aGlzIHdhcyBhIDMwNy8zMDggc3VibWlzc2lvbiB3ZSB3YW50IHRvIHByZXNlcnZlIHRoZSBIVFRQIG1ldGhvZCBhbmRcbiAgICAvLyByZS1zdWJtaXQgdGhlIEdFVC9QT1NUL1BVVC9QQVRDSC9ERUxFVEUgYXMgYSBzdWJtaXNzaW9uIG5hdmlnYXRpb24gdG8gdGhlXG4gICAgLy8gcmVkaXJlY3RlZCBsb2NhdGlvblxuICAgIGxldCBhY3RpdmVTdWJtaXNzaW9uID0gc3VibWlzc2lvbiB8fCBmZXRjaGVyU3VibWlzc2lvbjtcbiAgICBpZiAocmVkaXJlY3RQcmVzZXJ2ZU1ldGhvZFN0YXR1c0NvZGVzLmhhcyhyZWRpcmVjdC5zdGF0dXMpICYmIGFjdGl2ZVN1Ym1pc3Npb24gJiYgaXNNdXRhdGlvbk1ldGhvZChhY3RpdmVTdWJtaXNzaW9uLmZvcm1NZXRob2QpKSB7XG4gICAgICBhd2FpdCBzdGFydE5hdmlnYXRpb24ocmVkaXJlY3RIaXN0b3J5QWN0aW9uLCByZWRpcmVjdExvY2F0aW9uLCB7XG4gICAgICAgIHN1Ym1pc3Npb246IF9leHRlbmRzKHt9LCBhY3RpdmVTdWJtaXNzaW9uLCB7XG4gICAgICAgICAgZm9ybUFjdGlvbjogcmVkaXJlY3QubG9jYXRpb25cbiAgICAgICAgfSksXG4gICAgICAgIC8vIFByZXNlcnZlIHRoaXMgZmxhZyBhY3Jvc3MgcmVkaXJlY3RzXG4gICAgICAgIHByZXZlbnRTY3JvbGxSZXNldDogcGVuZGluZ1ByZXZlbnRTY3JvbGxSZXNldFxuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIElmIHdlIGhhdmUgYSBuYXZpZ2F0aW9uIHN1Ym1pc3Npb24sIHdlIHdpbGwgcHJlc2VydmUgaXQgdGhyb3VnaCB0aGVcbiAgICAgIC8vIHJlZGlyZWN0IG5hdmlnYXRpb25cbiAgICAgIGxldCBvdmVycmlkZU5hdmlnYXRpb24gPSBnZXRMb2FkaW5nTmF2aWdhdGlvbihyZWRpcmVjdExvY2F0aW9uLCBzdWJtaXNzaW9uKTtcbiAgICAgIGF3YWl0IHN0YXJ0TmF2aWdhdGlvbihyZWRpcmVjdEhpc3RvcnlBY3Rpb24sIHJlZGlyZWN0TG9jYXRpb24sIHtcbiAgICAgICAgb3ZlcnJpZGVOYXZpZ2F0aW9uLFxuICAgICAgICAvLyBTZW5kIGZldGNoZXIgc3VibWlzc2lvbnMgdGhyb3VnaCBmb3Igc2hvdWxkUmV2YWxpZGF0ZVxuICAgICAgICBmZXRjaGVyU3VibWlzc2lvbixcbiAgICAgICAgLy8gUHJlc2VydmUgdGhpcyBmbGFnIGFjcm9zcyByZWRpcmVjdHNcbiAgICAgICAgcHJldmVudFNjcm9sbFJlc2V0OiBwZW5kaW5nUHJldmVudFNjcm9sbFJlc2V0XG4gICAgICB9KTtcbiAgICB9XG4gIH1cbiAgYXN5bmMgZnVuY3Rpb24gY2FsbExvYWRlcnNBbmRNYXliZVJlc29sdmVEYXRhKGN1cnJlbnRNYXRjaGVzLCBtYXRjaGVzLCBtYXRjaGVzVG9Mb2FkLCBmZXRjaGVyc1RvTG9hZCwgcmVxdWVzdCkge1xuICAgIC8vIENhbGwgYWxsIG5hdmlnYXRpb24gbG9hZGVycyBhbmQgcmV2YWxpZGF0aW5nIGZldGNoZXIgbG9hZGVycyBpbiBwYXJhbGxlbCxcbiAgICAvLyB0aGVuIHNsaWNlIG9mZiB0aGUgcmVzdWx0cyBpbnRvIHNlcGFyYXRlIGFycmF5cyBzbyB3ZSBjYW4gaGFuZGxlIHRoZW1cbiAgICAvLyBhY2NvcmRpbmdseVxuICAgIGxldCByZXN1bHRzID0gYXdhaXQgUHJvbWlzZS5hbGwoWy4uLm1hdGNoZXNUb0xvYWQubWFwKG1hdGNoID0+IGNhbGxMb2FkZXJPckFjdGlvbihcImxvYWRlclwiLCByZXF1ZXN0LCBtYXRjaCwgbWF0Y2hlcywgbWFuaWZlc3QsIG1hcFJvdXRlUHJvcGVydGllcywgYmFzZW5hbWUpKSwgLi4uZmV0Y2hlcnNUb0xvYWQubWFwKGYgPT4ge1xuICAgICAgaWYgKGYubWF0Y2hlcyAmJiBmLm1hdGNoICYmIGYuY29udHJvbGxlcikge1xuICAgICAgICByZXR1cm4gY2FsbExvYWRlck9yQWN0aW9uKFwibG9hZGVyXCIsIGNyZWF0ZUNsaWVudFNpZGVSZXF1ZXN0KGluaXQuaGlzdG9yeSwgZi5wYXRoLCBmLmNvbnRyb2xsZXIuc2lnbmFsKSwgZi5tYXRjaCwgZi5tYXRjaGVzLCBtYW5pZmVzdCwgbWFwUm91dGVQcm9wZXJ0aWVzLCBiYXNlbmFtZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsZXQgZXJyb3IgPSB7XG4gICAgICAgICAgdHlwZTogUmVzdWx0VHlwZS5lcnJvcixcbiAgICAgICAgICBlcnJvcjogZ2V0SW50ZXJuYWxSb3V0ZXJFcnJvcig0MDQsIHtcbiAgICAgICAgICAgIHBhdGhuYW1lOiBmLnBhdGhcbiAgICAgICAgICB9KVxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gZXJyb3I7XG4gICAgICB9XG4gICAgfSldKTtcbiAgICBsZXQgbG9hZGVyUmVzdWx0cyA9IHJlc3VsdHMuc2xpY2UoMCwgbWF0Y2hlc1RvTG9hZC5sZW5ndGgpO1xuICAgIGxldCBmZXRjaGVyUmVzdWx0cyA9IHJlc3VsdHMuc2xpY2UobWF0Y2hlc1RvTG9hZC5sZW5ndGgpO1xuICAgIGF3YWl0IFByb21pc2UuYWxsKFtyZXNvbHZlRGVmZXJyZWRSZXN1bHRzKGN1cnJlbnRNYXRjaGVzLCBtYXRjaGVzVG9Mb2FkLCBsb2FkZXJSZXN1bHRzLCBsb2FkZXJSZXN1bHRzLm1hcCgoKSA9PiByZXF1ZXN0LnNpZ25hbCksIGZhbHNlLCBzdGF0ZS5sb2FkZXJEYXRhKSwgcmVzb2x2ZURlZmVycmVkUmVzdWx0cyhjdXJyZW50TWF0Y2hlcywgZmV0Y2hlcnNUb0xvYWQubWFwKGYgPT4gZi5tYXRjaCksIGZldGNoZXJSZXN1bHRzLCBmZXRjaGVyc1RvTG9hZC5tYXAoZiA9PiBmLmNvbnRyb2xsZXIgPyBmLmNvbnRyb2xsZXIuc2lnbmFsIDogbnVsbCksIHRydWUpXSk7XG4gICAgcmV0dXJuIHtcbiAgICAgIHJlc3VsdHMsXG4gICAgICBsb2FkZXJSZXN1bHRzLFxuICAgICAgZmV0Y2hlclJlc3VsdHNcbiAgICB9O1xuICB9XG4gIGZ1bmN0aW9uIGludGVycnVwdEFjdGl2ZUxvYWRzKCkge1xuICAgIC8vIEV2ZXJ5IGludGVycnVwdGlvbiB0cmlnZ2VycyBhIHJldmFsaWRhdGlvblxuICAgIGlzUmV2YWxpZGF0aW9uUmVxdWlyZWQgPSB0cnVlO1xuICAgIC8vIENhbmNlbCBwZW5kaW5nIHJvdXRlLWxldmVsIGRlZmVycmVkcyBhbmQgbWFyayBjYW5jZWxsZWQgcm91dGVzIGZvclxuICAgIC8vIHJldmFsaWRhdGlvblxuICAgIGNhbmNlbGxlZERlZmVycmVkUm91dGVzLnB1c2goLi4uY2FuY2VsQWN0aXZlRGVmZXJyZWRzKCkpO1xuICAgIC8vIEFib3J0IGluLWZsaWdodCBmZXRjaGVyIGxvYWRzXG4gICAgZmV0Y2hMb2FkTWF0Y2hlcy5mb3JFYWNoKChfLCBrZXkpID0+IHtcbiAgICAgIGlmIChmZXRjaENvbnRyb2xsZXJzLmhhcyhrZXkpKSB7XG4gICAgICAgIGNhbmNlbGxlZEZldGNoZXJMb2Fkcy5wdXNoKGtleSk7XG4gICAgICAgIGFib3J0RmV0Y2hlcihrZXkpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG4gIGZ1bmN0aW9uIHNldEZldGNoZXJFcnJvcihrZXksIHJvdXRlSWQsIGVycm9yKSB7XG4gICAgbGV0IGJvdW5kYXJ5TWF0Y2ggPSBmaW5kTmVhcmVzdEJvdW5kYXJ5KHN0YXRlLm1hdGNoZXMsIHJvdXRlSWQpO1xuICAgIGRlbGV0ZUZldGNoZXIoa2V5KTtcbiAgICB1cGRhdGVTdGF0ZSh7XG4gICAgICBlcnJvcnM6IHtcbiAgICAgICAgW2JvdW5kYXJ5TWF0Y2gucm91dGUuaWRdOiBlcnJvclxuICAgICAgfSxcbiAgICAgIGZldGNoZXJzOiBuZXcgTWFwKHN0YXRlLmZldGNoZXJzKVxuICAgIH0pO1xuICB9XG4gIGZ1bmN0aW9uIGRlbGV0ZUZldGNoZXIoa2V5KSB7XG4gICAgbGV0IGZldGNoZXIgPSBzdGF0ZS5mZXRjaGVycy5nZXQoa2V5KTtcbiAgICAvLyBEb24ndCBhYm9ydCB0aGUgY29udHJvbGxlciBpZiB0aGlzIGlzIGEgZGVsZXRpb24gb2YgYSBmZXRjaGVyLnN1Ym1pdCgpXG4gICAgLy8gaW4gaXQncyBsb2FkaW5nIHBoYXNlIHNpbmNlIC0gd2UgZG9uJ3Qgd2FudCB0byBhYm9ydCB0aGUgY29ycmVzcG9uZGluZ1xuICAgIC8vIHJldmFsaWRhdGlvbiBhbmQgd2FudCB0aGVtIHRvIGNvbXBsZXRlIGFuZCBsYW5kXG4gICAgaWYgKGZldGNoQ29udHJvbGxlcnMuaGFzKGtleSkgJiYgIShmZXRjaGVyICYmIGZldGNoZXIuc3RhdGUgPT09IFwibG9hZGluZ1wiICYmIGZldGNoUmVsb2FkSWRzLmhhcyhrZXkpKSkge1xuICAgICAgYWJvcnRGZXRjaGVyKGtleSk7XG4gICAgfVxuICAgIGZldGNoTG9hZE1hdGNoZXMuZGVsZXRlKGtleSk7XG4gICAgZmV0Y2hSZWxvYWRJZHMuZGVsZXRlKGtleSk7XG4gICAgZmV0Y2hSZWRpcmVjdElkcy5kZWxldGUoa2V5KTtcbiAgICBzdGF0ZS5mZXRjaGVycy5kZWxldGUoa2V5KTtcbiAgfVxuICBmdW5jdGlvbiBhYm9ydEZldGNoZXIoa2V5KSB7XG4gICAgbGV0IGNvbnRyb2xsZXIgPSBmZXRjaENvbnRyb2xsZXJzLmdldChrZXkpO1xuICAgIGludmFyaWFudChjb250cm9sbGVyLCBcIkV4cGVjdGVkIGZldGNoIGNvbnRyb2xsZXI6IFwiICsga2V5KTtcbiAgICBjb250cm9sbGVyLmFib3J0KCk7XG4gICAgZmV0Y2hDb250cm9sbGVycy5kZWxldGUoa2V5KTtcbiAgfVxuICBmdW5jdGlvbiBtYXJrRmV0Y2hlcnNEb25lKGtleXMpIHtcbiAgICBmb3IgKGxldCBrZXkgb2Yga2V5cykge1xuICAgICAgbGV0IGZldGNoZXIgPSBnZXRGZXRjaGVyKGtleSk7XG4gICAgICBsZXQgZG9uZUZldGNoZXIgPSBnZXREb25lRmV0Y2hlcihmZXRjaGVyLmRhdGEpO1xuICAgICAgc3RhdGUuZmV0Y2hlcnMuc2V0KGtleSwgZG9uZUZldGNoZXIpO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBtYXJrRmV0Y2hSZWRpcmVjdHNEb25lKCkge1xuICAgIGxldCBkb25lS2V5cyA9IFtdO1xuICAgIGxldCB1cGRhdGVkRmV0Y2hlcnMgPSBmYWxzZTtcbiAgICBmb3IgKGxldCBrZXkgb2YgZmV0Y2hSZWRpcmVjdElkcykge1xuICAgICAgbGV0IGZldGNoZXIgPSBzdGF0ZS5mZXRjaGVycy5nZXQoa2V5KTtcbiAgICAgIGludmFyaWFudChmZXRjaGVyLCBcIkV4cGVjdGVkIGZldGNoZXI6IFwiICsga2V5KTtcbiAgICAgIGlmIChmZXRjaGVyLnN0YXRlID09PSBcImxvYWRpbmdcIikge1xuICAgICAgICBmZXRjaFJlZGlyZWN0SWRzLmRlbGV0ZShrZXkpO1xuICAgICAgICBkb25lS2V5cy5wdXNoKGtleSk7XG4gICAgICAgIHVwZGF0ZWRGZXRjaGVycyA9IHRydWU7XG4gICAgICB9XG4gICAgfVxuICAgIG1hcmtGZXRjaGVyc0RvbmUoZG9uZUtleXMpO1xuICAgIHJldHVybiB1cGRhdGVkRmV0Y2hlcnM7XG4gIH1cbiAgZnVuY3Rpb24gYWJvcnRTdGFsZUZldGNoTG9hZHMobGFuZGVkSWQpIHtcbiAgICBsZXQgeWVldGVkS2V5cyA9IFtdO1xuICAgIGZvciAobGV0IFtrZXksIGlkXSBvZiBmZXRjaFJlbG9hZElkcykge1xuICAgICAgaWYgKGlkIDwgbGFuZGVkSWQpIHtcbiAgICAgICAgbGV0IGZldGNoZXIgPSBzdGF0ZS5mZXRjaGVycy5nZXQoa2V5KTtcbiAgICAgICAgaW52YXJpYW50KGZldGNoZXIsIFwiRXhwZWN0ZWQgZmV0Y2hlcjogXCIgKyBrZXkpO1xuICAgICAgICBpZiAoZmV0Y2hlci5zdGF0ZSA9PT0gXCJsb2FkaW5nXCIpIHtcbiAgICAgICAgICBhYm9ydEZldGNoZXIoa2V5KTtcbiAgICAgICAgICBmZXRjaFJlbG9hZElkcy5kZWxldGUoa2V5KTtcbiAgICAgICAgICB5ZWV0ZWRLZXlzLnB1c2goa2V5KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBtYXJrRmV0Y2hlcnNEb25lKHllZXRlZEtleXMpO1xuICAgIHJldHVybiB5ZWV0ZWRLZXlzLmxlbmd0aCA+IDA7XG4gIH1cbiAgZnVuY3Rpb24gZ2V0QmxvY2tlcihrZXksIGZuKSB7XG4gICAgbGV0IGJsb2NrZXIgPSBzdGF0ZS5ibG9ja2Vycy5nZXQoa2V5KSB8fCBJRExFX0JMT0NLRVI7XG4gICAgaWYgKGJsb2NrZXJGdW5jdGlvbnMuZ2V0KGtleSkgIT09IGZuKSB7XG4gICAgICBibG9ja2VyRnVuY3Rpb25zLnNldChrZXksIGZuKTtcbiAgICB9XG4gICAgcmV0dXJuIGJsb2NrZXI7XG4gIH1cbiAgZnVuY3Rpb24gZGVsZXRlQmxvY2tlcihrZXkpIHtcbiAgICBzdGF0ZS5ibG9ja2Vycy5kZWxldGUoa2V5KTtcbiAgICBibG9ja2VyRnVuY3Rpb25zLmRlbGV0ZShrZXkpO1xuICB9XG4gIC8vIFV0aWxpdHkgZnVuY3Rpb24gdG8gdXBkYXRlIGJsb2NrZXJzLCBlbnN1cmluZyB2YWxpZCBzdGF0ZSB0cmFuc2l0aW9uc1xuICBmdW5jdGlvbiB1cGRhdGVCbG9ja2VyKGtleSwgbmV3QmxvY2tlcikge1xuICAgIGxldCBibG9ja2VyID0gc3RhdGUuYmxvY2tlcnMuZ2V0KGtleSkgfHwgSURMRV9CTE9DS0VSO1xuICAgIC8vIFBvb3IgbWFucyBzdGF0ZSBtYWNoaW5lIDopXG4gICAgLy8gaHR0cHM6Ly9tZXJtYWlkLmxpdmUvZWRpdCNwYWtvOmVOcVZrYzlPd3pBTXhsOGw4bm5qQVlyRXRESU9IRUJJZ3d2S0pUUmVHeTNfbERwSXFPMjdrNmF3TUcwWGNyTGxuejg3bndkb25FU29nS1hYQnVFNzlycTc1WFpPMy15SGRzMFJKVnV2NzBZclBsVXJDRWUySGZyT1JTM3J1YnFaZnVodHBnNUM5d2s1dFo0VktjUlVxODhxOVo4UlMwLTQ4Y0UxaUhKa0wwdWdiSHVGTHVzOUw2c3BaeThuWDlNUDJDTmRvbVZhcG9zcXUzZkdheVQ4VDgtakpRd2hlcG9fVXRwZ0JRYURFVW9tMDRkWmhBTjFhSkJEbFVLSkJ4RTFjZUIyU21qME1sbi1JQlc1QUZVMmR3VWlrdHRfMlFhcTJkQmZhS2RFdXA4NVVWN1lkLWRLamxua2FibDJQdnIwRFRrVHJlTVxuICAgIGludmFyaWFudChibG9ja2VyLnN0YXRlID09PSBcInVuYmxvY2tlZFwiICYmIG5ld0Jsb2NrZXIuc3RhdGUgPT09IFwiYmxvY2tlZFwiIHx8IGJsb2NrZXIuc3RhdGUgPT09IFwiYmxvY2tlZFwiICYmIG5ld0Jsb2NrZXIuc3RhdGUgPT09IFwiYmxvY2tlZFwiIHx8IGJsb2NrZXIuc3RhdGUgPT09IFwiYmxvY2tlZFwiICYmIG5ld0Jsb2NrZXIuc3RhdGUgPT09IFwicHJvY2VlZGluZ1wiIHx8IGJsb2NrZXIuc3RhdGUgPT09IFwiYmxvY2tlZFwiICYmIG5ld0Jsb2NrZXIuc3RhdGUgPT09IFwidW5ibG9ja2VkXCIgfHwgYmxvY2tlci5zdGF0ZSA9PT0gXCJwcm9jZWVkaW5nXCIgJiYgbmV3QmxvY2tlci5zdGF0ZSA9PT0gXCJ1bmJsb2NrZWRcIiwgXCJJbnZhbGlkIGJsb2NrZXIgc3RhdGUgdHJhbnNpdGlvbjogXCIgKyBibG9ja2VyLnN0YXRlICsgXCIgLT4gXCIgKyBuZXdCbG9ja2VyLnN0YXRlKTtcbiAgICBsZXQgYmxvY2tlcnMgPSBuZXcgTWFwKHN0YXRlLmJsb2NrZXJzKTtcbiAgICBibG9ja2Vycy5zZXQoa2V5LCBuZXdCbG9ja2VyKTtcbiAgICB1cGRhdGVTdGF0ZSh7XG4gICAgICBibG9ja2Vyc1xuICAgIH0pO1xuICB9XG4gIGZ1bmN0aW9uIHNob3VsZEJsb2NrTmF2aWdhdGlvbihfcmVmMikge1xuICAgIGxldCB7XG4gICAgICBjdXJyZW50TG9jYXRpb24sXG4gICAgICBuZXh0TG9jYXRpb24sXG4gICAgICBoaXN0b3J5QWN0aW9uXG4gICAgfSA9IF9yZWYyO1xuICAgIGlmIChibG9ja2VyRnVuY3Rpb25zLnNpemUgPT09IDApIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgLy8gV2Ugb255IHN1cHBvcnQgYSBzaW5nbGUgYWN0aXZlIGJsb2NrZXIgYXQgdGhlIG1vbWVudCBzaW5jZSB3ZSBkb24ndCBoYXZlXG4gICAgLy8gYW55IGNvbXBlbGxpbmcgdXNlIGNhc2VzIGZvciBtdWx0aS1ibG9ja2VyIHlldFxuICAgIGlmIChibG9ja2VyRnVuY3Rpb25zLnNpemUgPiAxKSB7XG4gICAgICB3YXJuaW5nKGZhbHNlLCBcIkEgcm91dGVyIG9ubHkgc3VwcG9ydHMgb25lIGJsb2NrZXIgYXQgYSB0aW1lXCIpO1xuICAgIH1cbiAgICBsZXQgZW50cmllcyA9IEFycmF5LmZyb20oYmxvY2tlckZ1bmN0aW9ucy5lbnRyaWVzKCkpO1xuICAgIGxldCBbYmxvY2tlcktleSwgYmxvY2tlckZ1bmN0aW9uXSA9IGVudHJpZXNbZW50cmllcy5sZW5ndGggLSAxXTtcbiAgICBsZXQgYmxvY2tlciA9IHN0YXRlLmJsb2NrZXJzLmdldChibG9ja2VyS2V5KTtcbiAgICBpZiAoYmxvY2tlciAmJiBibG9ja2VyLnN0YXRlID09PSBcInByb2NlZWRpbmdcIikge1xuICAgICAgLy8gSWYgdGhlIGJsb2NrZXIgaXMgY3VycmVudGx5IHByb2NlZWRpbmcsIHdlIGRvbid0IG5lZWQgdG8gcmUtY2hlY2tcbiAgICAgIC8vIGl0IGFuZCBjYW4gbGV0IHRoaXMgbmF2aWdhdGlvbiBjb250aW51ZVxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICAvLyBBdCB0aGlzIHBvaW50LCB3ZSBrbm93IHdlJ3JlIHVuYmxvY2tlZC9ibG9ja2VkIHNvIHdlIG5lZWQgdG8gY2hlY2sgdGhlXG4gICAgLy8gdXNlci1wcm92aWRlZCBibG9ja2VyIGZ1bmN0aW9uXG4gICAgaWYgKGJsb2NrZXJGdW5jdGlvbih7XG4gICAgICBjdXJyZW50TG9jYXRpb24sXG4gICAgICBuZXh0TG9jYXRpb24sXG4gICAgICBoaXN0b3J5QWN0aW9uXG4gICAgfSkpIHtcbiAgICAgIHJldHVybiBibG9ja2VyS2V5O1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBjYW5jZWxBY3RpdmVEZWZlcnJlZHMocHJlZGljYXRlKSB7XG4gICAgbGV0IGNhbmNlbGxlZFJvdXRlSWRzID0gW107XG4gICAgYWN0aXZlRGVmZXJyZWRzLmZvckVhY2goKGRmZCwgcm91dGVJZCkgPT4ge1xuICAgICAgaWYgKCFwcmVkaWNhdGUgfHwgcHJlZGljYXRlKHJvdXRlSWQpKSB7XG4gICAgICAgIC8vIENhbmNlbCB0aGUgZGVmZXJyZWQgLSBidXQgZG8gbm90IHJlbW92ZSBmcm9tIGFjdGl2ZURlZmVycmVkcyBoZXJlIC1cbiAgICAgICAgLy8gd2UgcmVseSBvbiB0aGUgc3Vic2NyaWJlcnMgdG8gZG8gdGhhdCBzbyBvdXIgdGVzdHMgY2FuIGFzc2VydCBwcm9wZXJcbiAgICAgICAgLy8gY2xlYW51cCB2aWEgX2ludGVybmFsQWN0aXZlRGVmZXJyZWRzXG4gICAgICAgIGRmZC5jYW5jZWwoKTtcbiAgICAgICAgY2FuY2VsbGVkUm91dGVJZHMucHVzaChyb3V0ZUlkKTtcbiAgICAgICAgYWN0aXZlRGVmZXJyZWRzLmRlbGV0ZShyb3V0ZUlkKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gY2FuY2VsbGVkUm91dGVJZHM7XG4gIH1cbiAgLy8gT3B0IGluIHRvIGNhcHR1cmluZyBhbmQgcmVwb3J0aW5nIHNjcm9sbCBwb3NpdGlvbnMgZHVyaW5nIG5hdmlnYXRpb25zLFxuICAvLyB1c2VkIGJ5IHRoZSA8U2Nyb2xsUmVzdG9yYXRpb24+IGNvbXBvbmVudFxuICBmdW5jdGlvbiBlbmFibGVTY3JvbGxSZXN0b3JhdGlvbihwb3NpdGlvbnMsIGdldFBvc2l0aW9uLCBnZXRLZXkpIHtcbiAgICBzYXZlZFNjcm9sbFBvc2l0aW9ucyA9IHBvc2l0aW9ucztcbiAgICBnZXRTY3JvbGxQb3NpdGlvbiA9IGdldFBvc2l0aW9uO1xuICAgIGdldFNjcm9sbFJlc3RvcmF0aW9uS2V5ID0gZ2V0S2V5IHx8IG51bGw7XG4gICAgLy8gUGVyZm9ybSBpbml0aWFsIGh5ZHJhdGlvbiBzY3JvbGwgcmVzdG9yYXRpb24sIHNpbmNlIHdlIG1pc3MgdGhlIGJvYXQgb25cbiAgICAvLyB0aGUgaW5pdGlhbCB1cGRhdGVTdGF0ZSgpIGJlY2F1c2Ugd2UndmUgbm90IHlldCByZW5kZXJlZCA8U2Nyb2xsUmVzdG9yYXRpb24vPlxuICAgIC8vIGFuZCB0aGVyZWZvcmUgaGF2ZSBubyBzYXZlZFNjcm9sbFBvc2l0aW9ucyBhdmFpbGFibGVcbiAgICBpZiAoIWluaXRpYWxTY3JvbGxSZXN0b3JlZCAmJiBzdGF0ZS5uYXZpZ2F0aW9uID09PSBJRExFX05BVklHQVRJT04pIHtcbiAgICAgIGluaXRpYWxTY3JvbGxSZXN0b3JlZCA9IHRydWU7XG4gICAgICBsZXQgeSA9IGdldFNhdmVkU2Nyb2xsUG9zaXRpb24oc3RhdGUubG9jYXRpb24sIHN0YXRlLm1hdGNoZXMpO1xuICAgICAgaWYgKHkgIT0gbnVsbCkge1xuICAgICAgICB1cGRhdGVTdGF0ZSh7XG4gICAgICAgICAgcmVzdG9yZVNjcm9sbFBvc2l0aW9uOiB5XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgc2F2ZWRTY3JvbGxQb3NpdGlvbnMgPSBudWxsO1xuICAgICAgZ2V0U2Nyb2xsUG9zaXRpb24gPSBudWxsO1xuICAgICAgZ2V0U2Nyb2xsUmVzdG9yYXRpb25LZXkgPSBudWxsO1xuICAgIH07XG4gIH1cbiAgZnVuY3Rpb24gZ2V0U2Nyb2xsS2V5KGxvY2F0aW9uLCBtYXRjaGVzKSB7XG4gICAgaWYgKGdldFNjcm9sbFJlc3RvcmF0aW9uS2V5KSB7XG4gICAgICBsZXQga2V5ID0gZ2V0U2Nyb2xsUmVzdG9yYXRpb25LZXkobG9jYXRpb24sIG1hdGNoZXMubWFwKG0gPT4gY29udmVydFJvdXRlTWF0Y2hUb1VpTWF0Y2gobSwgc3RhdGUubG9hZGVyRGF0YSkpKTtcbiAgICAgIHJldHVybiBrZXkgfHwgbG9jYXRpb24ua2V5O1xuICAgIH1cbiAgICByZXR1cm4gbG9jYXRpb24ua2V5O1xuICB9XG4gIGZ1bmN0aW9uIHNhdmVTY3JvbGxQb3NpdGlvbihsb2NhdGlvbiwgbWF0Y2hlcykge1xuICAgIGlmIChzYXZlZFNjcm9sbFBvc2l0aW9ucyAmJiBnZXRTY3JvbGxQb3NpdGlvbikge1xuICAgICAgbGV0IGtleSA9IGdldFNjcm9sbEtleShsb2NhdGlvbiwgbWF0Y2hlcyk7XG4gICAgICBzYXZlZFNjcm9sbFBvc2l0aW9uc1trZXldID0gZ2V0U2Nyb2xsUG9zaXRpb24oKTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gZ2V0U2F2ZWRTY3JvbGxQb3NpdGlvbihsb2NhdGlvbiwgbWF0Y2hlcykge1xuICAgIGlmIChzYXZlZFNjcm9sbFBvc2l0aW9ucykge1xuICAgICAgbGV0IGtleSA9IGdldFNjcm9sbEtleShsb2NhdGlvbiwgbWF0Y2hlcyk7XG4gICAgICBsZXQgeSA9IHNhdmVkU2Nyb2xsUG9zaXRpb25zW2tleV07XG4gICAgICBpZiAodHlwZW9mIHkgPT09IFwibnVtYmVyXCIpIHtcbiAgICAgICAgcmV0dXJuIHk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xuICB9XG4gIGZ1bmN0aW9uIF9pbnRlcm5hbFNldFJvdXRlcyhuZXdSb3V0ZXMpIHtcbiAgICBtYW5pZmVzdCA9IHt9O1xuICAgIGluRmxpZ2h0RGF0YVJvdXRlcyA9IGNvbnZlcnRSb3V0ZXNUb0RhdGFSb3V0ZXMobmV3Um91dGVzLCBtYXBSb3V0ZVByb3BlcnRpZXMsIHVuZGVmaW5lZCwgbWFuaWZlc3QpO1xuICB9XG4gIHJvdXRlciA9IHtcbiAgICBnZXQgYmFzZW5hbWUoKSB7XG4gICAgICByZXR1cm4gYmFzZW5hbWU7XG4gICAgfSxcbiAgICBnZXQgc3RhdGUoKSB7XG4gICAgICByZXR1cm4gc3RhdGU7XG4gICAgfSxcbiAgICBnZXQgcm91dGVzKCkge1xuICAgICAgcmV0dXJuIGRhdGFSb3V0ZXM7XG4gICAgfSxcbiAgICBpbml0aWFsaXplLFxuICAgIHN1YnNjcmliZSxcbiAgICBlbmFibGVTY3JvbGxSZXN0b3JhdGlvbixcbiAgICBuYXZpZ2F0ZSxcbiAgICBmZXRjaCxcbiAgICByZXZhbGlkYXRlLFxuICAgIC8vIFBhc3N0aHJvdWdoIHRvIGhpc3RvcnktYXdhcmUgY3JlYXRlSHJlZiB1c2VkIGJ5IHVzZUhyZWYgc28gd2UgZ2V0IHByb3BlclxuICAgIC8vIGhhc2gtYXdhcmUgVVJMcyBpbiBET00gcGF0aHNcbiAgICBjcmVhdGVIcmVmOiB0byA9PiBpbml0Lmhpc3RvcnkuY3JlYXRlSHJlZih0byksXG4gICAgZW5jb2RlTG9jYXRpb246IHRvID0+IGluaXQuaGlzdG9yeS5lbmNvZGVMb2NhdGlvbih0byksXG4gICAgZ2V0RmV0Y2hlcixcbiAgICBkZWxldGVGZXRjaGVyLFxuICAgIGRpc3Bvc2UsXG4gICAgZ2V0QmxvY2tlcixcbiAgICBkZWxldGVCbG9ja2VyLFxuICAgIF9pbnRlcm5hbEZldGNoQ29udHJvbGxlcnM6IGZldGNoQ29udHJvbGxlcnMsXG4gICAgX2ludGVybmFsQWN0aXZlRGVmZXJyZWRzOiBhY3RpdmVEZWZlcnJlZHMsXG4gICAgLy8gVE9ETzogUmVtb3ZlIHNldFJvdXRlcywgaXQncyB0ZW1wb3JhcnkgdG8gYXZvaWQgZGVhbGluZyB3aXRoXG4gICAgLy8gdXBkYXRpbmcgdGhlIHRyZWUgd2hpbGUgdmFsaWRhdGluZyB0aGUgdXBkYXRlIGFsZ29yaXRobS5cbiAgICBfaW50ZXJuYWxTZXRSb3V0ZXNcbiAgfTtcbiAgcmV0dXJuIHJvdXRlcjtcbn1cbi8vI2VuZHJlZ2lvblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vI3JlZ2lvbiBjcmVhdGVTdGF0aWNIYW5kbGVyXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuY29uc3QgVU5TQUZFX0RFRkVSUkVEX1NZTUJPTCA9IFN5bWJvbChcImRlZmVycmVkXCIpO1xuZnVuY3Rpb24gY3JlYXRlU3RhdGljSGFuZGxlcihyb3V0ZXMsIG9wdHMpIHtcbiAgaW52YXJpYW50KHJvdXRlcy5sZW5ndGggPiAwLCBcIllvdSBtdXN0IHByb3ZpZGUgYSBub24tZW1wdHkgcm91dGVzIGFycmF5IHRvIGNyZWF0ZVN0YXRpY0hhbmRsZXJcIik7XG4gIGxldCBtYW5pZmVzdCA9IHt9O1xuICBsZXQgYmFzZW5hbWUgPSAob3B0cyA/IG9wdHMuYmFzZW5hbWUgOiBudWxsKSB8fCBcIi9cIjtcbiAgbGV0IG1hcFJvdXRlUHJvcGVydGllcztcbiAgaWYgKG9wdHMgIT0gbnVsbCAmJiBvcHRzLm1hcFJvdXRlUHJvcGVydGllcykge1xuICAgIG1hcFJvdXRlUHJvcGVydGllcyA9IG9wdHMubWFwUm91dGVQcm9wZXJ0aWVzO1xuICB9IGVsc2UgaWYgKG9wdHMgIT0gbnVsbCAmJiBvcHRzLmRldGVjdEVycm9yQm91bmRhcnkpIHtcbiAgICAvLyBJZiB0aGV5IGFyZSBzdGlsbCB1c2luZyB0aGUgZGVwcmVjYXRlZCB2ZXJzaW9uLCB3cmFwIGl0IHdpdGggdGhlIG5ldyBBUElcbiAgICBsZXQgZGV0ZWN0RXJyb3JCb3VuZGFyeSA9IG9wdHMuZGV0ZWN0RXJyb3JCb3VuZGFyeTtcbiAgICBtYXBSb3V0ZVByb3BlcnRpZXMgPSByb3V0ZSA9PiAoe1xuICAgICAgaGFzRXJyb3JCb3VuZGFyeTogZGV0ZWN0RXJyb3JCb3VuZGFyeShyb3V0ZSlcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBtYXBSb3V0ZVByb3BlcnRpZXMgPSBkZWZhdWx0TWFwUm91dGVQcm9wZXJ0aWVzO1xuICB9XG4gIGxldCBkYXRhUm91dGVzID0gY29udmVydFJvdXRlc1RvRGF0YVJvdXRlcyhyb3V0ZXMsIG1hcFJvdXRlUHJvcGVydGllcywgdW5kZWZpbmVkLCBtYW5pZmVzdCk7XG4gIC8qKlxuICAgKiBUaGUgcXVlcnkoKSBtZXRob2QgaXMgaW50ZW5kZWQgZm9yIGRvY3VtZW50IHJlcXVlc3RzLCBpbiB3aGljaCB3ZSB3YW50IHRvXG4gICAqIGNhbGwgYW4gb3B0aW9uYWwgYWN0aW9uIGFuZCBwb3RlbnRpYWxseSBtdWx0aXBsZSBsb2FkZXJzIGZvciBhbGwgbmVzdGVkXG4gICAqIHJvdXRlcy4gIEl0IHJldHVybnMgYSBTdGF0aWNIYW5kbGVyQ29udGV4dCBvYmplY3QsIHdoaWNoIGlzIHZlcnkgc2ltaWxhclxuICAgKiB0byB0aGUgcm91dGVyIHN0YXRlIChsb2NhdGlvbiwgbG9hZGVyRGF0YSwgYWN0aW9uRGF0YSwgZXJyb3JzLCBldGMuKSBhbmRcbiAgICogYWxzbyBhZGRzIFNTUi1zcGVjaWZpYyBpbmZvcm1hdGlvbiBzdWNoIGFzIHRoZSBzdGF0dXNDb2RlIGFuZCBoZWFkZXJzXG4gICAqIGZyb20gYWN0aW9uL2xvYWRlcnMgUmVzcG9uc2VzLlxuICAgKlxuICAgKiBJdCBfc2hvdWxkXyBuZXZlciB0aHJvdyBhbmQgc2hvdWxkIHJlcG9ydCBhbGwgZXJyb3JzIHRocm91Z2ggdGhlXG4gICAqIHJldHVybmVkIGNvbnRleHQuZXJyb3JzIG9iamVjdCwgcHJvcGVybHkgYXNzb2NpYXRpbmcgZXJyb3JzIHRvIHRoZWlyIGVycm9yXG4gICAqIGJvdW5kYXJ5LiAgQWRkaXRpb25hbGx5LCBpdCB0cmFja3MgX2RlZXBlc3RSZW5kZXJlZEJvdW5kYXJ5SWQgd2hpY2ggY2FuIGJlXG4gICAqIHVzZWQgdG8gZW11bGF0ZSBSZWFjdCBlcnJvciBib3VuZGFyaWVzIGR1cmluZyBTU3IgYnkgcGVyZm9ybWluZyBhIHNlY29uZFxuICAgKiBwYXNzIG9ubHkgZG93biB0byB0aGUgYm91bmRhcnlJZC5cbiAgICpcbiAgICogVGhlIG9uZSBleGNlcHRpb24gd2hlcmUgd2UgZG8gbm90IHJldHVybiBhIFN0YXRpY0hhbmRsZXJDb250ZXh0IGlzIHdoZW4gYVxuICAgKiByZWRpcmVjdCByZXNwb25zZSBpcyByZXR1cm5lZCBvciB0aHJvd24gZnJvbSBhbnkgYWN0aW9uL2xvYWRlci4gIFdlXG4gICAqIHByb3BhZ2F0ZSB0aGF0IG91dCBhbmQgcmV0dXJuIHRoZSByYXcgUmVzcG9uc2Ugc28gdGhlIEhUVFAgc2VydmVyIGNhblxuICAgKiByZXR1cm4gaXQgZGlyZWN0bHkuXG4gICAqL1xuICBhc3luYyBmdW5jdGlvbiBxdWVyeShyZXF1ZXN0LCBfdGVtcDIpIHtcbiAgICBsZXQge1xuICAgICAgcmVxdWVzdENvbnRleHRcbiAgICB9ID0gX3RlbXAyID09PSB2b2lkIDAgPyB7fSA6IF90ZW1wMjtcbiAgICBsZXQgdXJsID0gbmV3IFVSTChyZXF1ZXN0LnVybCk7XG4gICAgbGV0IG1ldGhvZCA9IHJlcXVlc3QubWV0aG9kO1xuICAgIGxldCBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKFwiXCIsIGNyZWF0ZVBhdGgodXJsKSwgbnVsbCwgXCJkZWZhdWx0XCIpO1xuICAgIGxldCBtYXRjaGVzID0gbWF0Y2hSb3V0ZXMoZGF0YVJvdXRlcywgbG9jYXRpb24sIGJhc2VuYW1lKTtcbiAgICAvLyBTU1Igc3VwcG9ydHMgSEVBRCByZXF1ZXN0cyB3aGlsZSBTUEEgZG9lc24ndFxuICAgIGlmICghaXNWYWxpZE1ldGhvZChtZXRob2QpICYmIG1ldGhvZCAhPT0gXCJIRUFEXCIpIHtcbiAgICAgIGxldCBlcnJvciA9IGdldEludGVybmFsUm91dGVyRXJyb3IoNDA1LCB7XG4gICAgICAgIG1ldGhvZFxuICAgICAgfSk7XG4gICAgICBsZXQge1xuICAgICAgICBtYXRjaGVzOiBtZXRob2ROb3RBbGxvd2VkTWF0Y2hlcyxcbiAgICAgICAgcm91dGVcbiAgICAgIH0gPSBnZXRTaG9ydENpcmN1aXRNYXRjaGVzKGRhdGFSb3V0ZXMpO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgYmFzZW5hbWUsXG4gICAgICAgIGxvY2F0aW9uLFxuICAgICAgICBtYXRjaGVzOiBtZXRob2ROb3RBbGxvd2VkTWF0Y2hlcyxcbiAgICAgICAgbG9hZGVyRGF0YToge30sXG4gICAgICAgIGFjdGlvbkRhdGE6IG51bGwsXG4gICAgICAgIGVycm9yczoge1xuICAgICAgICAgIFtyb3V0ZS5pZF06IGVycm9yXG4gICAgICAgIH0sXG4gICAgICAgIHN0YXR1c0NvZGU6IGVycm9yLnN0YXR1cyxcbiAgICAgICAgbG9hZGVySGVhZGVyczoge30sXG4gICAgICAgIGFjdGlvbkhlYWRlcnM6IHt9LFxuICAgICAgICBhY3RpdmVEZWZlcnJlZHM6IG51bGxcbiAgICAgIH07XG4gICAgfSBlbHNlIGlmICghbWF0Y2hlcykge1xuICAgICAgbGV0IGVycm9yID0gZ2V0SW50ZXJuYWxSb3V0ZXJFcnJvcig0MDQsIHtcbiAgICAgICAgcGF0aG5hbWU6IGxvY2F0aW9uLnBhdGhuYW1lXG4gICAgICB9KTtcbiAgICAgIGxldCB7XG4gICAgICAgIG1hdGNoZXM6IG5vdEZvdW5kTWF0Y2hlcyxcbiAgICAgICAgcm91dGVcbiAgICAgIH0gPSBnZXRTaG9ydENpcmN1aXRNYXRjaGVzKGRhdGFSb3V0ZXMpO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgYmFzZW5hbWUsXG4gICAgICAgIGxvY2F0aW9uLFxuICAgICAgICBtYXRjaGVzOiBub3RGb3VuZE1hdGNoZXMsXG4gICAgICAgIGxvYWRlckRhdGE6IHt9LFxuICAgICAgICBhY3Rpb25EYXRhOiBudWxsLFxuICAgICAgICBlcnJvcnM6IHtcbiAgICAgICAgICBbcm91dGUuaWRdOiBlcnJvclxuICAgICAgICB9LFxuICAgICAgICBzdGF0dXNDb2RlOiBlcnJvci5zdGF0dXMsXG4gICAgICAgIGxvYWRlckhlYWRlcnM6IHt9LFxuICAgICAgICBhY3Rpb25IZWFkZXJzOiB7fSxcbiAgICAgICAgYWN0aXZlRGVmZXJyZWRzOiBudWxsXG4gICAgICB9O1xuICAgIH1cbiAgICBsZXQgcmVzdWx0ID0gYXdhaXQgcXVlcnlJbXBsKHJlcXVlc3QsIGxvY2F0aW9uLCBtYXRjaGVzLCByZXF1ZXN0Q29udGV4dCk7XG4gICAgaWYgKGlzUmVzcG9uc2UocmVzdWx0KSkge1xuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG4gICAgLy8gV2hlbiByZXR1cm5pbmcgU3RhdGljSGFuZGxlckNvbnRleHQsIHdlIHBhdGNoIGJhY2sgaW4gdGhlIGxvY2F0aW9uIGhlcmVcbiAgICAvLyBzaW5jZSB3ZSBuZWVkIGl0IGZvciBSZWFjdCBDb250ZXh0LiAgQnV0IHRoaXMgaGVscHMga2VlcCBvdXIgc3VibWl0IGFuZFxuICAgIC8vIGxvYWRSb3V0ZURhdGEgb3BlcmF0aW5nIG9uIGEgUmVxdWVzdCBpbnN0ZWFkIG9mIGEgTG9jYXRpb25cbiAgICByZXR1cm4gX2V4dGVuZHMoe1xuICAgICAgbG9jYXRpb24sXG4gICAgICBiYXNlbmFtZVxuICAgIH0sIHJlc3VsdCk7XG4gIH1cbiAgLyoqXG4gICAqIFRoZSBxdWVyeVJvdXRlKCkgbWV0aG9kIGlzIGludGVuZGVkIGZvciB0YXJnZXRlZCByb3V0ZSByZXF1ZXN0cywgZWl0aGVyXG4gICAqIGZvciBmZXRjaCA/X2RhdGEgcmVxdWVzdHMgb3IgcmVzb3VyY2Ugcm91dGUgcmVxdWVzdHMuICBJbiB0aGlzIGNhc2UsIHdlXG4gICAqIGFyZSBvbmx5IGV2ZXIgY2FsbGluZyBhIHNpbmdsZSBhY3Rpb24gb3IgbG9hZGVyLCBhbmQgd2UgYXJlIHJldHVybmluZyB0aGVcbiAgICogcmV0dXJuZWQgdmFsdWUgZGlyZWN0bHkuICBJbiBtb3N0IGNhc2VzLCB0aGlzIHdpbGwgYmUgYSBSZXNwb25zZSByZXR1cm5lZFxuICAgKiBmcm9tIHRoZSBhY3Rpb24vbG9hZGVyLCBidXQgaXQgbWF5IGJlIGEgcHJpbWl0aXZlIG9yIG90aGVyIHZhbHVlIGFzIHdlbGwgLVxuICAgKiBhbmQgaW4gc3VjaCBjYXNlcyB0aGUgY2FsbGluZyBjb250ZXh0IHNob3VsZCBoYW5kbGUgdGhhdCBhY2NvcmRpbmdseS5cbiAgICpcbiAgICogV2UgZG8gcmVzcGVjdCB0aGUgdGhyb3cvcmV0dXJuIGRpZmZlcmVudGlhdGlvbiwgc28gaWYgYW4gYWN0aW9uL2xvYWRlclxuICAgKiB0aHJvd3MsIHRoZW4gdGhpcyBtZXRob2Qgd2lsbCB0aHJvdyB0aGUgdmFsdWUuICBUaGlzIGlzIGltcG9ydGFudCBzbyB3ZVxuICAgKiBjYW4gZG8gcHJvcGVyIGJvdW5kYXJ5IGlkZW50aWZpY2F0aW9uIGluIFJlbWl4IHdoZXJlIGEgdGhyb3duIFJlc3BvbnNlXG4gICAqIG11c3QgZ28gdG8gdGhlIENhdGNoIEJvdW5kYXJ5IGJ1dCBhIHJldHVybmVkIFJlc3BvbnNlIGlzIGhhcHB5LXBhdGguXG4gICAqXG4gICAqIE9uZSB0aGluZyB0byBub3RlIGlzIHRoYXQgYW55IFJvdXRlci1pbml0aWF0ZWQgRXJyb3JzIHRoYXQgbWFrZSBzZW5zZVxuICAgKiB0byBhc3NvY2lhdGUgd2l0aCBhIHN0YXR1cyBjb2RlIHdpbGwgYmUgdGhyb3duIGFzIGFuIEVycm9yUmVzcG9uc2VcbiAgICogaW5zdGFuY2Ugd2hpY2ggaW5jbHVkZSB0aGUgcmF3IEVycm9yLCBzdWNoIHRoYXQgdGhlIGNhbGxpbmcgY29udGV4dCBjYW5cbiAgICogc2VyaWFsaXplIHRoZSBlcnJvciBhcyB0aGV5IHNlZSBmaXQgd2hpbGUgaW5jbHVkaW5nIHRoZSBwcm9wZXIgcmVzcG9uc2VcbiAgICogY29kZS4gIEV4YW1wbGVzIGhlcmUgYXJlIDQwNCBhbmQgNDA1IGVycm9ycyB0aGF0IG9jY3VyIHByaW9yIHRvIHJlYWNoaW5nXG4gICAqIGFueSB1c2VyLWRlZmluZWQgbG9hZGVycy5cbiAgICovXG4gIGFzeW5jIGZ1bmN0aW9uIHF1ZXJ5Um91dGUocmVxdWVzdCwgX3RlbXAzKSB7XG4gICAgbGV0IHtcbiAgICAgIHJvdXRlSWQsXG4gICAgICByZXF1ZXN0Q29udGV4dFxuICAgIH0gPSBfdGVtcDMgPT09IHZvaWQgMCA/IHt9IDogX3RlbXAzO1xuICAgIGxldCB1cmwgPSBuZXcgVVJMKHJlcXVlc3QudXJsKTtcbiAgICBsZXQgbWV0aG9kID0gcmVxdWVzdC5tZXRob2Q7XG4gICAgbGV0IGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24oXCJcIiwgY3JlYXRlUGF0aCh1cmwpLCBudWxsLCBcImRlZmF1bHRcIik7XG4gICAgbGV0IG1hdGNoZXMgPSBtYXRjaFJvdXRlcyhkYXRhUm91dGVzLCBsb2NhdGlvbiwgYmFzZW5hbWUpO1xuICAgIC8vIFNTUiBzdXBwb3J0cyBIRUFEIHJlcXVlc3RzIHdoaWxlIFNQQSBkb2Vzbid0XG4gICAgaWYgKCFpc1ZhbGlkTWV0aG9kKG1ldGhvZCkgJiYgbWV0aG9kICE9PSBcIkhFQURcIiAmJiBtZXRob2QgIT09IFwiT1BUSU9OU1wiKSB7XG4gICAgICB0aHJvdyBnZXRJbnRlcm5hbFJvdXRlckVycm9yKDQwNSwge1xuICAgICAgICBtZXRob2RcbiAgICAgIH0pO1xuICAgIH0gZWxzZSBpZiAoIW1hdGNoZXMpIHtcbiAgICAgIHRocm93IGdldEludGVybmFsUm91dGVyRXJyb3IoNDA0LCB7XG4gICAgICAgIHBhdGhuYW1lOiBsb2NhdGlvbi5wYXRobmFtZVxuICAgICAgfSk7XG4gICAgfVxuICAgIGxldCBtYXRjaCA9IHJvdXRlSWQgPyBtYXRjaGVzLmZpbmQobSA9PiBtLnJvdXRlLmlkID09PSByb3V0ZUlkKSA6IGdldFRhcmdldE1hdGNoKG1hdGNoZXMsIGxvY2F0aW9uKTtcbiAgICBpZiAocm91dGVJZCAmJiAhbWF0Y2gpIHtcbiAgICAgIHRocm93IGdldEludGVybmFsUm91dGVyRXJyb3IoNDAzLCB7XG4gICAgICAgIHBhdGhuYW1lOiBsb2NhdGlvbi5wYXRobmFtZSxcbiAgICAgICAgcm91dGVJZFxuICAgICAgfSk7XG4gICAgfSBlbHNlIGlmICghbWF0Y2gpIHtcbiAgICAgIC8vIFRoaXMgc2hvdWxkIG5ldmVyIGhpdCBJIGRvbid0IHRoaW5rP1xuICAgICAgdGhyb3cgZ2V0SW50ZXJuYWxSb3V0ZXJFcnJvcig0MDQsIHtcbiAgICAgICAgcGF0aG5hbWU6IGxvY2F0aW9uLnBhdGhuYW1lXG4gICAgICB9KTtcbiAgICB9XG4gICAgbGV0IHJlc3VsdCA9IGF3YWl0IHF1ZXJ5SW1wbChyZXF1ZXN0LCBsb2NhdGlvbiwgbWF0Y2hlcywgcmVxdWVzdENvbnRleHQsIG1hdGNoKTtcbiAgICBpZiAoaXNSZXNwb25zZShyZXN1bHQpKSB7XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgICBsZXQgZXJyb3IgPSByZXN1bHQuZXJyb3JzID8gT2JqZWN0LnZhbHVlcyhyZXN1bHQuZXJyb3JzKVswXSA6IHVuZGVmaW5lZDtcbiAgICBpZiAoZXJyb3IgIT09IHVuZGVmaW5lZCkge1xuICAgICAgLy8gSWYgd2UgZ290IGJhY2sgcmVzdWx0LmVycm9ycywgdGhhdCBtZWFucyB0aGUgbG9hZGVyL2FjdGlvbiB0aHJld1xuICAgICAgLy8gX3NvbWV0aGluZ18gdGhhdCB3YXNuJ3QgYSBSZXNwb25zZSwgYnV0IGl0J3Mgbm90IGd1YXJhbnRlZWQvcmVxdWlyZWRcbiAgICAgIC8vIHRvIGJlIGFuIGBpbnN0YW5jZW9mIEVycm9yYCBlaXRoZXIsIHNvIHdlIGhhdmUgdG8gdXNlIHRocm93IGhlcmUgdG9cbiAgICAgIC8vIHByZXNlcnZlIHRoZSBcImVycm9yXCIgc3RhdGUgb3V0c2lkZSBvZiBxdWVyeUltcGwuXG4gICAgICB0aHJvdyBlcnJvcjtcbiAgICB9XG4gICAgLy8gUGljayBvZmYgdGhlIHJpZ2h0IHN0YXRlIHZhbHVlIHRvIHJldHVyblxuICAgIGlmIChyZXN1bHQuYWN0aW9uRGF0YSkge1xuICAgICAgcmV0dXJuIE9iamVjdC52YWx1ZXMocmVzdWx0LmFjdGlvbkRhdGEpWzBdO1xuICAgIH1cbiAgICBpZiAocmVzdWx0LmxvYWRlckRhdGEpIHtcbiAgICAgIHZhciBfcmVzdWx0JGFjdGl2ZURlZmVycmU7XG4gICAgICBsZXQgZGF0YSA9IE9iamVjdC52YWx1ZXMocmVzdWx0LmxvYWRlckRhdGEpWzBdO1xuICAgICAgaWYgKChfcmVzdWx0JGFjdGl2ZURlZmVycmUgPSByZXN1bHQuYWN0aXZlRGVmZXJyZWRzKSAhPSBudWxsICYmIF9yZXN1bHQkYWN0aXZlRGVmZXJyZVttYXRjaC5yb3V0ZS5pZF0pIHtcbiAgICAgICAgZGF0YVtVTlNBRkVfREVGRVJSRURfU1lNQk9MXSA9IHJlc3VsdC5hY3RpdmVEZWZlcnJlZHNbbWF0Y2gucm91dGUuaWRdO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGRhdGE7XG4gICAgfVxuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cbiAgYXN5bmMgZnVuY3Rpb24gcXVlcnlJbXBsKHJlcXVlc3QsIGxvY2F0aW9uLCBtYXRjaGVzLCByZXF1ZXN0Q29udGV4dCwgcm91dGVNYXRjaCkge1xuICAgIGludmFyaWFudChyZXF1ZXN0LnNpZ25hbCwgXCJxdWVyeSgpL3F1ZXJ5Um91dGUoKSByZXF1ZXN0cyBtdXN0IGNvbnRhaW4gYW4gQWJvcnRDb250cm9sbGVyIHNpZ25hbFwiKTtcbiAgICB0cnkge1xuICAgICAgaWYgKGlzTXV0YXRpb25NZXRob2QocmVxdWVzdC5tZXRob2QudG9Mb3dlckNhc2UoKSkpIHtcbiAgICAgICAgbGV0IHJlc3VsdCA9IGF3YWl0IHN1Ym1pdChyZXF1ZXN0LCBtYXRjaGVzLCByb3V0ZU1hdGNoIHx8IGdldFRhcmdldE1hdGNoKG1hdGNoZXMsIGxvY2F0aW9uKSwgcmVxdWVzdENvbnRleHQsIHJvdXRlTWF0Y2ggIT0gbnVsbCk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICB9XG4gICAgICBsZXQgcmVzdWx0ID0gYXdhaXQgbG9hZFJvdXRlRGF0YShyZXF1ZXN0LCBtYXRjaGVzLCByZXF1ZXN0Q29udGV4dCwgcm91dGVNYXRjaCk7XG4gICAgICByZXR1cm4gaXNSZXNwb25zZShyZXN1bHQpID8gcmVzdWx0IDogX2V4dGVuZHMoe30sIHJlc3VsdCwge1xuICAgICAgICBhY3Rpb25EYXRhOiBudWxsLFxuICAgICAgICBhY3Rpb25IZWFkZXJzOiB7fVxuICAgICAgfSk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgLy8gSWYgdGhlIHVzZXIgdGhyZXcvcmV0dXJuZWQgYSBSZXNwb25zZSBpbiBjYWxsTG9hZGVyT3JBY3Rpb24sIHdlIHRocm93XG4gICAgICAvLyBpdCB0byBiYWlsIG91dCBhbmQgdGhlbiByZXR1cm4gb3IgdGhyb3cgaGVyZSBiYXNlZCBvbiB3aGV0aGVyIHRoZSB1c2VyXG4gICAgICAvLyByZXR1cm5lZCBvciB0aHJld1xuICAgICAgaWYgKGlzUXVlcnlSb3V0ZVJlc3BvbnNlKGUpKSB7XG4gICAgICAgIGlmIChlLnR5cGUgPT09IFJlc3VsdFR5cGUuZXJyb3IpIHtcbiAgICAgICAgICB0aHJvdyBlLnJlc3BvbnNlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBlLnJlc3BvbnNlO1xuICAgICAgfVxuICAgICAgLy8gUmVkaXJlY3RzIGFyZSBhbHdheXMgcmV0dXJuZWQgc2luY2UgdGhleSBkb24ndCBwcm9wYWdhdGUgdG8gY2F0Y2hcbiAgICAgIC8vIGJvdW5kYXJpZXNcbiAgICAgIGlmIChpc1JlZGlyZWN0UmVzcG9uc2UoZSkpIHtcbiAgICAgICAgcmV0dXJuIGU7XG4gICAgICB9XG4gICAgICB0aHJvdyBlO1xuICAgIH1cbiAgfVxuICBhc3luYyBmdW5jdGlvbiBzdWJtaXQocmVxdWVzdCwgbWF0Y2hlcywgYWN0aW9uTWF0Y2gsIHJlcXVlc3RDb250ZXh0LCBpc1JvdXRlUmVxdWVzdCkge1xuICAgIGxldCByZXN1bHQ7XG4gICAgaWYgKCFhY3Rpb25NYXRjaC5yb3V0ZS5hY3Rpb24gJiYgIWFjdGlvbk1hdGNoLnJvdXRlLmxhenkpIHtcbiAgICAgIGxldCBlcnJvciA9IGdldEludGVybmFsUm91dGVyRXJyb3IoNDA1LCB7XG4gICAgICAgIG1ldGhvZDogcmVxdWVzdC5tZXRob2QsXG4gICAgICAgIHBhdGhuYW1lOiBuZXcgVVJMKHJlcXVlc3QudXJsKS5wYXRobmFtZSxcbiAgICAgICAgcm91dGVJZDogYWN0aW9uTWF0Y2gucm91dGUuaWRcbiAgICAgIH0pO1xuICAgICAgaWYgKGlzUm91dGVSZXF1ZXN0KSB7XG4gICAgICAgIHRocm93IGVycm9yO1xuICAgICAgfVxuICAgICAgcmVzdWx0ID0ge1xuICAgICAgICB0eXBlOiBSZXN1bHRUeXBlLmVycm9yLFxuICAgICAgICBlcnJvclxuICAgICAgfTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmVzdWx0ID0gYXdhaXQgY2FsbExvYWRlck9yQWN0aW9uKFwiYWN0aW9uXCIsIHJlcXVlc3QsIGFjdGlvbk1hdGNoLCBtYXRjaGVzLCBtYW5pZmVzdCwgbWFwUm91dGVQcm9wZXJ0aWVzLCBiYXNlbmFtZSwge1xuICAgICAgICBpc1N0YXRpY1JlcXVlc3Q6IHRydWUsXG4gICAgICAgIGlzUm91dGVSZXF1ZXN0LFxuICAgICAgICByZXF1ZXN0Q29udGV4dFxuICAgICAgfSk7XG4gICAgICBpZiAocmVxdWVzdC5zaWduYWwuYWJvcnRlZCkge1xuICAgICAgICBsZXQgbWV0aG9kID0gaXNSb3V0ZVJlcXVlc3QgPyBcInF1ZXJ5Um91dGVcIiA6IFwicXVlcnlcIjtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKG1ldGhvZCArIFwiKCkgY2FsbCBhYm9ydGVkOiBcIiArIHJlcXVlc3QubWV0aG9kICsgXCIgXCIgKyByZXF1ZXN0LnVybCk7XG4gICAgICB9XG4gICAgfVxuICAgIGlmIChpc1JlZGlyZWN0UmVzdWx0KHJlc3VsdCkpIHtcbiAgICAgIC8vIFVoaGhoIC0gdGhpcyBzaG91bGQgbmV2ZXIgaGFwcGVuLCB3ZSBzaG91bGQgYWx3YXlzIHRocm93IHRoZXNlIGZyb21cbiAgICAgIC8vIGNhbGxMb2FkZXJPckFjdGlvbiwgYnV0IHRoZSB0eXBlIG5hcnJvd2luZyBoZXJlIGtlZXBzIFRTIGhhcHB5IGFuZCB3ZVxuICAgICAgLy8gY2FuIGdldCBiYWNrIG9uIHRoZSBcInRocm93IGFsbCByZWRpcmVjdCByZXNwb25zZXNcIiB0cmFpbiBoZXJlIHNob3VsZFxuICAgICAgLy8gdGhpcyBldmVyIGhhcHBlbiA6L1xuICAgICAgdGhyb3cgbmV3IFJlc3BvbnNlKG51bGwsIHtcbiAgICAgICAgc3RhdHVzOiByZXN1bHQuc3RhdHVzLFxuICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgTG9jYXRpb246IHJlc3VsdC5sb2NhdGlvblxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gICAgaWYgKGlzRGVmZXJyZWRSZXN1bHQocmVzdWx0KSkge1xuICAgICAgbGV0IGVycm9yID0gZ2V0SW50ZXJuYWxSb3V0ZXJFcnJvcig0MDAsIHtcbiAgICAgICAgdHlwZTogXCJkZWZlci1hY3Rpb25cIlxuICAgICAgfSk7XG4gICAgICBpZiAoaXNSb3V0ZVJlcXVlc3QpIHtcbiAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICB9XG4gICAgICByZXN1bHQgPSB7XG4gICAgICAgIHR5cGU6IFJlc3VsdFR5cGUuZXJyb3IsXG4gICAgICAgIGVycm9yXG4gICAgICB9O1xuICAgIH1cbiAgICBpZiAoaXNSb3V0ZVJlcXVlc3QpIHtcbiAgICAgIC8vIE5vdGU6IFRoaXMgc2hvdWxkIG9ubHkgYmUgbm9uLVJlc3BvbnNlIHZhbHVlcyBpZiB3ZSBnZXQgaGVyZSwgc2luY2VcbiAgICAgIC8vIGlzUm91dGVSZXF1ZXN0IHNob3VsZCB0aHJvdyBhbnkgUmVzcG9uc2UgcmVjZWl2ZWQgaW4gY2FsbExvYWRlck9yQWN0aW9uXG4gICAgICBpZiAoaXNFcnJvclJlc3VsdChyZXN1bHQpKSB7XG4gICAgICAgIHRocm93IHJlc3VsdC5lcnJvcjtcbiAgICAgIH1cbiAgICAgIHJldHVybiB7XG4gICAgICAgIG1hdGNoZXM6IFthY3Rpb25NYXRjaF0sXG4gICAgICAgIGxvYWRlckRhdGE6IHt9LFxuICAgICAgICBhY3Rpb25EYXRhOiB7XG4gICAgICAgICAgW2FjdGlvbk1hdGNoLnJvdXRlLmlkXTogcmVzdWx0LmRhdGFcbiAgICAgICAgfSxcbiAgICAgICAgZXJyb3JzOiBudWxsLFxuICAgICAgICAvLyBOb3RlOiBzdGF0dXNDb2RlICsgaGVhZGVycyBhcmUgdW51c2VkIGhlcmUgc2luY2UgcXVlcnlSb3V0ZSB3aWxsXG4gICAgICAgIC8vIHJldHVybiB0aGUgcmF3IFJlc3BvbnNlIG9yIHZhbHVlXG4gICAgICAgIHN0YXR1c0NvZGU6IDIwMCxcbiAgICAgICAgbG9hZGVySGVhZGVyczoge30sXG4gICAgICAgIGFjdGlvbkhlYWRlcnM6IHt9LFxuICAgICAgICBhY3RpdmVEZWZlcnJlZHM6IG51bGxcbiAgICAgIH07XG4gICAgfVxuICAgIGlmIChpc0Vycm9yUmVzdWx0KHJlc3VsdCkpIHtcbiAgICAgIC8vIFN0b3JlIG9mZiB0aGUgcGVuZGluZyBlcnJvciAtIHdlIHVzZSBpdCB0byBkZXRlcm1pbmUgd2hpY2ggbG9hZGVyc1xuICAgICAgLy8gdG8gY2FsbCBhbmQgd2lsbCBjb21taXQgaXQgd2hlbiB3ZSBjb21wbGV0ZSB0aGUgbmF2aWdhdGlvblxuICAgICAgbGV0IGJvdW5kYXJ5TWF0Y2ggPSBmaW5kTmVhcmVzdEJvdW5kYXJ5KG1hdGNoZXMsIGFjdGlvbk1hdGNoLnJvdXRlLmlkKTtcbiAgICAgIGxldCBjb250ZXh0ID0gYXdhaXQgbG9hZFJvdXRlRGF0YShyZXF1ZXN0LCBtYXRjaGVzLCByZXF1ZXN0Q29udGV4dCwgdW5kZWZpbmVkLCB7XG4gICAgICAgIFtib3VuZGFyeU1hdGNoLnJvdXRlLmlkXTogcmVzdWx0LmVycm9yXG4gICAgICB9KTtcbiAgICAgIC8vIGFjdGlvbiBzdGF0dXMgY29kZXMgdGFrZSBwcmVjZWRlbmNlIG92ZXIgbG9hZGVyIHN0YXR1cyBjb2Rlc1xuICAgICAgcmV0dXJuIF9leHRlbmRzKHt9LCBjb250ZXh0LCB7XG4gICAgICAgIHN0YXR1c0NvZGU6IGlzUm91dGVFcnJvclJlc3BvbnNlKHJlc3VsdC5lcnJvcikgPyByZXN1bHQuZXJyb3Iuc3RhdHVzIDogNTAwLFxuICAgICAgICBhY3Rpb25EYXRhOiBudWxsLFxuICAgICAgICBhY3Rpb25IZWFkZXJzOiBfZXh0ZW5kcyh7fSwgcmVzdWx0LmhlYWRlcnMgPyB7XG4gICAgICAgICAgW2FjdGlvbk1hdGNoLnJvdXRlLmlkXTogcmVzdWx0LmhlYWRlcnNcbiAgICAgICAgfSA6IHt9KVxuICAgICAgfSk7XG4gICAgfVxuICAgIC8vIENyZWF0ZSBhIEdFVCByZXF1ZXN0IGZvciB0aGUgbG9hZGVyc1xuICAgIGxldCBsb2FkZXJSZXF1ZXN0ID0gbmV3IFJlcXVlc3QocmVxdWVzdC51cmwsIHtcbiAgICAgIGhlYWRlcnM6IHJlcXVlc3QuaGVhZGVycyxcbiAgICAgIHJlZGlyZWN0OiByZXF1ZXN0LnJlZGlyZWN0LFxuICAgICAgc2lnbmFsOiByZXF1ZXN0LnNpZ25hbFxuICAgIH0pO1xuICAgIGxldCBjb250ZXh0ID0gYXdhaXQgbG9hZFJvdXRlRGF0YShsb2FkZXJSZXF1ZXN0LCBtYXRjaGVzLCByZXF1ZXN0Q29udGV4dCk7XG4gICAgcmV0dXJuIF9leHRlbmRzKHt9LCBjb250ZXh0LCByZXN1bHQuc3RhdHVzQ29kZSA/IHtcbiAgICAgIHN0YXR1c0NvZGU6IHJlc3VsdC5zdGF0dXNDb2RlXG4gICAgfSA6IHt9LCB7XG4gICAgICBhY3Rpb25EYXRhOiB7XG4gICAgICAgIFthY3Rpb25NYXRjaC5yb3V0ZS5pZF06IHJlc3VsdC5kYXRhXG4gICAgICB9LFxuICAgICAgYWN0aW9uSGVhZGVyczogX2V4dGVuZHMoe30sIHJlc3VsdC5oZWFkZXJzID8ge1xuICAgICAgICBbYWN0aW9uTWF0Y2gucm91dGUuaWRdOiByZXN1bHQuaGVhZGVyc1xuICAgICAgfSA6IHt9KVxuICAgIH0pO1xuICB9XG4gIGFzeW5jIGZ1bmN0aW9uIGxvYWRSb3V0ZURhdGEocmVxdWVzdCwgbWF0Y2hlcywgcmVxdWVzdENvbnRleHQsIHJvdXRlTWF0Y2gsIHBlbmRpbmdBY3Rpb25FcnJvcikge1xuICAgIGxldCBpc1JvdXRlUmVxdWVzdCA9IHJvdXRlTWF0Y2ggIT0gbnVsbDtcbiAgICAvLyBTaG9ydCBjaXJjdWl0IGlmIHdlIGhhdmUgbm8gbG9hZGVycyB0byBydW4gKHF1ZXJ5Um91dGUoKSlcbiAgICBpZiAoaXNSb3V0ZVJlcXVlc3QgJiYgIShyb3V0ZU1hdGNoICE9IG51bGwgJiYgcm91dGVNYXRjaC5yb3V0ZS5sb2FkZXIpICYmICEocm91dGVNYXRjaCAhPSBudWxsICYmIHJvdXRlTWF0Y2gucm91dGUubGF6eSkpIHtcbiAgICAgIHRocm93IGdldEludGVybmFsUm91dGVyRXJyb3IoNDAwLCB7XG4gICAgICAgIG1ldGhvZDogcmVxdWVzdC5tZXRob2QsXG4gICAgICAgIHBhdGhuYW1lOiBuZXcgVVJMKHJlcXVlc3QudXJsKS5wYXRobmFtZSxcbiAgICAgICAgcm91dGVJZDogcm91dGVNYXRjaCA9PSBudWxsID8gdm9pZCAwIDogcm91dGVNYXRjaC5yb3V0ZS5pZFxuICAgICAgfSk7XG4gICAgfVxuICAgIGxldCByZXF1ZXN0TWF0Y2hlcyA9IHJvdXRlTWF0Y2ggPyBbcm91dGVNYXRjaF0gOiBnZXRMb2FkZXJNYXRjaGVzVW50aWxCb3VuZGFyeShtYXRjaGVzLCBPYmplY3Qua2V5cyhwZW5kaW5nQWN0aW9uRXJyb3IgfHwge30pWzBdKTtcbiAgICBsZXQgbWF0Y2hlc1RvTG9hZCA9IHJlcXVlc3RNYXRjaGVzLmZpbHRlcihtID0+IG0ucm91dGUubG9hZGVyIHx8IG0ucm91dGUubGF6eSk7XG4gICAgLy8gU2hvcnQgY2lyY3VpdCBpZiB3ZSBoYXZlIG5vIGxvYWRlcnMgdG8gcnVuIChxdWVyeSgpKVxuICAgIGlmIChtYXRjaGVzVG9Mb2FkLmxlbmd0aCA9PT0gMCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbWF0Y2hlcyxcbiAgICAgICAgLy8gQWRkIGEgbnVsbCBmb3IgYWxsIG1hdGNoZWQgcm91dGVzIGZvciBwcm9wZXIgcmV2YWxpZGF0aW9uIG9uIHRoZSBjbGllbnRcbiAgICAgICAgbG9hZGVyRGF0YTogbWF0Y2hlcy5yZWR1Y2UoKGFjYywgbSkgPT4gT2JqZWN0LmFzc2lnbihhY2MsIHtcbiAgICAgICAgICBbbS5yb3V0ZS5pZF06IG51bGxcbiAgICAgICAgfSksIHt9KSxcbiAgICAgICAgZXJyb3JzOiBwZW5kaW5nQWN0aW9uRXJyb3IgfHwgbnVsbCxcbiAgICAgICAgc3RhdHVzQ29kZTogMjAwLFxuICAgICAgICBsb2FkZXJIZWFkZXJzOiB7fSxcbiAgICAgICAgYWN0aXZlRGVmZXJyZWRzOiBudWxsXG4gICAgICB9O1xuICAgIH1cbiAgICBsZXQgcmVzdWx0cyA9IGF3YWl0IFByb21pc2UuYWxsKFsuLi5tYXRjaGVzVG9Mb2FkLm1hcChtYXRjaCA9PiBjYWxsTG9hZGVyT3JBY3Rpb24oXCJsb2FkZXJcIiwgcmVxdWVzdCwgbWF0Y2gsIG1hdGNoZXMsIG1hbmlmZXN0LCBtYXBSb3V0ZVByb3BlcnRpZXMsIGJhc2VuYW1lLCB7XG4gICAgICBpc1N0YXRpY1JlcXVlc3Q6IHRydWUsXG4gICAgICBpc1JvdXRlUmVxdWVzdCxcbiAgICAgIHJlcXVlc3RDb250ZXh0XG4gICAgfSkpXSk7XG4gICAgaWYgKHJlcXVlc3Quc2lnbmFsLmFib3J0ZWQpIHtcbiAgICAgIGxldCBtZXRob2QgPSBpc1JvdXRlUmVxdWVzdCA/IFwicXVlcnlSb3V0ZVwiIDogXCJxdWVyeVwiO1xuICAgICAgdGhyb3cgbmV3IEVycm9yKG1ldGhvZCArIFwiKCkgY2FsbCBhYm9ydGVkOiBcIiArIHJlcXVlc3QubWV0aG9kICsgXCIgXCIgKyByZXF1ZXN0LnVybCk7XG4gICAgfVxuICAgIC8vIFByb2Nlc3MgYW5kIGNvbW1pdCBvdXRwdXQgZnJvbSBsb2FkZXJzXG4gICAgbGV0IGFjdGl2ZURlZmVycmVkcyA9IG5ldyBNYXAoKTtcbiAgICBsZXQgY29udGV4dCA9IHByb2Nlc3NSb3V0ZUxvYWRlckRhdGEobWF0Y2hlcywgbWF0Y2hlc1RvTG9hZCwgcmVzdWx0cywgcGVuZGluZ0FjdGlvbkVycm9yLCBhY3RpdmVEZWZlcnJlZHMpO1xuICAgIC8vIEFkZCBhIG51bGwgZm9yIGFueSBub24tbG9hZGVyIG1hdGNoZXMgZm9yIHByb3BlciByZXZhbGlkYXRpb24gb24gdGhlIGNsaWVudFxuICAgIGxldCBleGVjdXRlZExvYWRlcnMgPSBuZXcgU2V0KG1hdGNoZXNUb0xvYWQubWFwKG1hdGNoID0+IG1hdGNoLnJvdXRlLmlkKSk7XG4gICAgbWF0Y2hlcy5mb3JFYWNoKG1hdGNoID0+IHtcbiAgICAgIGlmICghZXhlY3V0ZWRMb2FkZXJzLmhhcyhtYXRjaC5yb3V0ZS5pZCkpIHtcbiAgICAgICAgY29udGV4dC5sb2FkZXJEYXRhW21hdGNoLnJvdXRlLmlkXSA9IG51bGw7XG4gICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIF9leHRlbmRzKHt9LCBjb250ZXh0LCB7XG4gICAgICBtYXRjaGVzLFxuICAgICAgYWN0aXZlRGVmZXJyZWRzOiBhY3RpdmVEZWZlcnJlZHMuc2l6ZSA+IDAgPyBPYmplY3QuZnJvbUVudHJpZXMoYWN0aXZlRGVmZXJyZWRzLmVudHJpZXMoKSkgOiBudWxsXG4gICAgfSk7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBkYXRhUm91dGVzLFxuICAgIHF1ZXJ5LFxuICAgIHF1ZXJ5Um91dGVcbiAgfTtcbn1cbi8vI2VuZHJlZ2lvblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vI3JlZ2lvbiBIZWxwZXJzXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuLyoqXG4gKiBHaXZlbiBhbiBleGlzdGluZyBTdGF0aWNIYW5kbGVyQ29udGV4dCBhbmQgYW4gZXJyb3IgdGhyb3duIGF0IHJlbmRlciB0aW1lLFxuICogcHJvdmlkZSBhbiB1cGRhdGVkIFN0YXRpY0hhbmRsZXJDb250ZXh0IHN1aXRhYmxlIGZvciBhIHNlY29uZCBTU1IgcmVuZGVyXG4gKi9cbmZ1bmN0aW9uIGdldFN0YXRpY0NvbnRleHRGcm9tRXJyb3Iocm91dGVzLCBjb250ZXh0LCBlcnJvcikge1xuICBsZXQgbmV3Q29udGV4dCA9IF9leHRlbmRzKHt9LCBjb250ZXh0LCB7XG4gICAgc3RhdHVzQ29kZTogNTAwLFxuICAgIGVycm9yczoge1xuICAgICAgW2NvbnRleHQuX2RlZXBlc3RSZW5kZXJlZEJvdW5kYXJ5SWQgfHwgcm91dGVzWzBdLmlkXTogZXJyb3JcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gbmV3Q29udGV4dDtcbn1cbmZ1bmN0aW9uIGlzU3VibWlzc2lvbk5hdmlnYXRpb24ob3B0cykge1xuICByZXR1cm4gb3B0cyAhPSBudWxsICYmIChcImZvcm1EYXRhXCIgaW4gb3B0cyAmJiBvcHRzLmZvcm1EYXRhICE9IG51bGwgfHwgXCJib2R5XCIgaW4gb3B0cyAmJiBvcHRzLmJvZHkgIT09IHVuZGVmaW5lZCk7XG59XG5mdW5jdGlvbiBub3JtYWxpemVUbyhsb2NhdGlvbiwgbWF0Y2hlcywgYmFzZW5hbWUsIHByZXBlbmRCYXNlbmFtZSwgdG8sIGZyb21Sb3V0ZUlkLCByZWxhdGl2ZSkge1xuICBsZXQgY29udGV4dHVhbE1hdGNoZXM7XG4gIGxldCBhY3RpdmVSb3V0ZU1hdGNoO1xuICBpZiAoZnJvbVJvdXRlSWQgIT0gbnVsbCAmJiByZWxhdGl2ZSAhPT0gXCJwYXRoXCIpIHtcbiAgICAvLyBHcmFiIG1hdGNoZXMgdXAgdG8gdGhlIGNhbGxpbmcgcm91dGUgc28gb3VyIHJvdXRlLXJlbGF0aXZlIGxvZ2ljIGlzXG4gICAgLy8gcmVsYXRpdmUgdG8gdGhlIGNvcnJlY3Qgc291cmNlIHJvdXRlLiAgV2hlbiB1c2luZyByZWxhdGl2ZTpwYXRoLFxuICAgIC8vIGZyb21Sb3V0ZUlkIGlzIGlnbm9yZWQgc2luY2UgdGhhdCBpcyBhbHdheXMgcmVsYXRpdmUgdG8gdGhlIGN1cnJlbnRcbiAgICAvLyBsb2NhdGlvbiBwYXRoXG4gICAgY29udGV4dHVhbE1hdGNoZXMgPSBbXTtcbiAgICBmb3IgKGxldCBtYXRjaCBvZiBtYXRjaGVzKSB7XG4gICAgICBjb250ZXh0dWFsTWF0Y2hlcy5wdXNoKG1hdGNoKTtcbiAgICAgIGlmIChtYXRjaC5yb3V0ZS5pZCA9PT0gZnJvbVJvdXRlSWQpIHtcbiAgICAgICAgYWN0aXZlUm91dGVNYXRjaCA9IG1hdGNoO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgY29udGV4dHVhbE1hdGNoZXMgPSBtYXRjaGVzO1xuICAgIGFjdGl2ZVJvdXRlTWF0Y2ggPSBtYXRjaGVzW21hdGNoZXMubGVuZ3RoIC0gMV07XG4gIH1cbiAgLy8gUmVzb2x2ZSB0aGUgcmVsYXRpdmUgcGF0aFxuICBsZXQgcGF0aCA9IHJlc29sdmVUbyh0byA/IHRvIDogXCIuXCIsIGdldFBhdGhDb250cmlidXRpbmdNYXRjaGVzKGNvbnRleHR1YWxNYXRjaGVzKS5tYXAobSA9PiBtLnBhdGhuYW1lQmFzZSksIHN0cmlwQmFzZW5hbWUobG9jYXRpb24ucGF0aG5hbWUsIGJhc2VuYW1lKSB8fCBsb2NhdGlvbi5wYXRobmFtZSwgcmVsYXRpdmUgPT09IFwicGF0aFwiKTtcbiAgLy8gV2hlbiBgdG9gIGlzIG5vdCBzcGVjaWZpZWQgd2UgaW5oZXJpdCBzZWFyY2gvaGFzaCBmcm9tIHRoZSBjdXJyZW50XG4gIC8vIGxvY2F0aW9uLCB1bmxpa2Ugd2hlbiB0bz1cIi5cIiBhbmQgd2UganVzdCBpbmhlcml0IHRoZSBwYXRoLlxuICAvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3JlbWl4LXJ1bi9yZW1peC9pc3N1ZXMvOTI3XG4gIGlmICh0byA9PSBudWxsKSB7XG4gICAgcGF0aC5zZWFyY2ggPSBsb2NhdGlvbi5zZWFyY2g7XG4gICAgcGF0aC5oYXNoID0gbG9jYXRpb24uaGFzaDtcbiAgfVxuICAvLyBBZGQgYW4gP2luZGV4IHBhcmFtIGZvciBtYXRjaGVkIGluZGV4IHJvdXRlcyBpZiB3ZSBkb24ndCBhbHJlYWR5IGhhdmUgb25lXG4gIGlmICgodG8gPT0gbnVsbCB8fCB0byA9PT0gXCJcIiB8fCB0byA9PT0gXCIuXCIpICYmIGFjdGl2ZVJvdXRlTWF0Y2ggJiYgYWN0aXZlUm91dGVNYXRjaC5yb3V0ZS5pbmRleCAmJiAhaGFzTmFrZWRJbmRleFF1ZXJ5KHBhdGguc2VhcmNoKSkge1xuICAgIHBhdGguc2VhcmNoID0gcGF0aC5zZWFyY2ggPyBwYXRoLnNlYXJjaC5yZXBsYWNlKC9eXFw/LywgXCI/aW5kZXgmXCIpIDogXCI/aW5kZXhcIjtcbiAgfVxuICAvLyBJZiB3ZSdyZSBvcGVyYXRpbmcgd2l0aGluIGEgYmFzZW5hbWUsIHByZXBlbmQgaXQgdG8gdGhlIHBhdGhuYW1lLiAgSWZcbiAgLy8gdGhpcyBpcyBhIHJvb3QgbmF2aWdhdGlvbiwgdGhlbiBqdXN0IHVzZSB0aGUgcmF3IGJhc2VuYW1lIHdoaWNoIGFsbG93c1xuICAvLyB0aGUgYmFzZW5hbWUgdG8gaGF2ZSBmdWxsIGNvbnRyb2wgb3ZlciB0aGUgcHJlc2VuY2Ugb2YgYSB0cmFpbGluZyBzbGFzaFxuICAvLyBvbiByb290IGFjdGlvbnNcbiAgaWYgKHByZXBlbmRCYXNlbmFtZSAmJiBiYXNlbmFtZSAhPT0gXCIvXCIpIHtcbiAgICBwYXRoLnBhdGhuYW1lID0gcGF0aC5wYXRobmFtZSA9PT0gXCIvXCIgPyBiYXNlbmFtZSA6IGpvaW5QYXRocyhbYmFzZW5hbWUsIHBhdGgucGF0aG5hbWVdKTtcbiAgfVxuICByZXR1cm4gY3JlYXRlUGF0aChwYXRoKTtcbn1cbi8vIE5vcm1hbGl6ZSBuYXZpZ2F0aW9uIG9wdGlvbnMgYnkgY29udmVydGluZyBmb3JtTWV0aG9kPUdFVCBmb3JtRGF0YSBvYmplY3RzIHRvXG4vLyBVUkxTZWFyY2hQYXJhbXMgc28gdGhleSBiZWhhdmUgaWRlbnRpY2FsbHkgdG8gbGlua3Mgd2l0aCBxdWVyeSBwYXJhbXNcbmZ1bmN0aW9uIG5vcm1hbGl6ZU5hdmlnYXRlT3B0aW9ucyhub3JtYWxpemVGb3JtTWV0aG9kLCBpc0ZldGNoZXIsIHBhdGgsIG9wdHMpIHtcbiAgLy8gUmV0dXJuIGxvY2F0aW9uIHZlcmJhdGltIG9uIG5vbi1zdWJtaXNzaW9uIG5hdmlnYXRpb25zXG4gIGlmICghb3B0cyB8fCAhaXNTdWJtaXNzaW9uTmF2aWdhdGlvbihvcHRzKSkge1xuICAgIHJldHVybiB7XG4gICAgICBwYXRoXG4gICAgfTtcbiAgfVxuICBpZiAob3B0cy5mb3JtTWV0aG9kICYmICFpc1ZhbGlkTWV0aG9kKG9wdHMuZm9ybU1ldGhvZCkpIHtcbiAgICByZXR1cm4ge1xuICAgICAgcGF0aCxcbiAgICAgIGVycm9yOiBnZXRJbnRlcm5hbFJvdXRlckVycm9yKDQwNSwge1xuICAgICAgICBtZXRob2Q6IG9wdHMuZm9ybU1ldGhvZFxuICAgICAgfSlcbiAgICB9O1xuICB9XG4gIGxldCBnZXRJbnZhbGlkQm9keUVycm9yID0gKCkgPT4gKHtcbiAgICBwYXRoLFxuICAgIGVycm9yOiBnZXRJbnRlcm5hbFJvdXRlckVycm9yKDQwMCwge1xuICAgICAgdHlwZTogXCJpbnZhbGlkLWJvZHlcIlxuICAgIH0pXG4gIH0pO1xuICAvLyBDcmVhdGUgYSBTdWJtaXNzaW9uIG9uIG5vbi1HRVQgbmF2aWdhdGlvbnNcbiAgbGV0IHJhd0Zvcm1NZXRob2QgPSBvcHRzLmZvcm1NZXRob2QgfHwgXCJnZXRcIjtcbiAgbGV0IGZvcm1NZXRob2QgPSBub3JtYWxpemVGb3JtTWV0aG9kID8gcmF3Rm9ybU1ldGhvZC50b1VwcGVyQ2FzZSgpIDogcmF3Rm9ybU1ldGhvZC50b0xvd2VyQ2FzZSgpO1xuICBsZXQgZm9ybUFjdGlvbiA9IHN0cmlwSGFzaEZyb21QYXRoKHBhdGgpO1xuICBpZiAob3B0cy5ib2R5ICE9PSB1bmRlZmluZWQpIHtcbiAgICBpZiAob3B0cy5mb3JtRW5jVHlwZSA9PT0gXCJ0ZXh0L3BsYWluXCIpIHtcbiAgICAgIC8vIHRleHQgb25seSBzdXBwb3J0IFBPU1QvUFVUL1BBVENIL0RFTEVURSBzdWJtaXNzaW9uc1xuICAgICAgaWYgKCFpc011dGF0aW9uTWV0aG9kKGZvcm1NZXRob2QpKSB7XG4gICAgICAgIHJldHVybiBnZXRJbnZhbGlkQm9keUVycm9yKCk7XG4gICAgICB9XG4gICAgICBsZXQgdGV4dCA9IHR5cGVvZiBvcHRzLmJvZHkgPT09IFwic3RyaW5nXCIgPyBvcHRzLmJvZHkgOiBvcHRzLmJvZHkgaW5zdGFuY2VvZiBGb3JtRGF0YSB8fCBvcHRzLmJvZHkgaW5zdGFuY2VvZiBVUkxTZWFyY2hQYXJhbXMgP1xuICAgICAgLy8gaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2UvZm9ybS1jb250cm9sLWluZnJhc3RydWN0dXJlLmh0bWwjcGxhaW4tdGV4dC1mb3JtLWRhdGFcbiAgICAgIEFycmF5LmZyb20ob3B0cy5ib2R5LmVudHJpZXMoKSkucmVkdWNlKChhY2MsIF9yZWYzKSA9PiB7XG4gICAgICAgIGxldCBbbmFtZSwgdmFsdWVdID0gX3JlZjM7XG4gICAgICAgIHJldHVybiBcIlwiICsgYWNjICsgbmFtZSArIFwiPVwiICsgdmFsdWUgKyBcIlxcblwiO1xuICAgICAgfSwgXCJcIikgOiBTdHJpbmcob3B0cy5ib2R5KTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHBhdGgsXG4gICAgICAgIHN1Ym1pc3Npb246IHtcbiAgICAgICAgICBmb3JtTWV0aG9kLFxuICAgICAgICAgIGZvcm1BY3Rpb24sXG4gICAgICAgICAgZm9ybUVuY1R5cGU6IG9wdHMuZm9ybUVuY1R5cGUsXG4gICAgICAgICAgZm9ybURhdGE6IHVuZGVmaW5lZCxcbiAgICAgICAgICBqc29uOiB1bmRlZmluZWQsXG4gICAgICAgICAgdGV4dFxuICAgICAgICB9XG4gICAgICB9O1xuICAgIH0gZWxzZSBpZiAob3B0cy5mb3JtRW5jVHlwZSA9PT0gXCJhcHBsaWNhdGlvbi9qc29uXCIpIHtcbiAgICAgIC8vIGpzb24gb25seSBzdXBwb3J0cyBQT1NUL1BVVC9QQVRDSC9ERUxFVEUgc3VibWlzc2lvbnNcbiAgICAgIGlmICghaXNNdXRhdGlvbk1ldGhvZChmb3JtTWV0aG9kKSkge1xuICAgICAgICByZXR1cm4gZ2V0SW52YWxpZEJvZHlFcnJvcigpO1xuICAgICAgfVxuICAgICAgdHJ5IHtcbiAgICAgICAgbGV0IGpzb24gPSB0eXBlb2Ygb3B0cy5ib2R5ID09PSBcInN0cmluZ1wiID8gSlNPTi5wYXJzZShvcHRzLmJvZHkpIDogb3B0cy5ib2R5O1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHBhdGgsXG4gICAgICAgICAgc3VibWlzc2lvbjoge1xuICAgICAgICAgICAgZm9ybU1ldGhvZCxcbiAgICAgICAgICAgIGZvcm1BY3Rpb24sXG4gICAgICAgICAgICBmb3JtRW5jVHlwZTogb3B0cy5mb3JtRW5jVHlwZSxcbiAgICAgICAgICAgIGZvcm1EYXRhOiB1bmRlZmluZWQsXG4gICAgICAgICAgICBqc29uLFxuICAgICAgICAgICAgdGV4dDogdW5kZWZpbmVkXG4gICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICByZXR1cm4gZ2V0SW52YWxpZEJvZHlFcnJvcigpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBpbnZhcmlhbnQodHlwZW9mIEZvcm1EYXRhID09PSBcImZ1bmN0aW9uXCIsIFwiRm9ybURhdGEgaXMgbm90IGF2YWlsYWJsZSBpbiB0aGlzIGVudmlyb25tZW50XCIpO1xuICBsZXQgc2VhcmNoUGFyYW1zO1xuICBsZXQgZm9ybURhdGE7XG4gIGlmIChvcHRzLmZvcm1EYXRhKSB7XG4gICAgc2VhcmNoUGFyYW1zID0gY29udmVydEZvcm1EYXRhVG9TZWFyY2hQYXJhbXMob3B0cy5mb3JtRGF0YSk7XG4gICAgZm9ybURhdGEgPSBvcHRzLmZvcm1EYXRhO1xuICB9IGVsc2UgaWYgKG9wdHMuYm9keSBpbnN0YW5jZW9mIEZvcm1EYXRhKSB7XG4gICAgc2VhcmNoUGFyYW1zID0gY29udmVydEZvcm1EYXRhVG9TZWFyY2hQYXJhbXMob3B0cy5ib2R5KTtcbiAgICBmb3JtRGF0YSA9IG9wdHMuYm9keTtcbiAgfSBlbHNlIGlmIChvcHRzLmJvZHkgaW5zdGFuY2VvZiBVUkxTZWFyY2hQYXJhbXMpIHtcbiAgICBzZWFyY2hQYXJhbXMgPSBvcHRzLmJvZHk7XG4gICAgZm9ybURhdGEgPSBjb252ZXJ0U2VhcmNoUGFyYW1zVG9Gb3JtRGF0YShzZWFyY2hQYXJhbXMpO1xuICB9IGVsc2UgaWYgKG9wdHMuYm9keSA9PSBudWxsKSB7XG4gICAgc2VhcmNoUGFyYW1zID0gbmV3IFVSTFNlYXJjaFBhcmFtcygpO1xuICAgIGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7XG4gIH0gZWxzZSB7XG4gICAgdHJ5IHtcbiAgICAgIHNlYXJjaFBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXMob3B0cy5ib2R5KTtcbiAgICAgIGZvcm1EYXRhID0gY29udmVydFNlYXJjaFBhcmFtc1RvRm9ybURhdGEoc2VhcmNoUGFyYW1zKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICByZXR1cm4gZ2V0SW52YWxpZEJvZHlFcnJvcigpO1xuICAgIH1cbiAgfVxuICBsZXQgc3VibWlzc2lvbiA9IHtcbiAgICBmb3JtTWV0aG9kLFxuICAgIGZvcm1BY3Rpb24sXG4gICAgZm9ybUVuY1R5cGU6IG9wdHMgJiYgb3B0cy5mb3JtRW5jVHlwZSB8fCBcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZFwiLFxuICAgIGZvcm1EYXRhLFxuICAgIGpzb246IHVuZGVmaW5lZCxcbiAgICB0ZXh0OiB1bmRlZmluZWRcbiAgfTtcbiAgaWYgKGlzTXV0YXRpb25NZXRob2Qoc3VibWlzc2lvbi5mb3JtTWV0aG9kKSkge1xuICAgIHJldHVybiB7XG4gICAgICBwYXRoLFxuICAgICAgc3VibWlzc2lvblxuICAgIH07XG4gIH1cbiAgLy8gRmxhdHRlbiBzdWJtaXNzaW9uIG9udG8gVVJMU2VhcmNoUGFyYW1zIGZvciBHRVQgc3VibWlzc2lvbnNcbiAgbGV0IHBhcnNlZFBhdGggPSBwYXJzZVBhdGgocGF0aCk7XG4gIC8vIE9uIEdFVCBuYXZpZ2F0aW9uIHN1Ym1pc3Npb25zIHdlIGNhbiBkcm9wIHRoZSA/aW5kZXggcGFyYW0gZnJvbSB0aGVcbiAgLy8gcmVzdWx0aW5nIGxvY2F0aW9uIHNpbmNlIGFsbCBsb2FkZXJzIHdpbGwgcnVuLiAgQnV0IGZldGNoZXIgR0VUIHN1Ym1pc3Npb25zXG4gIC8vIG9ubHkgcnVuIGEgc2luZ2xlIGxvYWRlciBzbyB3ZSBuZWVkIHRvIHByZXNlcnZlIGFueSBpbmNvbWluZyA/aW5kZXggcGFyYW1zXG4gIGlmIChpc0ZldGNoZXIgJiYgcGFyc2VkUGF0aC5zZWFyY2ggJiYgaGFzTmFrZWRJbmRleFF1ZXJ5KHBhcnNlZFBhdGguc2VhcmNoKSkge1xuICAgIHNlYXJjaFBhcmFtcy5hcHBlbmQoXCJpbmRleFwiLCBcIlwiKTtcbiAgfVxuICBwYXJzZWRQYXRoLnNlYXJjaCA9IFwiP1wiICsgc2VhcmNoUGFyYW1zO1xuICByZXR1cm4ge1xuICAgIHBhdGg6IGNyZWF0ZVBhdGgocGFyc2VkUGF0aCksXG4gICAgc3VibWlzc2lvblxuICB9O1xufVxuLy8gRmlsdGVyIG91dCBhbGwgcm91dGVzIGJlbG93IGFueSBjYXVnaHQgZXJyb3IgYXMgdGhleSBhcmVuJ3QgZ29pbmcgdG9cbi8vIHJlbmRlciBzbyB3ZSBkb24ndCBuZWVkIHRvIGxvYWQgdGhlbVxuZnVuY3Rpb24gZ2V0TG9hZGVyTWF0Y2hlc1VudGlsQm91bmRhcnkobWF0Y2hlcywgYm91bmRhcnlJZCkge1xuICBsZXQgYm91bmRhcnlNYXRjaGVzID0gbWF0Y2hlcztcbiAgaWYgKGJvdW5kYXJ5SWQpIHtcbiAgICBsZXQgaW5kZXggPSBtYXRjaGVzLmZpbmRJbmRleChtID0+IG0ucm91dGUuaWQgPT09IGJvdW5kYXJ5SWQpO1xuICAgIGlmIChpbmRleCA+PSAwKSB7XG4gICAgICBib3VuZGFyeU1hdGNoZXMgPSBtYXRjaGVzLnNsaWNlKDAsIGluZGV4KTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGJvdW5kYXJ5TWF0Y2hlcztcbn1cbmZ1bmN0aW9uIGdldE1hdGNoZXNUb0xvYWQoaGlzdG9yeSwgc3RhdGUsIG1hdGNoZXMsIHN1Ym1pc3Npb24sIGxvY2F0aW9uLCBpc1JldmFsaWRhdGlvblJlcXVpcmVkLCBjYW5jZWxsZWREZWZlcnJlZFJvdXRlcywgY2FuY2VsbGVkRmV0Y2hlckxvYWRzLCBmZXRjaExvYWRNYXRjaGVzLCBmZXRjaFJlZGlyZWN0SWRzLCByb3V0ZXNUb1VzZSwgYmFzZW5hbWUsIHBlbmRpbmdBY3Rpb25EYXRhLCBwZW5kaW5nRXJyb3IpIHtcbiAgbGV0IGFjdGlvblJlc3VsdCA9IHBlbmRpbmdFcnJvciA/IE9iamVjdC52YWx1ZXMocGVuZGluZ0Vycm9yKVswXSA6IHBlbmRpbmdBY3Rpb25EYXRhID8gT2JqZWN0LnZhbHVlcyhwZW5kaW5nQWN0aW9uRGF0YSlbMF0gOiB1bmRlZmluZWQ7XG4gIGxldCBjdXJyZW50VXJsID0gaGlzdG9yeS5jcmVhdGVVUkwoc3RhdGUubG9jYXRpb24pO1xuICBsZXQgbmV4dFVybCA9IGhpc3RvcnkuY3JlYXRlVVJMKGxvY2F0aW9uKTtcbiAgLy8gUGljayBuYXZpZ2F0aW9uIG1hdGNoZXMgdGhhdCBhcmUgbmV0LW5ldyBvciBxdWFsaWZ5IGZvciByZXZhbGlkYXRpb25cbiAgbGV0IGJvdW5kYXJ5SWQgPSBwZW5kaW5nRXJyb3IgPyBPYmplY3Qua2V5cyhwZW5kaW5nRXJyb3IpWzBdIDogdW5kZWZpbmVkO1xuICBsZXQgYm91bmRhcnlNYXRjaGVzID0gZ2V0TG9hZGVyTWF0Y2hlc1VudGlsQm91bmRhcnkobWF0Y2hlcywgYm91bmRhcnlJZCk7XG4gIGxldCBuYXZpZ2F0aW9uTWF0Y2hlcyA9IGJvdW5kYXJ5TWF0Y2hlcy5maWx0ZXIoKG1hdGNoLCBpbmRleCkgPT4ge1xuICAgIGlmIChtYXRjaC5yb3V0ZS5sYXp5KSB7XG4gICAgICAvLyBXZSBoYXZlbid0IGxvYWRlZCB0aGlzIHJvdXRlIHlldCBzbyB3ZSBkb24ndCBrbm93IGlmIGl0J3MgZ290IGEgbG9hZGVyIVxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGlmIChtYXRjaC5yb3V0ZS5sb2FkZXIgPT0gbnVsbCkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICAvLyBBbHdheXMgY2FsbCB0aGUgbG9hZGVyIG9uIG5ldyByb3V0ZSBpbnN0YW5jZXMgYW5kIHBlbmRpbmcgZGVmZXIgY2FuY2VsbGF0aW9uc1xuICAgIGlmIChpc05ld0xvYWRlcihzdGF0ZS5sb2FkZXJEYXRhLCBzdGF0ZS5tYXRjaGVzW2luZGV4XSwgbWF0Y2gpIHx8IGNhbmNlbGxlZERlZmVycmVkUm91dGVzLnNvbWUoaWQgPT4gaWQgPT09IG1hdGNoLnJvdXRlLmlkKSkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIC8vIFRoaXMgaXMgdGhlIGRlZmF1bHQgaW1wbGVtZW50YXRpb24gZm9yIHdoZW4gd2UgcmV2YWxpZGF0ZS4gIElmIHRoZSByb3V0ZVxuICAgIC8vIHByb3ZpZGVzIGl0J3Mgb3duIGltcGxlbWVudGF0aW9uLCB0aGVuIHdlIGdpdmUgdGhlbSBmdWxsIGNvbnRyb2wgYnV0XG4gICAgLy8gcHJvdmlkZSB0aGlzIHZhbHVlIHNvIHRoZXkgY2FuIGxldmVyYWdlIGl0IGlmIG5lZWRlZCBhZnRlciB0aGV5IGNoZWNrXG4gICAgLy8gdGhlaXIgb3duIHNwZWNpZmljIHVzZSBjYXNlc1xuICAgIGxldCBjdXJyZW50Um91dGVNYXRjaCA9IHN0YXRlLm1hdGNoZXNbaW5kZXhdO1xuICAgIGxldCBuZXh0Um91dGVNYXRjaCA9IG1hdGNoO1xuICAgIHJldHVybiBzaG91bGRSZXZhbGlkYXRlTG9hZGVyKG1hdGNoLCBfZXh0ZW5kcyh7XG4gICAgICBjdXJyZW50VXJsLFxuICAgICAgY3VycmVudFBhcmFtczogY3VycmVudFJvdXRlTWF0Y2gucGFyYW1zLFxuICAgICAgbmV4dFVybCxcbiAgICAgIG5leHRQYXJhbXM6IG5leHRSb3V0ZU1hdGNoLnBhcmFtc1xuICAgIH0sIHN1Ym1pc3Npb24sIHtcbiAgICAgIGFjdGlvblJlc3VsdCxcbiAgICAgIGRlZmF1bHRTaG91bGRSZXZhbGlkYXRlOlxuICAgICAgLy8gRm9yY2VkIHJldmFsaWRhdGlvbiBkdWUgdG8gc3VibWlzc2lvbiwgdXNlUmV2YWxpZGF0b3IsIG9yIFgtUmVtaXgtUmV2YWxpZGF0ZVxuICAgICAgaXNSZXZhbGlkYXRpb25SZXF1aXJlZCB8fFxuICAgICAgLy8gQ2xpY2tlZCB0aGUgc2FtZSBsaW5rLCByZXN1Ym1pdHRlZCBhIEdFVCBmb3JtXG4gICAgICBjdXJyZW50VXJsLnBhdGhuYW1lICsgY3VycmVudFVybC5zZWFyY2ggPT09IG5leHRVcmwucGF0aG5hbWUgKyBuZXh0VXJsLnNlYXJjaCB8fFxuICAgICAgLy8gU2VhcmNoIHBhcmFtcyBhZmZlY3QgYWxsIGxvYWRlcnNcbiAgICAgIGN1cnJlbnRVcmwuc2VhcmNoICE9PSBuZXh0VXJsLnNlYXJjaCB8fCBpc05ld1JvdXRlSW5zdGFuY2UoY3VycmVudFJvdXRlTWF0Y2gsIG5leHRSb3V0ZU1hdGNoKVxuICAgIH0pKTtcbiAgfSk7XG4gIC8vIFBpY2sgZmV0Y2hlci5sb2FkcyB0aGF0IG5lZWQgdG8gYmUgcmV2YWxpZGF0ZWRcbiAgbGV0IHJldmFsaWRhdGluZ0ZldGNoZXJzID0gW107XG4gIGZldGNoTG9hZE1hdGNoZXMuZm9yRWFjaCgoZiwga2V5KSA9PiB7XG4gICAgLy8gRG9uJ3QgcmV2YWxpZGF0ZSBpZiBmZXRjaGVyIHdvbid0IGJlIHByZXNlbnQgaW4gdGhlIHN1YnNlcXVlbnQgcmVuZGVyXG4gICAgaWYgKCFtYXRjaGVzLnNvbWUobSA9PiBtLnJvdXRlLmlkID09PSBmLnJvdXRlSWQpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGxldCBmZXRjaGVyTWF0Y2hlcyA9IG1hdGNoUm91dGVzKHJvdXRlc1RvVXNlLCBmLnBhdGgsIGJhc2VuYW1lKTtcbiAgICAvLyBJZiB0aGUgZmV0Y2hlciBwYXRoIG5vIGxvbmdlciBtYXRjaGVzLCBwdXNoIGl0IGluIHdpdGggbnVsbCBtYXRjaGVzIHNvXG4gICAgLy8gd2UgY2FuIHRyaWdnZXIgYSA0MDQgaW4gY2FsbExvYWRlcnNBbmRNYXliZVJlc29sdmVEYXRhLiAgTm90ZSB0aGlzIGlzXG4gICAgLy8gY3VycmVudGx5IG9ubHkgYSB1c2UtY2FzZSBmb3IgUmVtaXggSE1SIHdoZXJlIHRoZSByb3V0ZSB0cmVlIGNhbiBjaGFuZ2VcbiAgICAvLyBhdCBydW50aW1lIGFuZCByZW1vdmUgYSByb3V0ZSBwcmV2aW91c2x5IGxvYWRlZCB2aWEgYSBmZXRjaGVyXG4gICAgaWYgKCFmZXRjaGVyTWF0Y2hlcykge1xuICAgICAgcmV2YWxpZGF0aW5nRmV0Y2hlcnMucHVzaCh7XG4gICAgICAgIGtleSxcbiAgICAgICAgcm91dGVJZDogZi5yb3V0ZUlkLFxuICAgICAgICBwYXRoOiBmLnBhdGgsXG4gICAgICAgIG1hdGNoZXM6IG51bGwsXG4gICAgICAgIG1hdGNoOiBudWxsLFxuICAgICAgICBjb250cm9sbGVyOiBudWxsXG4gICAgICB9KTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgLy8gUmV2YWxpZGF0aW5nIGZldGNoZXJzIGFyZSBkZWNvdXBsZWQgZnJvbSB0aGUgcm91dGUgbWF0Y2hlcyBzaW5jZSB0aGV5XG4gICAgLy8gbG9hZCBmcm9tIGEgc3RhdGljIGhyZWYuICBUaGV5IHJldmFsaWRhdGUgYmFzZWQgb24gZXhwbGljaXQgcmV2YWxpZGF0aW9uXG4gICAgLy8gKHN1Ym1pc3Npb24sIHVzZVJldmFsaWRhdG9yLCBvciBYLVJlbWl4LVJldmFsaWRhdGUpXG4gICAgbGV0IGZldGNoZXIgPSBzdGF0ZS5mZXRjaGVycy5nZXQoa2V5KTtcbiAgICBsZXQgZmV0Y2hlck1hdGNoID0gZ2V0VGFyZ2V0TWF0Y2goZmV0Y2hlck1hdGNoZXMsIGYucGF0aCk7XG4gICAgbGV0IHNob3VsZFJldmFsaWRhdGUgPSBmYWxzZTtcbiAgICBpZiAoZmV0Y2hSZWRpcmVjdElkcy5oYXMoa2V5KSkge1xuICAgICAgLy8gTmV2ZXIgdHJpZ2dlciBhIHJldmFsaWRhdGlvbiBvZiBhbiBhY3RpdmVseSByZWRpcmVjdGluZyBmZXRjaGVyXG4gICAgICBzaG91bGRSZXZhbGlkYXRlID0gZmFsc2U7XG4gICAgfSBlbHNlIGlmIChjYW5jZWxsZWRGZXRjaGVyTG9hZHMuaW5jbHVkZXMoa2V5KSkge1xuICAgICAgLy8gQWx3YXlzIHJldmFsaWRhdGUgaWYgdGhlIGZldGNoZXIgd2FzIGNhbmNlbGxlZFxuICAgICAgc2hvdWxkUmV2YWxpZGF0ZSA9IHRydWU7XG4gICAgfSBlbHNlIGlmIChmZXRjaGVyICYmIGZldGNoZXIuc3RhdGUgIT09IFwiaWRsZVwiICYmIGZldGNoZXIuZGF0YSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAvLyBJZiB0aGUgZmV0Y2hlciBoYXNuJ3QgZXZlciBjb21wbGV0ZWQgbG9hZGluZyB5ZXQsIHRoZW4gdGhpcyBpc24ndCBhXG4gICAgICAvLyByZXZhbGlkYXRpb24sIGl0IHdvdWxkIGp1c3QgYmUgYSBicmFuZCBuZXcgbG9hZCBpZiBhbiBleHBsaWNpdFxuICAgICAgLy8gcmV2YWxpZGF0aW9uIGlzIHJlcXVpcmVkXG4gICAgICBzaG91bGRSZXZhbGlkYXRlID0gaXNSZXZhbGlkYXRpb25SZXF1aXJlZDtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gT3RoZXJ3aXNlIGZhbGwgYmFjayBvbiBhbnkgdXNlci1kZWZpbmVkIHNob3VsZFJldmFsaWRhdGUsIGRlZmF1bHRpbmdcbiAgICAgIC8vIHRvIGV4cGxpY2l0IHJldmFsaWRhdGlvbnMgb25seVxuICAgICAgc2hvdWxkUmV2YWxpZGF0ZSA9IHNob3VsZFJldmFsaWRhdGVMb2FkZXIoZmV0Y2hlck1hdGNoLCBfZXh0ZW5kcyh7XG4gICAgICAgIGN1cnJlbnRVcmwsXG4gICAgICAgIGN1cnJlbnRQYXJhbXM6IHN0YXRlLm1hdGNoZXNbc3RhdGUubWF0Y2hlcy5sZW5ndGggLSAxXS5wYXJhbXMsXG4gICAgICAgIG5leHRVcmwsXG4gICAgICAgIG5leHRQYXJhbXM6IG1hdGNoZXNbbWF0Y2hlcy5sZW5ndGggLSAxXS5wYXJhbXNcbiAgICAgIH0sIHN1Ym1pc3Npb24sIHtcbiAgICAgICAgYWN0aW9uUmVzdWx0LFxuICAgICAgICBkZWZhdWx0U2hvdWxkUmV2YWxpZGF0ZTogaXNSZXZhbGlkYXRpb25SZXF1aXJlZFxuICAgICAgfSkpO1xuICAgIH1cbiAgICBpZiAoc2hvdWxkUmV2YWxpZGF0ZSkge1xuICAgICAgcmV2YWxpZGF0aW5nRmV0Y2hlcnMucHVzaCh7XG4gICAgICAgIGtleSxcbiAgICAgICAgcm91dGVJZDogZi5yb3V0ZUlkLFxuICAgICAgICBwYXRoOiBmLnBhdGgsXG4gICAgICAgIG1hdGNoZXM6IGZldGNoZXJNYXRjaGVzLFxuICAgICAgICBtYXRjaDogZmV0Y2hlck1hdGNoLFxuICAgICAgICBjb250cm9sbGVyOiBuZXcgQWJvcnRDb250cm9sbGVyKClcbiAgICAgIH0pO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBbbmF2aWdhdGlvbk1hdGNoZXMsIHJldmFsaWRhdGluZ0ZldGNoZXJzXTtcbn1cbmZ1bmN0aW9uIGlzTmV3TG9hZGVyKGN1cnJlbnRMb2FkZXJEYXRhLCBjdXJyZW50TWF0Y2gsIG1hdGNoKSB7XG4gIGxldCBpc05ldyA9XG4gIC8vIFthXSAtPiBbYSwgYl1cbiAgIWN1cnJlbnRNYXRjaCB8fFxuICAvLyBbYSwgYl0gLT4gW2EsIGNdXG4gIG1hdGNoLnJvdXRlLmlkICE9PSBjdXJyZW50TWF0Y2gucm91dGUuaWQ7XG4gIC8vIEhhbmRsZSB0aGUgY2FzZSB0aGF0IHdlIGRvbid0IGhhdmUgZGF0YSBmb3IgYSByZS11c2VkIHJvdXRlLCBwb3RlbnRpYWxseVxuICAvLyBmcm9tIGEgcHJpb3IgZXJyb3Igb3IgZnJvbSBhIGNhbmNlbGxlZCBwZW5kaW5nIGRlZmVycmVkXG4gIGxldCBpc01pc3NpbmdEYXRhID0gY3VycmVudExvYWRlckRhdGFbbWF0Y2gucm91dGUuaWRdID09PSB1bmRlZmluZWQ7XG4gIC8vIEFsd2F5cyBsb2FkIGlmIHRoaXMgaXMgYSBuZXQtbmV3IHJvdXRlIG9yIHdlIGRvbid0IHlldCBoYXZlIGRhdGFcbiAgcmV0dXJuIGlzTmV3IHx8IGlzTWlzc2luZ0RhdGE7XG59XG5mdW5jdGlvbiBpc05ld1JvdXRlSW5zdGFuY2UoY3VycmVudE1hdGNoLCBtYXRjaCkge1xuICBsZXQgY3VycmVudFBhdGggPSBjdXJyZW50TWF0Y2gucm91dGUucGF0aDtcbiAgcmV0dXJuIChcbiAgICAvLyBwYXJhbSBjaGFuZ2UgZm9yIHRoaXMgbWF0Y2gsIC91c2Vycy8xMjMgLT4gL3VzZXJzLzQ1NlxuICAgIGN1cnJlbnRNYXRjaC5wYXRobmFtZSAhPT0gbWF0Y2gucGF0aG5hbWUgfHxcbiAgICAvLyBzcGxhdCBwYXJhbSBjaGFuZ2VkLCB3aGljaCBpcyBub3QgcHJlc2VudCBpbiBtYXRjaC5wYXRoXG4gICAgLy8gZS5nLiAvZmlsZXMvaW1hZ2VzL2F2YXRhci5qcGcgLT4gZmlsZXMvZmluYW5jZXMueGxzXG4gICAgY3VycmVudFBhdGggIT0gbnVsbCAmJiBjdXJyZW50UGF0aC5lbmRzV2l0aChcIipcIikgJiYgY3VycmVudE1hdGNoLnBhcmFtc1tcIipcIl0gIT09IG1hdGNoLnBhcmFtc1tcIipcIl1cbiAgKTtcbn1cbmZ1bmN0aW9uIHNob3VsZFJldmFsaWRhdGVMb2FkZXIobG9hZGVyTWF0Y2gsIGFyZykge1xuICBpZiAobG9hZGVyTWF0Y2gucm91dGUuc2hvdWxkUmV2YWxpZGF0ZSkge1xuICAgIGxldCByb3V0ZUNob2ljZSA9IGxvYWRlck1hdGNoLnJvdXRlLnNob3VsZFJldmFsaWRhdGUoYXJnKTtcbiAgICBpZiAodHlwZW9mIHJvdXRlQ2hvaWNlID09PSBcImJvb2xlYW5cIikge1xuICAgICAgcmV0dXJuIHJvdXRlQ2hvaWNlO1xuICAgIH1cbiAgfVxuICByZXR1cm4gYXJnLmRlZmF1bHRTaG91bGRSZXZhbGlkYXRlO1xufVxuLyoqXG4gKiBFeGVjdXRlIHJvdXRlLmxhenkoKSBtZXRob2RzIHRvIGxhemlseSBsb2FkIHJvdXRlIG1vZHVsZXMgKGxvYWRlciwgYWN0aW9uLFxuICogc2hvdWxkUmV2YWxpZGF0ZSkgYW5kIHVwZGF0ZSB0aGUgcm91dGVNYW5pZmVzdCBpbiBwbGFjZSB3aGljaCBzaGFyZXMgb2JqZWN0c1xuICogd2l0aCBkYXRhUm91dGVzIHNvIHRob3NlIGdldCB1cGRhdGVkIGFzIHdlbGwuXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGxvYWRMYXp5Um91dGVNb2R1bGUocm91dGUsIG1hcFJvdXRlUHJvcGVydGllcywgbWFuaWZlc3QpIHtcbiAgaWYgKCFyb3V0ZS5sYXp5KSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGxldCBsYXp5Um91dGUgPSBhd2FpdCByb3V0ZS5sYXp5KCk7XG4gIC8vIElmIHRoZSBsYXp5IHJvdXRlIGZ1bmN0aW9uIHdhcyBleGVjdXRlZCBhbmQgcmVtb3ZlZCBieSBhbm90aGVyIHBhcmFsbGVsXG4gIC8vIGNhbGwgdGhlbiB3ZSBjYW4gcmV0dXJuIC0gZmlyc3QgbGF6eSgpIHRvIGZpbmlzaCB3aW5zIGJlY2F1c2UgdGhlIHJldHVyblxuICAvLyB2YWx1ZSBvZiBsYXp5IGlzIGV4cGVjdGVkIHRvIGJlIHN0YXRpY1xuICBpZiAoIXJvdXRlLmxhenkpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgbGV0IHJvdXRlVG9VcGRhdGUgPSBtYW5pZmVzdFtyb3V0ZS5pZF07XG4gIGludmFyaWFudChyb3V0ZVRvVXBkYXRlLCBcIk5vIHJvdXRlIGZvdW5kIGluIG1hbmlmZXN0XCIpO1xuICAvLyBVcGRhdGUgdGhlIHJvdXRlIGluIHBsYWNlLiAgVGhpcyBzaG91bGQgYmUgc2FmZSBiZWNhdXNlIHRoZXJlJ3Mgbm8gd2F5XG4gIC8vIHdlIGNvdWxkIHlldCBiZSBzaXR0aW5nIG9uIHRoaXMgcm91dGUgYXMgd2UgY2FuJ3QgZ2V0IHRoZXJlIHdpdGhvdXRcbiAgLy8gcmVzb2x2aW5nIGxhenkoKSBmaXJzdC5cbiAgLy9cbiAgLy8gVGhpcyBpcyBkaWZmZXJlbnQgdGhhbiB0aGUgSE1SIFwidXBkYXRlXCIgdXNlLWNhc2Ugd2hlcmUgd2UgbWF5IGFjdGl2ZWx5IGJlXG4gIC8vIG9uIHRoZSByb3V0ZSBiZWluZyB1cGRhdGVkLiAgVGhlIG1haW4gY29uY2VybiBib2lscyBkb3duIHRvIFwiZG9lcyB0aGlzXG4gIC8vIG11dGF0aW9uIGFmZmVjdCBhbnkgb25nb2luZyBuYXZpZ2F0aW9ucyBvciBhbnkgY3VycmVudCBzdGF0ZS5tYXRjaGVzXG4gIC8vIHZhbHVlcz9cIi4gIElmIG5vdCwgaXQgc2hvdWxkIGJlIHNhZmUgdG8gdXBkYXRlIGluIHBsYWNlLlxuICBsZXQgcm91dGVVcGRhdGVzID0ge307XG4gIGZvciAobGV0IGxhenlSb3V0ZVByb3BlcnR5IGluIGxhenlSb3V0ZSkge1xuICAgIGxldCBzdGF0aWNSb3V0ZVZhbHVlID0gcm91dGVUb1VwZGF0ZVtsYXp5Um91dGVQcm9wZXJ0eV07XG4gICAgbGV0IGlzUHJvcGVydHlTdGF0aWNhbGx5RGVmaW5lZCA9IHN0YXRpY1JvdXRlVmFsdWUgIT09IHVuZGVmaW5lZCAmJlxuICAgIC8vIFRoaXMgcHJvcGVydHkgaXNuJ3Qgc3RhdGljIHNpbmNlIGl0IHNob3VsZCBhbHdheXMgYmUgdXBkYXRlZCBiYXNlZFxuICAgIC8vIG9uIHRoZSByb3V0ZSB1cGRhdGVzXG4gICAgbGF6eVJvdXRlUHJvcGVydHkgIT09IFwiaGFzRXJyb3JCb3VuZGFyeVwiO1xuICAgIHdhcm5pbmcoIWlzUHJvcGVydHlTdGF0aWNhbGx5RGVmaW5lZCwgXCJSb3V0ZSBcXFwiXCIgKyByb3V0ZVRvVXBkYXRlLmlkICsgXCJcXFwiIGhhcyBhIHN0YXRpYyBwcm9wZXJ0eSBcXFwiXCIgKyBsYXp5Um91dGVQcm9wZXJ0eSArIFwiXFxcIiBcIiArIFwiZGVmaW5lZCBidXQgaXRzIGxhenkgZnVuY3Rpb24gaXMgYWxzbyByZXR1cm5pbmcgYSB2YWx1ZSBmb3IgdGhpcyBwcm9wZXJ0eS4gXCIgKyAoXCJUaGUgbGF6eSByb3V0ZSBwcm9wZXJ0eSBcXFwiXCIgKyBsYXp5Um91dGVQcm9wZXJ0eSArIFwiXFxcIiB3aWxsIGJlIGlnbm9yZWQuXCIpKTtcbiAgICBpZiAoIWlzUHJvcGVydHlTdGF0aWNhbGx5RGVmaW5lZCAmJiAhaW1tdXRhYmxlUm91dGVLZXlzLmhhcyhsYXp5Um91dGVQcm9wZXJ0eSkpIHtcbiAgICAgIHJvdXRlVXBkYXRlc1tsYXp5Um91dGVQcm9wZXJ0eV0gPSBsYXp5Um91dGVbbGF6eVJvdXRlUHJvcGVydHldO1xuICAgIH1cbiAgfVxuICAvLyBNdXRhdGUgdGhlIHJvdXRlIHdpdGggdGhlIHByb3ZpZGVkIHVwZGF0ZXMuICBEbyB0aGlzIGZpcnN0IHNvIHdlIHBhc3NcbiAgLy8gdGhlIHVwZGF0ZWQgdmVyc2lvbiB0byBtYXBSb3V0ZVByb3BlcnRpZXNcbiAgT2JqZWN0LmFzc2lnbihyb3V0ZVRvVXBkYXRlLCByb3V0ZVVwZGF0ZXMpO1xuICAvLyBNdXRhdGUgdGhlIGBoYXNFcnJvckJvdW5kYXJ5YCBwcm9wZXJ0eSBvbiB0aGUgcm91dGUgYmFzZWQgb24gdGhlIHJvdXRlXG4gIC8vIHVwZGF0ZXMgYW5kIHJlbW92ZSB0aGUgYGxhenlgIGZ1bmN0aW9uIHNvIHdlIGRvbid0IHJlc29sdmUgdGhlIGxhenlcbiAgLy8gcm91dGUgYWdhaW4uXG4gIE9iamVjdC5hc3NpZ24ocm91dGVUb1VwZGF0ZSwgX2V4dGVuZHMoe30sIG1hcFJvdXRlUHJvcGVydGllcyhyb3V0ZVRvVXBkYXRlKSwge1xuICAgIGxhenk6IHVuZGVmaW5lZFxuICB9KSk7XG59XG5hc3luYyBmdW5jdGlvbiBjYWxsTG9hZGVyT3JBY3Rpb24odHlwZSwgcmVxdWVzdCwgbWF0Y2gsIG1hdGNoZXMsIG1hbmlmZXN0LCBtYXBSb3V0ZVByb3BlcnRpZXMsIGJhc2VuYW1lLCBvcHRzKSB7XG4gIGlmIChvcHRzID09PSB2b2lkIDApIHtcbiAgICBvcHRzID0ge307XG4gIH1cbiAgbGV0IHJlc3VsdFR5cGU7XG4gIGxldCByZXN1bHQ7XG4gIGxldCBvblJlamVjdDtcbiAgbGV0IHJ1bkhhbmRsZXIgPSBoYW5kbGVyID0+IHtcbiAgICAvLyBTZXR1cCBhIHByb21pc2Ugd2UgY2FuIHJhY2UgYWdhaW5zdCBzbyB0aGF0IGFib3J0IHNpZ25hbHMgc2hvcnQgY2lyY3VpdFxuICAgIGxldCByZWplY3Q7XG4gICAgbGV0IGFib3J0UHJvbWlzZSA9IG5ldyBQcm9taXNlKChfLCByKSA9PiByZWplY3QgPSByKTtcbiAgICBvblJlamVjdCA9ICgpID0+IHJlamVjdCgpO1xuICAgIHJlcXVlc3Quc2lnbmFsLmFkZEV2ZW50TGlzdGVuZXIoXCJhYm9ydFwiLCBvblJlamVjdCk7XG4gICAgcmV0dXJuIFByb21pc2UucmFjZShbaGFuZGxlcih7XG4gICAgICByZXF1ZXN0LFxuICAgICAgcGFyYW1zOiBtYXRjaC5wYXJhbXMsXG4gICAgICBjb250ZXh0OiBvcHRzLnJlcXVlc3RDb250ZXh0XG4gICAgfSksIGFib3J0UHJvbWlzZV0pO1xuICB9O1xuICB0cnkge1xuICAgIGxldCBoYW5kbGVyID0gbWF0Y2gucm91dGVbdHlwZV07XG4gICAgaWYgKG1hdGNoLnJvdXRlLmxhenkpIHtcbiAgICAgIGlmIChoYW5kbGVyKSB7XG4gICAgICAgIC8vIFJ1biBzdGF0aWNhbGx5IGRlZmluZWQgaGFuZGxlciBpbiBwYXJhbGxlbCB3aXRoIGxhenkoKVxuICAgICAgICBsZXQgaGFuZGxlckVycm9yO1xuICAgICAgICBsZXQgdmFsdWVzID0gYXdhaXQgUHJvbWlzZS5hbGwoW1xuICAgICAgICAvLyBJZiB0aGUgaGFuZGxlciB0aHJvd3MsIGRvbid0IGxldCBpdCBpbW1lZGlhdGVseSBidWJibGUgb3V0LFxuICAgICAgICAvLyBzaW5jZSB3ZSBuZWVkIHRvIGxldCB0aGUgbGF6eSgpIGV4ZWN1dGlvbiBmaW5pc2ggc28gd2Uga25vdyBpZiB0aGlzXG4gICAgICAgIC8vIHJvdXRlIGhhcyBhIGJvdW5kYXJ5IHRoYXQgY2FuIGhhbmRsZSB0aGUgZXJyb3JcbiAgICAgICAgcnVuSGFuZGxlcihoYW5kbGVyKS5jYXRjaChlID0+IHtcbiAgICAgICAgICBoYW5kbGVyRXJyb3IgPSBlO1xuICAgICAgICB9KSwgbG9hZExhenlSb3V0ZU1vZHVsZShtYXRjaC5yb3V0ZSwgbWFwUm91dGVQcm9wZXJ0aWVzLCBtYW5pZmVzdCldKTtcbiAgICAgICAgaWYgKGhhbmRsZXJFcnJvcikge1xuICAgICAgICAgIHRocm93IGhhbmRsZXJFcnJvcjtcbiAgICAgICAgfVxuICAgICAgICByZXN1bHQgPSB2YWx1ZXNbMF07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBMb2FkIGxhenkgcm91dGUgbW9kdWxlLCB0aGVuIHJ1biBhbnkgcmV0dXJuZWQgaGFuZGxlclxuICAgICAgICBhd2FpdCBsb2FkTGF6eVJvdXRlTW9kdWxlKG1hdGNoLnJvdXRlLCBtYXBSb3V0ZVByb3BlcnRpZXMsIG1hbmlmZXN0KTtcbiAgICAgICAgaGFuZGxlciA9IG1hdGNoLnJvdXRlW3R5cGVdO1xuICAgICAgICBpZiAoaGFuZGxlcikge1xuICAgICAgICAgIC8vIEhhbmRsZXIgc3RpbGwgcnVuIGV2ZW4gaWYgd2UgZ290IGludGVycnVwdGVkIHRvIG1haW50YWluIGNvbnNpc3RlbmN5XG4gICAgICAgICAgLy8gd2l0aCB1bi1hYm9ydGFibGUgYmVoYXZpb3Igb2YgaGFuZGxlciBleGVjdXRpb24gb24gbm9uLWxhenkgb3JcbiAgICAgICAgICAvLyBwcmV2aW91c2x5LWxhenktbG9hZGVkIHJvdXRlc1xuICAgICAgICAgIHJlc3VsdCA9IGF3YWl0IHJ1bkhhbmRsZXIoaGFuZGxlcik7XG4gICAgICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gXCJhY3Rpb25cIikge1xuICAgICAgICAgIGxldCB1cmwgPSBuZXcgVVJMKHJlcXVlc3QudXJsKTtcbiAgICAgICAgICBsZXQgcGF0aG5hbWUgPSB1cmwucGF0aG5hbWUgKyB1cmwuc2VhcmNoO1xuICAgICAgICAgIHRocm93IGdldEludGVybmFsUm91dGVyRXJyb3IoNDA1LCB7XG4gICAgICAgICAgICBtZXRob2Q6IHJlcXVlc3QubWV0aG9kLFxuICAgICAgICAgICAgcGF0aG5hbWUsXG4gICAgICAgICAgICByb3V0ZUlkOiBtYXRjaC5yb3V0ZS5pZFxuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIGxhenkoKSByb3V0ZSBoYXMgbm8gbG9hZGVyIHRvIHJ1bi4gIFNob3J0IGNpcmN1aXQgaGVyZSBzbyB3ZSBkb24ndFxuICAgICAgICAgIC8vIGhpdCB0aGUgaW52YXJpYW50IGJlbG93IHRoYXQgZXJyb3JzIG9uIHJldHVybmluZyB1bmRlZmluZWQuXG4gICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHR5cGU6IFJlc3VsdFR5cGUuZGF0YSxcbiAgICAgICAgICAgIGRhdGE6IHVuZGVmaW5lZFxuICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKCFoYW5kbGVyKSB7XG4gICAgICBsZXQgdXJsID0gbmV3IFVSTChyZXF1ZXN0LnVybCk7XG4gICAgICBsZXQgcGF0aG5hbWUgPSB1cmwucGF0aG5hbWUgKyB1cmwuc2VhcmNoO1xuICAgICAgdGhyb3cgZ2V0SW50ZXJuYWxSb3V0ZXJFcnJvcig0MDQsIHtcbiAgICAgICAgcGF0aG5hbWVcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXN1bHQgPSBhd2FpdCBydW5IYW5kbGVyKGhhbmRsZXIpO1xuICAgIH1cbiAgICBpbnZhcmlhbnQocmVzdWx0ICE9PSB1bmRlZmluZWQsIFwiWW91IGRlZmluZWQgXCIgKyAodHlwZSA9PT0gXCJhY3Rpb25cIiA/IFwiYW4gYWN0aW9uXCIgOiBcImEgbG9hZGVyXCIpICsgXCIgZm9yIHJvdXRlIFwiICsgKFwiXFxcIlwiICsgbWF0Y2gucm91dGUuaWQgKyBcIlxcXCIgYnV0IGRpZG4ndCByZXR1cm4gYW55dGhpbmcgZnJvbSB5b3VyIGBcIiArIHR5cGUgKyBcImAgXCIpICsgXCJmdW5jdGlvbi4gUGxlYXNlIHJldHVybiBhIHZhbHVlIG9yIGBudWxsYC5cIik7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXN1bHRUeXBlID0gUmVzdWx0VHlwZS5lcnJvcjtcbiAgICByZXN1bHQgPSBlO1xuICB9IGZpbmFsbHkge1xuICAgIGlmIChvblJlamVjdCkge1xuICAgICAgcmVxdWVzdC5zaWduYWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImFib3J0XCIsIG9uUmVqZWN0KTtcbiAgICB9XG4gIH1cbiAgaWYgKGlzUmVzcG9uc2UocmVzdWx0KSkge1xuICAgIGxldCBzdGF0dXMgPSByZXN1bHQuc3RhdHVzO1xuICAgIC8vIFByb2Nlc3MgcmVkaXJlY3RzXG4gICAgaWYgKHJlZGlyZWN0U3RhdHVzQ29kZXMuaGFzKHN0YXR1cykpIHtcbiAgICAgIGxldCBsb2NhdGlvbiA9IHJlc3VsdC5oZWFkZXJzLmdldChcIkxvY2F0aW9uXCIpO1xuICAgICAgaW52YXJpYW50KGxvY2F0aW9uLCBcIlJlZGlyZWN0cyByZXR1cm5lZC90aHJvd24gZnJvbSBsb2FkZXJzL2FjdGlvbnMgbXVzdCBoYXZlIGEgTG9jYXRpb24gaGVhZGVyXCIpO1xuICAgICAgLy8gU3VwcG9ydCByZWxhdGl2ZSByb3V0aW5nIGluIGludGVybmFsIHJlZGlyZWN0c1xuICAgICAgaWYgKCFBQlNPTFVURV9VUkxfUkVHRVgudGVzdChsb2NhdGlvbikpIHtcbiAgICAgICAgbG9jYXRpb24gPSBub3JtYWxpemVUbyhuZXcgVVJMKHJlcXVlc3QudXJsKSwgbWF0Y2hlcy5zbGljZSgwLCBtYXRjaGVzLmluZGV4T2YobWF0Y2gpICsgMSksIGJhc2VuYW1lLCB0cnVlLCBsb2NhdGlvbik7XG4gICAgICB9IGVsc2UgaWYgKCFvcHRzLmlzU3RhdGljUmVxdWVzdCkge1xuICAgICAgICAvLyBTdHJpcCBvZmYgdGhlIHByb3RvY29sK29yaWdpbiBmb3Igc2FtZS1vcmlnaW4gKyBzYW1lLWJhc2VuYW1lIGFic29sdXRlXG4gICAgICAgIC8vIHJlZGlyZWN0cy4gSWYgdGhpcyBpcyBhIHN0YXRpYyByZXF1ZXN0LCB3ZSBjYW4gbGV0IGl0IGdvIGJhY2sgdG8gdGhlXG4gICAgICAgIC8vIGJyb3dzZXIgYXMtaXNcbiAgICAgICAgbGV0IGN1cnJlbnRVcmwgPSBuZXcgVVJMKHJlcXVlc3QudXJsKTtcbiAgICAgICAgbGV0IHVybCA9IGxvY2F0aW9uLnN0YXJ0c1dpdGgoXCIvL1wiKSA/IG5ldyBVUkwoY3VycmVudFVybC5wcm90b2NvbCArIGxvY2F0aW9uKSA6IG5ldyBVUkwobG9jYXRpb24pO1xuICAgICAgICBsZXQgaXNTYW1lQmFzZW5hbWUgPSBzdHJpcEJhc2VuYW1lKHVybC5wYXRobmFtZSwgYmFzZW5hbWUpICE9IG51bGw7XG4gICAgICAgIGlmICh1cmwub3JpZ2luID09PSBjdXJyZW50VXJsLm9yaWdpbiAmJiBpc1NhbWVCYXNlbmFtZSkge1xuICAgICAgICAgIGxvY2F0aW9uID0gdXJsLnBhdGhuYW1lICsgdXJsLnNlYXJjaCArIHVybC5oYXNoO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICAvLyBEb24ndCBwcm9jZXNzIHJlZGlyZWN0cyBpbiB0aGUgcm91dGVyIGR1cmluZyBzdGF0aWMgcmVxdWVzdHMgcmVxdWVzdHMuXG4gICAgICAvLyBJbnN0ZWFkLCB0aHJvdyB0aGUgUmVzcG9uc2UgYW5kIGxldCB0aGUgc2VydmVyIGhhbmRsZSBpdCB3aXRoIGFuIEhUVFBcbiAgICAgIC8vIHJlZGlyZWN0LiAgV2UgYWxzbyB1cGRhdGUgdGhlIExvY2F0aW9uIGhlYWRlciBpbiBwbGFjZSBpbiB0aGlzIGZsb3cgc29cbiAgICAgIC8vIGJhc2VuYW1lIGFuZCByZWxhdGl2ZSByb3V0aW5nIGlzIHRha2VuIGludG8gYWNjb3VudFxuICAgICAgaWYgKG9wdHMuaXNTdGF0aWNSZXF1ZXN0KSB7XG4gICAgICAgIHJlc3VsdC5oZWFkZXJzLnNldChcIkxvY2F0aW9uXCIsIGxvY2F0aW9uKTtcbiAgICAgICAgdGhyb3cgcmVzdWx0O1xuICAgICAgfVxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogUmVzdWx0VHlwZS5yZWRpcmVjdCxcbiAgICAgICAgc3RhdHVzLFxuICAgICAgICBsb2NhdGlvbixcbiAgICAgICAgcmV2YWxpZGF0ZTogcmVzdWx0LmhlYWRlcnMuZ2V0KFwiWC1SZW1peC1SZXZhbGlkYXRlXCIpICE9PSBudWxsLFxuICAgICAgICByZWxvYWREb2N1bWVudDogcmVzdWx0LmhlYWRlcnMuZ2V0KFwiWC1SZW1peC1SZWxvYWQtRG9jdW1lbnRcIikgIT09IG51bGxcbiAgICAgIH07XG4gICAgfVxuICAgIC8vIEZvciBTU1Igc2luZ2xlLXJvdXRlIHJlcXVlc3RzLCB3ZSB3YW50IHRvIGhhbmQgUmVzcG9uc2VzIGJhY2sgZGlyZWN0bHlcbiAgICAvLyB3aXRob3V0IHVud3JhcHBpbmcuICBXZSBkbyB0aGlzIHdpdGggdGhlIFF1ZXJ5Um91dGVSZXNwb25zZSB3cmFwcGVyXG4gICAgLy8gaW50ZXJmYWNlIHNvIHdlIGNhbiBrbm93IHdoZXRoZXIgaXQgd2FzIHJldHVybmVkIG9yIHRocm93blxuICAgIGlmIChvcHRzLmlzUm91dGVSZXF1ZXN0KSB7XG4gICAgICBsZXQgcXVlcnlSb3V0ZVJlc3BvbnNlID0ge1xuICAgICAgICB0eXBlOiByZXN1bHRUeXBlID09PSBSZXN1bHRUeXBlLmVycm9yID8gUmVzdWx0VHlwZS5lcnJvciA6IFJlc3VsdFR5cGUuZGF0YSxcbiAgICAgICAgcmVzcG9uc2U6IHJlc3VsdFxuICAgICAgfTtcbiAgICAgIHRocm93IHF1ZXJ5Um91dGVSZXNwb25zZTtcbiAgICB9XG4gICAgbGV0IGRhdGE7XG4gICAgbGV0IGNvbnRlbnRUeXBlID0gcmVzdWx0LmhlYWRlcnMuZ2V0KFwiQ29udGVudC1UeXBlXCIpO1xuICAgIC8vIENoZWNrIGJldHdlZW4gd29yZCBib3VuZGFyaWVzIGluc3RlYWQgb2Ygc3RhcnRzV2l0aCgpIGR1ZSB0byB0aGUgbGFzdFxuICAgIC8vIHBhcmFncmFwaCBvZiBodHRwczovL2h0dHB3Zy5vcmcvc3BlY3MvcmZjOTExMC5odG1sI2ZpZWxkLmNvbnRlbnQtdHlwZVxuICAgIGlmIChjb250ZW50VHlwZSAmJiAvXFxiYXBwbGljYXRpb25cXC9qc29uXFxiLy50ZXN0KGNvbnRlbnRUeXBlKSkge1xuICAgICAgZGF0YSA9IGF3YWl0IHJlc3VsdC5qc29uKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGRhdGEgPSBhd2FpdCByZXN1bHQudGV4dCgpO1xuICAgIH1cbiAgICBpZiAocmVzdWx0VHlwZSA9PT0gUmVzdWx0VHlwZS5lcnJvcikge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogcmVzdWx0VHlwZSxcbiAgICAgICAgZXJyb3I6IG5ldyBFcnJvclJlc3BvbnNlSW1wbChzdGF0dXMsIHJlc3VsdC5zdGF0dXNUZXh0LCBkYXRhKSxcbiAgICAgICAgaGVhZGVyczogcmVzdWx0LmhlYWRlcnNcbiAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICB0eXBlOiBSZXN1bHRUeXBlLmRhdGEsXG4gICAgICBkYXRhLFxuICAgICAgc3RhdHVzQ29kZTogcmVzdWx0LnN0YXR1cyxcbiAgICAgIGhlYWRlcnM6IHJlc3VsdC5oZWFkZXJzXG4gICAgfTtcbiAgfVxuICBpZiAocmVzdWx0VHlwZSA9PT0gUmVzdWx0VHlwZS5lcnJvcikge1xuICAgIHJldHVybiB7XG4gICAgICB0eXBlOiByZXN1bHRUeXBlLFxuICAgICAgZXJyb3I6IHJlc3VsdFxuICAgIH07XG4gIH1cbiAgaWYgKGlzRGVmZXJyZWREYXRhKHJlc3VsdCkpIHtcbiAgICB2YXIgX3Jlc3VsdCRpbml0LCBfcmVzdWx0JGluaXQyO1xuICAgIHJldHVybiB7XG4gICAgICB0eXBlOiBSZXN1bHRUeXBlLmRlZmVycmVkLFxuICAgICAgZGVmZXJyZWREYXRhOiByZXN1bHQsXG4gICAgICBzdGF0dXNDb2RlOiAoX3Jlc3VsdCRpbml0ID0gcmVzdWx0LmluaXQpID09IG51bGwgPyB2b2lkIDAgOiBfcmVzdWx0JGluaXQuc3RhdHVzLFxuICAgICAgaGVhZGVyczogKChfcmVzdWx0JGluaXQyID0gcmVzdWx0LmluaXQpID09IG51bGwgPyB2b2lkIDAgOiBfcmVzdWx0JGluaXQyLmhlYWRlcnMpICYmIG5ldyBIZWFkZXJzKHJlc3VsdC5pbml0LmhlYWRlcnMpXG4gICAgfTtcbiAgfVxuICByZXR1cm4ge1xuICAgIHR5cGU6IFJlc3VsdFR5cGUuZGF0YSxcbiAgICBkYXRhOiByZXN1bHRcbiAgfTtcbn1cbi8vIFV0aWxpdHkgbWV0aG9kIGZvciBjcmVhdGluZyB0aGUgUmVxdWVzdCBpbnN0YW5jZXMgZm9yIGxvYWRlcnMvYWN0aW9ucyBkdXJpbmdcbi8vIGNsaWVudC1zaWRlIG5hdmlnYXRpb25zIGFuZCBmZXRjaGVzLiAgRHVyaW5nIFNTUiB3ZSB3aWxsIGFsd2F5cyBoYXZlIGFcbi8vIFJlcXVlc3QgaW5zdGFuY2UgZnJvbSB0aGUgc3RhdGljIGhhbmRsZXIgKHF1ZXJ5L3F1ZXJ5Um91dGUpXG5mdW5jdGlvbiBjcmVhdGVDbGllbnRTaWRlUmVxdWVzdChoaXN0b3J5LCBsb2NhdGlvbiwgc2lnbmFsLCBzdWJtaXNzaW9uKSB7XG4gIGxldCB1cmwgPSBoaXN0b3J5LmNyZWF0ZVVSTChzdHJpcEhhc2hGcm9tUGF0aChsb2NhdGlvbikpLnRvU3RyaW5nKCk7XG4gIGxldCBpbml0ID0ge1xuICAgIHNpZ25hbFxuICB9O1xuICBpZiAoc3VibWlzc2lvbiAmJiBpc011dGF0aW9uTWV0aG9kKHN1Ym1pc3Npb24uZm9ybU1ldGhvZCkpIHtcbiAgICBsZXQge1xuICAgICAgZm9ybU1ldGhvZCxcbiAgICAgIGZvcm1FbmNUeXBlXG4gICAgfSA9IHN1Ym1pc3Npb247XG4gICAgLy8gRGlkbid0IHRoaW5rIHdlIG5lZWRlZCB0aGlzIGJ1dCBpdCB0dXJucyBvdXQgdW5saWtlIG90aGVyIG1ldGhvZHMsIHBhdGNoXG4gICAgLy8gd29uJ3QgYmUgcHJvcGVybHkgbm9ybWFsaXplZCB0byB1cHBlcmNhc2UgYW5kIHJlc3VsdHMgaW4gYSA0MDUgZXJyb3IuXG4gICAgLy8gU2VlOiBodHRwczovL2ZldGNoLnNwZWMud2hhdHdnLm9yZy8jY29uY2VwdC1tZXRob2RcbiAgICBpbml0Lm1ldGhvZCA9IGZvcm1NZXRob2QudG9VcHBlckNhc2UoKTtcbiAgICBpZiAoZm9ybUVuY1R5cGUgPT09IFwiYXBwbGljYXRpb24vanNvblwiKSB7XG4gICAgICBpbml0LmhlYWRlcnMgPSBuZXcgSGVhZGVycyh7XG4gICAgICAgIFwiQ29udGVudC1UeXBlXCI6IGZvcm1FbmNUeXBlXG4gICAgICB9KTtcbiAgICAgIGluaXQuYm9keSA9IEpTT04uc3RyaW5naWZ5KHN1Ym1pc3Npb24uanNvbik7XG4gICAgfSBlbHNlIGlmIChmb3JtRW5jVHlwZSA9PT0gXCJ0ZXh0L3BsYWluXCIpIHtcbiAgICAgIC8vIENvbnRlbnQtVHlwZSBpcyBpbmZlcnJlZCAoaHR0cHM6Ly9mZXRjaC5zcGVjLndoYXR3Zy5vcmcvI2RvbS1yZXF1ZXN0KVxuICAgICAgaW5pdC5ib2R5ID0gc3VibWlzc2lvbi50ZXh0O1xuICAgIH0gZWxzZSBpZiAoZm9ybUVuY1R5cGUgPT09IFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkXCIgJiYgc3VibWlzc2lvbi5mb3JtRGF0YSkge1xuICAgICAgLy8gQ29udGVudC1UeXBlIGlzIGluZmVycmVkIChodHRwczovL2ZldGNoLnNwZWMud2hhdHdnLm9yZy8jZG9tLXJlcXVlc3QpXG4gICAgICBpbml0LmJvZHkgPSBjb252ZXJ0Rm9ybURhdGFUb1NlYXJjaFBhcmFtcyhzdWJtaXNzaW9uLmZvcm1EYXRhKTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gQ29udGVudC1UeXBlIGlzIGluZmVycmVkIChodHRwczovL2ZldGNoLnNwZWMud2hhdHdnLm9yZy8jZG9tLXJlcXVlc3QpXG4gICAgICBpbml0LmJvZHkgPSBzdWJtaXNzaW9uLmZvcm1EYXRhO1xuICAgIH1cbiAgfVxuICByZXR1cm4gbmV3IFJlcXVlc3QodXJsLCBpbml0KTtcbn1cbmZ1bmN0aW9uIGNvbnZlcnRGb3JtRGF0YVRvU2VhcmNoUGFyYW1zKGZvcm1EYXRhKSB7XG4gIGxldCBzZWFyY2hQYXJhbXMgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKCk7XG4gIGZvciAobGV0IFtrZXksIHZhbHVlXSBvZiBmb3JtRGF0YS5lbnRyaWVzKCkpIHtcbiAgICAvLyBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnL211bHRpcGFnZS9mb3JtLWNvbnRyb2wtaW5mcmFzdHJ1Y3R1cmUuaHRtbCNjb252ZXJ0aW5nLWFuLWVudHJ5LWxpc3QtdG8tYS1saXN0LW9mLW5hbWUtdmFsdWUtcGFpcnNcbiAgICBzZWFyY2hQYXJhbXMuYXBwZW5kKGtleSwgdHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiID8gdmFsdWUgOiB2YWx1ZS5uYW1lKTtcbiAgfVxuICByZXR1cm4gc2VhcmNoUGFyYW1zO1xufVxuZnVuY3Rpb24gY29udmVydFNlYXJjaFBhcmFtc1RvRm9ybURhdGEoc2VhcmNoUGFyYW1zKSB7XG4gIGxldCBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpO1xuICBmb3IgKGxldCBba2V5LCB2YWx1ZV0gb2Ygc2VhcmNoUGFyYW1zLmVudHJpZXMoKSkge1xuICAgIGZvcm1EYXRhLmFwcGVuZChrZXksIHZhbHVlKTtcbiAgfVxuICByZXR1cm4gZm9ybURhdGE7XG59XG5mdW5jdGlvbiBwcm9jZXNzUm91dGVMb2FkZXJEYXRhKG1hdGNoZXMsIG1hdGNoZXNUb0xvYWQsIHJlc3VsdHMsIHBlbmRpbmdFcnJvciwgYWN0aXZlRGVmZXJyZWRzKSB7XG4gIC8vIEZpbGwgaW4gbG9hZGVyRGF0YS9lcnJvcnMgZnJvbSBvdXIgbG9hZGVyc1xuICBsZXQgbG9hZGVyRGF0YSA9IHt9O1xuICBsZXQgZXJyb3JzID0gbnVsbDtcbiAgbGV0IHN0YXR1c0NvZGU7XG4gIGxldCBmb3VuZEVycm9yID0gZmFsc2U7XG4gIGxldCBsb2FkZXJIZWFkZXJzID0ge307XG4gIC8vIFByb2Nlc3MgbG9hZGVyIHJlc3VsdHMgaW50byBzdGF0ZS5sb2FkZXJEYXRhL3N0YXRlLmVycm9yc1xuICByZXN1bHRzLmZvckVhY2goKHJlc3VsdCwgaW5kZXgpID0+IHtcbiAgICBsZXQgaWQgPSBtYXRjaGVzVG9Mb2FkW2luZGV4XS5yb3V0ZS5pZDtcbiAgICBpbnZhcmlhbnQoIWlzUmVkaXJlY3RSZXN1bHQocmVzdWx0KSwgXCJDYW5ub3QgaGFuZGxlIHJlZGlyZWN0IHJlc3VsdHMgaW4gcHJvY2Vzc0xvYWRlckRhdGFcIik7XG4gICAgaWYgKGlzRXJyb3JSZXN1bHQocmVzdWx0KSkge1xuICAgICAgLy8gTG9vayB1cHdhcmRzIGZyb20gdGhlIG1hdGNoZWQgcm91dGUgZm9yIHRoZSBjbG9zZXN0IGFuY2VzdG9yXG4gICAgICAvLyBlcnJvciBib3VuZGFyeSwgZGVmYXVsdGluZyB0byB0aGUgcm9vdCBtYXRjaFxuICAgICAgbGV0IGJvdW5kYXJ5TWF0Y2ggPSBmaW5kTmVhcmVzdEJvdW5kYXJ5KG1hdGNoZXMsIGlkKTtcbiAgICAgIGxldCBlcnJvciA9IHJlc3VsdC5lcnJvcjtcbiAgICAgIC8vIElmIHdlIGhhdmUgYSBwZW5kaW5nIGFjdGlvbiBlcnJvciwgd2UgcmVwb3J0IGl0IGF0IHRoZSBoaWdoZXN0LXJvdXRlXG4gICAgICAvLyB0aGF0IHRocm93cyBhIGxvYWRlciBlcnJvciwgYW5kIHRoZW4gY2xlYXIgaXQgb3V0IHRvIGluZGljYXRlIHRoYXRcbiAgICAgIC8vIGl0IHdhcyBjb25zdW1lZFxuICAgICAgaWYgKHBlbmRpbmdFcnJvcikge1xuICAgICAgICBlcnJvciA9IE9iamVjdC52YWx1ZXMocGVuZGluZ0Vycm9yKVswXTtcbiAgICAgICAgcGVuZGluZ0Vycm9yID0gdW5kZWZpbmVkO1xuICAgICAgfVxuICAgICAgZXJyb3JzID0gZXJyb3JzIHx8IHt9O1xuICAgICAgLy8gUHJlZmVyIGhpZ2hlciBlcnJvciB2YWx1ZXMgaWYgbG93ZXIgZXJyb3JzIGJ1YmJsZSB0byB0aGUgc2FtZSBib3VuZGFyeVxuICAgICAgaWYgKGVycm9yc1tib3VuZGFyeU1hdGNoLnJvdXRlLmlkXSA9PSBudWxsKSB7XG4gICAgICAgIGVycm9yc1tib3VuZGFyeU1hdGNoLnJvdXRlLmlkXSA9IGVycm9yO1xuICAgICAgfVxuICAgICAgLy8gQ2xlYXIgb3VyIGFueSBwcmlvciBsb2FkZXJEYXRhIGZvciB0aGUgdGhyb3dpbmcgcm91dGVcbiAgICAgIGxvYWRlckRhdGFbaWRdID0gdW5kZWZpbmVkO1xuICAgICAgLy8gT25jZSB3ZSBmaW5kIG91ciBmaXJzdCAoaGlnaGVzdCkgZXJyb3IsIHdlIHNldCB0aGUgc3RhdHVzIGNvZGUgYW5kXG4gICAgICAvLyBwcmV2ZW50IGRlZXBlciBzdGF0dXMgY29kZXMgZnJvbSBvdmVycmlkaW5nXG4gICAgICBpZiAoIWZvdW5kRXJyb3IpIHtcbiAgICAgICAgZm91bmRFcnJvciA9IHRydWU7XG4gICAgICAgIHN0YXR1c0NvZGUgPSBpc1JvdXRlRXJyb3JSZXNwb25zZShyZXN1bHQuZXJyb3IpID8gcmVzdWx0LmVycm9yLnN0YXR1cyA6IDUwMDtcbiAgICAgIH1cbiAgICAgIGlmIChyZXN1bHQuaGVhZGVycykge1xuICAgICAgICBsb2FkZXJIZWFkZXJzW2lkXSA9IHJlc3VsdC5oZWFkZXJzO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBpZiAoaXNEZWZlcnJlZFJlc3VsdChyZXN1bHQpKSB7XG4gICAgICAgIGFjdGl2ZURlZmVycmVkcy5zZXQoaWQsIHJlc3VsdC5kZWZlcnJlZERhdGEpO1xuICAgICAgICBsb2FkZXJEYXRhW2lkXSA9IHJlc3VsdC5kZWZlcnJlZERhdGEuZGF0YTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGxvYWRlckRhdGFbaWRdID0gcmVzdWx0LmRhdGE7XG4gICAgICB9XG4gICAgICAvLyBFcnJvciBzdGF0dXMgY29kZXMgYWx3YXlzIG92ZXJyaWRlIHN1Y2Nlc3Mgc3RhdHVzIGNvZGVzLCBidXQgaWYgYWxsXG4gICAgICAvLyBsb2FkZXJzIGFyZSBzdWNjZXNzZnVsIHdlIHRha2UgdGhlIGRlZXBlc3Qgc3RhdHVzIGNvZGUuXG4gICAgICBpZiAocmVzdWx0LnN0YXR1c0NvZGUgIT0gbnVsbCAmJiByZXN1bHQuc3RhdHVzQ29kZSAhPT0gMjAwICYmICFmb3VuZEVycm9yKSB7XG4gICAgICAgIHN0YXR1c0NvZGUgPSByZXN1bHQuc3RhdHVzQ29kZTtcbiAgICAgIH1cbiAgICAgIGlmIChyZXN1bHQuaGVhZGVycykge1xuICAgICAgICBsb2FkZXJIZWFkZXJzW2lkXSA9IHJlc3VsdC5oZWFkZXJzO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG4gIC8vIElmIHdlIGRpZG4ndCBjb25zdW1lIHRoZSBwZW5kaW5nIGFjdGlvbiBlcnJvciAoaS5lLiwgYWxsIGxvYWRlcnNcbiAgLy8gcmVzb2x2ZWQpLCB0aGVuIGNvbnN1bWUgaXQgaGVyZS4gIEFsc28gY2xlYXIgb3V0IGFueSBsb2FkZXJEYXRhIGZvciB0aGVcbiAgLy8gdGhyb3dpbmcgcm91dGVcbiAgaWYgKHBlbmRpbmdFcnJvcikge1xuICAgIGVycm9ycyA9IHBlbmRpbmdFcnJvcjtcbiAgICBsb2FkZXJEYXRhW09iamVjdC5rZXlzKHBlbmRpbmdFcnJvcilbMF1dID0gdW5kZWZpbmVkO1xuICB9XG4gIHJldHVybiB7XG4gICAgbG9hZGVyRGF0YSxcbiAgICBlcnJvcnMsXG4gICAgc3RhdHVzQ29kZTogc3RhdHVzQ29kZSB8fCAyMDAsXG4gICAgbG9hZGVySGVhZGVyc1xuICB9O1xufVxuZnVuY3Rpb24gcHJvY2Vzc0xvYWRlckRhdGEoc3RhdGUsIG1hdGNoZXMsIG1hdGNoZXNUb0xvYWQsIHJlc3VsdHMsIHBlbmRpbmdFcnJvciwgcmV2YWxpZGF0aW5nRmV0Y2hlcnMsIGZldGNoZXJSZXN1bHRzLCBhY3RpdmVEZWZlcnJlZHMpIHtcbiAgbGV0IHtcbiAgICBsb2FkZXJEYXRhLFxuICAgIGVycm9yc1xuICB9ID0gcHJvY2Vzc1JvdXRlTG9hZGVyRGF0YShtYXRjaGVzLCBtYXRjaGVzVG9Mb2FkLCByZXN1bHRzLCBwZW5kaW5nRXJyb3IsIGFjdGl2ZURlZmVycmVkcyk7XG4gIC8vIFByb2Nlc3MgcmVzdWx0cyBmcm9tIG91ciByZXZhbGlkYXRpbmcgZmV0Y2hlcnNcbiAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IHJldmFsaWRhdGluZ0ZldGNoZXJzLmxlbmd0aDsgaW5kZXgrKykge1xuICAgIGxldCB7XG4gICAgICBrZXksXG4gICAgICBtYXRjaCxcbiAgICAgIGNvbnRyb2xsZXJcbiAgICB9ID0gcmV2YWxpZGF0aW5nRmV0Y2hlcnNbaW5kZXhdO1xuICAgIGludmFyaWFudChmZXRjaGVyUmVzdWx0cyAhPT0gdW5kZWZpbmVkICYmIGZldGNoZXJSZXN1bHRzW2luZGV4XSAhPT0gdW5kZWZpbmVkLCBcIkRpZCBub3QgZmluZCBjb3JyZXNwb25kaW5nIGZldGNoZXIgcmVzdWx0XCIpO1xuICAgIGxldCByZXN1bHQgPSBmZXRjaGVyUmVzdWx0c1tpbmRleF07XG4gICAgLy8gUHJvY2VzcyBmZXRjaGVyIG5vbi1yZWRpcmVjdCBlcnJvcnNcbiAgICBpZiAoY29udHJvbGxlciAmJiBjb250cm9sbGVyLnNpZ25hbC5hYm9ydGVkKSB7XG4gICAgICAvLyBOb3RoaW5nIHRvIGRvIGZvciBhYm9ydGVkIGZldGNoZXJzXG4gICAgICBjb250aW51ZTtcbiAgICB9IGVsc2UgaWYgKGlzRXJyb3JSZXN1bHQocmVzdWx0KSkge1xuICAgICAgbGV0IGJvdW5kYXJ5TWF0Y2ggPSBmaW5kTmVhcmVzdEJvdW5kYXJ5KHN0YXRlLm1hdGNoZXMsIG1hdGNoID09IG51bGwgPyB2b2lkIDAgOiBtYXRjaC5yb3V0ZS5pZCk7XG4gICAgICBpZiAoIShlcnJvcnMgJiYgZXJyb3JzW2JvdW5kYXJ5TWF0Y2gucm91dGUuaWRdKSkge1xuICAgICAgICBlcnJvcnMgPSBfZXh0ZW5kcyh7fSwgZXJyb3JzLCB7XG4gICAgICAgICAgW2JvdW5kYXJ5TWF0Y2gucm91dGUuaWRdOiByZXN1bHQuZXJyb3JcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICBzdGF0ZS5mZXRjaGVycy5kZWxldGUoa2V5KTtcbiAgICB9IGVsc2UgaWYgKGlzUmVkaXJlY3RSZXN1bHQocmVzdWx0KSkge1xuICAgICAgLy8gU2hvdWxkIG5ldmVyIGdldCBoZXJlLCByZWRpcmVjdHMgc2hvdWxkIGdldCBwcm9jZXNzZWQgYWJvdmUsIGJ1dCB3ZVxuICAgICAgLy8ga2VlcCB0aGlzIHRvIHR5cGUgbmFycm93IHRvIGEgc3VjY2VzcyByZXN1bHQgaW4gdGhlIGVsc2VcbiAgICAgIGludmFyaWFudChmYWxzZSwgXCJVbmhhbmRsZWQgZmV0Y2hlciByZXZhbGlkYXRpb24gcmVkaXJlY3RcIik7XG4gICAgfSBlbHNlIGlmIChpc0RlZmVycmVkUmVzdWx0KHJlc3VsdCkpIHtcbiAgICAgIC8vIFNob3VsZCBuZXZlciBnZXQgaGVyZSwgZGVmZXJyZWQgZGF0YSBzaG91bGQgYmUgYXdhaXRlZCBmb3IgZmV0Y2hlcnNcbiAgICAgIC8vIGluIHJlc29sdmVEZWZlcnJlZFJlc3VsdHNcbiAgICAgIGludmFyaWFudChmYWxzZSwgXCJVbmhhbmRsZWQgZmV0Y2hlciBkZWZlcnJlZCBkYXRhXCIpO1xuICAgIH0gZWxzZSB7XG4gICAgICBsZXQgZG9uZUZldGNoZXIgPSBnZXREb25lRmV0Y2hlcihyZXN1bHQuZGF0YSk7XG4gICAgICBzdGF0ZS5mZXRjaGVycy5zZXQoa2V5LCBkb25lRmV0Y2hlcik7XG4gICAgfVxuICB9XG4gIHJldHVybiB7XG4gICAgbG9hZGVyRGF0YSxcbiAgICBlcnJvcnNcbiAgfTtcbn1cbmZ1bmN0aW9uIG1lcmdlTG9hZGVyRGF0YShsb2FkZXJEYXRhLCBuZXdMb2FkZXJEYXRhLCBtYXRjaGVzLCBlcnJvcnMpIHtcbiAgbGV0IG1lcmdlZExvYWRlckRhdGEgPSBfZXh0ZW5kcyh7fSwgbmV3TG9hZGVyRGF0YSk7XG4gIGZvciAobGV0IG1hdGNoIG9mIG1hdGNoZXMpIHtcbiAgICBsZXQgaWQgPSBtYXRjaC5yb3V0ZS5pZDtcbiAgICBpZiAobmV3TG9hZGVyRGF0YS5oYXNPd25Qcm9wZXJ0eShpZCkpIHtcbiAgICAgIGlmIChuZXdMb2FkZXJEYXRhW2lkXSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIG1lcmdlZExvYWRlckRhdGFbaWRdID0gbmV3TG9hZGVyRGF0YVtpZF07XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChsb2FkZXJEYXRhW2lkXSAhPT0gdW5kZWZpbmVkICYmIG1hdGNoLnJvdXRlLmxvYWRlcikge1xuICAgICAgLy8gUHJlc2VydmUgZXhpc3Rpbmcga2V5cyBub3QgaW5jbHVkZWQgaW4gbmV3TG9hZGVyRGF0YSBhbmQgd2hlcmUgYSBsb2FkZXJcbiAgICAgIC8vIHdhc24ndCByZW1vdmVkIGJ5IEhNUlxuICAgICAgbWVyZ2VkTG9hZGVyRGF0YVtpZF0gPSBsb2FkZXJEYXRhW2lkXTtcbiAgICB9XG4gICAgaWYgKGVycm9ycyAmJiBlcnJvcnMuaGFzT3duUHJvcGVydHkoaWQpKSB7XG4gICAgICAvLyBEb24ndCBrZWVwIGFueSBsb2FkZXIgZGF0YSBiZWxvdyB0aGUgYm91bmRhcnlcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuICByZXR1cm4gbWVyZ2VkTG9hZGVyRGF0YTtcbn1cbi8vIEZpbmQgdGhlIG5lYXJlc3QgZXJyb3IgYm91bmRhcnksIGxvb2tpbmcgdXB3YXJkcyBmcm9tIHRoZSBsZWFmIHJvdXRlIChvciB0aGVcbi8vIHJvdXRlIHNwZWNpZmllZCBieSByb3V0ZUlkKSBmb3IgdGhlIGNsb3Nlc3QgYW5jZXN0b3IgZXJyb3IgYm91bmRhcnksXG4vLyBkZWZhdWx0aW5nIHRvIHRoZSByb290IG1hdGNoXG5mdW5jdGlvbiBmaW5kTmVhcmVzdEJvdW5kYXJ5KG1hdGNoZXMsIHJvdXRlSWQpIHtcbiAgbGV0IGVsaWdpYmxlTWF0Y2hlcyA9IHJvdXRlSWQgPyBtYXRjaGVzLnNsaWNlKDAsIG1hdGNoZXMuZmluZEluZGV4KG0gPT4gbS5yb3V0ZS5pZCA9PT0gcm91dGVJZCkgKyAxKSA6IFsuLi5tYXRjaGVzXTtcbiAgcmV0dXJuIGVsaWdpYmxlTWF0Y2hlcy5yZXZlcnNlKCkuZmluZChtID0+IG0ucm91dGUuaGFzRXJyb3JCb3VuZGFyeSA9PT0gdHJ1ZSkgfHwgbWF0Y2hlc1swXTtcbn1cbmZ1bmN0aW9uIGdldFNob3J0Q2lyY3VpdE1hdGNoZXMocm91dGVzKSB7XG4gIC8vIFByZWZlciBhIHJvb3QgbGF5b3V0IHJvdXRlIGlmIHByZXNlbnQsIG90aGVyd2lzZSBzaGltIGluIGEgcm91dGUgb2JqZWN0XG4gIGxldCByb3V0ZSA9IHJvdXRlcy5maW5kKHIgPT4gci5pbmRleCB8fCAhci5wYXRoIHx8IHIucGF0aCA9PT0gXCIvXCIpIHx8IHtcbiAgICBpZDogXCJfX3NoaW0tZXJyb3Itcm91dGVfX1wiXG4gIH07XG4gIHJldHVybiB7XG4gICAgbWF0Y2hlczogW3tcbiAgICAgIHBhcmFtczoge30sXG4gICAgICBwYXRobmFtZTogXCJcIixcbiAgICAgIHBhdGhuYW1lQmFzZTogXCJcIixcbiAgICAgIHJvdXRlXG4gICAgfV0sXG4gICAgcm91dGVcbiAgfTtcbn1cbmZ1bmN0aW9uIGdldEludGVybmFsUm91dGVyRXJyb3Ioc3RhdHVzLCBfdGVtcDQpIHtcbiAgbGV0IHtcbiAgICBwYXRobmFtZSxcbiAgICByb3V0ZUlkLFxuICAgIG1ldGhvZCxcbiAgICB0eXBlXG4gIH0gPSBfdGVtcDQgPT09IHZvaWQgMCA/IHt9IDogX3RlbXA0O1xuICBsZXQgc3RhdHVzVGV4dCA9IFwiVW5rbm93biBTZXJ2ZXIgRXJyb3JcIjtcbiAgbGV0IGVycm9yTWVzc2FnZSA9IFwiVW5rbm93biBAcmVtaXgtcnVuL3JvdXRlciBlcnJvclwiO1xuICBpZiAoc3RhdHVzID09PSA0MDApIHtcbiAgICBzdGF0dXNUZXh0ID0gXCJCYWQgUmVxdWVzdFwiO1xuICAgIGlmIChtZXRob2QgJiYgcGF0aG5hbWUgJiYgcm91dGVJZCkge1xuICAgICAgZXJyb3JNZXNzYWdlID0gXCJZb3UgbWFkZSBhIFwiICsgbWV0aG9kICsgXCIgcmVxdWVzdCB0byBcXFwiXCIgKyBwYXRobmFtZSArIFwiXFxcIiBidXQgXCIgKyAoXCJkaWQgbm90IHByb3ZpZGUgYSBgbG9hZGVyYCBmb3Igcm91dGUgXFxcIlwiICsgcm91dGVJZCArIFwiXFxcIiwgXCIpICsgXCJzbyB0aGVyZSBpcyBubyB3YXkgdG8gaGFuZGxlIHRoZSByZXF1ZXN0LlwiO1xuICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gXCJkZWZlci1hY3Rpb25cIikge1xuICAgICAgZXJyb3JNZXNzYWdlID0gXCJkZWZlcigpIGlzIG5vdCBzdXBwb3J0ZWQgaW4gYWN0aW9uc1wiO1xuICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gXCJpbnZhbGlkLWJvZHlcIikge1xuICAgICAgZXJyb3JNZXNzYWdlID0gXCJVbmFibGUgdG8gZW5jb2RlIHN1Ym1pc3Npb24gYm9keVwiO1xuICAgIH1cbiAgfSBlbHNlIGlmIChzdGF0dXMgPT09IDQwMykge1xuICAgIHN0YXR1c1RleHQgPSBcIkZvcmJpZGRlblwiO1xuICAgIGVycm9yTWVzc2FnZSA9IFwiUm91dGUgXFxcIlwiICsgcm91dGVJZCArIFwiXFxcIiBkb2VzIG5vdCBtYXRjaCBVUkwgXFxcIlwiICsgcGF0aG5hbWUgKyBcIlxcXCJcIjtcbiAgfSBlbHNlIGlmIChzdGF0dXMgPT09IDQwNCkge1xuICAgIHN0YXR1c1RleHQgPSBcIk5vdCBGb3VuZFwiO1xuICAgIGVycm9yTWVzc2FnZSA9IFwiTm8gcm91dGUgbWF0Y2hlcyBVUkwgXFxcIlwiICsgcGF0aG5hbWUgKyBcIlxcXCJcIjtcbiAgfSBlbHNlIGlmIChzdGF0dXMgPT09IDQwNSkge1xuICAgIHN0YXR1c1RleHQgPSBcIk1ldGhvZCBOb3QgQWxsb3dlZFwiO1xuICAgIGlmIChtZXRob2QgJiYgcGF0aG5hbWUgJiYgcm91dGVJZCkge1xuICAgICAgZXJyb3JNZXNzYWdlID0gXCJZb3UgbWFkZSBhIFwiICsgbWV0aG9kLnRvVXBwZXJDYXNlKCkgKyBcIiByZXF1ZXN0IHRvIFxcXCJcIiArIHBhdGhuYW1lICsgXCJcXFwiIGJ1dCBcIiArIChcImRpZCBub3QgcHJvdmlkZSBhbiBgYWN0aW9uYCBmb3Igcm91dGUgXFxcIlwiICsgcm91dGVJZCArIFwiXFxcIiwgXCIpICsgXCJzbyB0aGVyZSBpcyBubyB3YXkgdG8gaGFuZGxlIHRoZSByZXF1ZXN0LlwiO1xuICAgIH0gZWxzZSBpZiAobWV0aG9kKSB7XG4gICAgICBlcnJvck1lc3NhZ2UgPSBcIkludmFsaWQgcmVxdWVzdCBtZXRob2QgXFxcIlwiICsgbWV0aG9kLnRvVXBwZXJDYXNlKCkgKyBcIlxcXCJcIjtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIG5ldyBFcnJvclJlc3BvbnNlSW1wbChzdGF0dXMgfHwgNTAwLCBzdGF0dXNUZXh0LCBuZXcgRXJyb3IoZXJyb3JNZXNzYWdlKSwgdHJ1ZSk7XG59XG4vLyBGaW5kIGFueSByZXR1cm5lZCByZWRpcmVjdCBlcnJvcnMsIHN0YXJ0aW5nIGZyb20gdGhlIGxvd2VzdCBtYXRjaFxuZnVuY3Rpb24gZmluZFJlZGlyZWN0KHJlc3VsdHMpIHtcbiAgZm9yIChsZXQgaSA9IHJlc3VsdHMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICBsZXQgcmVzdWx0ID0gcmVzdWx0c1tpXTtcbiAgICBpZiAoaXNSZWRpcmVjdFJlc3VsdChyZXN1bHQpKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICByZXN1bHQsXG4gICAgICAgIGlkeDogaVxuICAgICAgfTtcbiAgICB9XG4gIH1cbn1cbmZ1bmN0aW9uIHN0cmlwSGFzaEZyb21QYXRoKHBhdGgpIHtcbiAgbGV0IHBhcnNlZFBhdGggPSB0eXBlb2YgcGF0aCA9PT0gXCJzdHJpbmdcIiA/IHBhcnNlUGF0aChwYXRoKSA6IHBhdGg7XG4gIHJldHVybiBjcmVhdGVQYXRoKF9leHRlbmRzKHt9LCBwYXJzZWRQYXRoLCB7XG4gICAgaGFzaDogXCJcIlxuICB9KSk7XG59XG5mdW5jdGlvbiBpc0hhc2hDaGFuZ2VPbmx5KGEsIGIpIHtcbiAgaWYgKGEucGF0aG5hbWUgIT09IGIucGF0aG5hbWUgfHwgYS5zZWFyY2ggIT09IGIuc2VhcmNoKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIGlmIChhLmhhc2ggPT09IFwiXCIpIHtcbiAgICAvLyAvcGFnZSAtPiAvcGFnZSNoYXNoXG4gICAgcmV0dXJuIGIuaGFzaCAhPT0gXCJcIjtcbiAgfSBlbHNlIGlmIChhLmhhc2ggPT09IGIuaGFzaCkge1xuICAgIC8vIC9wYWdlI2hhc2ggLT4gL3BhZ2UjaGFzaFxuICAgIHJldHVybiB0cnVlO1xuICB9IGVsc2UgaWYgKGIuaGFzaCAhPT0gXCJcIikge1xuICAgIC8vIC9wYWdlI2hhc2ggLT4gL3BhZ2Ujb3RoZXJcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICAvLyBJZiB0aGUgaGFzaCBpcyByZW1vdmVkIHRoZSBicm93c2VyIHdpbGwgcmUtcGVyZm9ybSBhIHJlcXVlc3QgdG8gdGhlIHNlcnZlclxuICAvLyAvcGFnZSNoYXNoIC0+IC9wYWdlXG4gIHJldHVybiBmYWxzZTtcbn1cbmZ1bmN0aW9uIGlzRGVmZXJyZWRSZXN1bHQocmVzdWx0KSB7XG4gIHJldHVybiByZXN1bHQudHlwZSA9PT0gUmVzdWx0VHlwZS5kZWZlcnJlZDtcbn1cbmZ1bmN0aW9uIGlzRXJyb3JSZXN1bHQocmVzdWx0KSB7XG4gIHJldHVybiByZXN1bHQudHlwZSA9PT0gUmVzdWx0VHlwZS5lcnJvcjtcbn1cbmZ1bmN0aW9uIGlzUmVkaXJlY3RSZXN1bHQocmVzdWx0KSB7XG4gIHJldHVybiAocmVzdWx0ICYmIHJlc3VsdC50eXBlKSA9PT0gUmVzdWx0VHlwZS5yZWRpcmVjdDtcbn1cbmZ1bmN0aW9uIGlzRGVmZXJyZWREYXRhKHZhbHVlKSB7XG4gIGxldCBkZWZlcnJlZCA9IHZhbHVlO1xuICByZXR1cm4gZGVmZXJyZWQgJiYgdHlwZW9mIGRlZmVycmVkID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBkZWZlcnJlZC5kYXRhID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBkZWZlcnJlZC5zdWJzY3JpYmUgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgZGVmZXJyZWQuY2FuY2VsID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIGRlZmVycmVkLnJlc29sdmVEYXRhID09PSBcImZ1bmN0aW9uXCI7XG59XG5mdW5jdGlvbiBpc1Jlc3BvbnNlKHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSAhPSBudWxsICYmIHR5cGVvZiB2YWx1ZS5zdGF0dXMgPT09IFwibnVtYmVyXCIgJiYgdHlwZW9mIHZhbHVlLnN0YXR1c1RleHQgPT09IFwic3RyaW5nXCIgJiYgdHlwZW9mIHZhbHVlLmhlYWRlcnMgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIHZhbHVlLmJvZHkgIT09IFwidW5kZWZpbmVkXCI7XG59XG5mdW5jdGlvbiBpc1JlZGlyZWN0UmVzcG9uc2UocmVzdWx0KSB7XG4gIGlmICghaXNSZXNwb25zZShyZXN1bHQpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIGxldCBzdGF0dXMgPSByZXN1bHQuc3RhdHVzO1xuICBsZXQgbG9jYXRpb24gPSByZXN1bHQuaGVhZGVycy5nZXQoXCJMb2NhdGlvblwiKTtcbiAgcmV0dXJuIHN0YXR1cyA+PSAzMDAgJiYgc3RhdHVzIDw9IDM5OSAmJiBsb2NhdGlvbiAhPSBudWxsO1xufVxuZnVuY3Rpb24gaXNRdWVyeVJvdXRlUmVzcG9uc2Uob2JqKSB7XG4gIHJldHVybiBvYmogJiYgaXNSZXNwb25zZShvYmoucmVzcG9uc2UpICYmIChvYmoudHlwZSA9PT0gUmVzdWx0VHlwZS5kYXRhIHx8IG9iai50eXBlID09PSBSZXN1bHRUeXBlLmVycm9yKTtcbn1cbmZ1bmN0aW9uIGlzVmFsaWRNZXRob2QobWV0aG9kKSB7XG4gIHJldHVybiB2YWxpZFJlcXVlc3RNZXRob2RzLmhhcyhtZXRob2QudG9Mb3dlckNhc2UoKSk7XG59XG5mdW5jdGlvbiBpc011dGF0aW9uTWV0aG9kKG1ldGhvZCkge1xuICByZXR1cm4gdmFsaWRNdXRhdGlvbk1ldGhvZHMuaGFzKG1ldGhvZC50b0xvd2VyQ2FzZSgpKTtcbn1cbmFzeW5jIGZ1bmN0aW9uIHJlc29sdmVEZWZlcnJlZFJlc3VsdHMoY3VycmVudE1hdGNoZXMsIG1hdGNoZXNUb0xvYWQsIHJlc3VsdHMsIHNpZ25hbHMsIGlzRmV0Y2hlciwgY3VycmVudExvYWRlckRhdGEpIHtcbiAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IHJlc3VsdHMubGVuZ3RoOyBpbmRleCsrKSB7XG4gICAgbGV0IHJlc3VsdCA9IHJlc3VsdHNbaW5kZXhdO1xuICAgIGxldCBtYXRjaCA9IG1hdGNoZXNUb0xvYWRbaW5kZXhdO1xuICAgIC8vIElmIHdlIGRvbid0IGhhdmUgYSBtYXRjaCwgdGhlbiB3ZSBjYW4gaGF2ZSBhIGRlZmVycmVkIHJlc3VsdCB0byBkb1xuICAgIC8vIGFueXRoaW5nIHdpdGguICBUaGlzIGlzIGZvciByZXZhbGlkYXRpbmcgZmV0Y2hlcnMgd2hlcmUgdGhlIHJvdXRlIHdhc1xuICAgIC8vIHJlbW92ZWQgZHVyaW5nIEhNUlxuICAgIGlmICghbWF0Y2gpIHtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cbiAgICBsZXQgY3VycmVudE1hdGNoID0gY3VycmVudE1hdGNoZXMuZmluZChtID0+IG0ucm91dGUuaWQgPT09IG1hdGNoLnJvdXRlLmlkKTtcbiAgICBsZXQgaXNSZXZhbGlkYXRpbmdMb2FkZXIgPSBjdXJyZW50TWF0Y2ggIT0gbnVsbCAmJiAhaXNOZXdSb3V0ZUluc3RhbmNlKGN1cnJlbnRNYXRjaCwgbWF0Y2gpICYmIChjdXJyZW50TG9hZGVyRGF0YSAmJiBjdXJyZW50TG9hZGVyRGF0YVttYXRjaC5yb3V0ZS5pZF0pICE9PSB1bmRlZmluZWQ7XG4gICAgaWYgKGlzRGVmZXJyZWRSZXN1bHQocmVzdWx0KSAmJiAoaXNGZXRjaGVyIHx8IGlzUmV2YWxpZGF0aW5nTG9hZGVyKSkge1xuICAgICAgLy8gTm90ZTogd2UgZG8gbm90IGhhdmUgdG8gdG91Y2ggYWN0aXZlRGVmZXJyZWRzIGhlcmUgc2luY2Ugd2UgcmFjZSB0aGVtXG4gICAgICAvLyBhZ2FpbnN0IHRoZSBzaWduYWwgaW4gcmVzb2x2ZURlZmVycmVkRGF0YSBhbmQgdGhleSdsbCBnZXQgYWJvcnRlZFxuICAgICAgLy8gdGhlcmUgaWYgbmVlZGVkXG4gICAgICBsZXQgc2lnbmFsID0gc2lnbmFsc1tpbmRleF07XG4gICAgICBpbnZhcmlhbnQoc2lnbmFsLCBcIkV4cGVjdGVkIGFuIEFib3J0U2lnbmFsIGZvciByZXZhbGlkYXRpbmcgZmV0Y2hlciBkZWZlcnJlZCByZXN1bHRcIik7XG4gICAgICBhd2FpdCByZXNvbHZlRGVmZXJyZWREYXRhKHJlc3VsdCwgc2lnbmFsLCBpc0ZldGNoZXIpLnRoZW4ocmVzdWx0ID0+IHtcbiAgICAgICAgaWYgKHJlc3VsdCkge1xuICAgICAgICAgIHJlc3VsdHNbaW5kZXhdID0gcmVzdWx0IHx8IHJlc3VsdHNbaW5kZXhdO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH1cbn1cbmFzeW5jIGZ1bmN0aW9uIHJlc29sdmVEZWZlcnJlZERhdGEocmVzdWx0LCBzaWduYWwsIHVud3JhcCkge1xuICBpZiAodW53cmFwID09PSB2b2lkIDApIHtcbiAgICB1bndyYXAgPSBmYWxzZTtcbiAgfVxuICBsZXQgYWJvcnRlZCA9IGF3YWl0IHJlc3VsdC5kZWZlcnJlZERhdGEucmVzb2x2ZURhdGEoc2lnbmFsKTtcbiAgaWYgKGFib3J0ZWQpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKHVud3JhcCkge1xuICAgIHRyeSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiBSZXN1bHRUeXBlLmRhdGEsXG4gICAgICAgIGRhdGE6IHJlc3VsdC5kZWZlcnJlZERhdGEudW53cmFwcGVkRGF0YVxuICAgICAgfTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAvLyBIYW5kbGUgYW55IFRyYWNrZWRQcm9taXNlLl9lcnJvciB2YWx1ZXMgZW5jb3VudGVyZWQgd2hpbGUgdW53cmFwcGluZ1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogUmVzdWx0VHlwZS5lcnJvcixcbiAgICAgICAgZXJyb3I6IGVcbiAgICAgIH07XG4gICAgfVxuICB9XG4gIHJldHVybiB7XG4gICAgdHlwZTogUmVzdWx0VHlwZS5kYXRhLFxuICAgIGRhdGE6IHJlc3VsdC5kZWZlcnJlZERhdGEuZGF0YVxuICB9O1xufVxuZnVuY3Rpb24gaGFzTmFrZWRJbmRleFF1ZXJ5KHNlYXJjaCkge1xuICByZXR1cm4gbmV3IFVSTFNlYXJjaFBhcmFtcyhzZWFyY2gpLmdldEFsbChcImluZGV4XCIpLnNvbWUodiA9PiB2ID09PSBcIlwiKTtcbn1cbmZ1bmN0aW9uIGdldFRhcmdldE1hdGNoKG1hdGNoZXMsIGxvY2F0aW9uKSB7XG4gIGxldCBzZWFyY2ggPSB0eXBlb2YgbG9jYXRpb24gPT09IFwic3RyaW5nXCIgPyBwYXJzZVBhdGgobG9jYXRpb24pLnNlYXJjaCA6IGxvY2F0aW9uLnNlYXJjaDtcbiAgaWYgKG1hdGNoZXNbbWF0Y2hlcy5sZW5ndGggLSAxXS5yb3V0ZS5pbmRleCAmJiBoYXNOYWtlZEluZGV4UXVlcnkoc2VhcmNoIHx8IFwiXCIpKSB7XG4gICAgLy8gUmV0dXJuIHRoZSBsZWFmIGluZGV4IHJvdXRlIHdoZW4gaW5kZXggaXMgcHJlc2VudFxuICAgIHJldHVybiBtYXRjaGVzW21hdGNoZXMubGVuZ3RoIC0gMV07XG4gIH1cbiAgLy8gT3RoZXJ3aXNlIGdyYWIgdGhlIGRlZXBlc3QgXCJwYXRoIGNvbnRyaWJ1dGluZ1wiIG1hdGNoIChpZ25vcmluZyBpbmRleCBhbmRcbiAgLy8gcGF0aGxlc3MgbGF5b3V0IHJvdXRlcylcbiAgbGV0IHBhdGhNYXRjaGVzID0gZ2V0UGF0aENvbnRyaWJ1dGluZ01hdGNoZXMobWF0Y2hlcyk7XG4gIHJldHVybiBwYXRoTWF0Y2hlc1twYXRoTWF0Y2hlcy5sZW5ndGggLSAxXTtcbn1cbmZ1bmN0aW9uIGdldFN1Ym1pc3Npb25Gcm9tTmF2aWdhdGlvbihuYXZpZ2F0aW9uKSB7XG4gIGxldCB7XG4gICAgZm9ybU1ldGhvZCxcbiAgICBmb3JtQWN0aW9uLFxuICAgIGZvcm1FbmNUeXBlLFxuICAgIHRleHQsXG4gICAgZm9ybURhdGEsXG4gICAganNvblxuICB9ID0gbmF2aWdhdGlvbjtcbiAgaWYgKCFmb3JtTWV0aG9kIHx8ICFmb3JtQWN0aW9uIHx8ICFmb3JtRW5jVHlwZSkge1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAodGV4dCAhPSBudWxsKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGZvcm1NZXRob2QsXG4gICAgICBmb3JtQWN0aW9uLFxuICAgICAgZm9ybUVuY1R5cGUsXG4gICAgICBmb3JtRGF0YTogdW5kZWZpbmVkLFxuICAgICAganNvbjogdW5kZWZpbmVkLFxuICAgICAgdGV4dFxuICAgIH07XG4gIH0gZWxzZSBpZiAoZm9ybURhdGEgIT0gbnVsbCkge1xuICAgIHJldHVybiB7XG4gICAgICBmb3JtTWV0aG9kLFxuICAgICAgZm9ybUFjdGlvbixcbiAgICAgIGZvcm1FbmNUeXBlLFxuICAgICAgZm9ybURhdGEsXG4gICAgICBqc29uOiB1bmRlZmluZWQsXG4gICAgICB0ZXh0OiB1bmRlZmluZWRcbiAgICB9O1xuICB9IGVsc2UgaWYgKGpzb24gIT09IHVuZGVmaW5lZCkge1xuICAgIHJldHVybiB7XG4gICAgICBmb3JtTWV0aG9kLFxuICAgICAgZm9ybUFjdGlvbixcbiAgICAgIGZvcm1FbmNUeXBlLFxuICAgICAgZm9ybURhdGE6IHVuZGVmaW5lZCxcbiAgICAgIGpzb24sXG4gICAgICB0ZXh0OiB1bmRlZmluZWRcbiAgICB9O1xuICB9XG59XG5mdW5jdGlvbiBnZXRMb2FkaW5nTmF2aWdhdGlvbihsb2NhdGlvbiwgc3VibWlzc2lvbikge1xuICBpZiAoc3VibWlzc2lvbikge1xuICAgIGxldCBuYXZpZ2F0aW9uID0ge1xuICAgICAgc3RhdGU6IFwibG9hZGluZ1wiLFxuICAgICAgbG9jYXRpb24sXG4gICAgICBmb3JtTWV0aG9kOiBzdWJtaXNzaW9uLmZvcm1NZXRob2QsXG4gICAgICBmb3JtQWN0aW9uOiBzdWJtaXNzaW9uLmZvcm1BY3Rpb24sXG4gICAgICBmb3JtRW5jVHlwZTogc3VibWlzc2lvbi5mb3JtRW5jVHlwZSxcbiAgICAgIGZvcm1EYXRhOiBzdWJtaXNzaW9uLmZvcm1EYXRhLFxuICAgICAganNvbjogc3VibWlzc2lvbi5qc29uLFxuICAgICAgdGV4dDogc3VibWlzc2lvbi50ZXh0XG4gICAgfTtcbiAgICByZXR1cm4gbmF2aWdhdGlvbjtcbiAgfSBlbHNlIHtcbiAgICBsZXQgbmF2aWdhdGlvbiA9IHtcbiAgICAgIHN0YXRlOiBcImxvYWRpbmdcIixcbiAgICAgIGxvY2F0aW9uLFxuICAgICAgZm9ybU1ldGhvZDogdW5kZWZpbmVkLFxuICAgICAgZm9ybUFjdGlvbjogdW5kZWZpbmVkLFxuICAgICAgZm9ybUVuY1R5cGU6IHVuZGVmaW5lZCxcbiAgICAgIGZvcm1EYXRhOiB1bmRlZmluZWQsXG4gICAgICBqc29uOiB1bmRlZmluZWQsXG4gICAgICB0ZXh0OiB1bmRlZmluZWRcbiAgICB9O1xuICAgIHJldHVybiBuYXZpZ2F0aW9uO1xuICB9XG59XG5mdW5jdGlvbiBnZXRTdWJtaXR0aW5nTmF2aWdhdGlvbihsb2NhdGlvbiwgc3VibWlzc2lvbikge1xuICBsZXQgbmF2aWdhdGlvbiA9IHtcbiAgICBzdGF0ZTogXCJzdWJtaXR0aW5nXCIsXG4gICAgbG9jYXRpb24sXG4gICAgZm9ybU1ldGhvZDogc3VibWlzc2lvbi5mb3JtTWV0aG9kLFxuICAgIGZvcm1BY3Rpb246IHN1Ym1pc3Npb24uZm9ybUFjdGlvbixcbiAgICBmb3JtRW5jVHlwZTogc3VibWlzc2lvbi5mb3JtRW5jVHlwZSxcbiAgICBmb3JtRGF0YTogc3VibWlzc2lvbi5mb3JtRGF0YSxcbiAgICBqc29uOiBzdWJtaXNzaW9uLmpzb24sXG4gICAgdGV4dDogc3VibWlzc2lvbi50ZXh0XG4gIH07XG4gIHJldHVybiBuYXZpZ2F0aW9uO1xufVxuZnVuY3Rpb24gZ2V0TG9hZGluZ0ZldGNoZXIoc3VibWlzc2lvbiwgZGF0YSkge1xuICBpZiAoc3VibWlzc2lvbikge1xuICAgIGxldCBmZXRjaGVyID0ge1xuICAgICAgc3RhdGU6IFwibG9hZGluZ1wiLFxuICAgICAgZm9ybU1ldGhvZDogc3VibWlzc2lvbi5mb3JtTWV0aG9kLFxuICAgICAgZm9ybUFjdGlvbjogc3VibWlzc2lvbi5mb3JtQWN0aW9uLFxuICAgICAgZm9ybUVuY1R5cGU6IHN1Ym1pc3Npb24uZm9ybUVuY1R5cGUsXG4gICAgICBmb3JtRGF0YTogc3VibWlzc2lvbi5mb3JtRGF0YSxcbiAgICAgIGpzb246IHN1Ym1pc3Npb24uanNvbixcbiAgICAgIHRleHQ6IHN1Ym1pc3Npb24udGV4dCxcbiAgICAgIGRhdGFcbiAgICB9O1xuICAgIHJldHVybiBmZXRjaGVyO1xuICB9IGVsc2Uge1xuICAgIGxldCBmZXRjaGVyID0ge1xuICAgICAgc3RhdGU6IFwibG9hZGluZ1wiLFxuICAgICAgZm9ybU1ldGhvZDogdW5kZWZpbmVkLFxuICAgICAgZm9ybUFjdGlvbjogdW5kZWZpbmVkLFxuICAgICAgZm9ybUVuY1R5cGU6IHVuZGVmaW5lZCxcbiAgICAgIGZvcm1EYXRhOiB1bmRlZmluZWQsXG4gICAgICBqc29uOiB1bmRlZmluZWQsXG4gICAgICB0ZXh0OiB1bmRlZmluZWQsXG4gICAgICBkYXRhXG4gICAgfTtcbiAgICByZXR1cm4gZmV0Y2hlcjtcbiAgfVxufVxuZnVuY3Rpb24gZ2V0U3VibWl0dGluZ0ZldGNoZXIoc3VibWlzc2lvbiwgZXhpc3RpbmdGZXRjaGVyKSB7XG4gIGxldCBmZXRjaGVyID0ge1xuICAgIHN0YXRlOiBcInN1Ym1pdHRpbmdcIixcbiAgICBmb3JtTWV0aG9kOiBzdWJtaXNzaW9uLmZvcm1NZXRob2QsXG4gICAgZm9ybUFjdGlvbjogc3VibWlzc2lvbi5mb3JtQWN0aW9uLFxuICAgIGZvcm1FbmNUeXBlOiBzdWJtaXNzaW9uLmZvcm1FbmNUeXBlLFxuICAgIGZvcm1EYXRhOiBzdWJtaXNzaW9uLmZvcm1EYXRhLFxuICAgIGpzb246IHN1Ym1pc3Npb24uanNvbixcbiAgICB0ZXh0OiBzdWJtaXNzaW9uLnRleHQsXG4gICAgZGF0YTogZXhpc3RpbmdGZXRjaGVyID8gZXhpc3RpbmdGZXRjaGVyLmRhdGEgOiB1bmRlZmluZWRcbiAgfTtcbiAgcmV0dXJuIGZldGNoZXI7XG59XG5mdW5jdGlvbiBnZXREb25lRmV0Y2hlcihkYXRhKSB7XG4gIGxldCBmZXRjaGVyID0ge1xuICAgIHN0YXRlOiBcImlkbGVcIixcbiAgICBmb3JtTWV0aG9kOiB1bmRlZmluZWQsXG4gICAgZm9ybUFjdGlvbjogdW5kZWZpbmVkLFxuICAgIGZvcm1FbmNUeXBlOiB1bmRlZmluZWQsXG4gICAgZm9ybURhdGE6IHVuZGVmaW5lZCxcbiAgICBqc29uOiB1bmRlZmluZWQsXG4gICAgdGV4dDogdW5kZWZpbmVkLFxuICAgIGRhdGFcbiAgfTtcbiAgcmV0dXJuIGZldGNoZXI7XG59XG4vLyNlbmRyZWdpb25cblxuZXhwb3J0IHsgQWJvcnRlZERlZmVycmVkRXJyb3IsIEFjdGlvbiwgSURMRV9CTE9DS0VSLCBJRExFX0ZFVENIRVIsIElETEVfTkFWSUdBVElPTiwgVU5TQUZFX0RFRkVSUkVEX1NZTUJPTCwgRGVmZXJyZWREYXRhIGFzIFVOU0FGRV9EZWZlcnJlZERhdGEsIEVycm9yUmVzcG9uc2VJbXBsIGFzIFVOU0FGRV9FcnJvclJlc3BvbnNlSW1wbCwgY29udmVydFJvdXRlTWF0Y2hUb1VpTWF0Y2ggYXMgVU5TQUZFX2NvbnZlcnRSb3V0ZU1hdGNoVG9VaU1hdGNoLCBjb252ZXJ0Um91dGVzVG9EYXRhUm91dGVzIGFzIFVOU0FGRV9jb252ZXJ0Um91dGVzVG9EYXRhUm91dGVzLCBnZXRQYXRoQ29udHJpYnV0aW5nTWF0Y2hlcyBhcyBVTlNBRkVfZ2V0UGF0aENvbnRyaWJ1dGluZ01hdGNoZXMsIGludmFyaWFudCBhcyBVTlNBRkVfaW52YXJpYW50LCB3YXJuaW5nIGFzIFVOU0FGRV93YXJuaW5nLCBjcmVhdGVCcm93c2VySGlzdG9yeSwgY3JlYXRlSGFzaEhpc3RvcnksIGNyZWF0ZU1lbW9yeUhpc3RvcnksIGNyZWF0ZVBhdGgsIGNyZWF0ZVJvdXRlciwgY3JlYXRlU3RhdGljSGFuZGxlciwgZGVmZXIsIGdlbmVyYXRlUGF0aCwgZ2V0U3RhdGljQ29udGV4dEZyb21FcnJvciwgZ2V0VG9QYXRobmFtZSwgaXNEZWZlcnJlZERhdGEsIGlzUm91dGVFcnJvclJlc3BvbnNlLCBqb2luUGF0aHMsIGpzb24sIG1hdGNoUGF0aCwgbWF0Y2hSb3V0ZXMsIG5vcm1hbGl6ZVBhdGhuYW1lLCBwYXJzZVBhdGgsIHJlZGlyZWN0LCByZWRpcmVjdERvY3VtZW50LCByZXNvbHZlUGF0aCwgcmVzb2x2ZVRvLCBzdHJpcEJhc2VuYW1lIH07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///21300\n')},7802:(__unused_webpack_module,exports)=>{"use strict";eval("/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n\n\n/**\n * Module exports.\n * @public\n */\nexports.Q = parse;\nexports.q = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar __toString = Object.prototype.toString;\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n  var obj = {};\n  var opt = options || {};\n  var dec = opt.decode || decode;\n  var index = 0;\n  while (index < str.length) {\n    var eqIdx = str.indexOf('=', index);\n\n    // no more cookie pairs\n    if (eqIdx === -1) {\n      break;\n    }\n    var endIdx = str.indexOf(';', index);\n    if (endIdx === -1) {\n      endIdx = str.length;\n    } else if (endIdx < eqIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(';', eqIdx - 1) + 1;\n      continue;\n    }\n    var key = str.slice(index, eqIdx).trim();\n\n    // only assign once\n    if (undefined === obj[key]) {\n      var val = str.slice(eqIdx + 1, endIdx).trim();\n\n      // quoted values\n      if (val.charCodeAt(0) === 0x22) {\n        val = val.slice(1, -1);\n      }\n      obj[key] = tryDecode(val, dec);\n    }\n    index = endIdx + 1;\n  }\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n  var value = enc(val);\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n  var str = name + '=' + value;\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid');\n    }\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n    str += '; Domain=' + opt.domain;\n  }\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n    str += '; Path=' + opt.path;\n  }\n  if (opt.expires) {\n    var expires = opt.expires;\n    if (!isDate(expires) || isNaN(expires.valueOf())) {\n      throw new TypeError('option expires is invalid');\n    }\n    str += '; Expires=' + expires.toUTCString();\n  }\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n  if (opt.secure) {\n    str += '; Secure';\n  }\n  if (opt.priority) {\n    var priority = typeof opt.priority === 'string' ? opt.priority.toLowerCase() : opt.priority;\n    switch (priority) {\n      case 'low':\n        str += '; Priority=Low';\n        break;\n      case 'medium':\n        str += '; Priority=Medium';\n        break;\n      case 'high':\n        str += '; Priority=High';\n        break;\n      default:\n        throw new TypeError('option priority is invalid');\n    }\n  }\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string' ? opt.sameSite.toLowerCase() : opt.sameSite;\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n  return str;\n}\n\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction decode(str) {\n  return str.indexOf('%') !== -1 ? decodeURIComponent(str) : str;\n}\n\n/**\n * URL-encode value.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction encode(val) {\n  return encodeURIComponent(val);\n}\n\n/**\n * Determine if value is a Date.\n *\n * @param {*} val\n * @private\n */\n\nfunction isDate(val) {\n  return __toString.call(val) === '[object Date]' || val instanceof Date;\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7802\n")},16985:module=>{"use strict";eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\nvar invariant = function (condition, format, a, b, c, d, e, f) {\n  if (false) {}\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\nmodule.exports = invariant;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTY5ODUuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250Ly4vbm9kZV9tb2R1bGVzL2ludmFyaWFudC9icm93c2VyLmpzP2YwNzciXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogVXNlIGludmFyaWFudCgpIHRvIGFzc2VydCBzdGF0ZSB3aGljaCB5b3VyIHByb2dyYW0gYXNzdW1lcyB0byBiZSB0cnVlLlxuICpcbiAqIFByb3ZpZGUgc3ByaW50Zi1zdHlsZSBmb3JtYXQgKG9ubHkgJXMgaXMgc3VwcG9ydGVkKSBhbmQgYXJndW1lbnRzXG4gKiB0byBwcm92aWRlIGluZm9ybWF0aW9uIGFib3V0IHdoYXQgYnJva2UgYW5kIHdoYXQgeW91IHdlcmVcbiAqIGV4cGVjdGluZy5cbiAqXG4gKiBUaGUgaW52YXJpYW50IG1lc3NhZ2Ugd2lsbCBiZSBzdHJpcHBlZCBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGludmFyaWFudFxuICogd2lsbCByZW1haW4gdG8gZW5zdXJlIGxvZ2ljIGRvZXMgbm90IGRpZmZlciBpbiBwcm9kdWN0aW9uLlxuICovXG52YXIgaW52YXJpYW50ID0gZnVuY3Rpb24gKGNvbmRpdGlvbiwgZm9ybWF0LCBhLCBiLCBjLCBkLCBlLCBmKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFyaWFudCByZXF1aXJlcyBhbiBlcnJvciBtZXNzYWdlIGFyZ3VtZW50Jyk7XG4gICAgfVxuICB9XG4gIGlmICghY29uZGl0aW9uKSB7XG4gICAgdmFyIGVycm9yO1xuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgZXJyb3IgPSBuZXcgRXJyb3IoJ01pbmlmaWVkIGV4Y2VwdGlvbiBvY2N1cnJlZDsgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50ICcgKyAnZm9yIHRoZSBmdWxsIGVycm9yIG1lc3NhZ2UgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4nKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFyZ3MgPSBbYSwgYiwgYywgZCwgZSwgZl07XG4gICAgICB2YXIgYXJnSW5kZXggPSAwO1xuICAgICAgZXJyb3IgPSBuZXcgRXJyb3IoZm9ybWF0LnJlcGxhY2UoLyVzL2csIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIGFyZ3NbYXJnSW5kZXgrK107XG4gICAgICB9KSk7XG4gICAgICBlcnJvci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIH1cbiAgICBlcnJvci5mcmFtZXNUb1BvcCA9IDE7IC8vIHdlIGRvbid0IGNhcmUgYWJvdXQgaW52YXJpYW50J3Mgb3duIGZyYW1lXG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn07XG5tb2R1bGUuZXhwb3J0cyA9IGludmFyaWFudDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///16985\n")},95897:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  zt: () => (/* binding */ Provider),\n  ZP: () => (/* binding */ es6_CookiesContext)\n});\n\n// UNUSED EXPORTS: Consumer\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(35466);\n// EXTERNAL MODULE: ./node_modules/universal-cookie/es6/index.js + 2 modules\nvar es6 = __webpack_require__(30149);\n;// CONCATENATED MODULE: ./node_modules/react-cookie/es6/Cookies.js\n\n/* harmony default export */ const Cookies = (es6/* default */.Z);\n;// CONCATENATED MODULE: ./node_modules/react-cookie/es6/CookiesContext.js\n\n\nconst CookiesContext = react.createContext(new Cookies());\nconst {\n  Provider,\n  Consumer\n} = CookiesContext;\n/* harmony default export */ const es6_CookiesContext = (CookiesContext);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTU4OTcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBOztBQ0RBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udC8uL25vZGVfbW9kdWxlcy9yZWFjdC1jb29raWUvZXM2L0Nvb2tpZXMuanM/Y2UyOCIsIndlYnBhY2s6Ly9mcm9udC8uL25vZGVfbW9kdWxlcy9yZWFjdC1jb29raWUvZXM2L0Nvb2tpZXNDb250ZXh0LmpzP2I1ZmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENvb2tpZXMgZnJvbSAndW5pdmVyc2FsLWNvb2tpZSc7XG5leHBvcnQgZGVmYXVsdCBDb29raWVzOyIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBDb29raWVzIGZyb20gJy4vQ29va2llcyc7XG5jb25zdCBDb29raWVzQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQobmV3IENvb2tpZXMoKSk7XG5leHBvcnQgY29uc3Qge1xuICBQcm92aWRlcixcbiAgQ29uc3VtZXJcbn0gPSBDb29raWVzQ29udGV4dDtcbmV4cG9ydCBkZWZhdWx0IENvb2tpZXNDb250ZXh0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///95897\n")},9748:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('/*\n React\n react-dom-server-legacy.browser.production.min.js\n\n Copyright (c) Meta Platforms, Inc. and affiliates.\n\n This source code is licensed under the MIT license found in the\n LICENSE file in the root directory of this source tree.\n\n\n JS Implementation of MurmurHash3 (r136) (as of May 20, 2011)\n\n Copyright (c) 2011 Gary Court\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the "Software"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n*/\n\n\nvar ba = __webpack_require__(35466),\n  ca = __webpack_require__(46116);\nfunction q(a) {\n  for (var b = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c = 1; c < arguments.length; c++) b += "&args[]=" + encodeURIComponent(arguments[c]);\n  return "Minified React error #" + a + "; visit " + b + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";\n}\nfunction fa(a, b) {\n  var c = a.length & 3;\n  var d = a.length - c;\n  var e = b;\n  for (b = 0; b < d;) {\n    var f = a.charCodeAt(b) & 255 | (a.charCodeAt(++b) & 255) << 8 | (a.charCodeAt(++b) & 255) << 16 | (a.charCodeAt(++b) & 255) << 24;\n    ++b;\n    f = 3432918353 * (f & 65535) + ((3432918353 * (f >>> 16) & 65535) << 16) & 4294967295;\n    f = f << 15 | f >>> 17;\n    f = 461845907 * (f & 65535) + ((461845907 * (f >>> 16) & 65535) << 16) & 4294967295;\n    e ^= f;\n    e = e << 13 | e >>> 19;\n    e = 5 * (e & 65535) + ((5 * (e >>> 16) & 65535) << 16) & 4294967295;\n    e = (e & 65535) + 27492 + (((e >>> 16) + 58964 & 65535) << 16);\n  }\n  f = 0;\n  switch (c) {\n    case 3:\n      f ^= (a.charCodeAt(b + 2) & 255) << 16;\n    case 2:\n      f ^= (a.charCodeAt(b + 1) & 255) << 8;\n    case 1:\n      f ^= a.charCodeAt(b) & 255, f = 3432918353 * (f & 65535) + ((3432918353 * (f >>> 16) & 65535) << 16) & 4294967295, f = f << 15 | f >>> 17, e ^= 461845907 * (f & 65535) + ((461845907 * (f >>> 16) & 65535) << 16) & 4294967295;\n  }\n  e ^= a.length;\n  e ^= e >>> 16;\n  e = 2246822507 * (e & 65535) + ((2246822507 * (e >>> 16) & 65535) << 16) & 4294967295;\n  e ^= e >>> 13;\n  e = 3266489909 * (e & 65535) + ((3266489909 * (e >>> 16) & 65535) << 16) & 4294967295;\n  return (e ^ e >>> 16) >>> 0;\n}\nvar v = Object.assign,\n  y = Object.prototype.hasOwnProperty,\n  ka = RegExp("^[:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD][:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]*$"),\n  la = {},\n  ma = {};\nfunction za(a) {\n  if (y.call(ma, a)) return !0;\n  if (y.call(la, a)) return !1;\n  if (ka.test(a)) return ma[a] = !0;\n  la[a] = !0;\n  return !1;\n}\nvar Aa = new Set("animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp".split(" ")),\n  Ba = new Map([["acceptCharset", "accept-charset"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"], ["crossOrigin", "crossorigin"], ["accentHeight", "accent-height"], ["alignmentBaseline", "alignment-baseline"], ["arabicForm", "arabic-form"], ["baselineShift", "baseline-shift"], ["capHeight", "cap-height"], ["clipPath", "clip-path"], ["clipRule", "clip-rule"], ["colorInterpolation", "color-interpolation"], ["colorInterpolationFilters", "color-interpolation-filters"], ["colorProfile", "color-profile"], ["colorRendering", "color-rendering"], ["dominantBaseline", "dominant-baseline"], ["enableBackground", "enable-background"], ["fillOpacity", "fill-opacity"], ["fillRule", "fill-rule"], ["floodColor", "flood-color"], ["floodOpacity", "flood-opacity"], ["fontFamily", "font-family"], ["fontSize", "font-size"], ["fontSizeAdjust", "font-size-adjust"], ["fontStretch", "font-stretch"], ["fontStyle", "font-style"], ["fontVariant", "font-variant"], ["fontWeight", "font-weight"], ["glyphName", "glyph-name"], ["glyphOrientationHorizontal", "glyph-orientation-horizontal"], ["glyphOrientationVertical", "glyph-orientation-vertical"], ["horizAdvX", "horiz-adv-x"], ["horizOriginX", "horiz-origin-x"], ["imageRendering", "image-rendering"], ["letterSpacing", "letter-spacing"], ["lightingColor", "lighting-color"], ["markerEnd", "marker-end"], ["markerMid", "marker-mid"], ["markerStart", "marker-start"], ["overlinePosition", "overline-position"], ["overlineThickness", "overline-thickness"], ["paintOrder", "paint-order"], ["panose-1", "panose-1"], ["pointerEvents", "pointer-events"], ["renderingIntent", "rendering-intent"], ["shapeRendering", "shape-rendering"], ["stopColor", "stop-color"], ["stopOpacity", "stop-opacity"], ["strikethroughPosition", "strikethrough-position"], ["strikethroughThickness", "strikethrough-thickness"], ["strokeDasharray", "stroke-dasharray"], ["strokeDashoffset", "stroke-dashoffset"], ["strokeLinecap", "stroke-linecap"], ["strokeLinejoin", "stroke-linejoin"], ["strokeMiterlimit", "stroke-miterlimit"], ["strokeOpacity", "stroke-opacity"], ["strokeWidth", "stroke-width"], ["textAnchor", "text-anchor"], ["textDecoration", "text-decoration"], ["textRendering", "text-rendering"], ["transformOrigin", "transform-origin"], ["underlinePosition", "underline-position"], ["underlineThickness", "underline-thickness"], ["unicodeBidi", "unicode-bidi"], ["unicodeRange", "unicode-range"], ["unitsPerEm", "units-per-em"], ["vAlphabetic", "v-alphabetic"], ["vHanging", "v-hanging"], ["vIdeographic", "v-ideographic"], ["vMathematical", "v-mathematical"], ["vectorEffect", "vector-effect"], ["vertAdvY", "vert-adv-y"], ["vertOriginX", "vert-origin-x"], ["vertOriginY", "vert-origin-y"], ["wordSpacing", "word-spacing"], ["writingMode", "writing-mode"], ["xmlnsXlink", "xmlns:xlink"], ["xHeight", "x-height"]]),\n  Ca = /["\'&<>]/;\nfunction z(a) {\n  if ("boolean" === typeof a || "number" === typeof a) return "" + a;\n  a = "" + a;\n  var b = Ca.exec(a);\n  if (b) {\n    var c = "",\n      d,\n      e = 0;\n    for (d = b.index; d < a.length; d++) {\n      switch (a.charCodeAt(d)) {\n        case 34:\n          b = "&quot;";\n          break;\n        case 38:\n          b = "&amp;";\n          break;\n        case 39:\n          b = "&#x27;";\n          break;\n        case 60:\n          b = "&lt;";\n          break;\n        case 62:\n          b = "&gt;";\n          break;\n        default:\n          continue;\n      }\n      e !== d && (c += a.slice(e, d));\n      e = d + 1;\n      c += b;\n    }\n    a = e !== d ? c + a.slice(e, d) : c;\n  }\n  return a;\n}\nvar Da = /([A-Z])/g,\n  Ea = /^ms-/,\n  Ka = Array.isArray,\n  La = ba.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,\n  Ma = {\n    pending: !1,\n    data: null,\n    method: null,\n    action: null\n  },\n  Na = ca.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.Dispatcher,\n  kb = {\n    prefetchDNS: Oa,\n    preconnect: Pa,\n    preload: Qa,\n    preloadModule: Ra,\n    preinitStyle: hb,\n    preinitScript: ib,\n    preinitModuleScript: jb\n  },\n  C = [],\n  lb = /(<\\/|<)(s)(cript)/gi;\nfunction mb(a, b, c, d) {\n  return "" + b + ("s" === c ? "\\\\u0073" : "\\\\u0053") + d;\n}\nfunction nb(a, b, c, d, e) {\n  var f = 0;\n  void 0 !== b && (f = 1);\n  return {\n    idPrefix: void 0 === a ? "" : a,\n    nextFormID: 0,\n    streamingFormat: f,\n    bootstrapScriptContent: c,\n    bootstrapScripts: d,\n    bootstrapModules: e,\n    instructions: 0,\n    hasBody: !1,\n    hasHtml: !1,\n    unknownResources: {},\n    dnsResources: {},\n    connectResources: {\n      default: {},\n      anonymous: {},\n      credentials: {}\n    },\n    imageResources: {},\n    styleResources: {},\n    scriptResources: {},\n    moduleUnknownResources: {},\n    moduleScriptResources: {}\n  };\n}\nfunction H(a, b, c) {\n  return {\n    insertionMode: a,\n    selectedValue: b,\n    tagScope: c\n  };\n}\nfunction ob(a, b, c) {\n  switch (b) {\n    case "noscript":\n      return H(2, null, a.tagScope | 1);\n    case "select":\n      return H(2, null != c.value ? c.value : c.defaultValue, a.tagScope);\n    case "svg":\n      return H(3, null, a.tagScope);\n    case "picture":\n      return H(2, null, a.tagScope | 2);\n    case "math":\n      return H(4, null, a.tagScope);\n    case "foreignObject":\n      return H(2, null, a.tagScope);\n    case "table":\n      return H(5, null, a.tagScope);\n    case "thead":\n    case "tbody":\n    case "tfoot":\n      return H(6, null, a.tagScope);\n    case "colgroup":\n      return H(8, null, a.tagScope);\n    case "tr":\n      return H(7, null, a.tagScope);\n  }\n  return 5 <= a.insertionMode ? H(2, null, a.tagScope) : 0 === a.insertionMode ? "html" === b ? H(1, null, a.tagScope) : H(2, null, a.tagScope) : 1 === a.insertionMode ? H(2, null, a.tagScope) : a;\n}\nvar pb = new Map();\nfunction qb(a, b) {\n  if ("object" !== typeof b) throw Error(q(62));\n  var c = !0,\n    d;\n  for (d in b) if (y.call(b, d)) {\n    var e = b[d];\n    if (null != e && "boolean" !== typeof e && "" !== e) {\n      if (0 === d.indexOf("--")) {\n        var f = z(d);\n        e = z(("" + e).trim());\n      } else f = pb.get(d), void 0 === f && (f = z(d.replace(Da, "-$1").toLowerCase().replace(Ea, "-ms-")), pb.set(d, f)), e = "number" === typeof e ? 0 === e || Aa.has(d) ? "" + e : e + "px" : z(("" + e).trim());\n      c ? (c = !1, a.push(\' style="\', f, ":", e)) : a.push(";", f, ":", e);\n    }\n  }\n  c || a.push(\'"\');\n}\nfunction rb(a, b, c) {\n  c && "function" !== typeof c && "symbol" !== typeof c && a.push(" ", b, \'=""\');\n}\nfunction K(a, b, c) {\n  "function" !== typeof c && "symbol" !== typeof c && "boolean" !== typeof c && a.push(" ", b, \'="\', z(c), \'"\');\n}\nfunction sb(a) {\n  var b = a.nextFormID++;\n  return a.idPrefix + b;\n}\nvar Cb = z("javascript:throw new Error(\'A React form was unexpectedly submitted.\')");\nfunction Db(a, b) {\n  this.push(\'<input type="hidden"\');\n  if ("string" !== typeof a) throw Error(q(480));\n  K(this, "name", b);\n  K(this, "value", a);\n  this.push("/>");\n}\nfunction Eb(a, b, c, d, e, f, g, h) {\n  var k = null;\n  "function" === typeof d && ("function" === typeof d.$$FORM_ACTION ? (e = sb(b), b = d.$$FORM_ACTION(e), h = b.name, d = b.action || "", e = b.encType, f = b.method, g = b.target, k = b.data) : (a.push(" ", "formAction", \'="\', Cb, \'"\'), g = f = e = d = h = null, Fb(b, c)));\n  null != h && L(a, "name", h);\n  null != d && L(a, "formAction", d);\n  null != e && L(a, "formEncType", e);\n  null != f && L(a, "formMethod", f);\n  null != g && L(a, "formTarget", g);\n  return k;\n}\nfunction L(a, b, c) {\n  switch (b) {\n    case "className":\n      K(a, "class", c);\n      break;\n    case "tabIndex":\n      K(a, "tabindex", c);\n      break;\n    case "dir":\n    case "role":\n    case "viewBox":\n    case "width":\n    case "height":\n      K(a, b, c);\n      break;\n    case "style":\n      qb(a, c);\n      break;\n    case "src":\n    case "href":\n    case "action":\n    case "formAction":\n      if (null == c || "function" === typeof c || "symbol" === typeof c || "boolean" === typeof c) break;\n      a.push(" ", b, \'="\', z("" + c), \'"\');\n      break;\n    case "defaultValue":\n    case "defaultChecked":\n    case "innerHTML":\n    case "suppressContentEditableWarning":\n    case "suppressHydrationWarning":\n      break;\n    case "autoFocus":\n    case "multiple":\n    case "muted":\n      rb(a, b.toLowerCase(), c);\n      break;\n    case "xlinkHref":\n      if ("function" === typeof c || "symbol" === typeof c || "boolean" === typeof c) break;\n      a.push(" ", "xlink:href", \'="\', z("" + c), \'"\');\n      break;\n    case "contentEditable":\n    case "spellCheck":\n    case "draggable":\n    case "value":\n    case "autoReverse":\n    case "externalResourcesRequired":\n    case "focusable":\n    case "preserveAlpha":\n      "function" !== typeof c && "symbol" !== typeof c && a.push(" ", b, \'="\', z(c), \'"\');\n      break;\n    case "allowFullScreen":\n    case "async":\n    case "autoPlay":\n    case "controls":\n    case "default":\n    case "defer":\n    case "disabled":\n    case "disablePictureInPicture":\n    case "disableRemotePlayback":\n    case "formNoValidate":\n    case "hidden":\n    case "loop":\n    case "noModule":\n    case "noValidate":\n    case "open":\n    case "playsInline":\n    case "readOnly":\n    case "required":\n    case "reversed":\n    case "scoped":\n    case "seamless":\n    case "itemScope":\n      c && "function" !== typeof c && "symbol" !== typeof c && a.push(" ", b, \'=""\');\n      break;\n    case "capture":\n    case "download":\n      !0 === c ? a.push(" ", b, \'=""\') : !1 !== c && "function" !== typeof c && "symbol" !== typeof c && a.push(" ", b, \'="\', z(c), \'"\');\n      break;\n    case "cols":\n    case "rows":\n    case "size":\n    case "span":\n      "function" !== typeof c && "symbol" !== typeof c && !isNaN(c) && 1 <= c && a.push(" ", b, \'="\', z(c), \'"\');\n      break;\n    case "rowSpan":\n    case "start":\n      "function" === typeof c || "symbol" === typeof c || isNaN(c) || a.push(" ", b, \'="\', z(c), \'"\');\n      break;\n    case "xlinkActuate":\n      K(a, "xlink:actuate", c);\n      break;\n    case "xlinkArcrole":\n      K(a, "xlink:arcrole", c);\n      break;\n    case "xlinkRole":\n      K(a, "xlink:role", c);\n      break;\n    case "xlinkShow":\n      K(a, "xlink:show", c);\n      break;\n    case "xlinkTitle":\n      K(a, "xlink:title", c);\n      break;\n    case "xlinkType":\n      K(a, "xlink:type", c);\n      break;\n    case "xmlBase":\n      K(a, "xml:base", c);\n      break;\n    case "xmlLang":\n      K(a, "xml:lang", c);\n      break;\n    case "xmlSpace":\n      K(a, "xml:space", c);\n      break;\n    default:\n      if (!(2 < b.length) || "o" !== b[0] && "O" !== b[0] || "n" !== b[1] && "N" !== b[1]) if (b = Ba.get(b) || b, za(b)) {\n        switch (typeof c) {\n          case "function":\n          case "symbol":\n            return;\n          case "boolean":\n            var d = b.toLowerCase().slice(0, 5);\n            if ("data-" !== d && "aria-" !== d) return;\n        }\n        a.push(" ", b, \'="\', z(c), \'"\');\n      }\n  }\n}\nfunction N(a, b, c) {\n  if (null != b) {\n    if (null != c) throw Error(q(60));\n    if ("object" !== typeof b || !("__html" in b)) throw Error(q(61));\n    b = b.__html;\n    null !== b && void 0 !== b && a.push("" + b);\n  }\n}\nfunction Gb(a) {\n  var b = "";\n  ba.Children.forEach(a, function (c) {\n    null != c && (b += c);\n  });\n  return b;\n}\nfunction Fb(a, b) {\n  0 !== (a.instructions & 16) || b.externalRuntimeScript || (a.instructions |= 16, b.bootstrapChunks.unshift(b.startInlineScript, \'addEventListener("submit",function(a){if(!a.defaultPrevented){var c=a.target,d=a.submitter,e=c.action,b=d;if(d){var f=d.getAttribute("formAction");null!=f&&(e=f,b=null)}"javascript:throw new Error(\\\'A React form was unexpectedly submitted.\\\')"===e&&(a.preventDefault(),b?(a=document.createElement("input"),a.name=b.name,a.value=b.value,b.parentNode.insertBefore(a,b),b=new FormData(c),a.parentNode.removeChild(a)):b=new FormData(c),a=c.getRootNode(),(a.$$reactFormReplay=a.$$reactFormReplay||[]).push(c,\\nd,b))}});\', "\\x3c/script>"));\n}\nfunction Hb(a, b, c, d, e, f, g) {\n  var h = b.rel,\n    k = b.href,\n    l = b.precedence;\n  if (3 === f || g || null != b.itemProp || "string" !== typeof h || "string" !== typeof k || "" === k) return O(a, b), null;\n  if ("stylesheet" === b.rel) {\n    if ("string" !== typeof l || null != b.disabled || b.onLoad || b.onError) return O(a, b);\n    f = d.styles.get(l);\n    g = c.styleResources.hasOwnProperty(k) ? c.styleResources[k] : void 0;\n    null !== g ? (c.styleResources[k] = null, f || (f = {\n      precedence: z(l),\n      rules: [],\n      hrefs: [],\n      sheets: new Map()\n    }, d.styles.set(l, f)), b = {\n      state: 0,\n      props: v({}, b, {\n        "data-precedence": b.precedence,\n        precedence: null\n      })\n    }, g && (2 === g.length && Ib(b.props, g), (c = d.preloads.stylesheets.get(k)) && 0 < c.length ? c.length = 0 : b.state = 1), f.sheets.set(k, b), d.boundaryResources && d.boundaryResources.stylesheets.add(b)) : f && (k = f.sheets.get(k)) && d.boundaryResources && d.boundaryResources.stylesheets.add(k);\n    e && a.push("\\x3c!-- --\\x3e");\n    return null;\n  }\n  if (b.onLoad || b.onError) return O(a, b);\n  e && a.push("\\x3c!-- --\\x3e");\n  switch (b.rel) {\n    case "preconnect":\n    case "dns-prefetch":\n      return O(d.preconnectChunks, b);\n    case "preload":\n      return O(d.preloadChunks, b);\n    default:\n      return O(d.hoistableChunks, b);\n  }\n}\nfunction O(a, b) {\n  a.push(P("link"));\n  for (var c in b) if (y.call(b, c)) {\n    var d = b[c];\n    if (null != d) switch (c) {\n      case "children":\n      case "dangerouslySetInnerHTML":\n        throw Error(q(399, "link"));\n      default:\n        L(a, c, d);\n    }\n  }\n  a.push("/>");\n  return null;\n}\nfunction Jb(a, b, c) {\n  a.push(P(c));\n  for (var d in b) if (y.call(b, d)) {\n    var e = b[d];\n    if (null != e) switch (d) {\n      case "children":\n      case "dangerouslySetInnerHTML":\n        throw Error(q(399, c));\n      default:\n        L(a, d, e);\n    }\n  }\n  a.push("/>");\n  return null;\n}\nfunction Kb(a, b) {\n  a.push(P("title"));\n  var c = null,\n    d = null,\n    e;\n  for (e in b) if (y.call(b, e)) {\n    var f = b[e];\n    if (null != f) switch (e) {\n      case "children":\n        c = f;\n        break;\n      case "dangerouslySetInnerHTML":\n        d = f;\n        break;\n      default:\n        L(a, e, f);\n    }\n  }\n  a.push(">");\n  b = Array.isArray(c) ? 2 > c.length ? c[0] : null : c;\n  "function" !== typeof b && "symbol" !== typeof b && null !== b && void 0 !== b && a.push(z("" + b));\n  N(a, d, c);\n  a.push(Lb("title"));\n  return null;\n}\nfunction Mb(a, b) {\n  a.push(P("script"));\n  var c = null,\n    d = null,\n    e;\n  for (e in b) if (y.call(b, e)) {\n    var f = b[e];\n    if (null != f) switch (e) {\n      case "children":\n        c = f;\n        break;\n      case "dangerouslySetInnerHTML":\n        d = f;\n        break;\n      default:\n        L(a, e, f);\n    }\n  }\n  a.push(">");\n  N(a, d, c);\n  "string" === typeof c && a.push(z(c));\n  a.push(Lb("script"));\n  return null;\n}\nfunction Nb(a, b, c) {\n  a.push(P(c));\n  var d = c = null,\n    e;\n  for (e in b) if (y.call(b, e)) {\n    var f = b[e];\n    if (null != f) switch (e) {\n      case "children":\n        c = f;\n        break;\n      case "dangerouslySetInnerHTML":\n        d = f;\n        break;\n      default:\n        L(a, e, f);\n    }\n  }\n  a.push(">");\n  N(a, d, c);\n  return "string" === typeof c ? (a.push(z(c)), null) : c;\n}\nvar Ob = /^[a-zA-Z][a-zA-Z:_\\.\\-\\d]*$/,\n  Pb = new Map();\nfunction P(a) {\n  var b = Pb.get(a);\n  if (void 0 === b) {\n    if (!Ob.test(a)) throw Error(q(65, a));\n    b = "<" + a;\n    Pb.set(a, b);\n  }\n  return b;\n}\nfunction Qb(a, b, c, d, e, f, g) {\n  switch (b) {\n    case "div":\n    case "span":\n    case "svg":\n    case "path":\n    case "a":\n    case "g":\n    case "p":\n    case "li":\n      break;\n    case "select":\n      a.push(P("select"));\n      var h = null,\n        k = null,\n        l;\n      for (l in c) if (y.call(c, l)) {\n        var n = c[l];\n        if (null != n) switch (l) {\n          case "children":\n            h = n;\n            break;\n          case "dangerouslySetInnerHTML":\n            k = n;\n            break;\n          case "defaultValue":\n          case "value":\n            break;\n          default:\n            L(a, l, n);\n        }\n      }\n      a.push(">");\n      N(a, k, h);\n      return h;\n    case "option":\n      var m = f.selectedValue;\n      a.push(P("option"));\n      var p = null,\n        r = null,\n        D = null,\n        A = null,\n        B;\n      for (B in c) if (y.call(c, B)) {\n        var u = c[B];\n        if (null != u) switch (B) {\n          case "children":\n            p = u;\n            break;\n          case "selected":\n            D = u;\n            break;\n          case "dangerouslySetInnerHTML":\n            A = u;\n            break;\n          case "value":\n            r = u;\n          default:\n            L(a, B, u);\n        }\n      }\n      if (null != m) {\n        var t = null !== r ? "" + r : Gb(p);\n        if (Ka(m)) for (var E = 0; E < m.length; E++) {\n          if ("" + m[E] === t) {\n            a.push(\' selected=""\');\n            break;\n          }\n        } else "" + m === t && a.push(\' selected=""\');\n      } else D && a.push(\' selected=""\');\n      a.push(">");\n      N(a, A, p);\n      return p;\n    case "textarea":\n      a.push(P("textarea"));\n      var x = null,\n        w = null,\n        F = null,\n        Q;\n      for (Q in c) if (y.call(c, Q)) {\n        var G = c[Q];\n        if (null != G) switch (Q) {\n          case "children":\n            F = G;\n            break;\n          case "value":\n            x = G;\n            break;\n          case "defaultValue":\n            w = G;\n            break;\n          case "dangerouslySetInnerHTML":\n            throw Error(q(91));\n          default:\n            L(a, Q, G);\n        }\n      }\n      null === x && null !== w && (x = w);\n      a.push(">");\n      if (null != F) {\n        if (null != x) throw Error(q(92));\n        if (Ka(F)) {\n          if (1 < F.length) throw Error(q(93));\n          x = "" + F[0];\n        }\n        x = "" + F;\n      }\n      "string" === typeof x && "\\n" === x[0] && a.push("\\n");\n      null !== x && a.push(z("" + x));\n      return null;\n    case "input":\n      a.push(P("input"));\n      var W = null,\n        na = null,\n        ha = null,\n        R = null,\n        I = null,\n        Z = null,\n        Sa = null,\n        Ta = null,\n        Ua = null,\n        oa;\n      for (oa in c) if (y.call(c, oa)) {\n        var T = c[oa];\n        if (null != T) switch (oa) {\n          case "children":\n          case "dangerouslySetInnerHTML":\n            throw Error(q(399, "input"));\n          case "name":\n            W = T;\n            break;\n          case "formAction":\n            na = T;\n            break;\n          case "formEncType":\n            ha = T;\n            break;\n          case "formMethod":\n            R = T;\n            break;\n          case "formTarget":\n            I = T;\n            break;\n          case "defaultChecked":\n            Ua = T;\n            break;\n          case "defaultValue":\n            Sa = T;\n            break;\n          case "checked":\n            Ta = T;\n            break;\n          case "value":\n            Z = T;\n            break;\n          default:\n            L(a, oa, T);\n        }\n      }\n      var tb = Eb(a, d, e, na, ha, R, I, W);\n      null !== Ta ? rb(a, "checked", Ta) : null !== Ua && rb(a, "checked", Ua);\n      null !== Z ? L(a, "value", Z) : null !== Sa && L(a, "value", Sa);\n      a.push("/>");\n      null !== tb && tb.forEach(Db, a);\n      return null;\n    case "button":\n      a.push(P("button"));\n      var pa = null,\n        qa = null,\n        da = null,\n        ra = null,\n        sa = null,\n        Va = null,\n        ta = null,\n        Wa;\n      for (Wa in c) if (y.call(c, Wa)) {\n        var ea = c[Wa];\n        if (null != ea) switch (Wa) {\n          case "children":\n            pa = ea;\n            break;\n          case "dangerouslySetInnerHTML":\n            qa = ea;\n            break;\n          case "name":\n            da = ea;\n            break;\n          case "formAction":\n            ra = ea;\n            break;\n          case "formEncType":\n            sa = ea;\n            break;\n          case "formMethod":\n            Va = ea;\n            break;\n          case "formTarget":\n            ta = ea;\n            break;\n          default:\n            L(a, Wa, ea);\n        }\n      }\n      var Qc = Eb(a, d, e, ra, sa, Va, ta, da);\n      a.push(">");\n      null !== Qc && Qc.forEach(Db, a);\n      N(a, qa, pa);\n      if ("string" === typeof pa) {\n        a.push(z(pa));\n        var Rc = null;\n      } else Rc = pa;\n      return Rc;\n    case "form":\n      a.push(P("form"));\n      var Xa = null,\n        Sc = null,\n        ia = null,\n        Ya = null,\n        Za = null,\n        $a = null,\n        ab;\n      for (ab in c) if (y.call(c, ab)) {\n        var ja = c[ab];\n        if (null != ja) switch (ab) {\n          case "children":\n            Xa = ja;\n            break;\n          case "dangerouslySetInnerHTML":\n            Sc = ja;\n            break;\n          case "action":\n            ia = ja;\n            break;\n          case "encType":\n            Ya = ja;\n            break;\n          case "method":\n            Za = ja;\n            break;\n          case "target":\n            $a = ja;\n            break;\n          default:\n            L(a, ab, ja);\n        }\n      }\n      var Zb = null,\n        $b = null;\n      if ("function" === typeof ia) if ("function" === typeof ia.$$FORM_ACTION) {\n        var ye = sb(d),\n          Fa = ia.$$FORM_ACTION(ye);\n        ia = Fa.action || "";\n        Ya = Fa.encType;\n        Za = Fa.method;\n        $a = Fa.target;\n        Zb = Fa.data;\n        $b = Fa.name;\n      } else a.push(" ", "action", \'="\', Cb, \'"\'), $a = Za = Ya = ia = null, Fb(d, e);\n      null != ia && L(a, "action", ia);\n      null != Ya && L(a, "encType", Ya);\n      null != Za && L(a, "method", Za);\n      null != $a && L(a, "target", $a);\n      a.push(">");\n      null !== $b && (a.push(\'<input type="hidden"\'), K(a, "name", $b), a.push("/>"), null !== Zb && Zb.forEach(Db, a));\n      N(a, Sc, Xa);\n      if ("string" === typeof Xa) {\n        a.push(z(Xa));\n        var Tc = null;\n      } else Tc = Xa;\n      return Tc;\n    case "menuitem":\n      a.push(P("menuitem"));\n      for (var ub in c) if (y.call(c, ub)) {\n        var Uc = c[ub];\n        if (null != Uc) switch (ub) {\n          case "children":\n          case "dangerouslySetInnerHTML":\n            throw Error(q(400));\n          default:\n            L(a, ub, Uc);\n        }\n      }\n      a.push(">");\n      return null;\n    case "title":\n      if (3 === f.insertionMode || f.tagScope & 1 || null != c.itemProp) var Vc = Kb(a, c);else Kb(e.hoistableChunks, c), Vc = null;\n      return Vc;\n    case "link":\n      return Hb(a, c, d, e, g, f.insertionMode, !!(f.tagScope & 1));\n    case "script":\n      var ac = c.async;\n      if ("string" !== typeof c.src || !c.src || !ac || "function" === typeof ac || "symbol" === typeof ac || c.onLoad || c.onError || 3 === f.insertionMode || f.tagScope & 1 || null != c.itemProp) var Wc = Mb(a, c);else {\n        var vb = c.src;\n        if ("module" === c.type) {\n          var wb = d.moduleScriptResources;\n          var Xc = e.preloads.moduleScripts;\n        } else wb = d.scriptResources, Xc = e.preloads.scripts;\n        var xb = wb.hasOwnProperty(vb) ? wb[vb] : void 0;\n        if (null !== xb) {\n          wb[vb] = null;\n          var bc = c;\n          if (xb) {\n            2 === xb.length && (bc = v({}, c), Ib(bc, xb));\n            var Yc = Xc.get(vb);\n            Yc && (Yc.length = 0);\n          }\n          var Zc = [];\n          e.scripts.add(Zc);\n          Mb(Zc, bc);\n        }\n        g && a.push("\\x3c!-- --\\x3e");\n        Wc = null;\n      }\n      return Wc;\n    case "style":\n      var yb = c.precedence,\n        ua = c.href;\n      if (3 === f.insertionMode || f.tagScope & 1 || null != c.itemProp || "string" !== typeof yb || "string" !== typeof ua || "" === ua) {\n        a.push(P("style"));\n        var Ga = null,\n          $c = null,\n          bb;\n        for (bb in c) if (y.call(c, bb)) {\n          var zb = c[bb];\n          if (null != zb) switch (bb) {\n            case "children":\n              Ga = zb;\n              break;\n            case "dangerouslySetInnerHTML":\n              $c = zb;\n              break;\n            default:\n              L(a, bb, zb);\n          }\n        }\n        a.push(">");\n        var cb = Array.isArray(Ga) ? 2 > Ga.length ? Ga[0] : null : Ga;\n        "function" !== typeof cb && "symbol" !== typeof cb && null !== cb && void 0 !== cb && a.push(z("" + cb));\n        N(a, $c, Ga);\n        a.push(Lb("style"));\n        var ad = null;\n      } else {\n        var va = e.styles.get(yb);\n        if (null !== (d.styleResources.hasOwnProperty(ua) ? d.styleResources[ua] : void 0)) {\n          d.styleResources[ua] = null;\n          va ? va.hrefs.push(z(ua)) : (va = {\n            precedence: z(yb),\n            rules: [],\n            hrefs: [z(ua)],\n            sheets: new Map()\n          }, e.styles.set(yb, va));\n          var bd = va.rules,\n            Ha = null,\n            cd = null,\n            Ab;\n          for (Ab in c) if (y.call(c, Ab)) {\n            var cc = c[Ab];\n            if (null != cc) switch (Ab) {\n              case "children":\n                Ha = cc;\n                break;\n              case "dangerouslySetInnerHTML":\n                cd = cc;\n            }\n          }\n          var db = Array.isArray(Ha) ? 2 > Ha.length ? Ha[0] : null : Ha;\n          "function" !== typeof db && "symbol" !== typeof db && null !== db && void 0 !== db && bd.push(z("" + db));\n          N(bd, cd, Ha);\n        }\n        va && e.boundaryResources && e.boundaryResources.styles.add(va);\n        g && a.push("\\x3c!-- --\\x3e");\n        ad = void 0;\n      }\n      return ad;\n    case "meta":\n      if (3 === f.insertionMode || f.tagScope & 1 || null != c.itemProp) var dd = Jb(a, c, "meta");else g && a.push("\\x3c!-- --\\x3e"), dd = "string" === typeof c.charSet ? Jb(e.charsetChunks, c, "meta") : "viewport" === c.name ? Jb(e.preconnectChunks, c, "meta") : Jb(e.hoistableChunks, c, "meta");\n      return dd;\n    case "listing":\n    case "pre":\n      a.push(P(b));\n      var eb = null,\n        fb = null,\n        gb;\n      for (gb in c) if (y.call(c, gb)) {\n        var Bb = c[gb];\n        if (null != Bb) switch (gb) {\n          case "children":\n            eb = Bb;\n            break;\n          case "dangerouslySetInnerHTML":\n            fb = Bb;\n            break;\n          default:\n            L(a, gb, Bb);\n        }\n      }\n      a.push(">");\n      if (null != fb) {\n        if (null != eb) throw Error(q(60));\n        if ("object" !== typeof fb || !("__html" in fb)) throw Error(q(61));\n        var wa = fb.__html;\n        null !== wa && void 0 !== wa && ("string" === typeof wa && 0 < wa.length && "\\n" === wa[0] ? a.push("\\n", wa) : a.push("" + wa));\n      }\n      "string" === typeof eb && "\\n" === eb[0] && a.push("\\n");\n      return eb;\n    case "img":\n      var M = c.src,\n        J = c.srcSet;\n      if (!("lazy" === c.loading || !M && !J || "string" !== typeof M && null != M || "string" !== typeof J && null != J) && "low" !== c.fetchPriority && !1 === !!(f.tagScope & 2) && ("string" !== typeof M || ":" !== M[4] || "d" !== M[0] && "D" !== M[0] || "a" !== M[1] && "A" !== M[1] || "t" !== M[2] && "T" !== M[2] || "a" !== M[3] && "A" !== M[3]) && ("string" !== typeof J || ":" !== J[4] || "d" !== J[0] && "D" !== J[0] || "a" !== J[1] && "A" !== J[1] || "t" !== J[2] && "T" !== J[2] || "a" !== J[3] && "A" !== J[3])) {\n        var ed = "string" === typeof c.sizes ? c.sizes : void 0,\n          Ia = J ? J + "\\n" + (ed || "") : M,\n          dc = e.preloads.images,\n          xa = dc.get(Ia);\n        if (xa) {\n          if ("high" === c.fetchPriority || 10 > e.highImagePreloads.size) dc.delete(Ia), e.highImagePreloads.add(xa);\n        } else if (!d.imageResources.hasOwnProperty(Ia)) {\n          d.imageResources[Ia] = C;\n          var ec = c.crossOrigin;\n          var fd = "string" === typeof ec ? "use-credentials" === ec ? ec : "" : void 0;\n          var aa = e.headers,\n            fc;\n          aa && 0 < aa.remainingCapacity && ("high" === c.fetchPriority || 500 > aa.highImagePreloads.length) && (fc = Rb(M, "image", {\n            imageSrcSet: c.srcSet,\n            imageSizes: c.sizes,\n            crossOrigin: fd,\n            integrity: c.integrity,\n            nonce: c.nonce,\n            type: c.type,\n            fetchPriority: c.fetchPriority,\n            referrerPolicy: c.refererPolicy\n          }), 2 <= (aa.remainingCapacity -= fc.length)) ? (e.resets.image[Ia] = C, aa.highImagePreloads && (aa.highImagePreloads += ", "), aa.highImagePreloads += fc) : (xa = [], O(xa, {\n            rel: "preload",\n            as: "image",\n            href: J ? void 0 : M,\n            imageSrcSet: J,\n            imageSizes: ed,\n            crossOrigin: fd,\n            integrity: c.integrity,\n            type: c.type,\n            fetchPriority: c.fetchPriority,\n            referrerPolicy: c.referrerPolicy\n          }), "high" === c.fetchPriority || 10 > e.highImagePreloads.size ? e.highImagePreloads.add(xa) : (e.bulkPreloads.add(xa), dc.set(Ia, xa)));\n        }\n      }\n      return Jb(a, c, "img");\n    case "base":\n    case "area":\n    case "br":\n    case "col":\n    case "embed":\n    case "hr":\n    case "keygen":\n    case "param":\n    case "source":\n    case "track":\n    case "wbr":\n      return Jb(a, c, b);\n    case "annotation-xml":\n    case "color-profile":\n    case "font-face":\n    case "font-face-src":\n    case "font-face-uri":\n    case "font-face-format":\n    case "font-face-name":\n    case "missing-glyph":\n      break;\n    case "head":\n      if (2 > f.insertionMode && null === e.headChunks) {\n        e.headChunks = [];\n        var gd = Nb(e.headChunks, c, "head");\n      } else gd = Nb(a, c, "head");\n      return gd;\n    case "html":\n      if (0 === f.insertionMode && null === e.htmlChunks) {\n        e.htmlChunks = [""];\n        var hd = Nb(e.htmlChunks, c, "html");\n      } else hd = Nb(a, c, "html");\n      return hd;\n    default:\n      if (-1 !== b.indexOf("-")) {\n        a.push(P(b));\n        var gc = null,\n          id = null,\n          Ja;\n        for (Ja in c) if (y.call(c, Ja)) {\n          var ya = c[Ja];\n          if (null != ya) {\n            var ze = Ja;\n            switch (Ja) {\n              case "children":\n                gc = ya;\n                break;\n              case "dangerouslySetInnerHTML":\n                id = ya;\n                break;\n              case "style":\n                qb(a, ya);\n                break;\n              case "suppressContentEditableWarning":\n              case "suppressHydrationWarning":\n                break;\n              default:\n                za(Ja) && "function" !== typeof ya && "symbol" !== typeof ya && a.push(" ", ze, \'="\', z(ya), \'"\');\n            }\n          }\n        }\n        a.push(">");\n        N(a, id, gc);\n        return gc;\n      }\n  }\n  return Nb(a, c, b);\n}\nvar Sb = new Map();\nfunction Lb(a) {\n  var b = Sb.get(a);\n  void 0 === b && (b = "</" + a + ">", Sb.set(a, b));\n  return b;\n}\nfunction Tb(a, b) {\n  b = b.bootstrapChunks;\n  for (var c = 0; c < b.length - 1; c++) a.push(b[c]);\n  return c < b.length ? (c = b[c], b.length = 0, a.push(c)) : !0;\n}\nfunction Ub(a, b, c) {\n  a.push(\'\\x3c!--$?--\\x3e<template id="\');\n  if (null === c) throw Error(q(395));\n  a.push(b.boundaryPrefix);\n  b = c.toString(16);\n  a.push(b);\n  return a.push(\'"></template>\');\n}\nfunction Vb(a, b, c, d) {\n  switch (c.insertionMode) {\n    case 0:\n    case 1:\n    case 2:\n      return a.push(\'<div hidden id="\'), a.push(b.segmentPrefix), b = d.toString(16), a.push(b), a.push(\'">\');\n    case 3:\n      return a.push(\'<svg aria-hidden="true" style="display:none" id="\'), a.push(b.segmentPrefix), b = d.toString(16), a.push(b), a.push(\'">\');\n    case 4:\n      return a.push(\'<math aria-hidden="true" style="display:none" id="\'), a.push(b.segmentPrefix), b = d.toString(16), a.push(b), a.push(\'">\');\n    case 5:\n      return a.push(\'<table hidden id="\'), a.push(b.segmentPrefix), b = d.toString(16), a.push(b), a.push(\'">\');\n    case 6:\n      return a.push(\'<table hidden><tbody id="\'), a.push(b.segmentPrefix), b = d.toString(16), a.push(b), a.push(\'">\');\n    case 7:\n      return a.push(\'<table hidden><tr id="\'), a.push(b.segmentPrefix), b = d.toString(16), a.push(b), a.push(\'">\');\n    case 8:\n      return a.push(\'<table hidden><colgroup id="\'), a.push(b.segmentPrefix), b = d.toString(16), a.push(b), a.push(\'">\');\n    default:\n      throw Error(q(397));\n  }\n}\nfunction Wb(a, b) {\n  switch (b.insertionMode) {\n    case 0:\n    case 1:\n    case 2:\n      return a.push("</div>");\n    case 3:\n      return a.push("</svg>");\n    case 4:\n      return a.push("</math>");\n    case 5:\n      return a.push("</table>");\n    case 6:\n      return a.push("</tbody></table>");\n    case 7:\n      return a.push("</tr></table>");\n    case 8:\n      return a.push("</colgroup></table>");\n    default:\n      throw Error(q(397));\n  }\n}\nvar Xb = /[<\\u2028\\u2029]/g;\nfunction Yb(a) {\n  return JSON.stringify(a).replace(Xb, function (b) {\n    switch (b) {\n      case "<":\n        return "\\\\u003c";\n      case "\\u2028":\n        return "\\\\u2028";\n      case "\\u2029":\n        return "\\\\u2029";\n      default:\n        throw Error("escapeJSStringsForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React");\n    }\n  });\n}\nvar hc = /[&><\\u2028\\u2029]/g;\nfunction ic(a) {\n  return JSON.stringify(a).replace(hc, function (b) {\n    switch (b) {\n      case "&":\n        return "\\\\u0026";\n      case ">":\n        return "\\\\u003e";\n      case "<":\n        return "\\\\u003c";\n      case "\\u2028":\n        return "\\\\u2028";\n      case "\\u2029":\n        return "\\\\u2029";\n      default:\n        throw Error("escapeJSObjectForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React");\n    }\n  });\n}\nvar jc = !1,\n  kc = !0;\nfunction lc(a) {\n  var b = a.rules,\n    c = a.hrefs,\n    d = 0;\n  if (c.length) {\n    this.push(\'<style media="not all" data-precedence="\');\n    this.push(a.precedence);\n    for (this.push(\'" data-href="\'); d < c.length - 1; d++) this.push(c[d]), this.push(" ");\n    this.push(c[d]);\n    this.push(\'">\');\n    for (d = 0; d < b.length; d++) this.push(b[d]);\n    kc = this.push("</style>");\n    jc = !0;\n    b.length = 0;\n    c.length = 0;\n  }\n}\nfunction mc(a) {\n  return 2 !== a.state ? jc = !0 : !1;\n}\nfunction nc(a, b, c) {\n  jc = !1;\n  kc = !0;\n  b.styles.forEach(lc, a);\n  b.stylesheets.forEach(mc);\n  jc && (c.stylesToHoist = !0);\n  return kc;\n}\nfunction S(a) {\n  for (var b = 0; b < a.length; b++) this.push(a[b]);\n  a.length = 0;\n}\nvar oc = [];\nfunction pc(a) {\n  O(oc, a.props);\n  for (var b = 0; b < oc.length; b++) this.push(oc[b]);\n  oc.length = 0;\n  a.state = 2;\n}\nfunction qc(a) {\n  var b = 0 < a.sheets.size;\n  a.sheets.forEach(pc, this);\n  a.sheets.clear();\n  var c = a.rules,\n    d = a.hrefs;\n  if (!b || d.length) {\n    this.push(\'<style data-precedence="\');\n    this.push(a.precedence);\n    a = 0;\n    if (d.length) {\n      for (this.push(\'" data-href="\'); a < d.length - 1; a++) this.push(d[a]), this.push(" ");\n      this.push(d[a]);\n    }\n    this.push(\'">\');\n    for (a = 0; a < c.length; a++) this.push(c[a]);\n    this.push("</style>");\n    c.length = 0;\n    d.length = 0;\n  }\n}\nfunction rc(a) {\n  if (0 === a.state) {\n    a.state = 1;\n    var b = a.props;\n    O(oc, {\n      rel: "preload",\n      as: "style",\n      href: a.props.href,\n      crossOrigin: b.crossOrigin,\n      fetchPriority: b.fetchPriority,\n      integrity: b.integrity,\n      media: b.media,\n      hrefLang: b.hrefLang,\n      referrerPolicy: b.referrerPolicy\n    });\n    for (a = 0; a < oc.length; a++) this.push(oc[a]);\n    oc.length = 0;\n  }\n}\nfunction sc(a) {\n  a.sheets.forEach(rc, this);\n  a.sheets.clear();\n}\nfunction tc(a, b) {\n  a.push("[");\n  var c = "[";\n  b.stylesheets.forEach(function (d) {\n    if (2 !== d.state) if (3 === d.state) a.push(c), d = ic("" + d.props.href), a.push(d), a.push("]"), c = ",[";else {\n      a.push(c);\n      var e = d.props["data-precedence"],\n        f = d.props,\n        g = ic("" + d.props.href);\n      a.push(g);\n      e = "" + e;\n      a.push(",");\n      e = ic(e);\n      a.push(e);\n      for (var h in f) if (y.call(f, h) && (g = f[h], null != g)) switch (h) {\n        case "href":\n        case "rel":\n        case "precedence":\n        case "data-precedence":\n          break;\n        case "children":\n        case "dangerouslySetInnerHTML":\n          throw Error(q(399, "link"));\n        default:\n          a: {\n            e = a;\n            var k = h.toLowerCase();\n            switch (typeof g) {\n              case "function":\n              case "symbol":\n                break a;\n            }\n            switch (h) {\n              case "innerHTML":\n              case "dangerouslySetInnerHTML":\n              case "suppressContentEditableWarning":\n              case "suppressHydrationWarning":\n              case "style":\n                break a;\n              case "className":\n                k = "class";\n                g = "" + g;\n                break;\n              case "hidden":\n                if (!1 === g) break a;\n                g = "";\n                break;\n              case "src":\n              case "href":\n                g = "" + g;\n                break;\n              default:\n                if (2 < h.length && ("o" === h[0] || "O" === h[0]) && ("n" === h[1] || "N" === h[1]) || !za(h)) break a;\n                g = "" + g;\n            }\n            e.push(",");\n            k = ic(k);\n            e.push(k);\n            e.push(",");\n            g = ic(g);\n            e.push(g);\n          }\n      }\n      a.push("]");\n      c = ",[";\n      d.state = 3;\n    }\n  });\n  a.push("]");\n}\nfunction uc(a, b) {\n  a.push("[");\n  var c = "[";\n  b.stylesheets.forEach(function (d) {\n    if (2 !== d.state) if (3 === d.state) a.push(c), d = z(JSON.stringify("" + d.props.href)), a.push(d), a.push("]"), c = ",[";else {\n      a.push(c);\n      var e = d.props["data-precedence"],\n        f = d.props,\n        g = z(JSON.stringify("" + d.props.href));\n      a.push(g);\n      e = "" + e;\n      a.push(",");\n      e = z(JSON.stringify(e));\n      a.push(e);\n      for (var h in f) if (y.call(f, h) && (g = f[h], null != g)) switch (h) {\n        case "href":\n        case "rel":\n        case "precedence":\n        case "data-precedence":\n          break;\n        case "children":\n        case "dangerouslySetInnerHTML":\n          throw Error(q(399, "link"));\n        default:\n          a: {\n            e = a;\n            var k = h.toLowerCase();\n            switch (typeof g) {\n              case "function":\n              case "symbol":\n                break a;\n            }\n            switch (h) {\n              case "innerHTML":\n              case "dangerouslySetInnerHTML":\n              case "suppressContentEditableWarning":\n              case "suppressHydrationWarning":\n              case "style":\n                break a;\n              case "className":\n                k = "class";\n                g = "" + g;\n                break;\n              case "hidden":\n                if (!1 === g) break a;\n                g = "";\n                break;\n              case "src":\n              case "href":\n                g = "" + g;\n                break;\n              default:\n                if (2 < h.length && ("o" === h[0] || "O" === h[0]) && ("n" === h[1] || "N" === h[1]) || !za(h)) break a;\n                g = "" + g;\n            }\n            e.push(",");\n            k = z(JSON.stringify(k));\n            e.push(k);\n            e.push(",");\n            g = z(JSON.stringify(g));\n            e.push(g);\n          }\n      }\n      a.push("]");\n      c = ",[";\n      d.state = 3;\n    }\n  });\n  a.push("]");\n}\nfunction Oa(a) {\n  var b = U ? U : null;\n  if (b) {\n    var c = b.resumableState,\n      d = b.renderState;\n    if ("string" === typeof a && a) {\n      if (!c.dnsResources.hasOwnProperty(a)) {\n        c.dnsResources[a] = null;\n        c = d.headers;\n        var e, f;\n        if (f = c && 0 < c.remainingCapacity) f = (e = "<" + ("" + a).replace(vc, wc) + ">; rel=dns-prefetch", 2 <= (c.remainingCapacity -= e.length));\n        f ? (d.resets.dns[a] = null, c.preconnects && (c.preconnects += ", "), c.preconnects += e) : (e = [], O(e, {\n          href: a,\n          rel: "dns-prefetch"\n        }), d.preconnects.add(e));\n      }\n      xc(b);\n    }\n  }\n}\nfunction Pa(a, b) {\n  var c = U ? U : null;\n  if (c) {\n    var d = c.resumableState,\n      e = c.renderState;\n    if ("string" === typeof a && a) {\n      var f = "use-credentials" === b ? "credentials" : "string" === typeof b ? "anonymous" : "default";\n      if (!d.connectResources[f].hasOwnProperty(a)) {\n        d.connectResources[f][a] = null;\n        d = e.headers;\n        var g, h;\n        if (h = d && 0 < d.remainingCapacity) {\n          h = "<" + ("" + a).replace(vc, wc) + ">; rel=preconnect";\n          if ("string" === typeof b) {\n            var k = ("" + b).replace(yc, zc);\n            h += \'; crossorigin="\' + k + \'"\';\n          }\n          h = (g = h, 2 <= (d.remainingCapacity -= g.length));\n        }\n        h ? (e.resets.connect[f][a] = null, d.preconnects && (d.preconnects += ", "), d.preconnects += g) : (f = [], O(f, {\n          rel: "preconnect",\n          href: a,\n          crossOrigin: b\n        }), e.preconnects.add(f));\n      }\n      xc(c);\n    }\n  }\n}\nfunction Qa(a, b, c) {\n  var d = U ? U : null;\n  if (d) {\n    var e = d.resumableState,\n      f = d.renderState;\n    if (b && a) {\n      switch (b) {\n        case "image":\n          if (c) {\n            var g = c.imageSrcSet;\n            var h = c.imageSizes;\n            var k = c.fetchPriority;\n          }\n          var l = g ? g + "\\n" + (h || "") : a;\n          if (e.imageResources.hasOwnProperty(l)) return;\n          e.imageResources[l] = C;\n          e = f.headers;\n          var n;\n          e && 0 < e.remainingCapacity && "high" === k && (n = Rb(a, b, c), 2 <= (e.remainingCapacity -= n.length)) ? (f.resets.image[l] = C, e.highImagePreloads && (e.highImagePreloads += ", "), e.highImagePreloads += n) : (e = [], O(e, v({\n            rel: "preload",\n            href: g ? void 0 : a,\n            as: b\n          }, c)), "high" === k ? f.highImagePreloads.add(e) : (f.bulkPreloads.add(e), f.preloads.images.set(l, e)));\n          break;\n        case "style":\n          if (e.styleResources.hasOwnProperty(a)) return;\n          g = [];\n          O(g, v({\n            rel: "preload",\n            href: a,\n            as: b\n          }, c));\n          e.styleResources[a] = !c || "string" !== typeof c.crossOrigin && "string" !== typeof c.integrity ? C : [c.crossOrigin, c.integrity];\n          f.preloads.stylesheets.set(a, g);\n          f.bulkPreloads.add(g);\n          break;\n        case "script":\n          if (e.scriptResources.hasOwnProperty(a)) return;\n          g = [];\n          f.preloads.scripts.set(a, g);\n          f.bulkPreloads.add(g);\n          O(g, v({\n            rel: "preload",\n            href: a,\n            as: b\n          }, c));\n          e.scriptResources[a] = !c || "string" !== typeof c.crossOrigin && "string" !== typeof c.integrity ? C : [c.crossOrigin, c.integrity];\n          break;\n        default:\n          if (e.unknownResources.hasOwnProperty(b)) {\n            if (g = e.unknownResources[b], g.hasOwnProperty(a)) return;\n          } else g = {}, e.unknownResources[b] = g;\n          g[a] = C;\n          if ((e = f.headers) && 0 < e.remainingCapacity && "font" === b && (l = Rb(a, b, c), 2 <= (e.remainingCapacity -= l.length))) f.resets.font[a] = C, e.fontPreloads && (e.fontPreloads += ", "), e.fontPreloads += l;else switch (e = [], a = v({\n            rel: "preload",\n            href: a,\n            as: b\n          }, c), O(e, a), b) {\n            case "font":\n              f.fontPreloads.add(e);\n              break;\n            default:\n              f.bulkPreloads.add(e);\n          }\n      }\n      xc(d);\n    }\n  }\n}\nfunction Ra(a, b) {\n  var c = U ? U : null;\n  if (c) {\n    var d = c.resumableState,\n      e = c.renderState;\n    if (a) {\n      var f = b && "string" === typeof b.as ? b.as : "script";\n      switch (f) {\n        case "script":\n          if (d.moduleScriptResources.hasOwnProperty(a)) return;\n          f = [];\n          d.moduleScriptResources[a] = !b || "string" !== typeof b.crossOrigin && "string" !== typeof b.integrity ? C : [b.crossOrigin, b.integrity];\n          e.preloads.moduleScripts.set(a, f);\n          break;\n        default:\n          if (d.moduleUnknownResources.hasOwnProperty(f)) {\n            var g = d.unknownResources[f];\n            if (g.hasOwnProperty(a)) return;\n          } else g = {}, d.moduleUnknownResources[f] = g;\n          f = [];\n          g[a] = C;\n      }\n      O(f, v({\n        rel: "modulepreload",\n        href: a\n      }, b));\n      e.bulkPreloads.add(f);\n      xc(c);\n    }\n  }\n}\nfunction hb(a, b, c) {\n  var d = U ? U : null;\n  if (d) {\n    var e = d.resumableState,\n      f = d.renderState;\n    if (a) {\n      b = b || "default";\n      var g = f.styles.get(b),\n        h = e.styleResources.hasOwnProperty(a) ? e.styleResources[a] : void 0;\n      null !== h && (e.styleResources[a] = null, g || (g = {\n        precedence: z(b),\n        rules: [],\n        hrefs: [],\n        sheets: new Map()\n      }, f.styles.set(b, g)), b = {\n        state: 0,\n        props: v({\n          rel: "stylesheet",\n          href: a,\n          "data-precedence": b\n        }, c)\n      }, h && (2 === h.length && Ib(b.props, h), (f = f.preloads.stylesheets.get(a)) && 0 < f.length ? f.length = 0 : b.state = 1), g.sheets.set(a, b), xc(d));\n    }\n  }\n}\nfunction ib(a, b) {\n  var c = U ? U : null;\n  if (c) {\n    var d = c.resumableState,\n      e = c.renderState;\n    if (a) {\n      var f = d.scriptResources.hasOwnProperty(a) ? d.scriptResources[a] : void 0;\n      null !== f && (d.scriptResources[a] = null, b = v({\n        src: a,\n        async: !0\n      }, b), f && (2 === f.length && Ib(b, f), a = e.preloads.scripts.get(a)) && (a.length = 0), a = [], e.scripts.add(a), Mb(a, b), xc(c));\n    }\n  }\n}\nfunction jb(a, b) {\n  var c = U ? U : null;\n  if (c) {\n    var d = c.resumableState,\n      e = c.renderState;\n    if (a) {\n      var f = d.moduleScriptResources.hasOwnProperty(a) ? d.moduleScriptResources[a] : void 0;\n      null !== f && (d.moduleScriptResources[a] = null, b = v({\n        src: a,\n        type: "module",\n        async: !0\n      }, b), f && (2 === f.length && Ib(b, f), a = e.preloads.moduleScripts.get(a)) && (a.length = 0), a = [], e.scripts.add(a), Mb(a, b), xc(c));\n    }\n  }\n}\nfunction Ib(a, b) {\n  null == a.crossOrigin && (a.crossOrigin = b[0]);\n  null == a.integrity && (a.integrity = b[1]);\n}\nfunction Rb(a, b, c) {\n  a = ("" + a).replace(vc, wc);\n  b = ("" + b).replace(yc, zc);\n  b = "<" + a + \'>; rel=preload; as="\' + b + \'"\';\n  for (var d in c) y.call(c, d) && (a = c[d], "string" === typeof a && (b += "; " + d.toLowerCase() + \'="\' + ("" + a).replace(yc, zc) + \'"\'));\n  return b;\n}\nvar vc = /[<>\\r\\n]/g;\nfunction wc(a) {\n  switch (a) {\n    case "<":\n      return "%3C";\n    case ">":\n      return "%3E";\n    case "\\n":\n      return "%0A";\n    case "\\r":\n      return "%0D";\n    default:\n      throw Error("escapeLinkHrefForHeaderContextReplacer encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React");\n  }\n}\nvar yc = /["\';,\\r\\n]/g;\nfunction zc(a) {\n  switch (a) {\n    case \'"\':\n      return "%22";\n    case "\'":\n      return "%27";\n    case ";":\n      return "%3B";\n    case ",":\n      return "%2C";\n    case "\\n":\n      return "%0A";\n    case "\\r":\n      return "%0D";\n    default:\n      throw Error("escapeStringForLinkHeaderQuotedParamValueContextReplacer encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React");\n  }\n}\nfunction Ac(a) {\n  this.styles.add(a);\n}\nfunction Bc(a) {\n  this.stylesheets.add(a);\n}\nfunction Cc(a, b) {\n  var c = a.idPrefix,\n    d = [],\n    e = a.bootstrapScriptContent,\n    f = a.bootstrapScripts,\n    g = a.bootstrapModules;\n  void 0 !== e && d.push("<script>", ("" + e).replace(lb, mb), "\\x3c/script>");\n  e = c + "P:";\n  var h = c + "S:";\n  c += "B:";\n  var k = new Set(),\n    l = new Set(),\n    n = new Set(),\n    m = new Map(),\n    p = new Set(),\n    r = new Set(),\n    D = new Set(),\n    A = {\n      images: new Map(),\n      stylesheets: new Map(),\n      scripts: new Map(),\n      moduleScripts: new Map()\n    };\n  if (void 0 !== f) for (var B = 0; B < f.length; B++) {\n    var u = f[B],\n      t,\n      E = void 0,\n      x = void 0,\n      w = {\n        rel: "preload",\n        as: "script",\n        fetchPriority: "low",\n        nonce: void 0\n      };\n    "string" === typeof u ? w.href = t = u : (w.href = t = u.src, w.integrity = x = "string" === typeof u.integrity ? u.integrity : void 0, w.crossOrigin = E = "string" === typeof u || null == u.crossOrigin ? void 0 : "use-credentials" === u.crossOrigin ? "use-credentials" : "");\n    u = a;\n    var F = t;\n    u.scriptResources[F] = null;\n    u.moduleScriptResources[F] = null;\n    u = [];\n    O(u, w);\n    p.add(u);\n    d.push(\'<script src="\', z(t));\n    "string" === typeof x && d.push(\'" integrity="\', z(x));\n    "string" === typeof E && d.push(\'" crossorigin="\', z(E));\n    d.push(\'" async="">\\x3c/script>\');\n  }\n  if (void 0 !== g) for (f = 0; f < g.length; f++) w = g[f], E = t = void 0, x = {\n    rel: "modulepreload",\n    fetchPriority: "low",\n    nonce: void 0\n  }, "string" === typeof w ? x.href = B = w : (x.href = B = w.src, x.integrity = E = "string" === typeof w.integrity ? w.integrity : void 0, x.crossOrigin = t = "string" === typeof w || null == w.crossOrigin ? void 0 : "use-credentials" === w.crossOrigin ? "use-credentials" : ""), w = a, u = B, w.scriptResources[u] = null, w.moduleScriptResources[u] = null, w = [], O(w, x), p.add(w), d.push(\'<script type="module" src="\', z(B)), "string" === typeof E && d.push(\'" integrity="\', z(E)), "string" === typeof t && d.push(\'" crossorigin="\', z(t)), d.push(\'" async="">\\x3c/script>\');\n  return {\n    placeholderPrefix: e,\n    segmentPrefix: h,\n    boundaryPrefix: c,\n    startInlineScript: "<script>",\n    htmlChunks: null,\n    headChunks: null,\n    externalRuntimeScript: null,\n    bootstrapChunks: d,\n    onHeaders: void 0,\n    headers: null,\n    resets: {\n      font: {},\n      dns: {},\n      connect: {\n        default: {},\n        anonymous: {},\n        credentials: {}\n      },\n      image: {},\n      style: {}\n    },\n    charsetChunks: [],\n    preconnectChunks: [],\n    importMapChunks: [],\n    preloadChunks: [],\n    hoistableChunks: [],\n    preconnects: k,\n    fontPreloads: l,\n    highImagePreloads: n,\n    styles: m,\n    bootstrapScripts: p,\n    scripts: r,\n    bulkPreloads: D,\n    preloads: A,\n    boundaryResources: null,\n    stylesToHoist: !1,\n    generateStaticMarkup: b\n  };\n}\nfunction Dc(a, b, c, d) {\n  if (c.generateStaticMarkup) return a.push(z(b)), !1;\n  "" === b ? a = d : (d && a.push("\\x3c!-- --\\x3e"), a.push(z(b)), a = !0);\n  return a;\n}\nvar Ec = Symbol.for("react.element"),\n  Fc = Symbol.for("react.portal"),\n  Gc = Symbol.for("react.fragment"),\n  Hc = Symbol.for("react.strict_mode"),\n  Ic = Symbol.for("react.profiler"),\n  Jc = Symbol.for("react.provider"),\n  Kc = Symbol.for("react.context"),\n  Lc = Symbol.for("react.server_context"),\n  Mc = Symbol.for("react.forward_ref"),\n  Nc = Symbol.for("react.suspense"),\n  Oc = Symbol.for("react.suspense_list"),\n  Pc = Symbol.for("react.memo"),\n  jd = Symbol.for("react.lazy"),\n  kd = Symbol.for("react.scope"),\n  ld = Symbol.for("react.debug_trace_mode"),\n  md = Symbol.for("react.offscreen"),\n  nd = Symbol.for("react.legacy_hidden"),\n  od = Symbol.for("react.cache"),\n  pd = Symbol.for("react.default_value"),\n  qd = Symbol.iterator;\nfunction rd(a) {\n  if (null == a) return null;\n  if ("function" === typeof a) return a.displayName || a.name || null;\n  if ("string" === typeof a) return a;\n  switch (a) {\n    case Gc:\n      return "Fragment";\n    case Fc:\n      return "Portal";\n    case Ic:\n      return "Profiler";\n    case Hc:\n      return "StrictMode";\n    case Nc:\n      return "Suspense";\n    case Oc:\n      return "SuspenseList";\n    case od:\n      return "Cache";\n  }\n  if ("object" === typeof a) switch (a.$$typeof) {\n    case Kc:\n      return (a.displayName || "Context") + ".Consumer";\n    case Jc:\n      return (a._context.displayName || "Context") + ".Provider";\n    case Mc:\n      var b = a.render;\n      a = a.displayName;\n      a || (a = b.displayName || b.name || "", a = "" !== a ? "ForwardRef(" + a + ")" : "ForwardRef");\n      return a;\n    case Pc:\n      return b = a.displayName || null, null !== b ? b : rd(a.type) || "Memo";\n    case jd:\n      b = a._payload;\n      a = a._init;\n      try {\n        return rd(a(b));\n      } catch (c) {}\n  }\n  return null;\n}\nvar sd;\nfunction td(a) {\n  if (void 0 === sd) try {\n    throw Error();\n  } catch (c) {\n    var b = c.stack.trim().match(/\\n( *(at )?)/);\n    sd = b && b[1] || "";\n  }\n  return "\\n" + sd + a;\n}\nvar ud = !1;\nfunction vd(a, b) {\n  if (!a || ud) return "";\n  ud = !0;\n  var c = Error.prepareStackTrace;\n  Error.prepareStackTrace = void 0;\n  var d = {\n    DetermineComponentFrameRoot: function () {\n      try {\n        if (b) {\n          var m = function () {\n            throw Error();\n          };\n          Object.defineProperty(m.prototype, "props", {\n            set: function () {\n              throw Error();\n            }\n          });\n          if ("object" === typeof Reflect && Reflect.construct) {\n            try {\n              Reflect.construct(m, []);\n            } catch (r) {\n              var p = r;\n            }\n            Reflect.construct(a, [], m);\n          } else {\n            try {\n              m.call();\n            } catch (r) {\n              p = r;\n            }\n            a.call(m.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (r) {\n            p = r;\n          }\n          (m = a()) && "function" === typeof m.catch && m.catch(function () {});\n        }\n      } catch (r) {\n        if (r && p && "string" === typeof r.stack) return [r.stack, p.stack];\n      }\n      return [null, null];\n    }\n  };\n  d.DetermineComponentFrameRoot.displayName = "DetermineComponentFrameRoot";\n  var e = Object.getOwnPropertyDescriptor(d.DetermineComponentFrameRoot, "name");\n  e && e.configurable && Object.defineProperty(d.DetermineComponentFrameRoot, "name", {\n    value: "DetermineComponentFrameRoot"\n  });\n  try {\n    var f = d.DetermineComponentFrameRoot(),\n      g = f[0],\n      h = f[1];\n    if (g && h) {\n      var k = g.split("\\n"),\n        l = h.split("\\n");\n      for (e = d = 0; d < k.length && !k[d].includes("DetermineComponentFrameRoot");) d++;\n      for (; e < l.length && !l[e].includes("DetermineComponentFrameRoot");) e++;\n      if (d === k.length || e === l.length) for (d = k.length - 1, e = l.length - 1; 1 <= d && 0 <= e && k[d] !== l[e];) e--;\n      for (; 1 <= d && 0 <= e; d--, e--) if (k[d] !== l[e]) {\n        if (1 !== d || 1 !== e) {\n          do if (d--, e--, 0 > e || k[d] !== l[e]) {\n            var n = "\\n" + k[d].replace(" at new ", " at ");\n            a.displayName && n.includes("<anonymous>") && (n = n.replace("<anonymous>", a.displayName));\n            return n;\n          } while (1 <= d && 0 <= e);\n        }\n        break;\n      }\n    }\n  } finally {\n    ud = !1, Error.prepareStackTrace = c;\n  }\n  return (c = a ? a.displayName || a.name : "") ? td(c) : "";\n}\nvar wd = {};\nfunction xd(a, b) {\n  a = a.contextTypes;\n  if (!a) return wd;\n  var c = {},\n    d;\n  for (d in a) c[d] = b[d];\n  return c;\n}\nvar yd = null;\nfunction zd(a, b) {\n  if (a !== b) {\n    a.context._currentValue2 = a.parentValue;\n    a = a.parent;\n    var c = b.parent;\n    if (null === a) {\n      if (null !== c) throw Error(q(401));\n    } else {\n      if (null === c) throw Error(q(401));\n      zd(a, c);\n    }\n    b.context._currentValue2 = b.value;\n  }\n}\nfunction Ad(a) {\n  a.context._currentValue2 = a.parentValue;\n  a = a.parent;\n  null !== a && Ad(a);\n}\nfunction Bd(a) {\n  var b = a.parent;\n  null !== b && Bd(b);\n  a.context._currentValue2 = a.value;\n}\nfunction Cd(a, b) {\n  a.context._currentValue2 = a.parentValue;\n  a = a.parent;\n  if (null === a) throw Error(q(402));\n  a.depth === b.depth ? zd(a, b) : Cd(a, b);\n}\nfunction Dd(a, b) {\n  var c = b.parent;\n  if (null === c) throw Error(q(402));\n  a.depth === c.depth ? zd(a, c) : Dd(a, c);\n  b.context._currentValue2 = b.value;\n}\nfunction Ed(a) {\n  var b = yd;\n  b !== a && (null === b ? Bd(a) : null === a ? Ad(b) : b.depth === a.depth ? zd(b, a) : b.depth > a.depth ? Cd(b, a) : Dd(b, a), yd = a);\n}\nvar Fd = {\n  isMounted: function () {\n    return !1;\n  },\n  enqueueSetState: function (a, b) {\n    a = a._reactInternals;\n    null !== a.queue && a.queue.push(b);\n  },\n  enqueueReplaceState: function (a, b) {\n    a = a._reactInternals;\n    a.replace = !0;\n    a.queue = [b];\n  },\n  enqueueForceUpdate: function () {}\n};\nfunction Gd(a, b, c, d) {\n  var e = void 0 !== a.state ? a.state : null;\n  a.updater = Fd;\n  a.props = c;\n  a.state = e;\n  var f = {\n    queue: [],\n    replace: !1\n  };\n  a._reactInternals = f;\n  var g = b.contextType;\n  a.context = "object" === typeof g && null !== g ? g._currentValue2 : d;\n  g = b.getDerivedStateFromProps;\n  "function" === typeof g && (g = g(c, e), e = null === g || void 0 === g ? e : v({}, e, g), a.state = e);\n  if ("function" !== typeof b.getDerivedStateFromProps && "function" !== typeof a.getSnapshotBeforeUpdate && ("function" === typeof a.UNSAFE_componentWillMount || "function" === typeof a.componentWillMount)) if (b = a.state, "function" === typeof a.componentWillMount && a.componentWillMount(), "function" === typeof a.UNSAFE_componentWillMount && a.UNSAFE_componentWillMount(), b !== a.state && Fd.enqueueReplaceState(a, a.state, null), null !== f.queue && 0 < f.queue.length) {\n    if (b = f.queue, g = f.replace, f.queue = null, f.replace = !1, g && 1 === b.length) a.state = b[0];else {\n      f = g ? b[0] : a.state;\n      e = !0;\n      for (g = g ? 1 : 0; g < b.length; g++) {\n        var h = b[g];\n        h = "function" === typeof h ? h.call(a, f, c, d) : h;\n        null != h && (e ? (e = !1, f = v({}, f, h)) : v(f, h));\n      }\n      a.state = f;\n    }\n  } else f.queue = null;\n}\nvar Hd = {\n  id: 1,\n  overflow: ""\n};\nfunction Id(a, b, c) {\n  var d = a.id;\n  a = a.overflow;\n  var e = 32 - Jd(d) - 1;\n  d &= ~(1 << e);\n  c += 1;\n  var f = 32 - Jd(b) + e;\n  if (30 < f) {\n    var g = e - e % 5;\n    f = (d & (1 << g) - 1).toString(32);\n    d >>= g;\n    e -= g;\n    return {\n      id: 1 << 32 - Jd(b) + e | c << e | d,\n      overflow: f + a\n    };\n  }\n  return {\n    id: 1 << f | c << e | d,\n    overflow: a\n  };\n}\nvar Jd = Math.clz32 ? Math.clz32 : Kd,\n  Ld = Math.log,\n  Md = Math.LN2;\nfunction Kd(a) {\n  a >>>= 0;\n  return 0 === a ? 32 : 31 - (Ld(a) / Md | 0) | 0;\n}\nvar Nd = Error(q(460));\nfunction Od() {}\nfunction Pd(a, b, c) {\n  c = a[c];\n  void 0 === c ? a.push(b) : c !== b && (b.then(Od, Od), b = c);\n  switch (b.status) {\n    case "fulfilled":\n      return b.value;\n    case "rejected":\n      throw b.reason;\n    default:\n      if ("string" !== typeof b.status) switch (a = b, a.status = "pending", a.then(function (d) {\n        if ("pending" === b.status) {\n          var e = b;\n          e.status = "fulfilled";\n          e.value = d;\n        }\n      }, function (d) {\n        if ("pending" === b.status) {\n          var e = b;\n          e.status = "rejected";\n          e.reason = d;\n        }\n      }), b.status) {\n        case "fulfilled":\n          return b.value;\n        case "rejected":\n          throw b.reason;\n      }\n      Qd = b;\n      throw Nd;\n  }\n}\nvar Qd = null;\nfunction Rd() {\n  if (null === Qd) throw Error(q(459));\n  var a = Qd;\n  Qd = null;\n  return a;\n}\nfunction Sd(a, b) {\n  return a === b && (0 !== a || 1 / a === 1 / b) || a !== a && b !== b;\n}\nvar Td = "function" === typeof Object.is ? Object.is : Sd,\n  Ud = null,\n  Vd = null,\n  Wd = null,\n  Xd = null,\n  Yd = null,\n  V = null,\n  Zd = !1,\n  $d = !1,\n  ae = 0,\n  be = 0,\n  ce = -1,\n  de = 0,\n  ee = null,\n  fe = null,\n  ge = 0;\nfunction he() {\n  if (null === Ud) throw Error(q(321));\n  return Ud;\n}\nfunction ie() {\n  if (0 < ge) throw Error(q(312));\n  return {\n    memoizedState: null,\n    queue: null,\n    next: null\n  };\n}\nfunction je() {\n  null === V ? null === Yd ? (Zd = !1, Yd = V = ie()) : (Zd = !0, V = Yd) : null === V.next ? (Zd = !1, V = V.next = ie()) : (Zd = !0, V = V.next);\n  return V;\n}\nfunction ke(a, b, c, d) {\n  for (; $d;) $d = !1, be = ae = 0, ce = -1, de = 0, ge += 1, V = null, c = a(b, d);\n  le();\n  return c;\n}\nfunction me() {\n  var a = ee;\n  ee = null;\n  return a;\n}\nfunction le() {\n  Xd = Wd = Vd = Ud = null;\n  $d = !1;\n  Yd = null;\n  ge = 0;\n  V = fe = null;\n}\nfunction ne(a, b) {\n  return "function" === typeof b ? b(a) : b;\n}\nfunction oe(a, b, c) {\n  Ud = he();\n  V = je();\n  if (Zd) {\n    var d = V.queue;\n    b = d.dispatch;\n    if (null !== fe && (c = fe.get(d), void 0 !== c)) {\n      fe.delete(d);\n      d = V.memoizedState;\n      do d = a(d, c.action), c = c.next; while (null !== c);\n      V.memoizedState = d;\n      return [d, b];\n    }\n    return [V.memoizedState, b];\n  }\n  a = a === ne ? "function" === typeof b ? b() : b : void 0 !== c ? c(b) : b;\n  V.memoizedState = a;\n  a = V.queue = {\n    last: null,\n    dispatch: null\n  };\n  a = a.dispatch = pe.bind(null, Ud, a);\n  return [V.memoizedState, a];\n}\nfunction qe(a, b) {\n  Ud = he();\n  V = je();\n  b = void 0 === b ? null : b;\n  if (null !== V) {\n    var c = V.memoizedState;\n    if (null !== c && null !== b) {\n      var d = c[1];\n      a: if (null === d) d = !1;else {\n        for (var e = 0; e < d.length && e < b.length; e++) if (!Td(b[e], d[e])) {\n          d = !1;\n          break a;\n        }\n        d = !0;\n      }\n      if (d) return c[0];\n    }\n  }\n  a = a();\n  V.memoizedState = [a, b];\n  return a;\n}\nfunction pe(a, b, c) {\n  if (25 <= ge) throw Error(q(301));\n  if (a === Ud) if ($d = !0, a = {\n    action: c,\n    next: null\n  }, null === fe && (fe = new Map()), c = fe.get(b), void 0 === c) fe.set(b, a);else {\n    for (b = c; null !== b.next;) b = b.next;\n    b.next = a;\n  }\n}\nfunction re() {\n  throw Error(q(394));\n}\nfunction se() {\n  throw Error(q(479));\n}\nfunction te(a) {\n  var b = de;\n  de += 1;\n  null === ee && (ee = []);\n  return Pd(ee, a, b);\n}\nfunction ue() {\n  throw Error(q(393));\n}\nfunction ve() {}\nvar xe = {\n    readContext: function (a) {\n      return a._currentValue2;\n    },\n    use: function (a) {\n      if (null !== a && "object" === typeof a) {\n        if ("function" === typeof a.then) return te(a);\n        if (a.$$typeof === Kc || a.$$typeof === Lc) return a._currentValue2;\n      }\n      throw Error(q(438, String(a)));\n    },\n    useContext: function (a) {\n      he();\n      return a._currentValue2;\n    },\n    useMemo: qe,\n    useReducer: oe,\n    useRef: function (a) {\n      Ud = he();\n      V = je();\n      var b = V.memoizedState;\n      return null === b ? (a = {\n        current: a\n      }, V.memoizedState = a) : b;\n    },\n    useState: function (a) {\n      return oe(ne, a);\n    },\n    useInsertionEffect: ve,\n    useLayoutEffect: ve,\n    useCallback: function (a, b) {\n      return qe(function () {\n        return a;\n      }, b);\n    },\n    useImperativeHandle: ve,\n    useEffect: ve,\n    useDebugValue: ve,\n    useDeferredValue: function (a) {\n      he();\n      return a;\n    },\n    useTransition: function () {\n      he();\n      return [!1, re];\n    },\n    useId: function () {\n      var a = Vd.treeContext;\n      var b = a.overflow;\n      a = a.id;\n      a = (a & ~(1 << 32 - Jd(a) - 1)).toString(32) + b;\n      var c = we;\n      if (null === c) throw Error(q(404));\n      b = ae++;\n      a = ":" + c.idPrefix + "R" + a;\n      0 < b && (a += "H" + b.toString(32));\n      return a + ":";\n    },\n    useSyncExternalStore: function (a, b, c) {\n      if (void 0 === c) throw Error(q(407));\n      return c();\n    },\n    useCacheRefresh: function () {\n      return ue;\n    },\n    useHostTransitionStatus: function () {\n      he();\n      return Ma;\n    },\n    useOptimistic: function (a) {\n      he();\n      return [a, se];\n    },\n    useFormState: function (a, b, c) {\n      he();\n      var d = be++,\n        e = Wd;\n      if ("function" === typeof a.$$FORM_ACTION) {\n        var f = null,\n          g = Xd;\n        e = e.formState;\n        var h = a.$$IS_SIGNATURE_EQUAL;\n        if (null !== e && "function" === typeof h) {\n          var k = e[1];\n          h.call(a, e[2], e[3]) && (f = void 0 !== c ? "p" + c : "k" + fa(JSON.stringify([g, null, d]), 0), k === f && (ce = d, b = e[0]));\n        }\n        var l = a.bind(null, b);\n        a = function (m) {\n          l(m);\n        };\n        "function" === typeof l.$$FORM_ACTION && (a.$$FORM_ACTION = function (m) {\n          m = l.$$FORM_ACTION(m);\n          void 0 !== c && (c += "", m.action = c);\n          var p = m.data;\n          p && (null === f && (f = void 0 !== c ? "p" + c : "k" + fa(JSON.stringify([g, null, d]), 0)), p.append("$ACTION_KEY", f));\n          return m;\n        });\n        return [b, a];\n      }\n      var n = a.bind(null, b);\n      return [b, function (m) {\n        n(m);\n      }];\n    }\n  },\n  we = null,\n  Ae = {\n    getCacheSignal: function () {\n      throw Error(q(248));\n    },\n    getCacheForType: function () {\n      throw Error(q(248));\n    }\n  },\n  Be = La.ReactCurrentDispatcher,\n  Ce = La.ReactCurrentCache;\nfunction De(a) {\n  console.error(a);\n  return null;\n}\nfunction Ee() {}\nfunction Fe(a, b, c, d, e, f, g, h, k, l, n, m) {\n  Na.current = kb;\n  var p = [],\n    r = new Set();\n  b = {\n    destination: null,\n    flushScheduled: !1,\n    resumableState: b,\n    renderState: c,\n    rootFormatContext: d,\n    progressiveChunkSize: void 0 === e ? 12800 : e,\n    status: 0,\n    fatalError: null,\n    nextSegmentId: 0,\n    allPendingTasks: 0,\n    pendingRootTasks: 0,\n    completedRootSegment: null,\n    abortableTasks: r,\n    pingedTasks: p,\n    clientRenderedBoundaries: [],\n    completedBoundaries: [],\n    partialBoundaries: [],\n    trackedPostpones: null,\n    onError: void 0 === f ? De : f,\n    onPostpone: void 0 === n ? Ee : n,\n    onAllReady: void 0 === g ? Ee : g,\n    onShellReady: void 0 === h ? Ee : h,\n    onShellError: void 0 === k ? Ee : k,\n    onFatalError: void 0 === l ? Ee : l,\n    formState: void 0 === m ? null : m\n  };\n  c = Ge(b, 0, null, d, !1, !1);\n  c.parentFlushed = !0;\n  a = He(b, null, a, -1, null, c, r, null, d, wd, null, Hd, null);\n  p.push(a);\n  return b;\n}\nvar U = null;\nfunction Ie(a, b) {\n  a.pingedTasks.push(b);\n  1 === a.pingedTasks.length && (a.flushScheduled = null !== a.destination, Je(a));\n}\nfunction Ke(a, b) {\n  return {\n    status: 0,\n    rootSegmentID: -1,\n    parentFlushed: !1,\n    pendingTasks: 0,\n    completedSegments: [],\n    byteSize: 0,\n    fallbackAbortableTasks: b,\n    errorDigest: null,\n    resources: {\n      styles: new Set(),\n      stylesheets: new Set()\n    },\n    trackedContentKeyPath: null,\n    trackedFallbackNode: null\n  };\n}\nfunction He(a, b, c, d, e, f, g, h, k, l, n, m, p) {\n  a.allPendingTasks++;\n  null === e ? a.pendingRootTasks++ : e.pendingTasks++;\n  var r = {\n    replay: null,\n    node: c,\n    childIndex: d,\n    ping: function () {\n      return Ie(a, r);\n    },\n    blockedBoundary: e,\n    blockedSegment: f,\n    abortSet: g,\n    keyPath: h,\n    formatContext: k,\n    legacyContext: l,\n    context: n,\n    treeContext: m,\n    componentStack: p,\n    thenableState: b\n  };\n  g.add(r);\n  return r;\n}\nfunction Le(a, b, c, d, e, f, g, h, k, l, n, m, p) {\n  a.allPendingTasks++;\n  null === f ? a.pendingRootTasks++ : f.pendingTasks++;\n  c.pendingTasks++;\n  var r = {\n    replay: c,\n    node: d,\n    childIndex: e,\n    ping: function () {\n      return Ie(a, r);\n    },\n    blockedBoundary: f,\n    blockedSegment: null,\n    abortSet: g,\n    keyPath: h,\n    formatContext: k,\n    legacyContext: l,\n    context: n,\n    treeContext: m,\n    componentStack: p,\n    thenableState: b\n  };\n  g.add(r);\n  return r;\n}\nfunction Ge(a, b, c, d, e, f) {\n  return {\n    status: 0,\n    id: -1,\n    index: b,\n    parentFlushed: !1,\n    chunks: [],\n    children: [],\n    parentFormatContext: d,\n    boundary: c,\n    lastPushedText: e,\n    textEmbedded: f\n  };\n}\nfunction Me(a, b) {\n  return {\n    tag: 0,\n    parent: a.componentStack,\n    type: b\n  };\n}\nfunction Ne(a, b) {\n  if (b && null !== a.trackedPostpones) {\n    try {\n      a = "";\n      do {\n        switch (b.tag) {\n          case 0:\n            a += td(b.type, null, null);\n            break;\n          case 1:\n            a += vd(b.type, !1);\n            break;\n          case 2:\n            a += vd(b.type, !0);\n        }\n        b = b.parent;\n      } while (b);\n      var c = a;\n    } catch (d) {\n      c = "\\nError generating stack: " + d.message + "\\n" + d.stack;\n    }\n    c = {\n      componentStack: c\n    };\n  } else c = {};\n  return c;\n}\nfunction X(a, b, c) {\n  a = a.onError(b, c);\n  if (null == a || "string" === typeof a) return a;\n}\nfunction Oe(a, b) {\n  var c = a.onShellError;\n  c(b);\n  c = a.onFatalError;\n  c(b);\n  null !== a.destination ? (a.status = 2, a.destination.destroy(b)) : (a.status = 1, a.fatalError = b);\n}\nfunction Pe(a, b, c, d, e) {\n  var f = d.render(),\n    g = e.childContextTypes;\n  if (null !== g && void 0 !== g) {\n    c = b.legacyContext;\n    if ("function" !== typeof d.getChildContext) e = c;else {\n      d = d.getChildContext();\n      for (var h in d) if (!(h in g)) throw Error(q(108, rd(e) || "Unknown", h));\n      e = v({}, c, d);\n    }\n    b.legacyContext = e;\n    Y(a, b, null, f, -1);\n    b.legacyContext = c;\n  } else e = b.keyPath, b.keyPath = c, Y(a, b, null, f, -1), b.keyPath = e;\n}\nfunction Qe(a, b, c, d, e, f, g) {\n  var h = !1;\n  if (0 !== f && null !== a.formState) {\n    var k = b.blockedSegment;\n    if (null !== k) {\n      h = !0;\n      k = k.chunks;\n      for (var l = 0; l < f; l++) l === g ? k.push("\\x3c!--F!--\\x3e") : k.push("\\x3c!--F--\\x3e");\n    }\n  }\n  f = b.keyPath;\n  b.keyPath = c;\n  e ? (c = b.treeContext, b.treeContext = Id(c, 1, 0), Re(a, b, d, -1), b.treeContext = c) : h ? Re(a, b, d, -1) : Y(a, b, null, d, -1);\n  b.keyPath = f;\n}\nfunction Se(a, b) {\n  if (a && a.defaultProps) {\n    b = v({}, b);\n    a = a.defaultProps;\n    for (var c in a) void 0 === b[c] && (b[c] = a[c]);\n    return b;\n  }\n  return b;\n}\nfunction Te(a, b, c, d, e, f, g) {\n  if ("function" === typeof e) {\n    if (e.prototype && e.prototype.isReactComponent) {\n      d = b.componentStack;\n      b.componentStack = {\n        tag: 2,\n        parent: b.componentStack,\n        type: e\n      };\n      g = xd(e, b.legacyContext);\n      var h = e.contextType;\n      h = new e(f, "object" === typeof h && null !== h ? h._currentValue2 : g);\n      Gd(h, e, f, g);\n      Pe(a, b, c, h, e);\n      b.componentStack = d;\n    } else {\n      g = xd(e, b.legacyContext);\n      h = b.componentStack;\n      b.componentStack = {\n        tag: 1,\n        parent: b.componentStack,\n        type: e\n      };\n      Ud = {};\n      Vd = b;\n      Wd = a;\n      Xd = c;\n      be = ae = 0;\n      ce = -1;\n      de = 0;\n      ee = d;\n      d = e(f, g);\n      d = ke(e, f, d, g);\n      var k = 0 !== ae,\n        l = be,\n        n = ce;\n      "object" === typeof d && null !== d && "function" === typeof d.render && void 0 === d.$$typeof ? (Gd(d, e, f, g), Pe(a, b, c, d, e)) : Qe(a, b, c, d, k, l, n);\n      b.componentStack = h;\n    }\n  } else if ("string" === typeof e) {\n    d = b.componentStack;\n    b.componentStack = Me(b, e);\n    g = b.blockedSegment;\n    if (null === g) g = f.children, h = b.formatContext, k = b.keyPath, b.formatContext = ob(h, e, f), b.keyPath = c, Re(a, b, g, -1), b.formatContext = h, b.keyPath = k;else {\n      k = Qb(g.chunks, e, f, a.resumableState, a.renderState, b.formatContext, g.lastPushedText);\n      g.lastPushedText = !1;\n      h = b.formatContext;\n      l = b.keyPath;\n      b.formatContext = ob(h, e, f);\n      b.keyPath = c;\n      Re(a, b, k, -1);\n      b.formatContext = h;\n      b.keyPath = l;\n      a: {\n        c = g.chunks;\n        a = a.resumableState;\n        switch (e) {\n          case "title":\n          case "style":\n          case "script":\n          case "area":\n          case "base":\n          case "br":\n          case "col":\n          case "embed":\n          case "hr":\n          case "img":\n          case "input":\n          case "keygen":\n          case "link":\n          case "meta":\n          case "param":\n          case "source":\n          case "track":\n          case "wbr":\n            break a;\n          case "body":\n            if (1 >= h.insertionMode) {\n              a.hasBody = !0;\n              break a;\n            }\n            break;\n          case "html":\n            if (0 === h.insertionMode) {\n              a.hasHtml = !0;\n              break a;\n            }\n        }\n        c.push(Lb(e));\n      }\n      g.lastPushedText = !1;\n    }\n    b.componentStack = d;\n  } else {\n    switch (e) {\n      case nd:\n      case ld:\n      case Hc:\n      case Ic:\n      case Gc:\n        e = b.keyPath;\n        b.keyPath = c;\n        Y(a, b, null, f.children, -1);\n        b.keyPath = e;\n        return;\n      case md:\n        "hidden" !== f.mode && (e = b.keyPath, b.keyPath = c, Y(a, b, null, f.children, -1), b.keyPath = e);\n        return;\n      case Oc:\n        e = b.componentStack;\n        b.componentStack = Me(b, "SuspenseList");\n        d = b.keyPath;\n        b.keyPath = c;\n        Y(a, b, null, f.children, -1);\n        b.keyPath = d;\n        b.componentStack = e;\n        return;\n      case kd:\n        throw Error(q(343));\n      case Nc:\n        a: if (null !== b.replay) {\n          e = b.keyPath;\n          b.keyPath = c;\n          c = f.children;\n          try {\n            Re(a, b, c, -1);\n          } finally {\n            b.keyPath = e;\n          }\n        } else {\n          var m = b.componentStack;\n          e = b.componentStack = Me(b, "Suspense");\n          var p = b.keyPath;\n          d = b.blockedBoundary;\n          var r = b.blockedSegment;\n          g = f.fallback;\n          var D = f.children;\n          f = new Set();\n          l = Ke(a, f);\n          null !== a.trackedPostpones && (l.trackedContentKeyPath = c);\n          n = Ge(a, r.chunks.length, l, b.formatContext, !1, !1);\n          r.children.push(n);\n          r.lastPushedText = !1;\n          var A = Ge(a, 0, null, b.formatContext, !1, !1);\n          A.parentFlushed = !0;\n          b.blockedBoundary = l;\n          b.blockedSegment = A;\n          a.renderState.boundaryResources = l.resources;\n          b.keyPath = c;\n          try {\n            if (Re(a, b, D, -1), a.renderState.generateStaticMarkup || A.lastPushedText && A.textEmbedded && A.chunks.push("\\x3c!-- --\\x3e"), A.status = 1, Ue(l, A), 0 === l.pendingTasks && 0 === l.status) {\n              l.status = 1;\n              b.componentStack = m;\n              break a;\n            }\n          } catch (B) {\n            A.status = 4, l.status = 4, h = Ne(a, b.componentStack), k = X(a, B, h), l.errorDigest = k;\n          } finally {\n            a.renderState.boundaryResources = d ? d.resources : null, b.blockedBoundary = d, b.blockedSegment = r, b.keyPath = p, b.componentStack = m;\n          }\n          h = [c[0], "Suspense Fallback", c[2]];\n          k = a.trackedPostpones;\n          null !== k && (m = [h[1], h[2], [], null], k.workingMap.set(h, m), 5 === l.status ? k.workingMap.get(c)[4] = m : l.trackedFallbackNode = m);\n          b = He(a, null, g, -1, d, n, f, h, b.formatContext, b.legacyContext, b.context, b.treeContext, e);\n          a.pingedTasks.push(b);\n        }\n        return;\n    }\n    if ("object" === typeof e && null !== e) switch (e.$$typeof) {\n      case Mc:\n        h = b.componentStack;\n        b.componentStack = {\n          tag: 1,\n          parent: b.componentStack,\n          type: e.render\n        };\n        e = e.render;\n        Ud = {};\n        Vd = b;\n        Wd = a;\n        Xd = c;\n        be = ae = 0;\n        ce = -1;\n        de = 0;\n        ee = d;\n        d = e(f, g);\n        f = ke(e, f, d, g);\n        Qe(a, b, c, f, 0 !== ae, be, ce);\n        b.componentStack = h;\n        return;\n      case Pc:\n        e = e.type;\n        f = Se(e, f);\n        Te(a, b, c, d, e, f, g);\n        return;\n      case Jc:\n        g = f.children;\n        d = b.keyPath;\n        e = e._context;\n        f = f.value;\n        h = e._currentValue2;\n        e._currentValue2 = f;\n        k = yd;\n        yd = f = {\n          parent: k,\n          depth: null === k ? 0 : k.depth + 1,\n          context: e,\n          parentValue: h,\n          value: f\n        };\n        b.context = f;\n        b.keyPath = c;\n        Y(a, b, null, g, -1);\n        a = yd;\n        if (null === a) throw Error(q(403));\n        c = a.parentValue;\n        a.context._currentValue2 = c === pd ? a.context._defaultValue : c;\n        a = yd = a.parent;\n        b.context = a;\n        b.keyPath = d;\n        return;\n      case Kc:\n        f = f.children;\n        f = f(e._currentValue2);\n        e = b.keyPath;\n        b.keyPath = c;\n        Y(a, b, null, f, -1);\n        b.keyPath = e;\n        return;\n      case jd:\n        g = b.componentStack;\n        b.componentStack = Me(b, "Lazy");\n        h = e._init;\n        e = h(e._payload);\n        f = Se(e, f);\n        Te(a, b, c, d, e, f, void 0);\n        b.componentStack = g;\n        return;\n    }\n    throw Error(q(130, null == e ? e : typeof e, ""));\n  }\n}\nfunction Ve(a, b, c, d, e) {\n  var f = b.replay,\n    g = b.blockedBoundary,\n    h = Ge(a, 0, null, b.formatContext, !1, !1);\n  h.id = c;\n  h.parentFlushed = !0;\n  try {\n    b.replay = null, b.blockedSegment = h, Re(a, b, d, e), h.status = 1, null === g ? a.completedRootSegment = h : (Ue(g, h), g.parentFlushed && a.partialBoundaries.push(g));\n  } finally {\n    b.replay = f, b.blockedSegment = null;\n  }\n}\nfunction Y(a, b, c, d, e) {\n  if (null !== b.replay && "number" === typeof b.replay.slots) Ve(a, b, b.replay.slots, d, e);else {\n    b.node = d;\n    b.childIndex = e;\n    if ("object" === typeof d && null !== d) {\n      switch (d.$$typeof) {\n        case Ec:\n          var f = d.type,\n            g = d.key,\n            h = d.props,\n            k = d.ref,\n            l = rd(f),\n            n = null == g ? -1 === e ? 0 : e : g;\n          g = [b.keyPath, l, n];\n          if (null !== b.replay) a: {\n            var m = b.replay;\n            e = m.nodes;\n            for (d = 0; d < e.length; d++) {\n              var p = e[d];\n              if (n === p[1]) {\n                if (4 === p.length) {\n                  if (null !== l && l !== p[0]) throw Error(q(490, p[0], l));\n                  var r = p[2];\n                  l = p[3];\n                  p = b.node;\n                  b.replay = {\n                    nodes: r,\n                    slots: l,\n                    pendingTasks: 1\n                  };\n                  try {\n                    Te(a, b, g, c, f, h, k);\n                    if (1 === b.replay.pendingTasks && 0 < b.replay.nodes.length) throw Error(q(488));\n                    b.replay.pendingTasks--;\n                  } catch (w) {\n                    if ("object" === typeof w && null !== w && (w === Nd || "function" === typeof w.then)) throw b.node === p && (b.replay = m), w;\n                    b.replay.pendingTasks--;\n                    h = Ne(a, b.componentStack);\n                    g = a;\n                    a = b.blockedBoundary;\n                    c = w;\n                    h = X(g, c, h);\n                    We(g, a, r, l, c, h);\n                  }\n                  b.replay = m;\n                } else {\n                  if (f !== Nc) throw Error(q(490, "Suspense", rd(f) || "Unknown"));\n                  b: {\n                    m = void 0;\n                    c = p[5];\n                    f = p[2];\n                    k = p[3];\n                    l = null === p[4] ? [] : p[4][2];\n                    p = null === p[4] ? null : p[4][3];\n                    n = b.componentStack;\n                    var D = b.componentStack = Me(b, "Suspense"),\n                      A = b.keyPath,\n                      B = b.replay,\n                      u = b.blockedBoundary,\n                      t = h.children;\n                    h = h.fallback;\n                    var E = new Set(),\n                      x = Ke(a, E);\n                    x.parentFlushed = !0;\n                    x.rootSegmentID = c;\n                    b.blockedBoundary = x;\n                    b.replay = {\n                      nodes: f,\n                      slots: k,\n                      pendingTasks: 1\n                    };\n                    a.renderState.boundaryResources = x.resources;\n                    try {\n                      Re(a, b, t, -1);\n                      if (1 === b.replay.pendingTasks && 0 < b.replay.nodes.length) throw Error(q(488));\n                      b.replay.pendingTasks--;\n                      if (0 === x.pendingTasks && 0 === x.status) {\n                        x.status = 1;\n                        a.completedBoundaries.push(x);\n                        break b;\n                      }\n                    } catch (w) {\n                      x.status = 4, r = Ne(a, b.componentStack), m = X(a, w, r), x.errorDigest = m, b.replay.pendingTasks--, a.clientRenderedBoundaries.push(x);\n                    } finally {\n                      a.renderState.boundaryResources = u ? u.resources : null, b.blockedBoundary = u, b.replay = B, b.keyPath = A, b.componentStack = n;\n                    }\n                    b = Le(a, null, {\n                      nodes: l,\n                      slots: p,\n                      pendingTasks: 0\n                    }, h, -1, u, E, [g[0], "Suspense Fallback", g[2]], b.formatContext, b.legacyContext, b.context, b.treeContext, D);\n                    a.pingedTasks.push(b);\n                  }\n                }\n                e.splice(d, 1);\n                break a;\n              }\n            }\n          } else Te(a, b, g, c, f, h, k);\n          return;\n        case Fc:\n          throw Error(q(257));\n        case jd:\n          h = b.componentStack;\n          b.componentStack = Me(b, "Lazy");\n          g = d._init;\n          d = g(d._payload);\n          b.componentStack = h;\n          Y(a, b, null, d, e);\n          return;\n      }\n      if (Ka(d)) {\n        Xe(a, b, d, e);\n        return;\n      }\n      null === d || "object" !== typeof d ? h = null : (h = qd && d[qd] || d["@@iterator"], h = "function" === typeof h ? h : null);\n      if (h && (h = h.call(d))) {\n        d = h.next();\n        if (!d.done) {\n          g = [];\n          do g.push(d.value), d = h.next(); while (!d.done);\n          Xe(a, b, g, e);\n        }\n        return;\n      }\n      if ("function" === typeof d.then) return Y(a, b, null, te(d), e);\n      if (d.$$typeof === Kc || d.$$typeof === Lc) return Y(a, b, null, d._currentValue2, e);\n      e = Object.prototype.toString.call(d);\n      throw Error(q(31, "[object Object]" === e ? "object with keys {" + Object.keys(d).join(", ") + "}" : e));\n    }\n    "string" === typeof d ? (e = b.blockedSegment, null !== e && (e.lastPushedText = Dc(e.chunks, d, a.renderState, e.lastPushedText))) : "number" === typeof d && (e = b.blockedSegment, null !== e && (e.lastPushedText = Dc(e.chunks, "" + d, a.renderState, e.lastPushedText)));\n  }\n}\nfunction Xe(a, b, c, d) {\n  var e = b.keyPath;\n  if (-1 !== d && (b.keyPath = [b.keyPath, "Fragment", d], null !== b.replay)) {\n    for (var f = b.replay, g = f.nodes, h = 0; h < g.length; h++) {\n      var k = g[h];\n      if (k[1] === d) {\n        d = k[2];\n        k = k[3];\n        b.replay = {\n          nodes: d,\n          slots: k,\n          pendingTasks: 1\n        };\n        try {\n          Xe(a, b, c, -1);\n          if (1 === b.replay.pendingTasks && 0 < b.replay.nodes.length) throw Error(q(488));\n          b.replay.pendingTasks--;\n        } catch (m) {\n          if ("object" === typeof m && null !== m && (m === Nd || "function" === typeof m.then)) throw m;\n          b.replay.pendingTasks--;\n          c = Ne(a, b.componentStack);\n          var l = b.blockedBoundary,\n            n = m;\n          c = X(a, n, c);\n          We(a, l, d, k, n, c);\n        }\n        b.replay = f;\n        g.splice(h, 1);\n        break;\n      }\n    }\n    b.keyPath = e;\n    return;\n  }\n  f = b.treeContext;\n  g = c.length;\n  if (null !== b.replay && (h = b.replay.slots, null !== h && "object" === typeof h)) {\n    for (d = 0; d < g; d++) k = c[d], b.treeContext = Id(f, g, d), l = h[d], "number" === typeof l ? (Ve(a, b, l, k, d), delete h[d]) : Re(a, b, k, d);\n    b.treeContext = f;\n    b.keyPath = e;\n    return;\n  }\n  for (h = 0; h < g; h++) d = c[h], b.treeContext = Id(f, g, h), Re(a, b, d, h);\n  b.treeContext = f;\n  b.keyPath = e;\n}\nfunction Re(a, b, c, d) {\n  var e = b.formatContext,\n    f = b.legacyContext,\n    g = b.context,\n    h = b.keyPath,\n    k = b.treeContext,\n    l = b.componentStack,\n    n = b.blockedSegment;\n  if (null === n) try {\n    return Y(a, b, null, c, d);\n  } catch (r) {\n    if (le(), c = r === Nd ? Rd() : r, "object" === typeof c && null !== c && "function" === typeof c.then) {\n      d = me();\n      a = Le(a, d, b.replay, b.node, b.childIndex, b.blockedBoundary, b.abortSet, b.keyPath, b.formatContext, b.legacyContext, b.context, b.treeContext, null !== b.componentStack ? b.componentStack.parent : null).ping;\n      c.then(a, a);\n      b.formatContext = e;\n      b.legacyContext = f;\n      b.context = g;\n      b.keyPath = h;\n      b.treeContext = k;\n      b.componentStack = l;\n      Ed(g);\n      return;\n    }\n  } else {\n    var m = n.children.length,\n      p = n.chunks.length;\n    try {\n      return Y(a, b, null, c, d);\n    } catch (r) {\n      if (le(), n.children.length = m, n.chunks.length = p, c = r === Nd ? Rd() : r, "object" === typeof c && null !== c && "function" === typeof c.then) {\n        d = me();\n        n = b.blockedSegment;\n        m = Ge(a, n.chunks.length, null, b.formatContext, n.lastPushedText, !0);\n        n.children.push(m);\n        n.lastPushedText = !1;\n        a = He(a, d, b.node, b.childIndex, b.blockedBoundary, m, b.abortSet, b.keyPath, b.formatContext, b.legacyContext, b.context, b.treeContext, null !== b.componentStack ? b.componentStack.parent : null).ping;\n        c.then(a, a);\n        b.formatContext = e;\n        b.legacyContext = f;\n        b.context = g;\n        b.keyPath = h;\n        b.treeContext = k;\n        b.componentStack = l;\n        Ed(g);\n        return;\n      }\n    }\n  }\n  b.formatContext = e;\n  b.legacyContext = f;\n  b.context = g;\n  b.keyPath = h;\n  b.treeContext = k;\n  Ed(g);\n  throw c;\n}\nfunction Ye(a) {\n  var b = a.blockedBoundary;\n  a = a.blockedSegment;\n  null !== a && (a.status = 3, Ze(this, b, a));\n}\nfunction We(a, b, c, d, e, f) {\n  for (var g = 0; g < c.length; g++) {\n    var h = c[g];\n    if (4 === h.length) We(a, b, h[2], h[3], e, f);else {\n      h = h[5];\n      var k = a,\n        l = f,\n        n = Ke(k, new Set());\n      n.parentFlushed = !0;\n      n.rootSegmentID = h;\n      n.status = 4;\n      n.errorDigest = l;\n      n.parentFlushed && k.clientRenderedBoundaries.push(n);\n    }\n  }\n  c.length = 0;\n  if (null !== d) {\n    if (null === b) throw Error(q(487));\n    4 !== b.status && (b.status = 4, b.errorDigest = f, b.parentFlushed && a.clientRenderedBoundaries.push(b));\n    if ("object" === typeof d) for (var m in d) delete d[m];\n  }\n}\nfunction $e(a, b, c) {\n  var d = a.blockedBoundary,\n    e = a.blockedSegment;\n  null !== e && (e.status = 3);\n  if (null === d) {\n    if (d = {}, 1 !== b.status && 2 !== b.status) {\n      a = a.replay;\n      if (null === a) {\n        X(b, c, d);\n        Oe(b, c);\n        return;\n      }\n      a.pendingTasks--;\n      0 === a.pendingTasks && 0 < a.nodes.length && (d = X(b, c, d), We(b, null, a.nodes, a.slots, c, d));\n      b.pendingRootTasks--;\n      0 === b.pendingRootTasks && af(b);\n    }\n  } else d.pendingTasks--, 4 !== d.status && (d.status = 4, a = Ne(b, a.componentStack), a = X(b, c, a), d.errorDigest = a, d.parentFlushed && b.clientRenderedBoundaries.push(d)), d.fallbackAbortableTasks.forEach(function (f) {\n    return $e(f, b, c);\n  }), d.fallbackAbortableTasks.clear();\n  b.allPendingTasks--;\n  0 === b.allPendingTasks && bf(b);\n}\nfunction cf(a, b) {\n  try {\n    var c = a.renderState,\n      d = c.onHeaders;\n    if (d) {\n      var e = c.headers;\n      if (e) {\n        c.headers = null;\n        var f = e.preconnects;\n        e.fontPreloads && (f && (f += ", "), f += e.fontPreloads);\n        e.highImagePreloads && (f && (f += ", "), f += e.highImagePreloads);\n        if (!b) {\n          var g = c.styles.values(),\n            h = g.next();\n          b: for (; 0 < e.remainingCapacity && !h.done; h = g.next()) for (var k = h.value.sheets.values(), l = k.next(); 0 < e.remainingCapacity && !l.done; l = k.next()) {\n            var n = l.value,\n              m = n.props,\n              p = m.href,\n              r = n.props,\n              D = Rb(r.href, "style", {\n                crossOrigin: r.crossOrigin,\n                integrity: r.integrity,\n                nonce: r.nonce,\n                type: r.type,\n                fetchPriority: r.fetchPriority,\n                referrerPolicy: r.referrerPolicy,\n                media: r.media\n              });\n            if (2 <= (e.remainingCapacity -= D.length)) c.resets.style[p] = C, f && (f += ", "), f += D, c.resets.style[p] = "string" === typeof m.crossOrigin || "string" === typeof m.integrity ? [m.crossOrigin, m.integrity] : C;else break b;\n          }\n        }\n        f ? d({\n          Link: f\n        }) : d({});\n      }\n    }\n  } catch (A) {\n    X(a, A, {});\n  }\n}\nfunction af(a) {\n  null === a.trackedPostpones && cf(a, !0);\n  a.onShellError = Ee;\n  a = a.onShellReady;\n  a();\n}\nfunction bf(a) {\n  cf(a, null === a.trackedPostpones ? !0 : null === a.completedRootSegment || 5 !== a.completedRootSegment.status);\n  a = a.onAllReady;\n  a();\n}\nfunction Ue(a, b) {\n  if (0 === b.chunks.length && 1 === b.children.length && null === b.children[0].boundary && -1 === b.children[0].id) {\n    var c = b.children[0];\n    c.id = b.id;\n    c.parentFlushed = !0;\n    1 === c.status && Ue(a, c);\n  } else a.completedSegments.push(b);\n}\nfunction Ze(a, b, c) {\n  if (null === b) {\n    if (null !== c && c.parentFlushed) {\n      if (null !== a.completedRootSegment) throw Error(q(389));\n      a.completedRootSegment = c;\n    }\n    a.pendingRootTasks--;\n    0 === a.pendingRootTasks && af(a);\n  } else b.pendingTasks--, 4 !== b.status && (0 === b.pendingTasks ? (0 === b.status && (b.status = 1), null !== c && c.parentFlushed && 1 === c.status && Ue(b, c), b.parentFlushed && a.completedBoundaries.push(b), 1 === b.status && (b.fallbackAbortableTasks.forEach(Ye, a), b.fallbackAbortableTasks.clear())) : null !== c && c.parentFlushed && 1 === c.status && (Ue(b, c), 1 === b.completedSegments.length && b.parentFlushed && a.partialBoundaries.push(b)));\n  a.allPendingTasks--;\n  0 === a.allPendingTasks && bf(a);\n}\nfunction Je(a) {\n  if (2 !== a.status) {\n    var b = yd,\n      c = Be.current;\n    Be.current = xe;\n    var d = Ce.current;\n    Ce.current = Ae;\n    var e = U;\n    U = a;\n    var f = we;\n    we = a.resumableState;\n    try {\n      var g = a.pingedTasks,\n        h;\n      for (h = 0; h < g.length; h++) {\n        var k = g[h],\n          l = a,\n          n = k.blockedBoundary;\n        l.renderState.boundaryResources = n ? n.resources : null;\n        var m = k.blockedSegment;\n        if (null === m) {\n          var p = l;\n          if (0 !== k.replay.pendingTasks) {\n            Ed(k.context);\n            try {\n              var r = k.thenableState;\n              k.thenableState = null;\n              Y(p, k, r, k.node, k.childIndex);\n              if (1 === k.replay.pendingTasks && 0 < k.replay.nodes.length) throw Error(q(488));\n              k.replay.pendingTasks--;\n              k.abortSet.delete(k);\n              Ze(p, k.blockedBoundary, null);\n            } catch (I) {\n              le();\n              var D = I === Nd ? Rd() : I;\n              if ("object" === typeof D && null !== D && "function" === typeof D.then) {\n                var A = k.ping;\n                D.then(A, A);\n                k.thenableState = me();\n              } else {\n                k.replay.pendingTasks--;\n                k.abortSet.delete(k);\n                var B = Ne(p, k.componentStack);\n                l = void 0;\n                var u = p,\n                  t = k.blockedBoundary,\n                  E = D,\n                  x = k.replay.nodes,\n                  w = k.replay.slots;\n                l = X(u, E, B);\n                We(u, t, x, w, E, l);\n                p.pendingRootTasks--;\n                0 === p.pendingRootTasks && af(p);\n                p.allPendingTasks--;\n                0 === p.allPendingTasks && bf(p);\n              }\n            } finally {\n              p.renderState.boundaryResources = null;\n            }\n          }\n        } else if (p = void 0, u = m, 0 === u.status) {\n          Ed(k.context);\n          var F = u.children.length,\n            Q = u.chunks.length;\n          try {\n            var G = k.thenableState;\n            k.thenableState = null;\n            Y(l, k, G, k.node, k.childIndex);\n            l.renderState.generateStaticMarkup || u.lastPushedText && u.textEmbedded && u.chunks.push("\\x3c!-- --\\x3e");\n            k.abortSet.delete(k);\n            u.status = 1;\n            Ze(l, k.blockedBoundary, u);\n          } catch (I) {\n            le();\n            u.children.length = F;\n            u.chunks.length = Q;\n            var W = I === Nd ? Rd() : I;\n            if ("object" === typeof W && null !== W && "function" === typeof W.then) {\n              var na = k.ping;\n              W.then(na, na);\n              k.thenableState = me();\n            } else {\n              var ha = Ne(l, k.componentStack);\n              k.abortSet.delete(k);\n              u.status = 4;\n              var R = k.blockedBoundary;\n              p = X(l, W, ha);\n              null === R ? Oe(l, W) : (R.pendingTasks--, 4 !== R.status && (R.status = 4, R.errorDigest = p, R.parentFlushed && l.clientRenderedBoundaries.push(R)));\n              l.allPendingTasks--;\n              0 === l.allPendingTasks && bf(l);\n            }\n          } finally {\n            l.renderState.boundaryResources = null;\n          }\n        }\n      }\n      g.splice(0, h);\n      null !== a.destination && df(a, a.destination);\n    } catch (I) {\n      X(a, I, {}), Oe(a, I);\n    } finally {\n      we = f, Be.current = c, Ce.current = d, c === xe && Ed(b), U = e;\n    }\n  }\n}\nfunction ef(a, b, c) {\n  c.parentFlushed = !0;\n  switch (c.status) {\n    case 0:\n      c.id = a.nextSegmentId++;\n    case 5:\n      var d = c.id;\n      c.lastPushedText = !1;\n      c.textEmbedded = !1;\n      a = a.renderState;\n      b.push(\'<template id="\');\n      b.push(a.placeholderPrefix);\n      a = d.toString(16);\n      b.push(a);\n      return b.push(\'"></template>\');\n    case 1:\n      c.status = 2;\n      var e = !0;\n      d = c.chunks;\n      var f = 0;\n      c = c.children;\n      for (var g = 0; g < c.length; g++) {\n        for (e = c[g]; f < e.index; f++) b.push(d[f]);\n        e = ff(a, b, e);\n      }\n      for (; f < d.length - 1; f++) b.push(d[f]);\n      f < d.length && (e = b.push(d[f]));\n      return e;\n    default:\n      throw Error(q(390));\n  }\n}\nfunction ff(a, b, c) {\n  var d = c.boundary;\n  if (null === d) return ef(a, b, c);\n  d.parentFlushed = !0;\n  if (4 === d.status) return a.renderState.generateStaticMarkup || (d = d.errorDigest, b.push("\\x3c!--$!--\\x3e"), b.push("<template"), d && (b.push(\' data-dgst="\'), d = z(d), b.push(d), b.push(\'"\')), b.push("></template>")), ef(a, b, c), a = a.renderState.generateStaticMarkup ? !0 : b.push("\\x3c!--/$--\\x3e"), a;\n  if (1 !== d.status) return 0 === d.status && (d.rootSegmentID = a.nextSegmentId++), 0 < d.completedSegments.length && a.partialBoundaries.push(d), Ub(b, a.renderState, d.rootSegmentID), ef(a, b, c), b.push("\\x3c!--/$--\\x3e");\n  if (d.byteSize > a.progressiveChunkSize) return d.rootSegmentID = a.nextSegmentId++, a.completedBoundaries.push(d), Ub(b, a.renderState, d.rootSegmentID), ef(a, b, c), b.push("\\x3c!--/$--\\x3e");\n  c = d.resources;\n  var e = a.renderState.boundaryResources;\n  e && (c.styles.forEach(Ac, e), c.stylesheets.forEach(Bc, e));\n  a.renderState.generateStaticMarkup || b.push("\\x3c!--$--\\x3e");\n  c = d.completedSegments;\n  if (1 !== c.length) throw Error(q(391));\n  ff(a, b, c[0]);\n  a = a.renderState.generateStaticMarkup ? !0 : b.push("\\x3c!--/$--\\x3e");\n  return a;\n}\nfunction gf(a, b, c) {\n  Vb(b, a.renderState, c.parentFormatContext, c.id);\n  ff(a, b, c);\n  return Wb(b, c.parentFormatContext);\n}\nfunction hf(a, b, c) {\n  a.renderState.boundaryResources = c.resources;\n  for (var d = c.completedSegments, e = 0; e < d.length; e++) jf(a, b, c, d[e]);\n  d.length = 0;\n  nc(b, c.resources, a.renderState);\n  d = a.resumableState;\n  a = a.renderState;\n  e = c.rootSegmentID;\n  c = c.resources;\n  var f = a.stylesToHoist;\n  a.stylesToHoist = !1;\n  var g = 0 === d.streamingFormat;\n  g ? (b.push(a.startInlineScript), f ? 0 === (d.instructions & 2) ? (d.instructions |= 10, b.push(\'$RC=function(b,c,e){c=document.getElementById(c);c.parentNode.removeChild(c);var a=document.getElementById(b);if(a){b=a.previousSibling;if(e)b.data="$!",a.setAttribute("data-dgst",e);else{e=b.parentNode;a=b.nextSibling;var f=0;do{if(a&&8===a.nodeType){var d=a.data;if("/$"===d)if(0===f)break;else f--;else"$"!==d&&"$?"!==d&&"$!"!==d||f++}d=a.nextSibling;e.removeChild(a);a=d}while(a);for(;c.firstChild;)e.insertBefore(c.firstChild,a);b.data="$"}b._reactRetry&&b._reactRetry()}};$RM=new Map;\\n$RR=function(r,t,w){for(var u=$RC,n=$RM,p=new Map,q=document,g,b,h=q.querySelectorAll("link[data-precedence],style[data-precedence]"),v=[],k=0;b=h[k++];)"not all"===b.getAttribute("media")?v.push(b):("LINK"===b.tagName&&n.set(b.getAttribute("href"),b),p.set(b.dataset.precedence,g=b));b=0;h=[];var l,a;for(k=!0;;){if(k){var f=w[b++];if(!f){k=!1;b=0;continue}var c=!1,m=0;var d=f[m++];if(a=n.get(d)){var e=a._p;c=!0}else{a=q.createElement("link");a.href=d;a.rel="stylesheet";for(a.dataset.precedence=\\nl=f[m++];e=f[m++];)a.setAttribute(e,f[m++]);e=a._p=new Promise(function(x,y){a.onload=x;a.onerror=y});n.set(d,a)}d=a.getAttribute("media");!e||"l"===e.s||d&&!matchMedia(d).matches||h.push(e);if(c)continue}else{a=v[b++];if(!a)break;l=a.getAttribute("data-precedence");a.removeAttribute("media")}c=p.get(l)||g;c===g&&(g=a);p.set(l,a);c?c.parentNode.insertBefore(a,c.nextSibling):(c=q.head,c.insertBefore(a,c.firstChild))}Promise.all(h).then(u.bind(null,r,t,""),u.bind(null,r,t,"Resource failed to load"))};$RR("\')) : 0 === (d.instructions & 8) ? (d.instructions |= 8, b.push(\'$RM=new Map;\\n$RR=function(r,t,w){for(var u=$RC,n=$RM,p=new Map,q=document,g,b,h=q.querySelectorAll("link[data-precedence],style[data-precedence]"),v=[],k=0;b=h[k++];)"not all"===b.getAttribute("media")?v.push(b):("LINK"===b.tagName&&n.set(b.getAttribute("href"),b),p.set(b.dataset.precedence,g=b));b=0;h=[];var l,a;for(k=!0;;){if(k){var f=w[b++];if(!f){k=!1;b=0;continue}var c=!1,m=0;var d=f[m++];if(a=n.get(d)){var e=a._p;c=!0}else{a=q.createElement("link");a.href=d;a.rel="stylesheet";for(a.dataset.precedence=\\nl=f[m++];e=f[m++];)a.setAttribute(e,f[m++]);e=a._p=new Promise(function(x,y){a.onload=x;a.onerror=y});n.set(d,a)}d=a.getAttribute("media");!e||"l"===e.s||d&&!matchMedia(d).matches||h.push(e);if(c)continue}else{a=v[b++];if(!a)break;l=a.getAttribute("data-precedence");a.removeAttribute("media")}c=p.get(l)||g;c===g&&(g=a);p.set(l,a);c?c.parentNode.insertBefore(a,c.nextSibling):(c=q.head,c.insertBefore(a,c.firstChild))}Promise.all(h).then(u.bind(null,r,t,""),u.bind(null,r,t,"Resource failed to load"))};$RR("\')) : b.push(\'$RR("\') : 0 === (d.instructions & 2) ? (d.instructions |= 2, b.push(\'$RC=function(b,c,e){c=document.getElementById(c);c.parentNode.removeChild(c);var a=document.getElementById(b);if(a){b=a.previousSibling;if(e)b.data="$!",a.setAttribute("data-dgst",e);else{e=b.parentNode;a=b.nextSibling;var f=0;do{if(a&&8===a.nodeType){var d=a.data;if("/$"===d)if(0===f)break;else f--;else"$"!==d&&"$?"!==d&&"$!"!==d||f++}d=a.nextSibling;e.removeChild(a);a=d}while(a);for(;c.firstChild;)e.insertBefore(c.firstChild,a);b.data="$"}b._reactRetry&&b._reactRetry()}};$RC("\')) : b.push(\'$RC("\')) : f ? b.push(\'<template data-rri="" data-bid="\') : b.push(\'<template data-rci="" data-bid="\');\n  d = e.toString(16);\n  b.push(a.boundaryPrefix);\n  b.push(d);\n  g ? b.push(\'","\') : b.push(\'" data-sid="\');\n  b.push(a.segmentPrefix);\n  b.push(d);\n  f ? g ? (b.push(\'",\'), tc(b, c)) : (b.push(\'" data-sty="\'), uc(b, c)) : g && b.push(\'"\');\n  d = g ? b.push(")\\x3c/script>") : b.push(\'"></template>\');\n  return Tb(b, a) && d;\n}\nfunction jf(a, b, c, d) {\n  if (2 === d.status) return !0;\n  var e = d.id;\n  if (-1 === e) {\n    if (-1 === (d.id = c.rootSegmentID)) throw Error(q(392));\n    return gf(a, b, d);\n  }\n  if (e === c.rootSegmentID) return gf(a, b, d);\n  gf(a, b, d);\n  c = a.resumableState;\n  a = a.renderState;\n  (d = 0 === c.streamingFormat) ? (b.push(a.startInlineScript), 0 === (c.instructions & 1) ? (c.instructions |= 1, b.push(\'$RS=function(a,b){a=document.getElementById(a);b=document.getElementById(b);for(a.parentNode.removeChild(a);a.firstChild;)b.parentNode.insertBefore(a.firstChild,b);b.parentNode.removeChild(b)};$RS("\')) : b.push(\'$RS("\')) : b.push(\'<template data-rsi="" data-sid="\');\n  b.push(a.segmentPrefix);\n  e = e.toString(16);\n  b.push(e);\n  d ? b.push(\'","\') : b.push(\'" data-pid="\');\n  b.push(a.placeholderPrefix);\n  b.push(e);\n  b = d ? b.push(\'")\\x3c/script>\') : b.push(\'"></template>\');\n  return b;\n}\nfunction df(a, b) {\n  try {\n    var c,\n      d = a.completedRootSegment;\n    if (null !== d) if (5 !== d.status && 0 === a.pendingRootTasks) {\n      var e = a.renderState;\n      if ((0 !== a.allPendingTasks || null !== a.trackedPostpones) && e.externalRuntimeScript) {\n        var f = e.externalRuntimeScript,\n          g = a.resumableState,\n          h = f.src,\n          k = f.chunks;\n        g.scriptResources.hasOwnProperty(h) || (g.scriptResources[h] = null, e.scripts.add(k));\n      }\n      var l = e.htmlChunks,\n        n = e.headChunks;\n      f = 0;\n      if (l) {\n        for (f = 0; f < l.length; f++) b.push(l[f]);\n        if (n) for (f = 0; f < n.length; f++) b.push(n[f]);else {\n          var m = P("head");\n          b.push(m);\n          b.push(">");\n        }\n      } else if (n) for (f = 0; f < n.length; f++) b.push(n[f]);\n      var p = e.charsetChunks;\n      for (f = 0; f < p.length; f++) b.push(p[f]);\n      p.length = 0;\n      e.preconnects.forEach(S, b);\n      e.preconnects.clear();\n      var r = e.preconnectChunks;\n      for (f = 0; f < r.length; f++) b.push(r[f]);\n      r.length = 0;\n      e.fontPreloads.forEach(S, b);\n      e.fontPreloads.clear();\n      e.highImagePreloads.forEach(S, b);\n      e.highImagePreloads.clear();\n      e.styles.forEach(qc, b);\n      var D = e.importMapChunks;\n      for (f = 0; f < D.length; f++) b.push(D[f]);\n      D.length = 0;\n      e.bootstrapScripts.forEach(S, b);\n      e.scripts.forEach(S, b);\n      e.scripts.clear();\n      e.bulkPreloads.forEach(S, b);\n      e.bulkPreloads.clear();\n      var A = e.preloadChunks;\n      for (f = 0; f < A.length; f++) b.push(A[f]);\n      A.length = 0;\n      var B = e.hoistableChunks;\n      for (f = 0; f < B.length; f++) b.push(B[f]);\n      B.length = 0;\n      if (l && null === n) {\n        var u = Lb("head");\n        b.push(u);\n      }\n      ff(a, b, d);\n      a.completedRootSegment = null;\n      Tb(b, a.renderState);\n    } else return;\n    var t = a.renderState;\n    d = 0;\n    t.preconnects.forEach(S, b);\n    t.preconnects.clear();\n    var E = t.preconnectChunks;\n    for (d = 0; d < E.length; d++) b.push(E[d]);\n    E.length = 0;\n    t.fontPreloads.forEach(S, b);\n    t.fontPreloads.clear();\n    t.highImagePreloads.forEach(S, b);\n    t.highImagePreloads.clear();\n    t.styles.forEach(sc, b);\n    t.scripts.forEach(S, b);\n    t.scripts.clear();\n    t.bulkPreloads.forEach(S, b);\n    t.bulkPreloads.clear();\n    var x = t.preloadChunks;\n    for (d = 0; d < x.length; d++) b.push(x[d]);\n    x.length = 0;\n    var w = t.hoistableChunks;\n    for (d = 0; d < w.length; d++) b.push(w[d]);\n    w.length = 0;\n    var F = a.clientRenderedBoundaries;\n    for (c = 0; c < F.length; c++) {\n      var Q = F[c];\n      t = b;\n      var G = a.resumableState,\n        W = a.renderState,\n        na = Q.rootSegmentID,\n        ha = Q.errorDigest,\n        R = Q.errorMessage,\n        I = Q.errorComponentStack,\n        Z = 0 === G.streamingFormat;\n      Z ? (t.push(W.startInlineScript), 0 === (G.instructions & 4) ? (G.instructions |= 4, t.push(\'$RX=function(b,c,d,e){var a=document.getElementById(b);a&&(b=a.previousSibling,b.data="$!",a=a.dataset,c&&(a.dgst=c),d&&(a.msg=d),e&&(a.stck=e),b._reactRetry&&b._reactRetry())};;$RX("\')) : t.push(\'$RX("\')) : t.push(\'<template data-rxi="" data-bid="\');\n      t.push(W.boundaryPrefix);\n      var Sa = na.toString(16);\n      t.push(Sa);\n      Z && t.push(\'"\');\n      if (ha || R || I) if (Z) {\n        t.push(",");\n        var Ta = Yb(ha || "");\n        t.push(Ta);\n      } else {\n        t.push(\'" data-dgst="\');\n        var Ua = z(ha || "");\n        t.push(Ua);\n      }\n      if (R || I) if (Z) {\n        t.push(",");\n        var oa = Yb(R || "");\n        t.push(oa);\n      } else {\n        t.push(\'" data-msg="\');\n        var T = z(R || "");\n        t.push(T);\n      }\n      if (I) if (Z) {\n        t.push(",");\n        var tb = Yb(I);\n        t.push(tb);\n      } else {\n        t.push(\'" data-stck="\');\n        var pa = z(I);\n        t.push(pa);\n      }\n      if (Z ? !t.push(")\\x3c/script>") : !t.push(\'"></template>\')) {\n        a.destination = null;\n        c++;\n        F.splice(0, c);\n        return;\n      }\n    }\n    F.splice(0, c);\n    var qa = a.completedBoundaries;\n    for (c = 0; c < qa.length; c++) if (!hf(a, b, qa[c])) {\n      a.destination = null;\n      c++;\n      qa.splice(0, c);\n      return;\n    }\n    qa.splice(0, c);\n    var da = a.partialBoundaries;\n    for (c = 0; c < da.length; c++) {\n      var ra = da[c];\n      a: {\n        F = a;\n        Q = b;\n        F.renderState.boundaryResources = ra.resources;\n        var sa = ra.completedSegments;\n        for (G = 0; G < sa.length; G++) if (!jf(F, Q, ra, sa[G])) {\n          G++;\n          sa.splice(0, G);\n          var Va = !1;\n          break a;\n        }\n        sa.splice(0, G);\n        Va = nc(Q, ra.resources, F.renderState);\n      }\n      if (!Va) {\n        a.destination = null;\n        c++;\n        da.splice(0, c);\n        return;\n      }\n    }\n    da.splice(0, c);\n    var ta = a.completedBoundaries;\n    for (c = 0; c < ta.length; c++) if (!hf(a, b, ta[c])) {\n      a.destination = null;\n      c++;\n      ta.splice(0, c);\n      return;\n    }\n    ta.splice(0, c);\n  } finally {\n    0 === a.allPendingTasks && 0 === a.pingedTasks.length && 0 === a.clientRenderedBoundaries.length && 0 === a.completedBoundaries.length && (a.flushScheduled = !1, c = a.resumableState, c.hasBody && (da = Lb("body"), b.push(da)), c.hasHtml && (c = Lb("html"), b.push(c)), b.push(null), a.destination = null);\n  }\n}\nfunction xc(a) {\n  if (!1 === a.flushScheduled && 0 === a.pingedTasks.length && null !== a.destination) {\n    a.flushScheduled = !0;\n    var b = a.destination;\n    b ? df(a, b) : a.flushScheduled = !1;\n  }\n}\nfunction kf(a, b) {\n  if (1 === a.status) a.status = 2, b.destroy(a.fatalError);else if (2 !== a.status && null === a.destination) {\n    a.destination = b;\n    try {\n      df(a, b);\n    } catch (c) {\n      X(a, c, {}), Oe(a, c);\n    }\n  }\n}\nfunction lf(a, b) {\n  try {\n    var c = a.abortableTasks;\n    if (0 < c.size) {\n      var d = void 0 === b ? Error(q(432)) : b;\n      c.forEach(function (e) {\n        return $e(e, a, d);\n      });\n      c.clear();\n    }\n    null !== a.destination && df(a, a.destination);\n  } catch (e) {\n    X(a, e, {}), Oe(a, e);\n  }\n}\nfunction mf() {}\nfunction nf(a, b, c, d) {\n  var e = !1,\n    f = null,\n    g = "",\n    h = !1;\n  b = nb(b ? b.identifierPrefix : void 0, void 0);\n  a = Fe(a, b, Cc(b, c), H(0, null, 0), Infinity, mf, void 0, function () {\n    h = !0;\n  }, void 0, void 0, void 0);\n  a.flushScheduled = null !== a.destination;\n  Je(a);\n  null === a.trackedPostpones && cf(a, 0 === a.pendingRootTasks);\n  lf(a, d);\n  kf(a, {\n    push: function (k) {\n      null !== k && (g += k);\n      return !0;\n    },\n    destroy: function (k) {\n      e = !0;\n      f = k;\n    }\n  });\n  if (e && f !== d) throw f;\n  if (!h) throw Error(q(426));\n  return g;\n}\nexports.renderToNodeStream = function () {\n  throw Error(q(207));\n};\nexports.renderToStaticMarkup = function (a, b) {\n  return nf(a, b, !0, \'The server used "renderToStaticMarkup" which does not support Suspense. If you intended to have the server wait for the suspended component please switch to "renderToReadableStream" which supports Suspense on the server\');\n};\nexports.renderToStaticNodeStream = function () {\n  throw Error(q(208));\n};\nexports.renderToString = function (a, b) {\n  return nf(a, b, !1, \'The server used "renderToString" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to "renderToReadableStream" which supports Suspense on the server\');\n};\nexports.version = "18.3.0-canary-c5b937576-20231219";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///9748\n')},94262:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('/*\n React\n react-dom-server.browser.production.min.js\n\n Copyright (c) Meta Platforms, Inc. and affiliates.\n\n This source code is licensed under the MIT license found in the\n LICENSE file in the root directory of this source tree.\n\n\n JS Implementation of MurmurHash3 (r136) (as of May 20, 2011)\n\n Copyright (c) 2011 Gary Court\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the "Software"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n*/\n\n\nvar aa = __webpack_require__(35466),\n  ba = __webpack_require__(46116);\nfunction l(a) {\n  for (var b = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c = 1; c < arguments.length; c++) b += "&args[]=" + encodeURIComponent(arguments[c]);\n  return "Minified React error #" + a + "; visit " + b + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";\n}\nfunction ca(a, b) {\n  var c = a.length & 3;\n  var d = a.length - c;\n  var e = b;\n  for (b = 0; b < d;) {\n    var f = a.charCodeAt(b) & 255 | (a.charCodeAt(++b) & 255) << 8 | (a.charCodeAt(++b) & 255) << 16 | (a.charCodeAt(++b) & 255) << 24;\n    ++b;\n    f = 3432918353 * (f & 65535) + ((3432918353 * (f >>> 16) & 65535) << 16) & 4294967295;\n    f = f << 15 | f >>> 17;\n    f = 461845907 * (f & 65535) + ((461845907 * (f >>> 16) & 65535) << 16) & 4294967295;\n    e ^= f;\n    e = e << 13 | e >>> 19;\n    e = 5 * (e & 65535) + ((5 * (e >>> 16) & 65535) << 16) & 4294967295;\n    e = (e & 65535) + 27492 + (((e >>> 16) + 58964 & 65535) << 16);\n  }\n  f = 0;\n  switch (c) {\n    case 3:\n      f ^= (a.charCodeAt(b + 2) & 255) << 16;\n    case 2:\n      f ^= (a.charCodeAt(b + 1) & 255) << 8;\n    case 1:\n      f ^= a.charCodeAt(b) & 255, f = 3432918353 * (f & 65535) + ((3432918353 * (f >>> 16) & 65535) << 16) & 4294967295, f = f << 15 | f >>> 17, e ^= 461845907 * (f & 65535) + ((461845907 * (f >>> 16) & 65535) << 16) & 4294967295;\n  }\n  e ^= a.length;\n  e ^= e >>> 16;\n  e = 2246822507 * (e & 65535) + ((2246822507 * (e >>> 16) & 65535) << 16) & 4294967295;\n  e ^= e >>> 13;\n  e = 3266489909 * (e & 65535) + ((3266489909 * (e >>> 16) & 65535) << 16) & 4294967295;\n  return (e ^ e >>> 16) >>> 0;\n}\nvar n = null,\n  r = 0;\nfunction v(a, b) {\n  if (0 !== b.byteLength) if (512 < b.byteLength) 0 < r && (a.enqueue(new Uint8Array(n.buffer, 0, r)), n = new Uint8Array(512), r = 0), a.enqueue(b);else {\n    var c = n.length - r;\n    c < b.byteLength && (0 === c ? a.enqueue(n) : (n.set(b.subarray(0, c), r), a.enqueue(n), b = b.subarray(c)), n = new Uint8Array(512), r = 0);\n    n.set(b, r);\n    r += b.byteLength;\n  }\n}\nfunction x(a, b) {\n  v(a, b);\n  return !0;\n}\nfunction ea(a) {\n  n && 0 < r && (a.enqueue(new Uint8Array(n.buffer, 0, r)), n = null, r = 0);\n}\nvar fa = new TextEncoder();\nfunction A(a) {\n  return fa.encode(a);\n}\nfunction C(a) {\n  return fa.encode(a);\n}\nfunction na(a, b) {\n  "function" === typeof a.error ? a.error(b) : a.close();\n}\nvar D = Object.assign,\n  F = Object.prototype.hasOwnProperty,\n  oa = RegExp("^[:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD][:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]*$"),\n  ra = {},\n  sa = {};\nfunction ya(a) {\n  if (F.call(sa, a)) return !0;\n  if (F.call(ra, a)) return !1;\n  if (oa.test(a)) return sa[a] = !0;\n  ra[a] = !0;\n  return !1;\n}\nvar za = new Set("animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp".split(" ")),\n  Aa = new Map([["acceptCharset", "accept-charset"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"], ["crossOrigin", "crossorigin"], ["accentHeight", "accent-height"], ["alignmentBaseline", "alignment-baseline"], ["arabicForm", "arabic-form"], ["baselineShift", "baseline-shift"], ["capHeight", "cap-height"], ["clipPath", "clip-path"], ["clipRule", "clip-rule"], ["colorInterpolation", "color-interpolation"], ["colorInterpolationFilters", "color-interpolation-filters"], ["colorProfile", "color-profile"], ["colorRendering", "color-rendering"], ["dominantBaseline", "dominant-baseline"], ["enableBackground", "enable-background"], ["fillOpacity", "fill-opacity"], ["fillRule", "fill-rule"], ["floodColor", "flood-color"], ["floodOpacity", "flood-opacity"], ["fontFamily", "font-family"], ["fontSize", "font-size"], ["fontSizeAdjust", "font-size-adjust"], ["fontStretch", "font-stretch"], ["fontStyle", "font-style"], ["fontVariant", "font-variant"], ["fontWeight", "font-weight"], ["glyphName", "glyph-name"], ["glyphOrientationHorizontal", "glyph-orientation-horizontal"], ["glyphOrientationVertical", "glyph-orientation-vertical"], ["horizAdvX", "horiz-adv-x"], ["horizOriginX", "horiz-origin-x"], ["imageRendering", "image-rendering"], ["letterSpacing", "letter-spacing"], ["lightingColor", "lighting-color"], ["markerEnd", "marker-end"], ["markerMid", "marker-mid"], ["markerStart", "marker-start"], ["overlinePosition", "overline-position"], ["overlineThickness", "overline-thickness"], ["paintOrder", "paint-order"], ["panose-1", "panose-1"], ["pointerEvents", "pointer-events"], ["renderingIntent", "rendering-intent"], ["shapeRendering", "shape-rendering"], ["stopColor", "stop-color"], ["stopOpacity", "stop-opacity"], ["strikethroughPosition", "strikethrough-position"], ["strikethroughThickness", "strikethrough-thickness"], ["strokeDasharray", "stroke-dasharray"], ["strokeDashoffset", "stroke-dashoffset"], ["strokeLinecap", "stroke-linecap"], ["strokeLinejoin", "stroke-linejoin"], ["strokeMiterlimit", "stroke-miterlimit"], ["strokeOpacity", "stroke-opacity"], ["strokeWidth", "stroke-width"], ["textAnchor", "text-anchor"], ["textDecoration", "text-decoration"], ["textRendering", "text-rendering"], ["transformOrigin", "transform-origin"], ["underlinePosition", "underline-position"], ["underlineThickness", "underline-thickness"], ["unicodeBidi", "unicode-bidi"], ["unicodeRange", "unicode-range"], ["unitsPerEm", "units-per-em"], ["vAlphabetic", "v-alphabetic"], ["vHanging", "v-hanging"], ["vIdeographic", "v-ideographic"], ["vMathematical", "v-mathematical"], ["vectorEffect", "vector-effect"], ["vertAdvY", "vert-adv-y"], ["vertOriginX", "vert-origin-x"], ["vertOriginY", "vert-origin-y"], ["wordSpacing", "word-spacing"], ["writingMode", "writing-mode"], ["xmlnsXlink", "xmlns:xlink"], ["xHeight", "x-height"]]),\n  Ga = /["\'&<>]/;\nfunction I(a) {\n  if ("boolean" === typeof a || "number" === typeof a) return "" + a;\n  a = "" + a;\n  var b = Ga.exec(a);\n  if (b) {\n    var c = "",\n      d,\n      e = 0;\n    for (d = b.index; d < a.length; d++) {\n      switch (a.charCodeAt(d)) {\n        case 34:\n          b = "&quot;";\n          break;\n        case 38:\n          b = "&amp;";\n          break;\n        case 39:\n          b = "&#x27;";\n          break;\n        case 60:\n          b = "&lt;";\n          break;\n        case 62:\n          b = "&gt;";\n          break;\n        default:\n          continue;\n      }\n      e !== d && (c += a.slice(e, d));\n      e = d + 1;\n      c += b;\n    }\n    a = e !== d ? c + a.slice(e, d) : c;\n  }\n  return a;\n}\nvar Ha = /([A-Z])/g,\n  Ia = /^ms-/,\n  Ja = Array.isArray,\n  Ka = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,\n  La = {\n    pending: !1,\n    data: null,\n    method: null,\n    action: null\n  },\n  Ma = ba.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.Dispatcher,\n  $a = {\n    prefetchDNS: Ta,\n    preconnect: Ua,\n    preload: Va,\n    preloadModule: Wa,\n    preinitStyle: Xa,\n    preinitScript: Ya,\n    preinitModuleScript: Za\n  },\n  ab = [],\n  bb = C(\'"></template>\'),\n  cb = C("<script>"),\n  qb = C("\\x3c/script>"),\n  rb = C(\'<script src="\'),\n  sb = C(\'<script type="module" src="\'),\n  tb = C(\'" nonce="\'),\n  ub = C(\'" integrity="\'),\n  vb = C(\'" crossorigin="\'),\n  wb = C(\'" async="">\\x3c/script>\'),\n  xb = /(<\\/|<)(s)(cript)/gi;\nfunction yb(a, b, c, d) {\n  return "" + b + ("s" === c ? "\\\\u0073" : "\\\\u0053") + d;\n}\nvar zb = C(\'<script type="importmap">\'),\n  Ab = C("\\x3c/script>");\nfunction Jb(a, b, c, d, e, f) {\n  var g = void 0 === b ? cb : C(\'<script nonce="\' + I(b) + \'">\'),\n    h = a.idPrefix,\n    k = [],\n    m = null,\n    p = a.bootstrapScriptContent,\n    q = a.bootstrapScripts,\n    t = a.bootstrapModules;\n  void 0 !== p && k.push(g, A(("" + p).replace(xb, yb)), qb);\n  void 0 !== c && ("string" === typeof c ? (m = {\n    src: c,\n    chunks: []\n  }, Kb(m.chunks, {\n    src: c,\n    async: !0,\n    integrity: void 0,\n    nonce: b\n  })) : (m = {\n    src: c.src,\n    chunks: []\n  }, Kb(m.chunks, {\n    src: c.src,\n    async: !0,\n    integrity: c.integrity,\n    nonce: b\n  })));\n  c = [];\n  void 0 !== d && (c.push(zb), c.push(A(("" + JSON.stringify(d)).replace(xb, yb))), c.push(Ab));\n  d = e ? {\n    preconnects: "",\n    fontPreloads: "",\n    highImagePreloads: "",\n    remainingCapacity: "number" === typeof f ? f : 2E3\n  } : null;\n  e = {\n    placeholderPrefix: C(h + "P:"),\n    segmentPrefix: C(h + "S:"),\n    boundaryPrefix: C(h + "B:"),\n    startInlineScript: g,\n    htmlChunks: null,\n    headChunks: null,\n    externalRuntimeScript: m,\n    bootstrapChunks: k,\n    onHeaders: e,\n    headers: d,\n    resets: {\n      font: {},\n      dns: {},\n      connect: {\n        default: {},\n        anonymous: {},\n        credentials: {}\n      },\n      image: {},\n      style: {}\n    },\n    charsetChunks: [],\n    preconnectChunks: [],\n    importMapChunks: c,\n    preloadChunks: [],\n    hoistableChunks: [],\n    preconnects: new Set(),\n    fontPreloads: new Set(),\n    highImagePreloads: new Set(),\n    styles: new Map(),\n    bootstrapScripts: new Set(),\n    scripts: new Set(),\n    bulkPreloads: new Set(),\n    preloads: {\n      images: new Map(),\n      stylesheets: new Map(),\n      scripts: new Map(),\n      moduleScripts: new Map()\n    },\n    nonce: b,\n    boundaryResources: null,\n    stylesToHoist: !1\n  };\n  if (void 0 !== q) for (g = 0; g < q.length; g++) c = q[g], d = m = void 0, f = {\n    rel: "preload",\n    as: "script",\n    fetchPriority: "low",\n    nonce: b\n  }, "string" === typeof c ? f.href = h = c : (f.href = h = c.src, f.integrity = d = "string" === typeof c.integrity ? c.integrity : void 0, f.crossOrigin = m = "string" === typeof c || null == c.crossOrigin ? void 0 : "use-credentials" === c.crossOrigin ? "use-credentials" : ""), c = a, p = h, c.scriptResources[p] = null, c.moduleScriptResources[p] = null, c = [], L(c, f), e.bootstrapScripts.add(c), k.push(rb, A(I(h))), b && k.push(tb, A(I(b))), "string" === typeof d && k.push(ub, A(I(d))), "string" === typeof m && k.push(vb, A(I(m))), k.push(wb);\n  if (void 0 !== t) for (q = 0; q < t.length; q++) f = t[q], m = h = void 0, d = {\n    rel: "modulepreload",\n    fetchPriority: "low",\n    nonce: b\n  }, "string" === typeof f ? d.href = g = f : (d.href = g = f.src, d.integrity = m = "string" === typeof f.integrity ? f.integrity : void 0, d.crossOrigin = h = "string" === typeof f || null == f.crossOrigin ? void 0 : "use-credentials" === f.crossOrigin ? "use-credentials" : ""), f = a, c = g, f.scriptResources[c] = null, f.moduleScriptResources[c] = null, f = [], L(f, d), e.bootstrapScripts.add(f), k.push(sb, A(I(g))), b && k.push(tb, A(I(b))), "string" === typeof m && k.push(ub, A(I(m))), "string" === typeof h && k.push(vb, A(I(h))), k.push(wb);\n  return e;\n}\nfunction Lb(a, b, c, d, e) {\n  var f = 0;\n  void 0 !== b && (f = 1);\n  return {\n    idPrefix: void 0 === a ? "" : a,\n    nextFormID: 0,\n    streamingFormat: f,\n    bootstrapScriptContent: c,\n    bootstrapScripts: d,\n    bootstrapModules: e,\n    instructions: 0,\n    hasBody: !1,\n    hasHtml: !1,\n    unknownResources: {},\n    dnsResources: {},\n    connectResources: {\n      default: {},\n      anonymous: {},\n      credentials: {}\n    },\n    imageResources: {},\n    styleResources: {},\n    scriptResources: {},\n    moduleUnknownResources: {},\n    moduleScriptResources: {}\n  };\n}\nfunction M(a, b, c) {\n  return {\n    insertionMode: a,\n    selectedValue: b,\n    tagScope: c\n  };\n}\nfunction Mb(a) {\n  return M("http://www.w3.org/2000/svg" === a ? 3 : "http://www.w3.org/1998/Math/MathML" === a ? 4 : 0, null, 0);\n}\nfunction Nb(a, b, c) {\n  switch (b) {\n    case "noscript":\n      return M(2, null, a.tagScope | 1);\n    case "select":\n      return M(2, null != c.value ? c.value : c.defaultValue, a.tagScope);\n    case "svg":\n      return M(3, null, a.tagScope);\n    case "picture":\n      return M(2, null, a.tagScope | 2);\n    case "math":\n      return M(4, null, a.tagScope);\n    case "foreignObject":\n      return M(2, null, a.tagScope);\n    case "table":\n      return M(5, null, a.tagScope);\n    case "thead":\n    case "tbody":\n    case "tfoot":\n      return M(6, null, a.tagScope);\n    case "colgroup":\n      return M(8, null, a.tagScope);\n    case "tr":\n      return M(7, null, a.tagScope);\n  }\n  return 5 <= a.insertionMode ? M(2, null, a.tagScope) : 0 === a.insertionMode ? "html" === b ? M(1, null, a.tagScope) : M(2, null, a.tagScope) : 1 === a.insertionMode ? M(2, null, a.tagScope) : a;\n}\nvar Ob = C("\\x3c!-- --\\x3e");\nfunction Pb(a, b, c, d) {\n  if ("" === b) return d;\n  d && a.push(Ob);\n  a.push(A(I(b)));\n  return !0;\n}\nvar Qb = new Map(),\n  Rb = C(\' style="\'),\n  Sb = C(":"),\n  Tb = C(";");\nfunction Ub(a, b) {\n  if ("object" !== typeof b) throw Error(l(62));\n  var c = !0,\n    d;\n  for (d in b) if (F.call(b, d)) {\n    var e = b[d];\n    if (null != e && "boolean" !== typeof e && "" !== e) {\n      if (0 === d.indexOf("--")) {\n        var f = A(I(d));\n        e = A(I(("" + e).trim()));\n      } else f = Qb.get(d), void 0 === f && (f = C(I(d.replace(Ha, "-$1").toLowerCase().replace(Ia, "-ms-"))), Qb.set(d, f)), e = "number" === typeof e ? 0 === e || za.has(d) ? A("" + e) : A(e + "px") : A(I(("" + e).trim()));\n      c ? (c = !1, a.push(Rb, f, Sb, e)) : a.push(Tb, f, Sb, e);\n    }\n  }\n  c || a.push(Vb);\n}\nvar P = C(" "),\n  Wb = C(\'="\'),\n  Vb = C(\'"\'),\n  Xb = C(\'=""\');\nfunction Yb(a, b, c) {\n  c && "function" !== typeof c && "symbol" !== typeof c && a.push(P, A(b), Xb);\n}\nfunction Q(a, b, c) {\n  "function" !== typeof c && "symbol" !== typeof c && "boolean" !== typeof c && a.push(P, A(b), Wb, A(I(c)), Vb);\n}\nfunction Zb(a) {\n  var b = a.nextFormID++;\n  return a.idPrefix + b;\n}\nvar $b = C(I("javascript:throw new Error(\'A React form was unexpectedly submitted.\')")),\n  ac = C(\'<input type="hidden"\');\nfunction bc(a, b) {\n  this.push(ac);\n  if ("string" !== typeof a) throw Error(l(480));\n  Q(this, "name", b);\n  Q(this, "value", a);\n  this.push(cc);\n}\nfunction dc(a, b, c, d, e, f, g, h) {\n  var k = null;\n  "function" === typeof d && ("function" === typeof d.$$FORM_ACTION ? (e = Zb(b), b = d.$$FORM_ACTION(e), h = b.name, d = b.action || "", e = b.encType, f = b.method, g = b.target, k = b.data) : (a.push(P, A("formAction"), Wb, $b, Vb), g = f = e = d = h = null, ec(b, c)));\n  null != h && R(a, "name", h);\n  null != d && R(a, "formAction", d);\n  null != e && R(a, "formEncType", e);\n  null != f && R(a, "formMethod", f);\n  null != g && R(a, "formTarget", g);\n  return k;\n}\nfunction R(a, b, c) {\n  switch (b) {\n    case "className":\n      Q(a, "class", c);\n      break;\n    case "tabIndex":\n      Q(a, "tabindex", c);\n      break;\n    case "dir":\n    case "role":\n    case "viewBox":\n    case "width":\n    case "height":\n      Q(a, b, c);\n      break;\n    case "style":\n      Ub(a, c);\n      break;\n    case "src":\n    case "href":\n    case "action":\n    case "formAction":\n      if (null == c || "function" === typeof c || "symbol" === typeof c || "boolean" === typeof c) break;\n      c = "" + c;\n      a.push(P, A(b), Wb, A(I(c)), Vb);\n      break;\n    case "defaultValue":\n    case "defaultChecked":\n    case "innerHTML":\n    case "suppressContentEditableWarning":\n    case "suppressHydrationWarning":\n      break;\n    case "autoFocus":\n    case "multiple":\n    case "muted":\n      Yb(a, b.toLowerCase(), c);\n      break;\n    case "xlinkHref":\n      if ("function" === typeof c || "symbol" === typeof c || "boolean" === typeof c) break;\n      c = "" + c;\n      a.push(P, A("xlink:href"), Wb, A(I(c)), Vb);\n      break;\n    case "contentEditable":\n    case "spellCheck":\n    case "draggable":\n    case "value":\n    case "autoReverse":\n    case "externalResourcesRequired":\n    case "focusable":\n    case "preserveAlpha":\n      "function" !== typeof c && "symbol" !== typeof c && a.push(P, A(b), Wb, A(I(c)), Vb);\n      break;\n    case "allowFullScreen":\n    case "async":\n    case "autoPlay":\n    case "controls":\n    case "default":\n    case "defer":\n    case "disabled":\n    case "disablePictureInPicture":\n    case "disableRemotePlayback":\n    case "formNoValidate":\n    case "hidden":\n    case "loop":\n    case "noModule":\n    case "noValidate":\n    case "open":\n    case "playsInline":\n    case "readOnly":\n    case "required":\n    case "reversed":\n    case "scoped":\n    case "seamless":\n    case "itemScope":\n      c && "function" !== typeof c && "symbol" !== typeof c && a.push(P, A(b), Xb);\n      break;\n    case "capture":\n    case "download":\n      !0 === c ? a.push(P, A(b), Xb) : !1 !== c && "function" !== typeof c && "symbol" !== typeof c && a.push(P, A(b), Wb, A(I(c)), Vb);\n      break;\n    case "cols":\n    case "rows":\n    case "size":\n    case "span":\n      "function" !== typeof c && "symbol" !== typeof c && !isNaN(c) && 1 <= c && a.push(P, A(b), Wb, A(I(c)), Vb);\n      break;\n    case "rowSpan":\n    case "start":\n      "function" === typeof c || "symbol" === typeof c || isNaN(c) || a.push(P, A(b), Wb, A(I(c)), Vb);\n      break;\n    case "xlinkActuate":\n      Q(a, "xlink:actuate", c);\n      break;\n    case "xlinkArcrole":\n      Q(a, "xlink:arcrole", c);\n      break;\n    case "xlinkRole":\n      Q(a, "xlink:role", c);\n      break;\n    case "xlinkShow":\n      Q(a, "xlink:show", c);\n      break;\n    case "xlinkTitle":\n      Q(a, "xlink:title", c);\n      break;\n    case "xlinkType":\n      Q(a, "xlink:type", c);\n      break;\n    case "xmlBase":\n      Q(a, "xml:base", c);\n      break;\n    case "xmlLang":\n      Q(a, "xml:lang", c);\n      break;\n    case "xmlSpace":\n      Q(a, "xml:space", c);\n      break;\n    default:\n      if (!(2 < b.length) || "o" !== b[0] && "O" !== b[0] || "n" !== b[1] && "N" !== b[1]) if (b = Aa.get(b) || b, ya(b)) {\n        switch (typeof c) {\n          case "function":\n          case "symbol":\n            return;\n          case "boolean":\n            var d = b.toLowerCase().slice(0, 5);\n            if ("data-" !== d && "aria-" !== d) return;\n        }\n        a.push(P, A(b), Wb, A(I(c)), Vb);\n      }\n  }\n}\nvar S = C(">"),\n  cc = C("/>");\nfunction fc(a, b, c) {\n  if (null != b) {\n    if (null != c) throw Error(l(60));\n    if ("object" !== typeof b || !("__html" in b)) throw Error(l(61));\n    b = b.__html;\n    null !== b && void 0 !== b && a.push(A("" + b));\n  }\n}\nfunction gc(a) {\n  var b = "";\n  aa.Children.forEach(a, function (c) {\n    null != c && (b += c);\n  });\n  return b;\n}\nvar hc = C(\' selected=""\'),\n  ic = C(\'addEventListener("submit",function(a){if(!a.defaultPrevented){var c=a.target,d=a.submitter,e=c.action,b=d;if(d){var f=d.getAttribute("formAction");null!=f&&(e=f,b=null)}"javascript:throw new Error(\\\'A React form was unexpectedly submitted.\\\')"===e&&(a.preventDefault(),b?(a=document.createElement("input"),a.name=b.name,a.value=b.value,b.parentNode.insertBefore(a,b),b=new FormData(c),a.parentNode.removeChild(a)):b=new FormData(c),a=c.getRootNode(),(a.$$reactFormReplay=a.$$reactFormReplay||[]).push(c,\\nd,b))}});\');\nfunction ec(a, b) {\n  0 !== (a.instructions & 16) || b.externalRuntimeScript || (a.instructions |= 16, b.bootstrapChunks.unshift(b.startInlineScript, ic, qb));\n}\nvar jc = C("\\x3c!--F!--\\x3e"),\n  kc = C("\\x3c!--F--\\x3e");\nfunction lc(a, b, c, d, e, f, g) {\n  var h = b.rel,\n    k = b.href,\n    m = b.precedence;\n  if (3 === f || g || null != b.itemProp || "string" !== typeof h || "string" !== typeof k || "" === k) return L(a, b), null;\n  if ("stylesheet" === b.rel) {\n    if ("string" !== typeof m || null != b.disabled || b.onLoad || b.onError) return L(a, b);\n    f = d.styles.get(m);\n    g = c.styleResources.hasOwnProperty(k) ? c.styleResources[k] : void 0;\n    null !== g ? (c.styleResources[k] = null, f || (f = {\n      precedence: A(I(m)),\n      rules: [],\n      hrefs: [],\n      sheets: new Map()\n    }, d.styles.set(m, f)), b = {\n      state: 0,\n      props: D({}, b, {\n        "data-precedence": b.precedence,\n        precedence: null\n      })\n    }, g && (2 === g.length && vc(b.props, g), (c = d.preloads.stylesheets.get(k)) && 0 < c.length ? c.length = 0 : b.state = 1), f.sheets.set(k, b), d.boundaryResources && d.boundaryResources.stylesheets.add(b)) : f && (k = f.sheets.get(k)) && d.boundaryResources && d.boundaryResources.stylesheets.add(k);\n    e && a.push(Ob);\n    return null;\n  }\n  if (b.onLoad || b.onError) return L(a, b);\n  e && a.push(Ob);\n  switch (b.rel) {\n    case "preconnect":\n    case "dns-prefetch":\n      return L(d.preconnectChunks, b);\n    case "preload":\n      return L(d.preloadChunks, b);\n    default:\n      return L(d.hoistableChunks, b);\n  }\n}\nfunction L(a, b) {\n  a.push(T("link"));\n  for (var c in b) if (F.call(b, c)) {\n    var d = b[c];\n    if (null != d) switch (c) {\n      case "children":\n      case "dangerouslySetInnerHTML":\n        throw Error(l(399, "link"));\n      default:\n        R(a, c, d);\n    }\n  }\n  a.push(cc);\n  return null;\n}\nfunction wc(a, b, c) {\n  a.push(T(c));\n  for (var d in b) if (F.call(b, d)) {\n    var e = b[d];\n    if (null != e) switch (d) {\n      case "children":\n      case "dangerouslySetInnerHTML":\n        throw Error(l(399, c));\n      default:\n        R(a, d, e);\n    }\n  }\n  a.push(cc);\n  return null;\n}\nfunction xc(a, b) {\n  a.push(T("title"));\n  var c = null,\n    d = null,\n    e;\n  for (e in b) if (F.call(b, e)) {\n    var f = b[e];\n    if (null != f) switch (e) {\n      case "children":\n        c = f;\n        break;\n      case "dangerouslySetInnerHTML":\n        d = f;\n        break;\n      default:\n        R(a, e, f);\n    }\n  }\n  a.push(S);\n  b = Array.isArray(c) ? 2 > c.length ? c[0] : null : c;\n  "function" !== typeof b && "symbol" !== typeof b && null !== b && void 0 !== b && a.push(A(I("" + b)));\n  fc(a, d, c);\n  a.push(yc("title"));\n  return null;\n}\nfunction Kb(a, b) {\n  a.push(T("script"));\n  var c = null,\n    d = null,\n    e;\n  for (e in b) if (F.call(b, e)) {\n    var f = b[e];\n    if (null != f) switch (e) {\n      case "children":\n        c = f;\n        break;\n      case "dangerouslySetInnerHTML":\n        d = f;\n        break;\n      default:\n        R(a, e, f);\n    }\n  }\n  a.push(S);\n  fc(a, d, c);\n  "string" === typeof c && a.push(A(I(c)));\n  a.push(yc("script"));\n  return null;\n}\nfunction zc(a, b, c) {\n  a.push(T(c));\n  var d = c = null,\n    e;\n  for (e in b) if (F.call(b, e)) {\n    var f = b[e];\n    if (null != f) switch (e) {\n      case "children":\n        c = f;\n        break;\n      case "dangerouslySetInnerHTML":\n        d = f;\n        break;\n      default:\n        R(a, e, f);\n    }\n  }\n  a.push(S);\n  fc(a, d, c);\n  return "string" === typeof c ? (a.push(A(I(c))), null) : c;\n}\nvar Ac = C("\\n"),\n  Bc = /^[a-zA-Z][a-zA-Z:_\\.\\-\\d]*$/,\n  Cc = new Map();\nfunction T(a) {\n  var b = Cc.get(a);\n  if (void 0 === b) {\n    if (!Bc.test(a)) throw Error(l(65, a));\n    b = C("<" + a);\n    Cc.set(a, b);\n  }\n  return b;\n}\nvar Dc = C("<!DOCTYPE html>");\nfunction Ec(a, b, c, d, e, f, g) {\n  switch (b) {\n    case "div":\n    case "span":\n    case "svg":\n    case "path":\n    case "a":\n    case "g":\n    case "p":\n    case "li":\n      break;\n    case "select":\n      a.push(T("select"));\n      var h = null,\n        k = null,\n        m;\n      for (m in c) if (F.call(c, m)) {\n        var p = c[m];\n        if (null != p) switch (m) {\n          case "children":\n            h = p;\n            break;\n          case "dangerouslySetInnerHTML":\n            k = p;\n            break;\n          case "defaultValue":\n          case "value":\n            break;\n          default:\n            R(a, m, p);\n        }\n      }\n      a.push(S);\n      fc(a, k, h);\n      return h;\n    case "option":\n      var q = f.selectedValue;\n      a.push(T("option"));\n      var t = null,\n        u = null,\n        B = null,\n        E = null,\n        w;\n      for (w in c) if (F.call(c, w)) {\n        var z = c[w];\n        if (null != z) switch (w) {\n          case "children":\n            t = z;\n            break;\n          case "selected":\n            B = z;\n            break;\n          case "dangerouslySetInnerHTML":\n            E = z;\n            break;\n          case "value":\n            u = z;\n          default:\n            R(a, w, z);\n        }\n      }\n      if (null != q) {\n        var ha = null !== u ? "" + u : gc(t);\n        if (Ja(q)) for (var X = 0; X < q.length; X++) {\n          if ("" + q[X] === ha) {\n            a.push(hc);\n            break;\n          }\n        } else "" + q === ha && a.push(hc);\n      } else B && a.push(hc);\n      a.push(S);\n      fc(a, E, t);\n      return t;\n    case "textarea":\n      a.push(T("textarea"));\n      var y = null,\n        G = null,\n        H = null,\n        ia;\n      for (ia in c) if (F.call(c, ia)) {\n        var pa = c[ia];\n        if (null != pa) switch (ia) {\n          case "children":\n            H = pa;\n            break;\n          case "value":\n            y = pa;\n            break;\n          case "defaultValue":\n            G = pa;\n            break;\n          case "dangerouslySetInnerHTML":\n            throw Error(l(91));\n          default:\n            R(a, ia, pa);\n        }\n      }\n      null === y && null !== G && (y = G);\n      a.push(S);\n      if (null != H) {\n        if (null != y) throw Error(l(92));\n        if (Ja(H)) {\n          if (1 < H.length) throw Error(l(93));\n          y = "" + H[0];\n        }\n        y = "" + H;\n      }\n      "string" === typeof y && "\\n" === y[0] && a.push(Ac);\n      null !== y && a.push(A(I("" + y)));\n      return null;\n    case "input":\n      a.push(T("input"));\n      var Y = null,\n        ja = null,\n        ka = null,\n        J = null,\n        N = null,\n        ta = null,\n        ua = null,\n        va = null,\n        Na = null,\n        la;\n      for (la in c) if (F.call(c, la)) {\n        var da = c[la];\n        if (null != da) switch (la) {\n          case "children":\n          case "dangerouslySetInnerHTML":\n            throw Error(l(399, "input"));\n          case "name":\n            Y = da;\n            break;\n          case "formAction":\n            ja = da;\n            break;\n          case "formEncType":\n            ka = da;\n            break;\n          case "formMethod":\n            J = da;\n            break;\n          case "formTarget":\n            N = da;\n            break;\n          case "defaultChecked":\n            Na = da;\n            break;\n          case "defaultValue":\n            ua = da;\n            break;\n          case "checked":\n            va = da;\n            break;\n          case "value":\n            ta = da;\n            break;\n          default:\n            R(a, la, da);\n        }\n      }\n      var sd = dc(a, d, e, ja, ka, J, N, Y);\n      null !== va ? Yb(a, "checked", va) : null !== Na && Yb(a, "checked", Na);\n      null !== ta ? R(a, "value", ta) : null !== ua && R(a, "value", ua);\n      a.push(cc);\n      null !== sd && sd.forEach(bc, a);\n      return null;\n    case "button":\n      a.push(T("button"));\n      var db = null,\n        td = null,\n        ud = null,\n        vd = null,\n        wd = null,\n        xd = null,\n        yd = null,\n        eb;\n      for (eb in c) if (F.call(c, eb)) {\n        var qa = c[eb];\n        if (null != qa) switch (eb) {\n          case "children":\n            db = qa;\n            break;\n          case "dangerouslySetInnerHTML":\n            td = qa;\n            break;\n          case "name":\n            ud = qa;\n            break;\n          case "formAction":\n            vd = qa;\n            break;\n          case "formEncType":\n            wd = qa;\n            break;\n          case "formMethod":\n            xd = qa;\n            break;\n          case "formTarget":\n            yd = qa;\n            break;\n          default:\n            R(a, eb, qa);\n        }\n      }\n      var zd = dc(a, d, e, vd, wd, xd, yd, ud);\n      a.push(S);\n      null !== zd && zd.forEach(bc, a);\n      fc(a, td, db);\n      if ("string" === typeof db) {\n        a.push(A(I(db)));\n        var Ad = null;\n      } else Ad = db;\n      return Ad;\n    case "form":\n      a.push(T("form"));\n      var fb = null,\n        Bd = null,\n        wa = null,\n        gb = null,\n        hb = null,\n        ib = null,\n        jb;\n      for (jb in c) if (F.call(c, jb)) {\n        var xa = c[jb];\n        if (null != xa) switch (jb) {\n          case "children":\n            fb = xa;\n            break;\n          case "dangerouslySetInnerHTML":\n            Bd = xa;\n            break;\n          case "action":\n            wa = xa;\n            break;\n          case "encType":\n            gb = xa;\n            break;\n          case "method":\n            hb = xa;\n            break;\n          case "target":\n            ib = xa;\n            break;\n          default:\n            R(a, jb, xa);\n        }\n      }\n      var mc = null,\n        nc = null;\n      if ("function" === typeof wa) if ("function" === typeof wa.$$FORM_ACTION) {\n        var sf = Zb(d),\n          Oa = wa.$$FORM_ACTION(sf);\n        wa = Oa.action || "";\n        gb = Oa.encType;\n        hb = Oa.method;\n        ib = Oa.target;\n        mc = Oa.data;\n        nc = Oa.name;\n      } else a.push(P, A("action"), Wb, $b, Vb), ib = hb = gb = wa = null, ec(d, e);\n      null != wa && R(a, "action", wa);\n      null != gb && R(a, "encType", gb);\n      null != hb && R(a, "method", hb);\n      null != ib && R(a, "target", ib);\n      a.push(S);\n      null !== nc && (a.push(ac), Q(a, "name", nc), a.push(cc), null !== mc && mc.forEach(bc, a));\n      fc(a, Bd, fb);\n      if ("string" === typeof fb) {\n        a.push(A(I(fb)));\n        var Cd = null;\n      } else Cd = fb;\n      return Cd;\n    case "menuitem":\n      a.push(T("menuitem"));\n      for (var Bb in c) if (F.call(c, Bb)) {\n        var Dd = c[Bb];\n        if (null != Dd) switch (Bb) {\n          case "children":\n          case "dangerouslySetInnerHTML":\n            throw Error(l(400));\n          default:\n            R(a, Bb, Dd);\n        }\n      }\n      a.push(S);\n      return null;\n    case "title":\n      if (3 === f.insertionMode || f.tagScope & 1 || null != c.itemProp) var Ed = xc(a, c);else xc(e.hoistableChunks, c), Ed = null;\n      return Ed;\n    case "link":\n      return lc(a, c, d, e, g, f.insertionMode, !!(f.tagScope & 1));\n    case "script":\n      var oc = c.async;\n      if ("string" !== typeof c.src || !c.src || !oc || "function" === typeof oc || "symbol" === typeof oc || c.onLoad || c.onError || 3 === f.insertionMode || f.tagScope & 1 || null != c.itemProp) var Fd = Kb(a, c);else {\n        var Cb = c.src;\n        if ("module" === c.type) {\n          var Db = d.moduleScriptResources;\n          var Gd = e.preloads.moduleScripts;\n        } else Db = d.scriptResources, Gd = e.preloads.scripts;\n        var Eb = Db.hasOwnProperty(Cb) ? Db[Cb] : void 0;\n        if (null !== Eb) {\n          Db[Cb] = null;\n          var pc = c;\n          if (Eb) {\n            2 === Eb.length && (pc = D({}, c), vc(pc, Eb));\n            var Hd = Gd.get(Cb);\n            Hd && (Hd.length = 0);\n          }\n          var Id = [];\n          e.scripts.add(Id);\n          Kb(Id, pc);\n        }\n        g && a.push(Ob);\n        Fd = null;\n      }\n      return Fd;\n    case "style":\n      var Fb = c.precedence,\n        Ba = c.href;\n      if (3 === f.insertionMode || f.tagScope & 1 || null != c.itemProp || "string" !== typeof Fb || "string" !== typeof Ba || "" === Ba) {\n        a.push(T("style"));\n        var Pa = null,\n          Jd = null,\n          kb;\n        for (kb in c) if (F.call(c, kb)) {\n          var Gb = c[kb];\n          if (null != Gb) switch (kb) {\n            case "children":\n              Pa = Gb;\n              break;\n            case "dangerouslySetInnerHTML":\n              Jd = Gb;\n              break;\n            default:\n              R(a, kb, Gb);\n          }\n        }\n        a.push(S);\n        var lb = Array.isArray(Pa) ? 2 > Pa.length ? Pa[0] : null : Pa;\n        "function" !== typeof lb && "symbol" !== typeof lb && null !== lb && void 0 !== lb && a.push(A(I("" + lb)));\n        fc(a, Jd, Pa);\n        a.push(yc("style"));\n        var Kd = null;\n      } else {\n        var Ca = e.styles.get(Fb);\n        if (null !== (d.styleResources.hasOwnProperty(Ba) ? d.styleResources[Ba] : void 0)) {\n          d.styleResources[Ba] = null;\n          Ca ? Ca.hrefs.push(A(I(Ba))) : (Ca = {\n            precedence: A(I(Fb)),\n            rules: [],\n            hrefs: [A(I(Ba))],\n            sheets: new Map()\n          }, e.styles.set(Fb, Ca));\n          var Ld = Ca.rules,\n            Qa = null,\n            Md = null,\n            Hb;\n          for (Hb in c) if (F.call(c, Hb)) {\n            var qc = c[Hb];\n            if (null != qc) switch (Hb) {\n              case "children":\n                Qa = qc;\n                break;\n              case "dangerouslySetInnerHTML":\n                Md = qc;\n            }\n          }\n          var mb = Array.isArray(Qa) ? 2 > Qa.length ? Qa[0] : null : Qa;\n          "function" !== typeof mb && "symbol" !== typeof mb && null !== mb && void 0 !== mb && Ld.push(A(I("" + mb)));\n          fc(Ld, Md, Qa);\n        }\n        Ca && e.boundaryResources && e.boundaryResources.styles.add(Ca);\n        g && a.push(Ob);\n        Kd = void 0;\n      }\n      return Kd;\n    case "meta":\n      if (3 === f.insertionMode || f.tagScope & 1 || null != c.itemProp) var Nd = wc(a, c, "meta");else g && a.push(Ob), Nd = "string" === typeof c.charSet ? wc(e.charsetChunks, c, "meta") : "viewport" === c.name ? wc(e.preconnectChunks, c, "meta") : wc(e.hoistableChunks, c, "meta");\n      return Nd;\n    case "listing":\n    case "pre":\n      a.push(T(b));\n      var nb = null,\n        ob = null,\n        pb;\n      for (pb in c) if (F.call(c, pb)) {\n        var Ib = c[pb];\n        if (null != Ib) switch (pb) {\n          case "children":\n            nb = Ib;\n            break;\n          case "dangerouslySetInnerHTML":\n            ob = Ib;\n            break;\n          default:\n            R(a, pb, Ib);\n        }\n      }\n      a.push(S);\n      if (null != ob) {\n        if (null != nb) throw Error(l(60));\n        if ("object" !== typeof ob || !("__html" in ob)) throw Error(l(61));\n        var Da = ob.__html;\n        null !== Da && void 0 !== Da && ("string" === typeof Da && 0 < Da.length && "\\n" === Da[0] ? a.push(Ac, A(Da)) : a.push(A("" + Da)));\n      }\n      "string" === typeof nb && "\\n" === nb[0] && a.push(Ac);\n      return nb;\n    case "img":\n      var O = c.src,\n        K = c.srcSet;\n      if (!("lazy" === c.loading || !O && !K || "string" !== typeof O && null != O || "string" !== typeof K && null != K) && "low" !== c.fetchPriority && !1 === !!(f.tagScope & 2) && ("string" !== typeof O || ":" !== O[4] || "d" !== O[0] && "D" !== O[0] || "a" !== O[1] && "A" !== O[1] || "t" !== O[2] && "T" !== O[2] || "a" !== O[3] && "A" !== O[3]) && ("string" !== typeof K || ":" !== K[4] || "d" !== K[0] && "D" !== K[0] || "a" !== K[1] && "A" !== K[1] || "t" !== K[2] && "T" !== K[2] || "a" !== K[3] && "A" !== K[3])) {\n        var Od = "string" === typeof c.sizes ? c.sizes : void 0,\n          Ra = K ? K + "\\n" + (Od || "") : O,\n          rc = e.preloads.images,\n          Ea = rc.get(Ra);\n        if (Ea) {\n          if ("high" === c.fetchPriority || 10 > e.highImagePreloads.size) rc.delete(Ra), e.highImagePreloads.add(Ea);\n        } else if (!d.imageResources.hasOwnProperty(Ra)) {\n          d.imageResources[Ra] = ab;\n          var sc = c.crossOrigin;\n          var Pd = "string" === typeof sc ? "use-credentials" === sc ? sc : "" : void 0;\n          var ma = e.headers,\n            tc;\n          ma && 0 < ma.remainingCapacity && ("high" === c.fetchPriority || 500 > ma.highImagePreloads.length) && (tc = Fc(O, "image", {\n            imageSrcSet: c.srcSet,\n            imageSizes: c.sizes,\n            crossOrigin: Pd,\n            integrity: c.integrity,\n            nonce: c.nonce,\n            type: c.type,\n            fetchPriority: c.fetchPriority,\n            referrerPolicy: c.refererPolicy\n          }), 2 <= (ma.remainingCapacity -= tc.length)) ? (e.resets.image[Ra] = ab, ma.highImagePreloads && (ma.highImagePreloads += ", "), ma.highImagePreloads += tc) : (Ea = [], L(Ea, {\n            rel: "preload",\n            as: "image",\n            href: K ? void 0 : O,\n            imageSrcSet: K,\n            imageSizes: Od,\n            crossOrigin: Pd,\n            integrity: c.integrity,\n            type: c.type,\n            fetchPriority: c.fetchPriority,\n            referrerPolicy: c.referrerPolicy\n          }), "high" === c.fetchPriority || 10 > e.highImagePreloads.size ? e.highImagePreloads.add(Ea) : (e.bulkPreloads.add(Ea), rc.set(Ra, Ea)));\n        }\n      }\n      return wc(a, c, "img");\n    case "base":\n    case "area":\n    case "br":\n    case "col":\n    case "embed":\n    case "hr":\n    case "keygen":\n    case "param":\n    case "source":\n    case "track":\n    case "wbr":\n      return wc(a, c, b);\n    case "annotation-xml":\n    case "color-profile":\n    case "font-face":\n    case "font-face-src":\n    case "font-face-uri":\n    case "font-face-format":\n    case "font-face-name":\n    case "missing-glyph":\n      break;\n    case "head":\n      if (2 > f.insertionMode && null === e.headChunks) {\n        e.headChunks = [];\n        var Qd = zc(e.headChunks, c, "head");\n      } else Qd = zc(a, c, "head");\n      return Qd;\n    case "html":\n      if (0 === f.insertionMode && null === e.htmlChunks) {\n        e.htmlChunks = [Dc];\n        var Rd = zc(e.htmlChunks, c, "html");\n      } else Rd = zc(a, c, "html");\n      return Rd;\n    default:\n      if (-1 !== b.indexOf("-")) {\n        a.push(T(b));\n        var uc = null,\n          Sd = null,\n          Sa;\n        for (Sa in c) if (F.call(c, Sa)) {\n          var Fa = c[Sa];\n          if (null != Fa) {\n            var tf = Sa;\n            switch (Sa) {\n              case "children":\n                uc = Fa;\n                break;\n              case "dangerouslySetInnerHTML":\n                Sd = Fa;\n                break;\n              case "style":\n                Ub(a, Fa);\n                break;\n              case "suppressContentEditableWarning":\n              case "suppressHydrationWarning":\n                break;\n              default:\n                ya(Sa) && "function" !== typeof Fa && "symbol" !== typeof Fa && a.push(P, A(tf), Wb, A(I(Fa)), Vb);\n            }\n          }\n        }\n        a.push(S);\n        fc(a, Sd, uc);\n        return uc;\n      }\n  }\n  return zc(a, c, b);\n}\nvar Gc = new Map();\nfunction yc(a) {\n  var b = Gc.get(a);\n  void 0 === b && (b = C("</" + a + ">"), Gc.set(a, b));\n  return b;\n}\nfunction Hc(a, b) {\n  b = b.bootstrapChunks;\n  for (var c = 0; c < b.length - 1; c++) v(a, b[c]);\n  return c < b.length ? (c = b[c], b.length = 0, x(a, c)) : !0;\n}\nvar Ic = C(\'<template id="\'),\n  Jc = C(\'"></template>\'),\n  Kc = C("\\x3c!--$--\\x3e"),\n  Lc = C(\'\\x3c!--$?--\\x3e<template id="\'),\n  Mc = C(\'"></template>\'),\n  Nc = C("\\x3c!--$!--\\x3e"),\n  Oc = C("\\x3c!--/$--\\x3e"),\n  Pc = C("<template"),\n  Qc = C(\'"\'),\n  Rc = C(\' data-dgst="\');\nC(\' data-msg="\');\nC(\' data-stck="\');\nvar Sc = C("></template>");\nfunction Tc(a, b, c) {\n  v(a, Lc);\n  if (null === c) throw Error(l(395));\n  v(a, b.boundaryPrefix);\n  v(a, A(c.toString(16)));\n  return x(a, Mc);\n}\nvar Uc = C(\'<div hidden id="\'),\n  Vc = C(\'">\'),\n  Wc = C("</div>"),\n  Xc = C(\'<svg aria-hidden="true" style="display:none" id="\'),\n  Yc = C(\'">\'),\n  Zc = C("</svg>"),\n  $c = C(\'<math aria-hidden="true" style="display:none" id="\'),\n  ad = C(\'">\'),\n  bd = C("</math>"),\n  cd = C(\'<table hidden id="\'),\n  dd = C(\'">\'),\n  ed = C("</table>"),\n  fd = C(\'<table hidden><tbody id="\'),\n  gd = C(\'">\'),\n  hd = C("</tbody></table>"),\n  id = C(\'<table hidden><tr id="\'),\n  jd = C(\'">\'),\n  kd = C("</tr></table>"),\n  ld = C(\'<table hidden><colgroup id="\'),\n  md = C(\'">\'),\n  nd = C("</colgroup></table>");\nfunction od(a, b, c, d) {\n  switch (c.insertionMode) {\n    case 0:\n    case 1:\n    case 2:\n      return v(a, Uc), v(a, b.segmentPrefix), v(a, A(d.toString(16))), x(a, Vc);\n    case 3:\n      return v(a, Xc), v(a, b.segmentPrefix), v(a, A(d.toString(16))), x(a, Yc);\n    case 4:\n      return v(a, $c), v(a, b.segmentPrefix), v(a, A(d.toString(16))), x(a, ad);\n    case 5:\n      return v(a, cd), v(a, b.segmentPrefix), v(a, A(d.toString(16))), x(a, dd);\n    case 6:\n      return v(a, fd), v(a, b.segmentPrefix), v(a, A(d.toString(16))), x(a, gd);\n    case 7:\n      return v(a, id), v(a, b.segmentPrefix), v(a, A(d.toString(16))), x(a, jd);\n    case 8:\n      return v(a, ld), v(a, b.segmentPrefix), v(a, A(d.toString(16))), x(a, md);\n    default:\n      throw Error(l(397));\n  }\n}\nfunction pd(a, b) {\n  switch (b.insertionMode) {\n    case 0:\n    case 1:\n    case 2:\n      return x(a, Wc);\n    case 3:\n      return x(a, Zc);\n    case 4:\n      return x(a, bd);\n    case 5:\n      return x(a, ed);\n    case 6:\n      return x(a, hd);\n    case 7:\n      return x(a, kd);\n    case 8:\n      return x(a, nd);\n    default:\n      throw Error(l(397));\n  }\n}\nvar qd = C(\'$RS=function(a,b){a=document.getElementById(a);b=document.getElementById(b);for(a.parentNode.removeChild(a);a.firstChild;)b.parentNode.insertBefore(a.firstChild,b);b.parentNode.removeChild(b)};$RS("\'),\n  rd = C(\'$RS("\'),\n  Td = C(\'","\'),\n  Ud = C(\'")\\x3c/script>\'),\n  Vd = C(\'<template data-rsi="" data-sid="\'),\n  Wd = C(\'" data-pid="\'),\n  Xd = C(\'$RC=function(b,c,e){c=document.getElementById(c);c.parentNode.removeChild(c);var a=document.getElementById(b);if(a){b=a.previousSibling;if(e)b.data="$!",a.setAttribute("data-dgst",e);else{e=b.parentNode;a=b.nextSibling;var f=0;do{if(a&&8===a.nodeType){var d=a.data;if("/$"===d)if(0===f)break;else f--;else"$"!==d&&"$?"!==d&&"$!"!==d||f++}d=a.nextSibling;e.removeChild(a);a=d}while(a);for(;c.firstChild;)e.insertBefore(c.firstChild,a);b.data="$"}b._reactRetry&&b._reactRetry()}};$RC("\'),\n  Yd = C(\'$RC("\'),\n  Zd = C(\'$RC=function(b,c,e){c=document.getElementById(c);c.parentNode.removeChild(c);var a=document.getElementById(b);if(a){b=a.previousSibling;if(e)b.data="$!",a.setAttribute("data-dgst",e);else{e=b.parentNode;a=b.nextSibling;var f=0;do{if(a&&8===a.nodeType){var d=a.data;if("/$"===d)if(0===f)break;else f--;else"$"!==d&&"$?"!==d&&"$!"!==d||f++}d=a.nextSibling;e.removeChild(a);a=d}while(a);for(;c.firstChild;)e.insertBefore(c.firstChild,a);b.data="$"}b._reactRetry&&b._reactRetry()}};$RM=new Map;\\n$RR=function(r,t,w){for(var u=$RC,n=$RM,p=new Map,q=document,g,b,h=q.querySelectorAll("link[data-precedence],style[data-precedence]"),v=[],k=0;b=h[k++];)"not all"===b.getAttribute("media")?v.push(b):("LINK"===b.tagName&&n.set(b.getAttribute("href"),b),p.set(b.dataset.precedence,g=b));b=0;h=[];var l,a;for(k=!0;;){if(k){var f=w[b++];if(!f){k=!1;b=0;continue}var c=!1,m=0;var d=f[m++];if(a=n.get(d)){var e=a._p;c=!0}else{a=q.createElement("link");a.href=d;a.rel="stylesheet";for(a.dataset.precedence=\\nl=f[m++];e=f[m++];)a.setAttribute(e,f[m++]);e=a._p=new Promise(function(x,y){a.onload=x;a.onerror=y});n.set(d,a)}d=a.getAttribute("media");!e||"l"===e.s||d&&!matchMedia(d).matches||h.push(e);if(c)continue}else{a=v[b++];if(!a)break;l=a.getAttribute("data-precedence");a.removeAttribute("media")}c=p.get(l)||g;c===g&&(g=a);p.set(l,a);c?c.parentNode.insertBefore(a,c.nextSibling):(c=q.head,c.insertBefore(a,c.firstChild))}Promise.all(h).then(u.bind(null,r,t,""),u.bind(null,r,t,"Resource failed to load"))};$RR("\'),\n  $d = C(\'$RM=new Map;\\n$RR=function(r,t,w){for(var u=$RC,n=$RM,p=new Map,q=document,g,b,h=q.querySelectorAll("link[data-precedence],style[data-precedence]"),v=[],k=0;b=h[k++];)"not all"===b.getAttribute("media")?v.push(b):("LINK"===b.tagName&&n.set(b.getAttribute("href"),b),p.set(b.dataset.precedence,g=b));b=0;h=[];var l,a;for(k=!0;;){if(k){var f=w[b++];if(!f){k=!1;b=0;continue}var c=!1,m=0;var d=f[m++];if(a=n.get(d)){var e=a._p;c=!0}else{a=q.createElement("link");a.href=d;a.rel="stylesheet";for(a.dataset.precedence=\\nl=f[m++];e=f[m++];)a.setAttribute(e,f[m++]);e=a._p=new Promise(function(x,y){a.onload=x;a.onerror=y});n.set(d,a)}d=a.getAttribute("media");!e||"l"===e.s||d&&!matchMedia(d).matches||h.push(e);if(c)continue}else{a=v[b++];if(!a)break;l=a.getAttribute("data-precedence");a.removeAttribute("media")}c=p.get(l)||g;c===g&&(g=a);p.set(l,a);c?c.parentNode.insertBefore(a,c.nextSibling):(c=q.head,c.insertBefore(a,c.firstChild))}Promise.all(h).then(u.bind(null,r,t,""),u.bind(null,r,t,"Resource failed to load"))};$RR("\'),\n  ae = C(\'$RR("\'),\n  be = C(\'","\'),\n  ce = C(\'",\'),\n  de = C(\'"\'),\n  ee = C(")\\x3c/script>"),\n  fe = C(\'<template data-rci="" data-bid="\'),\n  ge = C(\'<template data-rri="" data-bid="\'),\n  he = C(\'" data-sid="\'),\n  ie = C(\'" data-sty="\'),\n  je = C(\'$RX=function(b,c,d,e){var a=document.getElementById(b);a&&(b=a.previousSibling,b.data="$!",a=a.dataset,c&&(a.dgst=c),d&&(a.msg=d),e&&(a.stck=e),b._reactRetry&&b._reactRetry())};;$RX("\'),\n  ke = C(\'$RX("\'),\n  le = C(\'"\'),\n  me = C(","),\n  ne = C(")\\x3c/script>"),\n  oe = C(\'<template data-rxi="" data-bid="\'),\n  pe = C(\'" data-dgst="\'),\n  qe = C(\'" data-msg="\'),\n  re = C(\'" data-stck="\'),\n  se = /[<\\u2028\\u2029]/g;\nfunction te(a) {\n  return JSON.stringify(a).replace(se, function (b) {\n    switch (b) {\n      case "<":\n        return "\\\\u003c";\n      case "\\u2028":\n        return "\\\\u2028";\n      case "\\u2029":\n        return "\\\\u2029";\n      default:\n        throw Error("escapeJSStringsForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React");\n    }\n  });\n}\nvar ue = /[&><\\u2028\\u2029]/g;\nfunction ve(a) {\n  return JSON.stringify(a).replace(ue, function (b) {\n    switch (b) {\n      case "&":\n        return "\\\\u0026";\n      case ">":\n        return "\\\\u003e";\n      case "<":\n        return "\\\\u003c";\n      case "\\u2028":\n        return "\\\\u2028";\n      case "\\u2029":\n        return "\\\\u2029";\n      default:\n        throw Error("escapeJSObjectForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React");\n    }\n  });\n}\nvar we = C(\'<style media="not all" data-precedence="\'),\n  xe = C(\'" data-href="\'),\n  ye = C(\'">\'),\n  ze = C("</style>"),\n  Ae = !1,\n  Be = !0;\nfunction Ce(a) {\n  var b = a.rules,\n    c = a.hrefs,\n    d = 0;\n  if (c.length) {\n    v(this, we);\n    v(this, a.precedence);\n    for (v(this, xe); d < c.length - 1; d++) v(this, c[d]), v(this, De);\n    v(this, c[d]);\n    v(this, ye);\n    for (d = 0; d < b.length; d++) v(this, b[d]);\n    Be = x(this, ze);\n    Ae = !0;\n    b.length = 0;\n    c.length = 0;\n  }\n}\nfunction Ee(a) {\n  return 2 !== a.state ? Ae = !0 : !1;\n}\nfunction Fe(a, b, c) {\n  Ae = !1;\n  Be = !0;\n  b.styles.forEach(Ce, a);\n  b.stylesheets.forEach(Ee);\n  Ae && (c.stylesToHoist = !0);\n  return Be;\n}\nfunction Ge(a) {\n  for (var b = 0; b < a.length; b++) v(this, a[b]);\n  a.length = 0;\n}\nvar He = [];\nfunction Ie(a) {\n  L(He, a.props);\n  for (var b = 0; b < He.length; b++) v(this, He[b]);\n  He.length = 0;\n  a.state = 2;\n}\nvar Je = C(\'<style data-precedence="\'),\n  Ke = C(\'" data-href="\'),\n  De = C(" "),\n  Le = C(\'">\'),\n  Me = C("</style>");\nfunction Ne(a) {\n  var b = 0 < a.sheets.size;\n  a.sheets.forEach(Ie, this);\n  a.sheets.clear();\n  var c = a.rules,\n    d = a.hrefs;\n  if (!b || d.length) {\n    v(this, Je);\n    v(this, a.precedence);\n    a = 0;\n    if (d.length) {\n      for (v(this, Ke); a < d.length - 1; a++) v(this, d[a]), v(this, De);\n      v(this, d[a]);\n    }\n    v(this, Le);\n    for (a = 0; a < c.length; a++) v(this, c[a]);\n    v(this, Me);\n    c.length = 0;\n    d.length = 0;\n  }\n}\nfunction Oe(a) {\n  if (0 === a.state) {\n    a.state = 1;\n    var b = a.props;\n    L(He, {\n      rel: "preload",\n      as: "style",\n      href: a.props.href,\n      crossOrigin: b.crossOrigin,\n      fetchPriority: b.fetchPriority,\n      integrity: b.integrity,\n      media: b.media,\n      hrefLang: b.hrefLang,\n      referrerPolicy: b.referrerPolicy\n    });\n    for (a = 0; a < He.length; a++) v(this, He[a]);\n    He.length = 0;\n  }\n}\nfunction Pe(a) {\n  a.sheets.forEach(Oe, this);\n  a.sheets.clear();\n}\nvar Qe = C("["),\n  Re = C(",["),\n  Se = C(","),\n  Te = C("]");\nfunction Ue(a, b) {\n  v(a, Qe);\n  var c = Qe;\n  b.stylesheets.forEach(function (d) {\n    if (2 !== d.state) if (3 === d.state) v(a, c), v(a, A(ve("" + d.props.href))), v(a, Te), c = Re;else {\n      v(a, c);\n      var e = d.props["data-precedence"],\n        f = d.props;\n      v(a, A(ve("" + d.props.href)));\n      e = "" + e;\n      v(a, Se);\n      v(a, A(ve(e)));\n      for (var g in f) if (F.call(f, g)) {\n        var h = f[g];\n        if (null != h) switch (g) {\n          case "href":\n          case "rel":\n          case "precedence":\n          case "data-precedence":\n            break;\n          case "children":\n          case "dangerouslySetInnerHTML":\n            throw Error(l(399, "link"));\n          default:\n            a: {\n              e = a;\n              var k = g.toLowerCase();\n              switch (typeof h) {\n                case "function":\n                case "symbol":\n                  break a;\n              }\n              switch (g) {\n                case "innerHTML":\n                case "dangerouslySetInnerHTML":\n                case "suppressContentEditableWarning":\n                case "suppressHydrationWarning":\n                case "style":\n                  break a;\n                case "className":\n                  k = "class";\n                  h = "" + h;\n                  break;\n                case "hidden":\n                  if (!1 === h) break a;\n                  h = "";\n                  break;\n                case "src":\n                case "href":\n                  h = "" + h;\n                  break;\n                default:\n                  if (2 < g.length && ("o" === g[0] || "O" === g[0]) && ("n" === g[1] || "N" === g[1]) || !ya(g)) break a;\n                  h = "" + h;\n              }\n              v(e, Se);\n              v(e, A(ve(k)));\n              v(e, Se);\n              v(e, A(ve(h)));\n            }\n        }\n      }\n      v(a, Te);\n      c = Re;\n      d.state = 3;\n    }\n  });\n  v(a, Te);\n}\nfunction Ve(a, b) {\n  v(a, Qe);\n  var c = Qe;\n  b.stylesheets.forEach(function (d) {\n    if (2 !== d.state) if (3 === d.state) v(a, c), v(a, A(I(JSON.stringify("" + d.props.href)))), v(a, Te), c = Re;else {\n      v(a, c);\n      var e = d.props["data-precedence"],\n        f = d.props;\n      v(a, A(I(JSON.stringify("" + d.props.href))));\n      e = "" + e;\n      v(a, Se);\n      v(a, A(I(JSON.stringify(e))));\n      for (var g in f) if (F.call(f, g)) {\n        var h = f[g];\n        if (null != h) switch (g) {\n          case "href":\n          case "rel":\n          case "precedence":\n          case "data-precedence":\n            break;\n          case "children":\n          case "dangerouslySetInnerHTML":\n            throw Error(l(399, "link"));\n          default:\n            a: {\n              e = a;\n              var k = g.toLowerCase();\n              switch (typeof h) {\n                case "function":\n                case "symbol":\n                  break a;\n              }\n              switch (g) {\n                case "innerHTML":\n                case "dangerouslySetInnerHTML":\n                case "suppressContentEditableWarning":\n                case "suppressHydrationWarning":\n                case "style":\n                  break a;\n                case "className":\n                  k = "class";\n                  h = "" + h;\n                  break;\n                case "hidden":\n                  if (!1 === h) break a;\n                  h = "";\n                  break;\n                case "src":\n                case "href":\n                  h = "" + h;\n                  break;\n                default:\n                  if (2 < g.length && ("o" === g[0] || "O" === g[0]) && ("n" === g[1] || "N" === g[1]) || !ya(g)) break a;\n                  h = "" + h;\n              }\n              v(e, Se);\n              v(e, A(I(JSON.stringify(k))));\n              v(e, Se);\n              v(e, A(I(JSON.stringify(h))));\n            }\n        }\n      }\n      v(a, Te);\n      c = Re;\n      d.state = 3;\n    }\n  });\n  v(a, Te);\n}\nfunction Ta(a) {\n  var b = U ? U : null;\n  if (b) {\n    var c = b.resumableState,\n      d = b.renderState;\n    if ("string" === typeof a && a) {\n      if (!c.dnsResources.hasOwnProperty(a)) {\n        c.dnsResources[a] = null;\n        c = d.headers;\n        var e, f;\n        if (f = c && 0 < c.remainingCapacity) f = (e = "<" + ("" + a).replace(We, Xe) + ">; rel=dns-prefetch", 2 <= (c.remainingCapacity -= e.length));\n        f ? (d.resets.dns[a] = null, c.preconnects && (c.preconnects += ", "), c.preconnects += e) : (e = [], L(e, {\n          href: a,\n          rel: "dns-prefetch"\n        }), d.preconnects.add(e));\n      }\n      Ye(b);\n    }\n  }\n}\nfunction Ua(a, b) {\n  var c = U ? U : null;\n  if (c) {\n    var d = c.resumableState,\n      e = c.renderState;\n    if ("string" === typeof a && a) {\n      var f = "use-credentials" === b ? "credentials" : "string" === typeof b ? "anonymous" : "default";\n      if (!d.connectResources[f].hasOwnProperty(a)) {\n        d.connectResources[f][a] = null;\n        d = e.headers;\n        var g, h;\n        if (h = d && 0 < d.remainingCapacity) {\n          h = "<" + ("" + a).replace(We, Xe) + ">; rel=preconnect";\n          if ("string" === typeof b) {\n            var k = ("" + b).replace(Ze, $e);\n            h += \'; crossorigin="\' + k + \'"\';\n          }\n          h = (g = h, 2 <= (d.remainingCapacity -= g.length));\n        }\n        h ? (e.resets.connect[f][a] = null, d.preconnects && (d.preconnects += ", "), d.preconnects += g) : (f = [], L(f, {\n          rel: "preconnect",\n          href: a,\n          crossOrigin: b\n        }), e.preconnects.add(f));\n      }\n      Ye(c);\n    }\n  }\n}\nfunction Va(a, b, c) {\n  var d = U ? U : null;\n  if (d) {\n    var e = d.resumableState,\n      f = d.renderState;\n    if (b && a) {\n      switch (b) {\n        case "image":\n          if (c) {\n            var g = c.imageSrcSet;\n            var h = c.imageSizes;\n            var k = c.fetchPriority;\n          }\n          var m = g ? g + "\\n" + (h || "") : a;\n          if (e.imageResources.hasOwnProperty(m)) return;\n          e.imageResources[m] = ab;\n          e = f.headers;\n          var p;\n          e && 0 < e.remainingCapacity && "high" === k && (p = Fc(a, b, c), 2 <= (e.remainingCapacity -= p.length)) ? (f.resets.image[m] = ab, e.highImagePreloads && (e.highImagePreloads += ", "), e.highImagePreloads += p) : (e = [], L(e, D({\n            rel: "preload",\n            href: g ? void 0 : a,\n            as: b\n          }, c)), "high" === k ? f.highImagePreloads.add(e) : (f.bulkPreloads.add(e), f.preloads.images.set(m, e)));\n          break;\n        case "style":\n          if (e.styleResources.hasOwnProperty(a)) return;\n          g = [];\n          L(g, D({\n            rel: "preload",\n            href: a,\n            as: b\n          }, c));\n          e.styleResources[a] = !c || "string" !== typeof c.crossOrigin && "string" !== typeof c.integrity ? ab : [c.crossOrigin, c.integrity];\n          f.preloads.stylesheets.set(a, g);\n          f.bulkPreloads.add(g);\n          break;\n        case "script":\n          if (e.scriptResources.hasOwnProperty(a)) return;\n          g = [];\n          f.preloads.scripts.set(a, g);\n          f.bulkPreloads.add(g);\n          L(g, D({\n            rel: "preload",\n            href: a,\n            as: b\n          }, c));\n          e.scriptResources[a] = !c || "string" !== typeof c.crossOrigin && "string" !== typeof c.integrity ? ab : [c.crossOrigin, c.integrity];\n          break;\n        default:\n          if (e.unknownResources.hasOwnProperty(b)) {\n            if (g = e.unknownResources[b], g.hasOwnProperty(a)) return;\n          } else g = {}, e.unknownResources[b] = g;\n          g[a] = ab;\n          if ((e = f.headers) && 0 < e.remainingCapacity && "font" === b && (m = Fc(a, b, c), 2 <= (e.remainingCapacity -= m.length))) f.resets.font[a] = ab, e.fontPreloads && (e.fontPreloads += ", "), e.fontPreloads += m;else switch (e = [], a = D({\n            rel: "preload",\n            href: a,\n            as: b\n          }, c), L(e, a), b) {\n            case "font":\n              f.fontPreloads.add(e);\n              break;\n            default:\n              f.bulkPreloads.add(e);\n          }\n      }\n      Ye(d);\n    }\n  }\n}\nfunction Wa(a, b) {\n  var c = U ? U : null;\n  if (c) {\n    var d = c.resumableState,\n      e = c.renderState;\n    if (a) {\n      var f = b && "string" === typeof b.as ? b.as : "script";\n      switch (f) {\n        case "script":\n          if (d.moduleScriptResources.hasOwnProperty(a)) return;\n          f = [];\n          d.moduleScriptResources[a] = !b || "string" !== typeof b.crossOrigin && "string" !== typeof b.integrity ? ab : [b.crossOrigin, b.integrity];\n          e.preloads.moduleScripts.set(a, f);\n          break;\n        default:\n          if (d.moduleUnknownResources.hasOwnProperty(f)) {\n            var g = d.unknownResources[f];\n            if (g.hasOwnProperty(a)) return;\n          } else g = {}, d.moduleUnknownResources[f] = g;\n          f = [];\n          g[a] = ab;\n      }\n      L(f, D({\n        rel: "modulepreload",\n        href: a\n      }, b));\n      e.bulkPreloads.add(f);\n      Ye(c);\n    }\n  }\n}\nfunction Xa(a, b, c) {\n  var d = U ? U : null;\n  if (d) {\n    var e = d.resumableState,\n      f = d.renderState;\n    if (a) {\n      b = b || "default";\n      var g = f.styles.get(b),\n        h = e.styleResources.hasOwnProperty(a) ? e.styleResources[a] : void 0;\n      null !== h && (e.styleResources[a] = null, g || (g = {\n        precedence: A(I(b)),\n        rules: [],\n        hrefs: [],\n        sheets: new Map()\n      }, f.styles.set(b, g)), b = {\n        state: 0,\n        props: D({\n          rel: "stylesheet",\n          href: a,\n          "data-precedence": b\n        }, c)\n      }, h && (2 === h.length && vc(b.props, h), (f = f.preloads.stylesheets.get(a)) && 0 < f.length ? f.length = 0 : b.state = 1), g.sheets.set(a, b), Ye(d));\n    }\n  }\n}\nfunction Ya(a, b) {\n  var c = U ? U : null;\n  if (c) {\n    var d = c.resumableState,\n      e = c.renderState;\n    if (a) {\n      var f = d.scriptResources.hasOwnProperty(a) ? d.scriptResources[a] : void 0;\n      null !== f && (d.scriptResources[a] = null, b = D({\n        src: a,\n        async: !0\n      }, b), f && (2 === f.length && vc(b, f), a = e.preloads.scripts.get(a)) && (a.length = 0), a = [], e.scripts.add(a), Kb(a, b), Ye(c));\n    }\n  }\n}\nfunction Za(a, b) {\n  var c = U ? U : null;\n  if (c) {\n    var d = c.resumableState,\n      e = c.renderState;\n    if (a) {\n      var f = d.moduleScriptResources.hasOwnProperty(a) ? d.moduleScriptResources[a] : void 0;\n      null !== f && (d.moduleScriptResources[a] = null, b = D({\n        src: a,\n        type: "module",\n        async: !0\n      }, b), f && (2 === f.length && vc(b, f), a = e.preloads.moduleScripts.get(a)) && (a.length = 0), a = [], e.scripts.add(a), Kb(a, b), Ye(c));\n    }\n  }\n}\nfunction vc(a, b) {\n  null == a.crossOrigin && (a.crossOrigin = b[0]);\n  null == a.integrity && (a.integrity = b[1]);\n}\nfunction Fc(a, b, c) {\n  a = ("" + a).replace(We, Xe);\n  b = ("" + b).replace(Ze, $e);\n  b = "<" + a + \'>; rel=preload; as="\' + b + \'"\';\n  for (var d in c) F.call(c, d) && (a = c[d], "string" === typeof a && (b += "; " + d.toLowerCase() + \'="\' + ("" + a).replace(Ze, $e) + \'"\'));\n  return b;\n}\nvar We = /[<>\\r\\n]/g;\nfunction Xe(a) {\n  switch (a) {\n    case "<":\n      return "%3C";\n    case ">":\n      return "%3E";\n    case "\\n":\n      return "%0A";\n    case "\\r":\n      return "%0D";\n    default:\n      throw Error("escapeLinkHrefForHeaderContextReplacer encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React");\n  }\n}\nvar Ze = /["\';,\\r\\n]/g;\nfunction $e(a) {\n  switch (a) {\n    case \'"\':\n      return "%22";\n    case "\'":\n      return "%27";\n    case ";":\n      return "%3B";\n    case ",":\n      return "%2C";\n    case "\\n":\n      return "%0A";\n    case "\\r":\n      return "%0D";\n    default:\n      throw Error("escapeStringForLinkHeaderQuotedParamValueContextReplacer encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React");\n  }\n}\nfunction af(a) {\n  this.styles.add(a);\n}\nfunction bf(a) {\n  this.stylesheets.add(a);\n}\nvar cf = Symbol.for("react.element"),\n  df = Symbol.for("react.portal"),\n  ef = Symbol.for("react.fragment"),\n  ff = Symbol.for("react.strict_mode"),\n  gf = Symbol.for("react.profiler"),\n  hf = Symbol.for("react.provider"),\n  jf = Symbol.for("react.context"),\n  kf = Symbol.for("react.server_context"),\n  lf = Symbol.for("react.forward_ref"),\n  mf = Symbol.for("react.suspense"),\n  nf = Symbol.for("react.suspense_list"),\n  of = Symbol.for("react.memo"),\n  pf = Symbol.for("react.lazy"),\n  qf = Symbol.for("react.scope"),\n  rf = Symbol.for("react.debug_trace_mode"),\n  uf = Symbol.for("react.offscreen"),\n  vf = Symbol.for("react.legacy_hidden"),\n  wf = Symbol.for("react.cache"),\n  xf = Symbol.for("react.default_value"),\n  yf = Symbol.iterator;\nfunction zf(a) {\n  if (null == a) return null;\n  if ("function" === typeof a) return a.displayName || a.name || null;\n  if ("string" === typeof a) return a;\n  switch (a) {\n    case ef:\n      return "Fragment";\n    case df:\n      return "Portal";\n    case gf:\n      return "Profiler";\n    case ff:\n      return "StrictMode";\n    case mf:\n      return "Suspense";\n    case nf:\n      return "SuspenseList";\n    case wf:\n      return "Cache";\n  }\n  if ("object" === typeof a) switch (a.$$typeof) {\n    case jf:\n      return (a.displayName || "Context") + ".Consumer";\n    case hf:\n      return (a._context.displayName || "Context") + ".Provider";\n    case lf:\n      var b = a.render;\n      a = a.displayName;\n      a || (a = b.displayName || b.name || "", a = "" !== a ? "ForwardRef(" + a + ")" : "ForwardRef");\n      return a;\n    case of:\n      return b = a.displayName || null, null !== b ? b : zf(a.type) || "Memo";\n    case pf:\n      b = a._payload;\n      a = a._init;\n      try {\n        return zf(a(b));\n      } catch (c) {}\n  }\n  return null;\n}\nvar Af;\nfunction Bf(a) {\n  if (void 0 === Af) try {\n    throw Error();\n  } catch (c) {\n    var b = c.stack.trim().match(/\\n( *(at )?)/);\n    Af = b && b[1] || "";\n  }\n  return "\\n" + Af + a;\n}\nvar Cf = !1;\nfunction Df(a, b) {\n  if (!a || Cf) return "";\n  Cf = !0;\n  var c = Error.prepareStackTrace;\n  Error.prepareStackTrace = void 0;\n  var d = {\n    DetermineComponentFrameRoot: function () {\n      try {\n        if (b) {\n          var q = function () {\n            throw Error();\n          };\n          Object.defineProperty(q.prototype, "props", {\n            set: function () {\n              throw Error();\n            }\n          });\n          if ("object" === typeof Reflect && Reflect.construct) {\n            try {\n              Reflect.construct(q, []);\n            } catch (u) {\n              var t = u;\n            }\n            Reflect.construct(a, [], q);\n          } else {\n            try {\n              q.call();\n            } catch (u) {\n              t = u;\n            }\n            a.call(q.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (u) {\n            t = u;\n          }\n          (q = a()) && "function" === typeof q.catch && q.catch(function () {});\n        }\n      } catch (u) {\n        if (u && t && "string" === typeof u.stack) return [u.stack, t.stack];\n      }\n      return [null, null];\n    }\n  };\n  d.DetermineComponentFrameRoot.displayName = "DetermineComponentFrameRoot";\n  var e = Object.getOwnPropertyDescriptor(d.DetermineComponentFrameRoot, "name");\n  e && e.configurable && Object.defineProperty(d.DetermineComponentFrameRoot, "name", {\n    value: "DetermineComponentFrameRoot"\n  });\n  try {\n    var f = d.DetermineComponentFrameRoot(),\n      g = f[0],\n      h = f[1];\n    if (g && h) {\n      var k = g.split("\\n"),\n        m = h.split("\\n");\n      for (e = d = 0; d < k.length && !k[d].includes("DetermineComponentFrameRoot");) d++;\n      for (; e < m.length && !m[e].includes("DetermineComponentFrameRoot");) e++;\n      if (d === k.length || e === m.length) for (d = k.length - 1, e = m.length - 1; 1 <= d && 0 <= e && k[d] !== m[e];) e--;\n      for (; 1 <= d && 0 <= e; d--, e--) if (k[d] !== m[e]) {\n        if (1 !== d || 1 !== e) {\n          do if (d--, e--, 0 > e || k[d] !== m[e]) {\n            var p = "\\n" + k[d].replace(" at new ", " at ");\n            a.displayName && p.includes("<anonymous>") && (p = p.replace("<anonymous>", a.displayName));\n            return p;\n          } while (1 <= d && 0 <= e);\n        }\n        break;\n      }\n    }\n  } finally {\n    Cf = !1, Error.prepareStackTrace = c;\n  }\n  return (c = a ? a.displayName || a.name : "") ? Bf(c) : "";\n}\nvar Ef = {};\nfunction Ff(a, b) {\n  a = a.contextTypes;\n  if (!a) return Ef;\n  var c = {},\n    d;\n  for (d in a) c[d] = b[d];\n  return c;\n}\nvar Gf = null;\nfunction Hf(a, b) {\n  if (a !== b) {\n    a.context._currentValue = a.parentValue;\n    a = a.parent;\n    var c = b.parent;\n    if (null === a) {\n      if (null !== c) throw Error(l(401));\n    } else {\n      if (null === c) throw Error(l(401));\n      Hf(a, c);\n    }\n    b.context._currentValue = b.value;\n  }\n}\nfunction If(a) {\n  a.context._currentValue = a.parentValue;\n  a = a.parent;\n  null !== a && If(a);\n}\nfunction Jf(a) {\n  var b = a.parent;\n  null !== b && Jf(b);\n  a.context._currentValue = a.value;\n}\nfunction Kf(a, b) {\n  a.context._currentValue = a.parentValue;\n  a = a.parent;\n  if (null === a) throw Error(l(402));\n  a.depth === b.depth ? Hf(a, b) : Kf(a, b);\n}\nfunction Lf(a, b) {\n  var c = b.parent;\n  if (null === c) throw Error(l(402));\n  a.depth === c.depth ? Hf(a, c) : Lf(a, c);\n  b.context._currentValue = b.value;\n}\nfunction Mf(a) {\n  var b = Gf;\n  b !== a && (null === b ? Jf(a) : null === a ? If(b) : b.depth === a.depth ? Hf(b, a) : b.depth > a.depth ? Kf(b, a) : Lf(b, a), Gf = a);\n}\nvar Nf = {\n  isMounted: function () {\n    return !1;\n  },\n  enqueueSetState: function (a, b) {\n    a = a._reactInternals;\n    null !== a.queue && a.queue.push(b);\n  },\n  enqueueReplaceState: function (a, b) {\n    a = a._reactInternals;\n    a.replace = !0;\n    a.queue = [b];\n  },\n  enqueueForceUpdate: function () {}\n};\nfunction Of(a, b, c, d) {\n  var e = void 0 !== a.state ? a.state : null;\n  a.updater = Nf;\n  a.props = c;\n  a.state = e;\n  var f = {\n    queue: [],\n    replace: !1\n  };\n  a._reactInternals = f;\n  var g = b.contextType;\n  a.context = "object" === typeof g && null !== g ? g._currentValue : d;\n  g = b.getDerivedStateFromProps;\n  "function" === typeof g && (g = g(c, e), e = null === g || void 0 === g ? e : D({}, e, g), a.state = e);\n  if ("function" !== typeof b.getDerivedStateFromProps && "function" !== typeof a.getSnapshotBeforeUpdate && ("function" === typeof a.UNSAFE_componentWillMount || "function" === typeof a.componentWillMount)) if (b = a.state, "function" === typeof a.componentWillMount && a.componentWillMount(), "function" === typeof a.UNSAFE_componentWillMount && a.UNSAFE_componentWillMount(), b !== a.state && Nf.enqueueReplaceState(a, a.state, null), null !== f.queue && 0 < f.queue.length) {\n    if (b = f.queue, g = f.replace, f.queue = null, f.replace = !1, g && 1 === b.length) a.state = b[0];else {\n      f = g ? b[0] : a.state;\n      e = !0;\n      for (g = g ? 1 : 0; g < b.length; g++) {\n        var h = b[g];\n        h = "function" === typeof h ? h.call(a, f, c, d) : h;\n        null != h && (e ? (e = !1, f = D({}, f, h)) : D(f, h));\n      }\n      a.state = f;\n    }\n  } else f.queue = null;\n}\nvar Pf = {\n  id: 1,\n  overflow: ""\n};\nfunction Qf(a, b, c) {\n  var d = a.id;\n  a = a.overflow;\n  var e = 32 - Rf(d) - 1;\n  d &= ~(1 << e);\n  c += 1;\n  var f = 32 - Rf(b) + e;\n  if (30 < f) {\n    var g = e - e % 5;\n    f = (d & (1 << g) - 1).toString(32);\n    d >>= g;\n    e -= g;\n    return {\n      id: 1 << 32 - Rf(b) + e | c << e | d,\n      overflow: f + a\n    };\n  }\n  return {\n    id: 1 << f | c << e | d,\n    overflow: a\n  };\n}\nvar Rf = Math.clz32 ? Math.clz32 : Sf,\n  Tf = Math.log,\n  Uf = Math.LN2;\nfunction Sf(a) {\n  a >>>= 0;\n  return 0 === a ? 32 : 31 - (Tf(a) / Uf | 0) | 0;\n}\nvar Vf = Error(l(460));\nfunction Wf() {}\nfunction Xf(a, b, c) {\n  c = a[c];\n  void 0 === c ? a.push(b) : c !== b && (b.then(Wf, Wf), b = c);\n  switch (b.status) {\n    case "fulfilled":\n      return b.value;\n    case "rejected":\n      throw b.reason;\n    default:\n      if ("string" !== typeof b.status) switch (a = b, a.status = "pending", a.then(function (d) {\n        if ("pending" === b.status) {\n          var e = b;\n          e.status = "fulfilled";\n          e.value = d;\n        }\n      }, function (d) {\n        if ("pending" === b.status) {\n          var e = b;\n          e.status = "rejected";\n          e.reason = d;\n        }\n      }), b.status) {\n        case "fulfilled":\n          return b.value;\n        case "rejected":\n          throw b.reason;\n      }\n      Yf = b;\n      throw Vf;\n  }\n}\nvar Yf = null;\nfunction Zf() {\n  if (null === Yf) throw Error(l(459));\n  var a = Yf;\n  Yf = null;\n  return a;\n}\nfunction $f(a, b) {\n  return a === b && (0 !== a || 1 / a === 1 / b) || a !== a && b !== b;\n}\nvar ag = "function" === typeof Object.is ? Object.is : $f,\n  bg = null,\n  cg = null,\n  dg = null,\n  eg = null,\n  fg = null,\n  V = null,\n  gg = !1,\n  hg = !1,\n  ig = 0,\n  jg = 0,\n  kg = -1,\n  lg = 0,\n  mg = null,\n  ng = null,\n  og = 0;\nfunction pg() {\n  if (null === bg) throw Error(l(321));\n  return bg;\n}\nfunction qg() {\n  if (0 < og) throw Error(l(312));\n  return {\n    memoizedState: null,\n    queue: null,\n    next: null\n  };\n}\nfunction rg() {\n  null === V ? null === fg ? (gg = !1, fg = V = qg()) : (gg = !0, V = fg) : null === V.next ? (gg = !1, V = V.next = qg()) : (gg = !0, V = V.next);\n  return V;\n}\nfunction sg(a, b, c, d) {\n  for (; hg;) hg = !1, jg = ig = 0, kg = -1, lg = 0, og += 1, V = null, c = a(b, d);\n  tg();\n  return c;\n}\nfunction ug() {\n  var a = mg;\n  mg = null;\n  return a;\n}\nfunction tg() {\n  eg = dg = cg = bg = null;\n  hg = !1;\n  fg = null;\n  og = 0;\n  V = ng = null;\n}\nfunction vg(a, b) {\n  return "function" === typeof b ? b(a) : b;\n}\nfunction wg(a, b, c) {\n  bg = pg();\n  V = rg();\n  if (gg) {\n    var d = V.queue;\n    b = d.dispatch;\n    if (null !== ng && (c = ng.get(d), void 0 !== c)) {\n      ng.delete(d);\n      d = V.memoizedState;\n      do d = a(d, c.action), c = c.next; while (null !== c);\n      V.memoizedState = d;\n      return [d, b];\n    }\n    return [V.memoizedState, b];\n  }\n  a = a === vg ? "function" === typeof b ? b() : b : void 0 !== c ? c(b) : b;\n  V.memoizedState = a;\n  a = V.queue = {\n    last: null,\n    dispatch: null\n  };\n  a = a.dispatch = xg.bind(null, bg, a);\n  return [V.memoizedState, a];\n}\nfunction yg(a, b) {\n  bg = pg();\n  V = rg();\n  b = void 0 === b ? null : b;\n  if (null !== V) {\n    var c = V.memoizedState;\n    if (null !== c && null !== b) {\n      var d = c[1];\n      a: if (null === d) d = !1;else {\n        for (var e = 0; e < d.length && e < b.length; e++) if (!ag(b[e], d[e])) {\n          d = !1;\n          break a;\n        }\n        d = !0;\n      }\n      if (d) return c[0];\n    }\n  }\n  a = a();\n  V.memoizedState = [a, b];\n  return a;\n}\nfunction xg(a, b, c) {\n  if (25 <= og) throw Error(l(301));\n  if (a === bg) if (hg = !0, a = {\n    action: c,\n    next: null\n  }, null === ng && (ng = new Map()), c = ng.get(b), void 0 === c) ng.set(b, a);else {\n    for (b = c; null !== b.next;) b = b.next;\n    b.next = a;\n  }\n}\nfunction zg() {\n  throw Error(l(394));\n}\nfunction Ag() {\n  throw Error(l(479));\n}\nfunction Bg(a) {\n  var b = lg;\n  lg += 1;\n  null === mg && (mg = []);\n  return Xf(mg, a, b);\n}\nfunction Cg() {\n  throw Error(l(393));\n}\nfunction Dg() {}\nvar Fg = {\n    readContext: function (a) {\n      return a._currentValue;\n    },\n    use: function (a) {\n      if (null !== a && "object" === typeof a) {\n        if ("function" === typeof a.then) return Bg(a);\n        if (a.$$typeof === jf || a.$$typeof === kf) return a._currentValue;\n      }\n      throw Error(l(438, String(a)));\n    },\n    useContext: function (a) {\n      pg();\n      return a._currentValue;\n    },\n    useMemo: yg,\n    useReducer: wg,\n    useRef: function (a) {\n      bg = pg();\n      V = rg();\n      var b = V.memoizedState;\n      return null === b ? (a = {\n        current: a\n      }, V.memoizedState = a) : b;\n    },\n    useState: function (a) {\n      return wg(vg, a);\n    },\n    useInsertionEffect: Dg,\n    useLayoutEffect: Dg,\n    useCallback: function (a, b) {\n      return yg(function () {\n        return a;\n      }, b);\n    },\n    useImperativeHandle: Dg,\n    useEffect: Dg,\n    useDebugValue: Dg,\n    useDeferredValue: function (a) {\n      pg();\n      return a;\n    },\n    useTransition: function () {\n      pg();\n      return [!1, zg];\n    },\n    useId: function () {\n      var a = cg.treeContext;\n      var b = a.overflow;\n      a = a.id;\n      a = (a & ~(1 << 32 - Rf(a) - 1)).toString(32) + b;\n      var c = Eg;\n      if (null === c) throw Error(l(404));\n      b = ig++;\n      a = ":" + c.idPrefix + "R" + a;\n      0 < b && (a += "H" + b.toString(32));\n      return a + ":";\n    },\n    useSyncExternalStore: function (a, b, c) {\n      if (void 0 === c) throw Error(l(407));\n      return c();\n    },\n    useCacheRefresh: function () {\n      return Cg;\n    },\n    useHostTransitionStatus: function () {\n      pg();\n      return La;\n    },\n    useOptimistic: function (a) {\n      pg();\n      return [a, Ag];\n    },\n    useFormState: function (a, b, c) {\n      pg();\n      var d = jg++,\n        e = dg;\n      if ("function" === typeof a.$$FORM_ACTION) {\n        var f = null,\n          g = eg;\n        e = e.formState;\n        var h = a.$$IS_SIGNATURE_EQUAL;\n        if (null !== e && "function" === typeof h) {\n          var k = e[1];\n          h.call(a, e[2], e[3]) && (f = void 0 !== c ? "p" + c : "k" + ca(JSON.stringify([g, null, d]), 0), k === f && (kg = d, b = e[0]));\n        }\n        var m = a.bind(null, b);\n        a = function (q) {\n          m(q);\n        };\n        "function" === typeof m.$$FORM_ACTION && (a.$$FORM_ACTION = function (q) {\n          q = m.$$FORM_ACTION(q);\n          void 0 !== c && (c += "", q.action = c);\n          var t = q.data;\n          t && (null === f && (f = void 0 !== c ? "p" + c : "k" + ca(JSON.stringify([g, null, d]), 0)), t.append("$ACTION_KEY", f));\n          return q;\n        });\n        return [b, a];\n      }\n      var p = a.bind(null, b);\n      return [b, function (q) {\n        p(q);\n      }];\n    }\n  },\n  Eg = null,\n  Gg = {\n    getCacheSignal: function () {\n      throw Error(l(248));\n    },\n    getCacheForType: function () {\n      throw Error(l(248));\n    }\n  },\n  Hg = Ka.ReactCurrentDispatcher,\n  Ig = Ka.ReactCurrentCache;\nfunction Jg(a) {\n  console.error(a);\n  return null;\n}\nfunction Kg() {}\nfunction Lg(a, b, c, d, e, f, g, h, k, m, p, q) {\n  Ma.current = $a;\n  var t = [],\n    u = new Set();\n  b = {\n    destination: null,\n    flushScheduled: !1,\n    resumableState: b,\n    renderState: c,\n    rootFormatContext: d,\n    progressiveChunkSize: void 0 === e ? 12800 : e,\n    status: 0,\n    fatalError: null,\n    nextSegmentId: 0,\n    allPendingTasks: 0,\n    pendingRootTasks: 0,\n    completedRootSegment: null,\n    abortableTasks: u,\n    pingedTasks: t,\n    clientRenderedBoundaries: [],\n    completedBoundaries: [],\n    partialBoundaries: [],\n    trackedPostpones: null,\n    onError: void 0 === f ? Jg : f,\n    onPostpone: void 0 === p ? Kg : p,\n    onAllReady: void 0 === g ? Kg : g,\n    onShellReady: void 0 === h ? Kg : h,\n    onShellError: void 0 === k ? Kg : k,\n    onFatalError: void 0 === m ? Kg : m,\n    formState: void 0 === q ? null : q\n  };\n  c = Mg(b, 0, null, d, !1, !1);\n  c.parentFlushed = !0;\n  a = Ng(b, null, a, -1, null, c, u, null, d, Ef, null, Pf, null);\n  t.push(a);\n  return b;\n}\nvar U = null;\nfunction Og(a, b) {\n  a.pingedTasks.push(b);\n  1 === a.pingedTasks.length && (a.flushScheduled = null !== a.destination, Pg(a));\n}\nfunction Qg(a, b) {\n  return {\n    status: 0,\n    rootSegmentID: -1,\n    parentFlushed: !1,\n    pendingTasks: 0,\n    completedSegments: [],\n    byteSize: 0,\n    fallbackAbortableTasks: b,\n    errorDigest: null,\n    resources: {\n      styles: new Set(),\n      stylesheets: new Set()\n    },\n    trackedContentKeyPath: null,\n    trackedFallbackNode: null\n  };\n}\nfunction Ng(a, b, c, d, e, f, g, h, k, m, p, q, t) {\n  a.allPendingTasks++;\n  null === e ? a.pendingRootTasks++ : e.pendingTasks++;\n  var u = {\n    replay: null,\n    node: c,\n    childIndex: d,\n    ping: function () {\n      return Og(a, u);\n    },\n    blockedBoundary: e,\n    blockedSegment: f,\n    abortSet: g,\n    keyPath: h,\n    formatContext: k,\n    legacyContext: m,\n    context: p,\n    treeContext: q,\n    componentStack: t,\n    thenableState: b\n  };\n  g.add(u);\n  return u;\n}\nfunction Rg(a, b, c, d, e, f, g, h, k, m, p, q, t) {\n  a.allPendingTasks++;\n  null === f ? a.pendingRootTasks++ : f.pendingTasks++;\n  c.pendingTasks++;\n  var u = {\n    replay: c,\n    node: d,\n    childIndex: e,\n    ping: function () {\n      return Og(a, u);\n    },\n    blockedBoundary: f,\n    blockedSegment: null,\n    abortSet: g,\n    keyPath: h,\n    formatContext: k,\n    legacyContext: m,\n    context: p,\n    treeContext: q,\n    componentStack: t,\n    thenableState: b\n  };\n  g.add(u);\n  return u;\n}\nfunction Mg(a, b, c, d, e, f) {\n  return {\n    status: 0,\n    id: -1,\n    index: b,\n    parentFlushed: !1,\n    chunks: [],\n    children: [],\n    parentFormatContext: d,\n    boundary: c,\n    lastPushedText: e,\n    textEmbedded: f\n  };\n}\nfunction Sg(a, b) {\n  return {\n    tag: 0,\n    parent: a.componentStack,\n    type: b\n  };\n}\nfunction Tg(a, b) {\n  if (b && null !== a.trackedPostpones) {\n    try {\n      a = "";\n      do {\n        switch (b.tag) {\n          case 0:\n            a += Bf(b.type, null, null);\n            break;\n          case 1:\n            a += Df(b.type, !1);\n            break;\n          case 2:\n            a += Df(b.type, !0);\n        }\n        b = b.parent;\n      } while (b);\n      var c = a;\n    } catch (d) {\n      c = "\\nError generating stack: " + d.message + "\\n" + d.stack;\n    }\n    c = {\n      componentStack: c\n    };\n  } else c = {};\n  return c;\n}\nfunction W(a, b, c) {\n  a = a.onError(b, c);\n  if (null == a || "string" === typeof a) return a;\n}\nfunction Ug(a, b) {\n  var c = a.onShellError;\n  c(b);\n  c = a.onFatalError;\n  c(b);\n  null !== a.destination ? (a.status = 2, na(a.destination, b)) : (a.status = 1, a.fatalError = b);\n}\nfunction Vg(a, b, c, d, e) {\n  var f = d.render(),\n    g = e.childContextTypes;\n  if (null !== g && void 0 !== g) {\n    c = b.legacyContext;\n    if ("function" !== typeof d.getChildContext) e = c;else {\n      d = d.getChildContext();\n      for (var h in d) if (!(h in g)) throw Error(l(108, zf(e) || "Unknown", h));\n      e = D({}, c, d);\n    }\n    b.legacyContext = e;\n    Z(a, b, null, f, -1);\n    b.legacyContext = c;\n  } else e = b.keyPath, b.keyPath = c, Z(a, b, null, f, -1), b.keyPath = e;\n}\nfunction Wg(a, b, c, d, e, f, g) {\n  var h = !1;\n  if (0 !== f && null !== a.formState) {\n    var k = b.blockedSegment;\n    if (null !== k) {\n      h = !0;\n      k = k.chunks;\n      for (var m = 0; m < f; m++) m === g ? k.push(jc) : k.push(kc);\n    }\n  }\n  f = b.keyPath;\n  b.keyPath = c;\n  e ? (c = b.treeContext, b.treeContext = Qf(c, 1, 0), Xg(a, b, d, -1), b.treeContext = c) : h ? Xg(a, b, d, -1) : Z(a, b, null, d, -1);\n  b.keyPath = f;\n}\nfunction Yg(a, b) {\n  if (a && a.defaultProps) {\n    b = D({}, b);\n    a = a.defaultProps;\n    for (var c in a) void 0 === b[c] && (b[c] = a[c]);\n    return b;\n  }\n  return b;\n}\nfunction Zg(a, b, c, d, e, f, g) {\n  if ("function" === typeof e) {\n    if (e.prototype && e.prototype.isReactComponent) {\n      d = b.componentStack;\n      b.componentStack = {\n        tag: 2,\n        parent: b.componentStack,\n        type: e\n      };\n      g = Ff(e, b.legacyContext);\n      var h = e.contextType;\n      h = new e(f, "object" === typeof h && null !== h ? h._currentValue : g);\n      Of(h, e, f, g);\n      Vg(a, b, c, h, e);\n      b.componentStack = d;\n    } else {\n      g = Ff(e, b.legacyContext);\n      h = b.componentStack;\n      b.componentStack = {\n        tag: 1,\n        parent: b.componentStack,\n        type: e\n      };\n      bg = {};\n      cg = b;\n      dg = a;\n      eg = c;\n      jg = ig = 0;\n      kg = -1;\n      lg = 0;\n      mg = d;\n      d = e(f, g);\n      d = sg(e, f, d, g);\n      var k = 0 !== ig,\n        m = jg,\n        p = kg;\n      "object" === typeof d && null !== d && "function" === typeof d.render && void 0 === d.$$typeof ? (Of(d, e, f, g), Vg(a, b, c, d, e)) : Wg(a, b, c, d, k, m, p);\n      b.componentStack = h;\n    }\n  } else if ("string" === typeof e) {\n    d = b.componentStack;\n    b.componentStack = Sg(b, e);\n    g = b.blockedSegment;\n    if (null === g) g = f.children, h = b.formatContext, k = b.keyPath, b.formatContext = Nb(h, e, f), b.keyPath = c, Xg(a, b, g, -1), b.formatContext = h, b.keyPath = k;else {\n      k = Ec(g.chunks, e, f, a.resumableState, a.renderState, b.formatContext, g.lastPushedText);\n      g.lastPushedText = !1;\n      h = b.formatContext;\n      m = b.keyPath;\n      b.formatContext = Nb(h, e, f);\n      b.keyPath = c;\n      Xg(a, b, k, -1);\n      b.formatContext = h;\n      b.keyPath = m;\n      a: {\n        c = g.chunks;\n        a = a.resumableState;\n        switch (e) {\n          case "title":\n          case "style":\n          case "script":\n          case "area":\n          case "base":\n          case "br":\n          case "col":\n          case "embed":\n          case "hr":\n          case "img":\n          case "input":\n          case "keygen":\n          case "link":\n          case "meta":\n          case "param":\n          case "source":\n          case "track":\n          case "wbr":\n            break a;\n          case "body":\n            if (1 >= h.insertionMode) {\n              a.hasBody = !0;\n              break a;\n            }\n            break;\n          case "html":\n            if (0 === h.insertionMode) {\n              a.hasHtml = !0;\n              break a;\n            }\n        }\n        c.push(yc(e));\n      }\n      g.lastPushedText = !1;\n    }\n    b.componentStack = d;\n  } else {\n    switch (e) {\n      case vf:\n      case rf:\n      case ff:\n      case gf:\n      case ef:\n        e = b.keyPath;\n        b.keyPath = c;\n        Z(a, b, null, f.children, -1);\n        b.keyPath = e;\n        return;\n      case uf:\n        "hidden" !== f.mode && (e = b.keyPath, b.keyPath = c, Z(a, b, null, f.children, -1), b.keyPath = e);\n        return;\n      case nf:\n        e = b.componentStack;\n        b.componentStack = Sg(b, "SuspenseList");\n        d = b.keyPath;\n        b.keyPath = c;\n        Z(a, b, null, f.children, -1);\n        b.keyPath = d;\n        b.componentStack = e;\n        return;\n      case qf:\n        throw Error(l(343));\n      case mf:\n        a: if (null !== b.replay) {\n          e = b.keyPath;\n          b.keyPath = c;\n          c = f.children;\n          try {\n            Xg(a, b, c, -1);\n          } finally {\n            b.keyPath = e;\n          }\n        } else {\n          var q = b.componentStack;\n          e = b.componentStack = Sg(b, "Suspense");\n          var t = b.keyPath;\n          d = b.blockedBoundary;\n          var u = b.blockedSegment;\n          g = f.fallback;\n          var B = f.children;\n          f = new Set();\n          m = Qg(a, f);\n          null !== a.trackedPostpones && (m.trackedContentKeyPath = c);\n          p = Mg(a, u.chunks.length, m, b.formatContext, !1, !1);\n          u.children.push(p);\n          u.lastPushedText = !1;\n          var E = Mg(a, 0, null, b.formatContext, !1, !1);\n          E.parentFlushed = !0;\n          b.blockedBoundary = m;\n          b.blockedSegment = E;\n          a.renderState.boundaryResources = m.resources;\n          b.keyPath = c;\n          try {\n            if (Xg(a, b, B, -1), E.lastPushedText && E.textEmbedded && E.chunks.push(Ob), E.status = 1, $g(m, E), 0 === m.pendingTasks && 0 === m.status) {\n              m.status = 1;\n              b.componentStack = q;\n              break a;\n            }\n          } catch (w) {\n            E.status = 4, m.status = 4, h = Tg(a, b.componentStack), k = W(a, w, h), m.errorDigest = k;\n          } finally {\n            a.renderState.boundaryResources = d ? d.resources : null, b.blockedBoundary = d, b.blockedSegment = u, b.keyPath = t, b.componentStack = q;\n          }\n          h = [c[0], "Suspense Fallback", c[2]];\n          k = a.trackedPostpones;\n          null !== k && (q = [h[1], h[2], [], null], k.workingMap.set(h, q), 5 === m.status ? k.workingMap.get(c)[4] = q : m.trackedFallbackNode = q);\n          b = Ng(a, null, g, -1, d, p, f, h, b.formatContext, b.legacyContext, b.context, b.treeContext, e);\n          a.pingedTasks.push(b);\n        }\n        return;\n    }\n    if ("object" === typeof e && null !== e) switch (e.$$typeof) {\n      case lf:\n        h = b.componentStack;\n        b.componentStack = {\n          tag: 1,\n          parent: b.componentStack,\n          type: e.render\n        };\n        e = e.render;\n        bg = {};\n        cg = b;\n        dg = a;\n        eg = c;\n        jg = ig = 0;\n        kg = -1;\n        lg = 0;\n        mg = d;\n        d = e(f, g);\n        f = sg(e, f, d, g);\n        Wg(a, b, c, f, 0 !== ig, jg, kg);\n        b.componentStack = h;\n        return;\n      case of:\n        e = e.type;\n        f = Yg(e, f);\n        Zg(a, b, c, d, e, f, g);\n        return;\n      case hf:\n        g = f.children;\n        d = b.keyPath;\n        e = e._context;\n        f = f.value;\n        h = e._currentValue;\n        e._currentValue = f;\n        k = Gf;\n        Gf = f = {\n          parent: k,\n          depth: null === k ? 0 : k.depth + 1,\n          context: e,\n          parentValue: h,\n          value: f\n        };\n        b.context = f;\n        b.keyPath = c;\n        Z(a, b, null, g, -1);\n        a = Gf;\n        if (null === a) throw Error(l(403));\n        c = a.parentValue;\n        a.context._currentValue = c === xf ? a.context._defaultValue : c;\n        a = Gf = a.parent;\n        b.context = a;\n        b.keyPath = d;\n        return;\n      case jf:\n        f = f.children;\n        f = f(e._currentValue);\n        e = b.keyPath;\n        b.keyPath = c;\n        Z(a, b, null, f, -1);\n        b.keyPath = e;\n        return;\n      case pf:\n        g = b.componentStack;\n        b.componentStack = Sg(b, "Lazy");\n        h = e._init;\n        e = h(e._payload);\n        f = Yg(e, f);\n        Zg(a, b, c, d, e, f, void 0);\n        b.componentStack = g;\n        return;\n    }\n    throw Error(l(130, null == e ? e : typeof e, ""));\n  }\n}\nfunction ah(a, b, c, d, e) {\n  var f = b.replay,\n    g = b.blockedBoundary,\n    h = Mg(a, 0, null, b.formatContext, !1, !1);\n  h.id = c;\n  h.parentFlushed = !0;\n  try {\n    b.replay = null, b.blockedSegment = h, Xg(a, b, d, e), h.status = 1, null === g ? a.completedRootSegment = h : ($g(g, h), g.parentFlushed && a.partialBoundaries.push(g));\n  } finally {\n    b.replay = f, b.blockedSegment = null;\n  }\n}\nfunction Z(a, b, c, d, e) {\n  if (null !== b.replay && "number" === typeof b.replay.slots) ah(a, b, b.replay.slots, d, e);else {\n    b.node = d;\n    b.childIndex = e;\n    if ("object" === typeof d && null !== d) {\n      switch (d.$$typeof) {\n        case cf:\n          var f = d.type,\n            g = d.key,\n            h = d.props,\n            k = d.ref,\n            m = zf(f),\n            p = null == g ? -1 === e ? 0 : e : g;\n          g = [b.keyPath, m, p];\n          if (null !== b.replay) a: {\n            var q = b.replay;\n            e = q.nodes;\n            for (d = 0; d < e.length; d++) {\n              var t = e[d];\n              if (p === t[1]) {\n                if (4 === t.length) {\n                  if (null !== m && m !== t[0]) throw Error(l(490, t[0], m));\n                  var u = t[2];\n                  m = t[3];\n                  t = b.node;\n                  b.replay = {\n                    nodes: u,\n                    slots: m,\n                    pendingTasks: 1\n                  };\n                  try {\n                    Zg(a, b, g, c, f, h, k);\n                    if (1 === b.replay.pendingTasks && 0 < b.replay.nodes.length) throw Error(l(488));\n                    b.replay.pendingTasks--;\n                  } catch (G) {\n                    if ("object" === typeof G && null !== G && (G === Vf || "function" === typeof G.then)) throw b.node === t && (b.replay = q), G;\n                    b.replay.pendingTasks--;\n                    h = Tg(a, b.componentStack);\n                    g = a;\n                    a = b.blockedBoundary;\n                    c = G;\n                    h = W(g, c, h);\n                    bh(g, a, u, m, c, h);\n                  }\n                  b.replay = q;\n                } else {\n                  if (f !== mf) throw Error(l(490, "Suspense", zf(f) || "Unknown"));\n                  b: {\n                    q = void 0;\n                    c = t[5];\n                    f = t[2];\n                    k = t[3];\n                    m = null === t[4] ? [] : t[4][2];\n                    t = null === t[4] ? null : t[4][3];\n                    p = b.componentStack;\n                    var B = b.componentStack = Sg(b, "Suspense"),\n                      E = b.keyPath,\n                      w = b.replay,\n                      z = b.blockedBoundary,\n                      ha = h.children;\n                    h = h.fallback;\n                    var X = new Set(),\n                      y = Qg(a, X);\n                    y.parentFlushed = !0;\n                    y.rootSegmentID = c;\n                    b.blockedBoundary = y;\n                    b.replay = {\n                      nodes: f,\n                      slots: k,\n                      pendingTasks: 1\n                    };\n                    a.renderState.boundaryResources = y.resources;\n                    try {\n                      Xg(a, b, ha, -1);\n                      if (1 === b.replay.pendingTasks && 0 < b.replay.nodes.length) throw Error(l(488));\n                      b.replay.pendingTasks--;\n                      if (0 === y.pendingTasks && 0 === y.status) {\n                        y.status = 1;\n                        a.completedBoundaries.push(y);\n                        break b;\n                      }\n                    } catch (G) {\n                      y.status = 4, u = Tg(a, b.componentStack), q = W(a, G, u), y.errorDigest = q, b.replay.pendingTasks--, a.clientRenderedBoundaries.push(y);\n                    } finally {\n                      a.renderState.boundaryResources = z ? z.resources : null, b.blockedBoundary = z, b.replay = w, b.keyPath = E, b.componentStack = p;\n                    }\n                    b = Rg(a, null, {\n                      nodes: m,\n                      slots: t,\n                      pendingTasks: 0\n                    }, h, -1, z, X, [g[0], "Suspense Fallback", g[2]], b.formatContext, b.legacyContext, b.context, b.treeContext, B);\n                    a.pingedTasks.push(b);\n                  }\n                }\n                e.splice(d, 1);\n                break a;\n              }\n            }\n          } else Zg(a, b, g, c, f, h, k);\n          return;\n        case df:\n          throw Error(l(257));\n        case pf:\n          h = b.componentStack;\n          b.componentStack = Sg(b, "Lazy");\n          g = d._init;\n          d = g(d._payload);\n          b.componentStack = h;\n          Z(a, b, null, d, e);\n          return;\n      }\n      if (Ja(d)) {\n        ch(a, b, d, e);\n        return;\n      }\n      null === d || "object" !== typeof d ? h = null : (h = yf && d[yf] || d["@@iterator"], h = "function" === typeof h ? h : null);\n      if (h && (h = h.call(d))) {\n        d = h.next();\n        if (!d.done) {\n          g = [];\n          do g.push(d.value), d = h.next(); while (!d.done);\n          ch(a, b, g, e);\n        }\n        return;\n      }\n      if ("function" === typeof d.then) return Z(a, b, null, Bg(d), e);\n      if (d.$$typeof === jf || d.$$typeof === kf) return Z(a, b, null, d._currentValue, e);\n      e = Object.prototype.toString.call(d);\n      throw Error(l(31, "[object Object]" === e ? "object with keys {" + Object.keys(d).join(", ") + "}" : e));\n    }\n    "string" === typeof d ? (e = b.blockedSegment, null !== e && (e.lastPushedText = Pb(e.chunks, d, a.renderState, e.lastPushedText))) : "number" === typeof d && (e = b.blockedSegment, null !== e && (e.lastPushedText = Pb(e.chunks, "" + d, a.renderState, e.lastPushedText)));\n  }\n}\nfunction ch(a, b, c, d) {\n  var e = b.keyPath;\n  if (-1 !== d && (b.keyPath = [b.keyPath, "Fragment", d], null !== b.replay)) {\n    for (var f = b.replay, g = f.nodes, h = 0; h < g.length; h++) {\n      var k = g[h];\n      if (k[1] === d) {\n        d = k[2];\n        k = k[3];\n        b.replay = {\n          nodes: d,\n          slots: k,\n          pendingTasks: 1\n        };\n        try {\n          ch(a, b, c, -1);\n          if (1 === b.replay.pendingTasks && 0 < b.replay.nodes.length) throw Error(l(488));\n          b.replay.pendingTasks--;\n        } catch (q) {\n          if ("object" === typeof q && null !== q && (q === Vf || "function" === typeof q.then)) throw q;\n          b.replay.pendingTasks--;\n          c = Tg(a, b.componentStack);\n          var m = b.blockedBoundary,\n            p = q;\n          c = W(a, p, c);\n          bh(a, m, d, k, p, c);\n        }\n        b.replay = f;\n        g.splice(h, 1);\n        break;\n      }\n    }\n    b.keyPath = e;\n    return;\n  }\n  f = b.treeContext;\n  g = c.length;\n  if (null !== b.replay && (h = b.replay.slots, null !== h && "object" === typeof h)) {\n    for (d = 0; d < g; d++) k = c[d], b.treeContext = Qf(f, g, d), m = h[d], "number" === typeof m ? (ah(a, b, m, k, d), delete h[d]) : Xg(a, b, k, d);\n    b.treeContext = f;\n    b.keyPath = e;\n    return;\n  }\n  for (h = 0; h < g; h++) d = c[h], b.treeContext = Qf(f, g, h), Xg(a, b, d, h);\n  b.treeContext = f;\n  b.keyPath = e;\n}\nfunction Xg(a, b, c, d) {\n  var e = b.formatContext,\n    f = b.legacyContext,\n    g = b.context,\n    h = b.keyPath,\n    k = b.treeContext,\n    m = b.componentStack,\n    p = b.blockedSegment;\n  if (null === p) try {\n    return Z(a, b, null, c, d);\n  } catch (u) {\n    if (tg(), c = u === Vf ? Zf() : u, "object" === typeof c && null !== c && "function" === typeof c.then) {\n      d = ug();\n      a = Rg(a, d, b.replay, b.node, b.childIndex, b.blockedBoundary, b.abortSet, b.keyPath, b.formatContext, b.legacyContext, b.context, b.treeContext, null !== b.componentStack ? b.componentStack.parent : null).ping;\n      c.then(a, a);\n      b.formatContext = e;\n      b.legacyContext = f;\n      b.context = g;\n      b.keyPath = h;\n      b.treeContext = k;\n      b.componentStack = m;\n      Mf(g);\n      return;\n    }\n  } else {\n    var q = p.children.length,\n      t = p.chunks.length;\n    try {\n      return Z(a, b, null, c, d);\n    } catch (u) {\n      if (tg(), p.children.length = q, p.chunks.length = t, c = u === Vf ? Zf() : u, "object" === typeof c && null !== c && "function" === typeof c.then) {\n        d = ug();\n        p = b.blockedSegment;\n        q = Mg(a, p.chunks.length, null, b.formatContext, p.lastPushedText, !0);\n        p.children.push(q);\n        p.lastPushedText = !1;\n        a = Ng(a, d, b.node, b.childIndex, b.blockedBoundary, q, b.abortSet, b.keyPath, b.formatContext, b.legacyContext, b.context, b.treeContext, null !== b.componentStack ? b.componentStack.parent : null).ping;\n        c.then(a, a);\n        b.formatContext = e;\n        b.legacyContext = f;\n        b.context = g;\n        b.keyPath = h;\n        b.treeContext = k;\n        b.componentStack = m;\n        Mf(g);\n        return;\n      }\n    }\n  }\n  b.formatContext = e;\n  b.legacyContext = f;\n  b.context = g;\n  b.keyPath = h;\n  b.treeContext = k;\n  Mf(g);\n  throw c;\n}\nfunction dh(a) {\n  var b = a.blockedBoundary;\n  a = a.blockedSegment;\n  null !== a && (a.status = 3, eh(this, b, a));\n}\nfunction bh(a, b, c, d, e, f) {\n  for (var g = 0; g < c.length; g++) {\n    var h = c[g];\n    if (4 === h.length) bh(a, b, h[2], h[3], e, f);else {\n      h = h[5];\n      var k = a,\n        m = f,\n        p = Qg(k, new Set());\n      p.parentFlushed = !0;\n      p.rootSegmentID = h;\n      p.status = 4;\n      p.errorDigest = m;\n      p.parentFlushed && k.clientRenderedBoundaries.push(p);\n    }\n  }\n  c.length = 0;\n  if (null !== d) {\n    if (null === b) throw Error(l(487));\n    4 !== b.status && (b.status = 4, b.errorDigest = f, b.parentFlushed && a.clientRenderedBoundaries.push(b));\n    if ("object" === typeof d) for (var q in d) delete d[q];\n  }\n}\nfunction fh(a, b, c) {\n  var d = a.blockedBoundary,\n    e = a.blockedSegment;\n  null !== e && (e.status = 3);\n  if (null === d) {\n    if (d = {}, 1 !== b.status && 2 !== b.status) {\n      a = a.replay;\n      if (null === a) {\n        W(b, c, d);\n        Ug(b, c);\n        return;\n      }\n      a.pendingTasks--;\n      0 === a.pendingTasks && 0 < a.nodes.length && (d = W(b, c, d), bh(b, null, a.nodes, a.slots, c, d));\n      b.pendingRootTasks--;\n      0 === b.pendingRootTasks && gh(b);\n    }\n  } else d.pendingTasks--, 4 !== d.status && (d.status = 4, a = Tg(b, a.componentStack), a = W(b, c, a), d.errorDigest = a, d.parentFlushed && b.clientRenderedBoundaries.push(d)), d.fallbackAbortableTasks.forEach(function (f) {\n    return fh(f, b, c);\n  }), d.fallbackAbortableTasks.clear();\n  b.allPendingTasks--;\n  0 === b.allPendingTasks && hh(b);\n}\nfunction ih(a, b) {\n  try {\n    var c = a.renderState,\n      d = c.onHeaders;\n    if (d) {\n      var e = c.headers;\n      if (e) {\n        c.headers = null;\n        var f = e.preconnects;\n        e.fontPreloads && (f && (f += ", "), f += e.fontPreloads);\n        e.highImagePreloads && (f && (f += ", "), f += e.highImagePreloads);\n        if (!b) {\n          var g = c.styles.values(),\n            h = g.next();\n          b: for (; 0 < e.remainingCapacity && !h.done; h = g.next()) for (var k = h.value.sheets.values(), m = k.next(); 0 < e.remainingCapacity && !m.done; m = k.next()) {\n            var p = m.value,\n              q = p.props,\n              t = q.href,\n              u = p.props,\n              B = Fc(u.href, "style", {\n                crossOrigin: u.crossOrigin,\n                integrity: u.integrity,\n                nonce: u.nonce,\n                type: u.type,\n                fetchPriority: u.fetchPriority,\n                referrerPolicy: u.referrerPolicy,\n                media: u.media\n              });\n            if (2 <= (e.remainingCapacity -= B.length)) c.resets.style[t] = ab, f && (f += ", "), f += B, c.resets.style[t] = "string" === typeof q.crossOrigin || "string" === typeof q.integrity ? [q.crossOrigin, q.integrity] : ab;else break b;\n          }\n        }\n        f ? d({\n          Link: f\n        }) : d({});\n      }\n    }\n  } catch (E) {\n    W(a, E, {});\n  }\n}\nfunction gh(a) {\n  null === a.trackedPostpones && ih(a, !0);\n  a.onShellError = Kg;\n  a = a.onShellReady;\n  a();\n}\nfunction hh(a) {\n  ih(a, null === a.trackedPostpones ? !0 : null === a.completedRootSegment || 5 !== a.completedRootSegment.status);\n  a = a.onAllReady;\n  a();\n}\nfunction $g(a, b) {\n  if (0 === b.chunks.length && 1 === b.children.length && null === b.children[0].boundary && -1 === b.children[0].id) {\n    var c = b.children[0];\n    c.id = b.id;\n    c.parentFlushed = !0;\n    1 === c.status && $g(a, c);\n  } else a.completedSegments.push(b);\n}\nfunction eh(a, b, c) {\n  if (null === b) {\n    if (null !== c && c.parentFlushed) {\n      if (null !== a.completedRootSegment) throw Error(l(389));\n      a.completedRootSegment = c;\n    }\n    a.pendingRootTasks--;\n    0 === a.pendingRootTasks && gh(a);\n  } else b.pendingTasks--, 4 !== b.status && (0 === b.pendingTasks ? (0 === b.status && (b.status = 1), null !== c && c.parentFlushed && 1 === c.status && $g(b, c), b.parentFlushed && a.completedBoundaries.push(b), 1 === b.status && (b.fallbackAbortableTasks.forEach(dh, a), b.fallbackAbortableTasks.clear())) : null !== c && c.parentFlushed && 1 === c.status && ($g(b, c), 1 === b.completedSegments.length && b.parentFlushed && a.partialBoundaries.push(b)));\n  a.allPendingTasks--;\n  0 === a.allPendingTasks && hh(a);\n}\nfunction Pg(a) {\n  if (2 !== a.status) {\n    var b = Gf,\n      c = Hg.current;\n    Hg.current = Fg;\n    var d = Ig.current;\n    Ig.current = Gg;\n    var e = U;\n    U = a;\n    var f = Eg;\n    Eg = a.resumableState;\n    try {\n      var g = a.pingedTasks,\n        h;\n      for (h = 0; h < g.length; h++) {\n        var k = g[h],\n          m = a,\n          p = k.blockedBoundary;\n        m.renderState.boundaryResources = p ? p.resources : null;\n        var q = k.blockedSegment;\n        if (null === q) {\n          var t = m;\n          if (0 !== k.replay.pendingTasks) {\n            Mf(k.context);\n            try {\n              var u = k.thenableState;\n              k.thenableState = null;\n              Z(t, k, u, k.node, k.childIndex);\n              if (1 === k.replay.pendingTasks && 0 < k.replay.nodes.length) throw Error(l(488));\n              k.replay.pendingTasks--;\n              k.abortSet.delete(k);\n              eh(t, k.blockedBoundary, null);\n            } catch (N) {\n              tg();\n              var B = N === Vf ? Zf() : N;\n              if ("object" === typeof B && null !== B && "function" === typeof B.then) {\n                var E = k.ping;\n                B.then(E, E);\n                k.thenableState = ug();\n              } else {\n                k.replay.pendingTasks--;\n                k.abortSet.delete(k);\n                var w = Tg(t, k.componentStack);\n                m = void 0;\n                var z = t,\n                  ha = k.blockedBoundary,\n                  X = B,\n                  y = k.replay.nodes,\n                  G = k.replay.slots;\n                m = W(z, X, w);\n                bh(z, ha, y, G, X, m);\n                t.pendingRootTasks--;\n                0 === t.pendingRootTasks && gh(t);\n                t.allPendingTasks--;\n                0 === t.allPendingTasks && hh(t);\n              }\n            } finally {\n              t.renderState.boundaryResources = null;\n            }\n          }\n        } else if (t = void 0, z = q, 0 === z.status) {\n          Mf(k.context);\n          var H = z.children.length,\n            ia = z.chunks.length;\n          try {\n            var pa = k.thenableState;\n            k.thenableState = null;\n            Z(m, k, pa, k.node, k.childIndex);\n            z.lastPushedText && z.textEmbedded && z.chunks.push(Ob);\n            k.abortSet.delete(k);\n            z.status = 1;\n            eh(m, k.blockedBoundary, z);\n          } catch (N) {\n            tg();\n            z.children.length = H;\n            z.chunks.length = ia;\n            var Y = N === Vf ? Zf() : N;\n            if ("object" === typeof Y && null !== Y && "function" === typeof Y.then) {\n              var ja = k.ping;\n              Y.then(ja, ja);\n              k.thenableState = ug();\n            } else {\n              var ka = Tg(m, k.componentStack);\n              k.abortSet.delete(k);\n              z.status = 4;\n              var J = k.blockedBoundary;\n              t = W(m, Y, ka);\n              null === J ? Ug(m, Y) : (J.pendingTasks--, 4 !== J.status && (J.status = 4, J.errorDigest = t, J.parentFlushed && m.clientRenderedBoundaries.push(J)));\n              m.allPendingTasks--;\n              0 === m.allPendingTasks && hh(m);\n            }\n          } finally {\n            m.renderState.boundaryResources = null;\n          }\n        }\n      }\n      g.splice(0, h);\n      null !== a.destination && jh(a, a.destination);\n    } catch (N) {\n      W(a, N, {}), Ug(a, N);\n    } finally {\n      Eg = f, Hg.current = c, Ig.current = d, c === Fg && Mf(b), U = e;\n    }\n  }\n}\nfunction kh(a, b, c) {\n  c.parentFlushed = !0;\n  switch (c.status) {\n    case 0:\n      c.id = a.nextSegmentId++;\n    case 5:\n      var d = c.id;\n      c.lastPushedText = !1;\n      c.textEmbedded = !1;\n      a = a.renderState;\n      v(b, Ic);\n      v(b, a.placeholderPrefix);\n      a = A(d.toString(16));\n      v(b, a);\n      return x(b, Jc);\n    case 1:\n      c.status = 2;\n      var e = !0;\n      d = c.chunks;\n      var f = 0;\n      c = c.children;\n      for (var g = 0; g < c.length; g++) {\n        for (e = c[g]; f < e.index; f++) v(b, d[f]);\n        e = lh(a, b, e);\n      }\n      for (; f < d.length - 1; f++) v(b, d[f]);\n      f < d.length && (e = x(b, d[f]));\n      return e;\n    default:\n      throw Error(l(390));\n  }\n}\nfunction lh(a, b, c) {\n  var d = c.boundary;\n  if (null === d) return kh(a, b, c);\n  d.parentFlushed = !0;\n  if (4 === d.status) d = d.errorDigest, x(b, Nc), v(b, Pc), d && (v(b, Rc), v(b, A(I(d))), v(b, Qc)), x(b, Sc), kh(a, b, c);else if (1 !== d.status) 0 === d.status && (d.rootSegmentID = a.nextSegmentId++), 0 < d.completedSegments.length && a.partialBoundaries.push(d), Tc(b, a.renderState, d.rootSegmentID), kh(a, b, c);else if (d.byteSize > a.progressiveChunkSize) d.rootSegmentID = a.nextSegmentId++, a.completedBoundaries.push(d), Tc(b, a.renderState, d.rootSegmentID), kh(a, b, c);else {\n    c = d.resources;\n    var e = a.renderState.boundaryResources;\n    e && (c.styles.forEach(af, e), c.stylesheets.forEach(bf, e));\n    x(b, Kc);\n    d = d.completedSegments;\n    if (1 !== d.length) throw Error(l(391));\n    lh(a, b, d[0]);\n  }\n  return x(b, Oc);\n}\nfunction mh(a, b, c) {\n  od(b, a.renderState, c.parentFormatContext, c.id);\n  lh(a, b, c);\n  return pd(b, c.parentFormatContext);\n}\nfunction nh(a, b, c) {\n  a.renderState.boundaryResources = c.resources;\n  for (var d = c.completedSegments, e = 0; e < d.length; e++) oh(a, b, c, d[e]);\n  d.length = 0;\n  Fe(b, c.resources, a.renderState);\n  d = a.resumableState;\n  a = a.renderState;\n  e = c.rootSegmentID;\n  c = c.resources;\n  var f = a.stylesToHoist;\n  a.stylesToHoist = !1;\n  var g = 0 === d.streamingFormat;\n  g ? (v(b, a.startInlineScript), f ? 0 === (d.instructions & 2) ? (d.instructions |= 10, v(b, 512 < Zd.byteLength ? Zd.slice() : Zd)) : 0 === (d.instructions & 8) ? (d.instructions |= 8, v(b, $d)) : v(b, ae) : 0 === (d.instructions & 2) ? (d.instructions |= 2, v(b, Xd)) : v(b, Yd)) : f ? v(b, ge) : v(b, fe);\n  d = A(e.toString(16));\n  v(b, a.boundaryPrefix);\n  v(b, d);\n  g ? v(b, be) : v(b, he);\n  v(b, a.segmentPrefix);\n  v(b, d);\n  f ? g ? (v(b, ce), Ue(b, c)) : (v(b, ie), Ve(b, c)) : g && v(b, de);\n  d = g ? x(b, ee) : x(b, bb);\n  return Hc(b, a) && d;\n}\nfunction oh(a, b, c, d) {\n  if (2 === d.status) return !0;\n  var e = d.id;\n  if (-1 === e) {\n    if (-1 === (d.id = c.rootSegmentID)) throw Error(l(392));\n    return mh(a, b, d);\n  }\n  if (e === c.rootSegmentID) return mh(a, b, d);\n  mh(a, b, d);\n  c = a.resumableState;\n  a = a.renderState;\n  (d = 0 === c.streamingFormat) ? (v(b, a.startInlineScript), 0 === (c.instructions & 1) ? (c.instructions |= 1, v(b, qd)) : v(b, rd)) : v(b, Vd);\n  v(b, a.segmentPrefix);\n  e = A(e.toString(16));\n  v(b, e);\n  d ? v(b, Td) : v(b, Wd);\n  v(b, a.placeholderPrefix);\n  v(b, e);\n  b = d ? x(b, Ud) : x(b, bb);\n  return b;\n}\nfunction jh(a, b) {\n  n = new Uint8Array(512);\n  r = 0;\n  try {\n    var c,\n      d = a.completedRootSegment;\n    if (null !== d) if (5 !== d.status && 0 === a.pendingRootTasks) {\n      var e = a.renderState;\n      if ((0 !== a.allPendingTasks || null !== a.trackedPostpones) && e.externalRuntimeScript) {\n        var f = e.externalRuntimeScript,\n          g = a.resumableState,\n          h = f.src,\n          k = f.chunks;\n        g.scriptResources.hasOwnProperty(h) || (g.scriptResources[h] = null, e.scripts.add(k));\n      }\n      var m = e.htmlChunks,\n        p = e.headChunks;\n      f = 0;\n      if (m) {\n        for (f = 0; f < m.length; f++) v(b, m[f]);\n        if (p) for (f = 0; f < p.length; f++) v(b, p[f]);else v(b, T("head")), v(b, S);\n      } else if (p) for (f = 0; f < p.length; f++) v(b, p[f]);\n      var q = e.charsetChunks;\n      for (f = 0; f < q.length; f++) v(b, q[f]);\n      q.length = 0;\n      e.preconnects.forEach(Ge, b);\n      e.preconnects.clear();\n      var t = e.preconnectChunks;\n      for (f = 0; f < t.length; f++) v(b, t[f]);\n      t.length = 0;\n      e.fontPreloads.forEach(Ge, b);\n      e.fontPreloads.clear();\n      e.highImagePreloads.forEach(Ge, b);\n      e.highImagePreloads.clear();\n      e.styles.forEach(Ne, b);\n      var u = e.importMapChunks;\n      for (f = 0; f < u.length; f++) v(b, u[f]);\n      u.length = 0;\n      e.bootstrapScripts.forEach(Ge, b);\n      e.scripts.forEach(Ge, b);\n      e.scripts.clear();\n      e.bulkPreloads.forEach(Ge, b);\n      e.bulkPreloads.clear();\n      var B = e.preloadChunks;\n      for (f = 0; f < B.length; f++) v(b, B[f]);\n      B.length = 0;\n      var E = e.hoistableChunks;\n      for (f = 0; f < E.length; f++) v(b, E[f]);\n      E.length = 0;\n      m && null === p && v(b, yc("head"));\n      lh(a, b, d);\n      a.completedRootSegment = null;\n      Hc(b, a.renderState);\n    } else return;\n    var w = a.renderState;\n    d = 0;\n    w.preconnects.forEach(Ge, b);\n    w.preconnects.clear();\n    var z = w.preconnectChunks;\n    for (d = 0; d < z.length; d++) v(b, z[d]);\n    z.length = 0;\n    w.fontPreloads.forEach(Ge, b);\n    w.fontPreloads.clear();\n    w.highImagePreloads.forEach(Ge, b);\n    w.highImagePreloads.clear();\n    w.styles.forEach(Pe, b);\n    w.scripts.forEach(Ge, b);\n    w.scripts.clear();\n    w.bulkPreloads.forEach(Ge, b);\n    w.bulkPreloads.clear();\n    var ha = w.preloadChunks;\n    for (d = 0; d < ha.length; d++) v(b, ha[d]);\n    ha.length = 0;\n    var X = w.hoistableChunks;\n    for (d = 0; d < X.length; d++) v(b, X[d]);\n    X.length = 0;\n    var y = a.clientRenderedBoundaries;\n    for (c = 0; c < y.length; c++) {\n      var G = y[c];\n      w = b;\n      var H = a.resumableState,\n        ia = a.renderState,\n        pa = G.rootSegmentID,\n        Y = G.errorDigest,\n        ja = G.errorMessage,\n        ka = G.errorComponentStack,\n        J = 0 === H.streamingFormat;\n      J ? (v(w, ia.startInlineScript), 0 === (H.instructions & 4) ? (H.instructions |= 4, v(w, je)) : v(w, ke)) : v(w, oe);\n      v(w, ia.boundaryPrefix);\n      v(w, A(pa.toString(16)));\n      J && v(w, le);\n      if (Y || ja || ka) J ? (v(w, me), v(w, A(te(Y || "")))) : (v(w, pe), v(w, A(I(Y || ""))));\n      if (ja || ka) J ? (v(w, me), v(w, A(te(ja || "")))) : (v(w, qe), v(w, A(I(ja || ""))));\n      ka && (J ? (v(w, me), v(w, A(te(ka)))) : (v(w, re), v(w, A(I(ka)))));\n      if (J ? !x(w, ne) : !x(w, bb)) {\n        a.destination = null;\n        c++;\n        y.splice(0, c);\n        return;\n      }\n    }\n    y.splice(0, c);\n    var N = a.completedBoundaries;\n    for (c = 0; c < N.length; c++) if (!nh(a, b, N[c])) {\n      a.destination = null;\n      c++;\n      N.splice(0, c);\n      return;\n    }\n    N.splice(0, c);\n    ea(b);\n    n = new Uint8Array(512);\n    r = 0;\n    var ta = a.partialBoundaries;\n    for (c = 0; c < ta.length; c++) {\n      var ua = ta[c];\n      a: {\n        y = a;\n        G = b;\n        y.renderState.boundaryResources = ua.resources;\n        var va = ua.completedSegments;\n        for (H = 0; H < va.length; H++) if (!oh(y, G, ua, va[H])) {\n          H++;\n          va.splice(0, H);\n          var Na = !1;\n          break a;\n        }\n        va.splice(0, H);\n        Na = Fe(G, ua.resources, y.renderState);\n      }\n      if (!Na) {\n        a.destination = null;\n        c++;\n        ta.splice(0, c);\n        return;\n      }\n    }\n    ta.splice(0, c);\n    var la = a.completedBoundaries;\n    for (c = 0; c < la.length; c++) if (!nh(a, b, la[c])) {\n      a.destination = null;\n      c++;\n      la.splice(0, c);\n      return;\n    }\n    la.splice(0, c);\n  } finally {\n    0 === a.allPendingTasks && 0 === a.pingedTasks.length && 0 === a.clientRenderedBoundaries.length && 0 === a.completedBoundaries.length ? (a.flushScheduled = !1, c = a.resumableState, c.hasBody && v(b, yc("body")), c.hasHtml && v(b, yc("html")), ea(b), b.close(), a.destination = null) : ea(b);\n  }\n}\nfunction Ye(a) {\n  if (!1 === a.flushScheduled && 0 === a.pingedTasks.length && null !== a.destination) {\n    a.flushScheduled = !0;\n    var b = a.destination;\n    b ? jh(a, b) : a.flushScheduled = !1;\n  }\n}\nfunction ph(a, b) {\n  try {\n    var c = a.abortableTasks;\n    if (0 < c.size) {\n      var d = void 0 === b ? Error(l(432)) : b;\n      c.forEach(function (e) {\n        return fh(e, a, d);\n      });\n      c.clear();\n    }\n    null !== a.destination && jh(a, a.destination);\n  } catch (e) {\n    W(a, e, {}), Ug(a, e);\n  }\n}\nexports.renderToReadableStream = function (a, b) {\n  return new Promise(function (c, d) {\n    var e,\n      f,\n      g = new Promise(function (u, B) {\n        f = u;\n        e = B;\n      }),\n      h = b ? b.onHeaders : void 0,\n      k;\n    h && (k = function (u) {\n      h(new Headers(u));\n    });\n    var m = Lb(b ? b.identifierPrefix : void 0, b ? b.unstable_externalRuntimeSrc : void 0, b ? b.bootstrapScriptContent : void 0, b ? b.bootstrapScripts : void 0, b ? b.bootstrapModules : void 0),\n      p = Lg(a, m, Jb(m, b ? b.nonce : void 0, b ? b.unstable_externalRuntimeSrc : void 0, b ? b.importMap : void 0, k, b ? b.maxHeadersLength : void 0), Mb(b ? b.namespaceURI : void 0), b ? b.progressiveChunkSize : void 0, b ? b.onError : void 0, f, function () {\n        var u = new ReadableStream({\n          type: "bytes",\n          pull: function (B) {\n            if (1 === p.status) p.status = 2, na(B, p.fatalError);else if (2 !== p.status && null === p.destination) {\n              p.destination = B;\n              try {\n                jh(p, B);\n              } catch (E) {\n                W(p, E, {}), Ug(p, E);\n              }\n            }\n          },\n          cancel: function (B) {\n            p.destination = null;\n            ph(p, B);\n          }\n        }, {\n          highWaterMark: 0\n        });\n        u.allReady = g;\n        c(u);\n      }, function (u) {\n        g.catch(function () {});\n        d(u);\n      }, e, b ? b.onPostpone : void 0, b ? b.formState : void 0);\n    if (b && b.signal) {\n      var q = b.signal;\n      if (q.aborted) ph(p, q.reason);else {\n        var t = function () {\n          ph(p, q.reason);\n          q.removeEventListener("abort", t);\n        };\n        q.addEventListener("abort", t);\n      }\n    }\n    p.flushScheduled = null !== p.destination;\n    Pg(p);\n    null === p.trackedPostpones && ih(p, 0 === p.pendingRootTasks);\n  });\n};\nexports.version = "18.3.0-canary-c5b937576-20231219";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///94262\n')},93748:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('/*\n React\n react-dom.production.min.js\n\n Copyright (c) Meta Platforms, Inc. and affiliates.\n\n This source code is licensed under the MIT license found in the\n LICENSE file in the root directory of this source tree.\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n\n\nvar aa = __webpack_require__(35466),\n  ba = __webpack_require__(27767),\n  ca = {\n    usingClientEntryPoint: !1,\n    Events: null,\n    Dispatcher: {\n      current: null\n    }\n  };\nfunction u(a) {\n  for (var b = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c = 1; c < arguments.length; c++) b += "&args[]=" + encodeURIComponent(arguments[c]);\n  return "Minified React error #" + a + "; visit " + b + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";\n}\nvar C = Object.assign,\n  da = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,\n  ea = da.ReactCurrentDispatcher,\n  fa = {\n    pending: !1,\n    data: null,\n    method: null,\n    action: null\n  },\n  ia = [],\n  ja = -1;\nfunction ka(a) {\n  return {\n    current: a\n  };\n}\nfunction D(a) {\n  0 > ja || (a.current = ia[ja], ia[ja] = null, ja--);\n}\nfunction E(a, b) {\n  ja++;\n  ia[ja] = a.current;\n  a.current = b;\n}\nvar la = Symbol.for("react.element"),\n  ma = Symbol.for("react.portal"),\n  na = Symbol.for("react.fragment"),\n  oa = Symbol.for("react.strict_mode"),\n  pa = Symbol.for("react.profiler"),\n  qa = Symbol.for("react.provider"),\n  ra = Symbol.for("react.context"),\n  sa = Symbol.for("react.server_context"),\n  ta = Symbol.for("react.forward_ref"),\n  ua = Symbol.for("react.suspense"),\n  va = Symbol.for("react.suspense_list"),\n  wa = Symbol.for("react.memo"),\n  xa = Symbol.for("react.lazy"),\n  ya = Symbol.for("react.scope");\nSymbol.for("react.debug_trace_mode");\nvar za = Symbol.for("react.offscreen"),\n  Aa = Symbol.for("react.legacy_hidden"),\n  Ba = Symbol.for("react.cache");\nSymbol.for("react.tracing_marker");\nvar Ca = Symbol.iterator;\nfunction Da(a) {\n  if (null === a || "object" !== typeof a) return null;\n  a = Ca && a[Ca] || a["@@iterator"];\n  return "function" === typeof a ? a : null;\n}\nvar Ea = ka(null),\n  Fa = ka(null),\n  Ga = ka(null),\n  Ha = ka(null),\n  Ia = {\n    $$typeof: ra,\n    _currentValue: null,\n    _currentValue2: null,\n    _threadCount: 0,\n    Provider: null,\n    Consumer: null,\n    _defaultValue: null,\n    _globalName: null\n  };\nfunction Ja(a, b) {\n  E(Ga, b);\n  E(Fa, a);\n  E(Ea, null);\n  a = b.nodeType;\n  switch (a) {\n    case 9:\n    case 11:\n      b = (b = b.documentElement) ? (b = b.namespaceURI) ? Ka(b) : 0 : 0;\n      break;\n    default:\n      if (a = 8 === a ? b.parentNode : b, b = a.tagName, a = a.namespaceURI) a = Ka(a), b = La(a, b);else switch (b) {\n        case "svg":\n          b = 1;\n          break;\n        case "math":\n          b = 2;\n          break;\n        default:\n          b = 0;\n      }\n  }\n  D(Ea);\n  E(Ea, b);\n}\nfunction Ma() {\n  D(Ea);\n  D(Fa);\n  D(Ga);\n}\nfunction Na(a) {\n  null !== a.memoizedState && E(Ha, a);\n  var b = Ea.current;\n  var c = La(b, a.type);\n  b !== c && (E(Fa, a), E(Ea, c));\n}\nfunction Oa(a) {\n  Fa.current === a && (D(Ea), D(Fa));\n  Ha.current === a && (D(Ha), Ia._currentValue = null);\n}\nvar Pa = ba.unstable_scheduleCallback,\n  Qa = ba.unstable_cancelCallback,\n  Ra = ba.unstable_shouldYield,\n  Sa = ba.unstable_requestPaint,\n  Ta = ba.unstable_now,\n  Ua = ba.unstable_getCurrentPriorityLevel,\n  Va = ba.unstable_ImmediatePriority,\n  Wa = ba.unstable_UserBlockingPriority,\n  Xa = ba.unstable_NormalPriority,\n  Ya = ba.unstable_LowPriority,\n  Za = ba.unstable_IdlePriority,\n  $a = null,\n  ab = null;\nfunction bb(a) {\n  if (ab && "function" === typeof ab.onCommitFiberRoot) try {\n    ab.onCommitFiberRoot($a, a, void 0, 128 === (a.current.flags & 128));\n  } catch (b) {}\n}\nvar db = Math.clz32 ? Math.clz32 : cb,\n  eb = Math.log,\n  fb = Math.LN2;\nfunction cb(a) {\n  a >>>= 0;\n  return 0 === a ? 32 : 31 - (eb(a) / fb | 0) | 0;\n}\nvar gb = 128,\n  hb = 4194304;\nfunction ib(a) {\n  var b = a & 42;\n  if (0 !== b) return b;\n  switch (a & -a) {\n    case 1:\n      return 1;\n    case 2:\n      return 2;\n    case 4:\n      return 4;\n    case 8:\n      return 8;\n    case 16:\n      return 16;\n    case 32:\n      return 32;\n    case 64:\n      return 64;\n    case 128:\n    case 256:\n    case 512:\n    case 1024:\n    case 2048:\n    case 4096:\n    case 8192:\n    case 16384:\n    case 32768:\n    case 65536:\n    case 131072:\n    case 262144:\n    case 524288:\n    case 1048576:\n    case 2097152:\n      return a & 4194176;\n    case 4194304:\n    case 8388608:\n    case 16777216:\n    case 33554432:\n      return a & 62914560;\n    case 67108864:\n      return 67108864;\n    case 134217728:\n      return 134217728;\n    case 268435456:\n      return 268435456;\n    case 536870912:\n      return 536870912;\n    case 1073741824:\n      return 0;\n    default:\n      return a;\n  }\n}\nfunction jb(a, b) {\n  var c = a.pendingLanes;\n  if (0 === c) return 0;\n  var d = 0,\n    e = a.suspendedLanes;\n  a = a.pingedLanes;\n  var f = c & 134217727;\n  0 !== f ? (c = f & ~e, 0 !== c ? d = ib(c) : (a &= f, 0 !== a && (d = ib(a)))) : (c &= ~e, 0 !== c ? d = ib(c) : 0 !== a && (d = ib(a)));\n  return 0 === d ? 0 : 0 !== b && b !== d && 0 === (b & e) && (e = d & -d, a = b & -b, e >= a || 32 === e && 0 !== (a & 4194176)) ? b : d;\n}\nfunction kb(a, b) {\n  switch (a) {\n    case 1:\n    case 2:\n    case 4:\n    case 8:\n      return b + 250;\n    case 16:\n    case 32:\n    case 64:\n    case 128:\n    case 256:\n    case 512:\n    case 1024:\n    case 2048:\n    case 4096:\n    case 8192:\n    case 16384:\n    case 32768:\n    case 65536:\n    case 131072:\n    case 262144:\n    case 524288:\n    case 1048576:\n    case 2097152:\n      return b + 5E3;\n    case 4194304:\n    case 8388608:\n    case 16777216:\n    case 33554432:\n      return -1;\n    case 67108864:\n    case 134217728:\n    case 268435456:\n    case 536870912:\n    case 1073741824:\n      return -1;\n    default:\n      return -1;\n  }\n}\nfunction lb(a, b) {\n  if (a.errorRecoveryDisabledLanes & b) return 0;\n  a = a.pendingLanes & -536870913;\n  return 0 !== a ? a : a & 536870912 ? 536870912 : 0;\n}\nfunction mb() {\n  var a = hb;\n  hb <<= 1;\n  0 === (hb & 62914560) && (hb = 4194304);\n  return a;\n}\nfunction nb(a) {\n  for (var b = [], c = 0; 31 > c; c++) b.push(a);\n  return b;\n}\nfunction ob(a, b) {\n  a.pendingLanes |= b;\n  268435456 !== b && (a.suspendedLanes = 0, a.pingedLanes = 0);\n}\nfunction pb(a, b, c) {\n  var d = a.pendingLanes & ~b;\n  a.pendingLanes = b;\n  a.suspendedLanes = 0;\n  a.pingedLanes = 0;\n  a.expiredLanes &= b;\n  a.entangledLanes &= b;\n  a.errorRecoveryDisabledLanes &= b;\n  a.shellSuspendCounter = 0;\n  b = a.entanglements;\n  for (var e = a.expirationTimes, f = a.hiddenUpdates; 0 < d;) {\n    var g = 31 - db(d),\n      h = 1 << g;\n    b[g] = 0;\n    e[g] = -1;\n    var l = f[g];\n    if (null !== l) for (f[g] = null, g = 0; g < l.length; g++) {\n      var p = l[g];\n      null !== p && (p.lane &= -536870913);\n    }\n    d &= ~h;\n  }\n  0 !== c && qb(a, c, 0);\n}\nfunction qb(a, b, c) {\n  a.pendingLanes |= b;\n  a.suspendedLanes &= ~b;\n  var d = 31 - db(b);\n  a.entangledLanes |= b;\n  a.entanglements[d] = a.entanglements[d] | 1073741824 | c & 4194218;\n}\nfunction rb(a, b) {\n  var c = a.entangledLanes |= b;\n  for (a = a.entanglements; c;) {\n    var d = 31 - db(c),\n      e = 1 << d;\n    e & b | a[d] & b && (a[d] |= b);\n    c &= ~e;\n  }\n}\nfunction sb(a, b) {\n  a.pendingLanes |= 2;\n  for (a.entangledLanes |= 2; b;) {\n    var c = 1 << 31 - db(b);\n    a.entanglements[1] |= c;\n    b &= ~c;\n  }\n}\nvar F = 0;\nfunction tb(a, b) {\n  var c = F;\n  try {\n    return F = a, b();\n  } finally {\n    F = c;\n  }\n}\nfunction ub(a) {\n  a &= -a;\n  return 2 < a ? 8 < a ? 0 !== (a & 134217727) ? 32 : 268435456 : 8 : 2;\n}\nvar vb = Object.prototype.hasOwnProperty,\n  wb = Math.random().toString(36).slice(2),\n  xb = "__reactFiber$" + wb,\n  yb = "__reactProps$" + wb,\n  zb = "__reactContainer$" + wb,\n  Ab = "__reactEvents$" + wb,\n  Bb = "__reactListeners$" + wb,\n  Cb = "__reactHandles$" + wb,\n  Db = "__reactResources$" + wb,\n  Fb = "__reactMarker$" + wb;\nfunction Gb(a) {\n  delete a[xb];\n  delete a[yb];\n  delete a[Ab];\n  delete a[Bb];\n  delete a[Cb];\n}\nfunction Hb(a) {\n  var b = a[xb];\n  if (b) return b;\n  for (var c = a.parentNode; c;) {\n    if (b = c[zb] || c[xb]) {\n      c = b.alternate;\n      if (null !== b.child || null !== c && null !== c.child) for (a = Ib(a); null !== a;) {\n        if (c = a[xb]) return c;\n        a = Ib(a);\n      }\n      return b;\n    }\n    a = c;\n    c = a.parentNode;\n  }\n  return null;\n}\nfunction Jb(a) {\n  if (a = a[xb] || a[zb]) {\n    var b = a.tag;\n    if (5 === b || 6 === b || 13 === b || 26 === b || 27 === b || 3 === b) return a;\n  }\n  return null;\n}\nfunction Kb(a) {\n  var b = a.tag;\n  if (5 === b || 26 === b || 27 === b || 6 === b) return a.stateNode;\n  throw Error(u(33));\n}\nfunction Lb(a) {\n  return a[yb] || null;\n}\nfunction Mb(a) {\n  var b = a[Db];\n  b || (b = a[Db] = {\n    hoistableStyles: new Map(),\n    hoistableScripts: new Map()\n  });\n  return b;\n}\nfunction Nb(a) {\n  a[Fb] = !0;\n}\nvar Ob = new Set(),\n  Pb = {};\nfunction Qb(a, b) {\n  Rb(a, b);\n  Rb(a + "Capture", b);\n}\nfunction Rb(a, b) {\n  Pb[a] = b;\n  for (a = 0; a < b.length; a++) Ob.add(b[a]);\n}\nvar Sb = !("undefined" === typeof window || "undefined" === typeof window.document || "undefined" === typeof window.document.createElement),\n  Tb = RegExp("^[:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD][:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]*$"),\n  Ub = {},\n  Vb = {};\nfunction Wb(a) {\n  if (vb.call(Vb, a)) return !0;\n  if (vb.call(Ub, a)) return !1;\n  if (Tb.test(a)) return Vb[a] = !0;\n  Ub[a] = !0;\n  return !1;\n}\nfunction Xb(a, b, c) {\n  if (Wb(b)) if (null === c) a.removeAttribute(b);else {\n    switch (typeof c) {\n      case "undefined":\n      case "function":\n      case "symbol":\n        a.removeAttribute(b);\n        return;\n      case "boolean":\n        var d = b.toLowerCase().slice(0, 5);\n        if ("data-" !== d && "aria-" !== d) {\n          a.removeAttribute(b);\n          return;\n        }\n    }\n    a.setAttribute(b, "" + c);\n  }\n}\nfunction Yb(a, b, c) {\n  if (null === c) a.removeAttribute(b);else {\n    switch (typeof c) {\n      case "undefined":\n      case "function":\n      case "symbol":\n      case "boolean":\n        a.removeAttribute(b);\n        return;\n    }\n    a.setAttribute(b, "" + c);\n  }\n}\nfunction Zb(a, b, c, d) {\n  if (null === d) a.removeAttribute(c);else {\n    switch (typeof d) {\n      case "undefined":\n      case "function":\n      case "symbol":\n      case "boolean":\n        a.removeAttribute(c);\n        return;\n    }\n    a.setAttributeNS(b, c, "" + d);\n  }\n}\nvar $b;\nfunction ac(a) {\n  if (void 0 === $b) try {\n    throw Error();\n  } catch (c) {\n    var b = c.stack.trim().match(/\\n( *(at )?)/);\n    $b = b && b[1] || "";\n  }\n  return "\\n" + $b + a;\n}\nvar bc = !1;\nfunction cc(a, b) {\n  if (!a || bc) return "";\n  bc = !0;\n  var c = Error.prepareStackTrace;\n  Error.prepareStackTrace = void 0;\n  var d = {\n    DetermineComponentFrameRoot: function () {\n      try {\n        if (b) {\n          var w = function () {\n            throw Error();\n          };\n          Object.defineProperty(w.prototype, "props", {\n            set: function () {\n              throw Error();\n            }\n          });\n          if ("object" === typeof Reflect && Reflect.construct) {\n            try {\n              Reflect.construct(w, []);\n            } catch (t) {\n              var r = t;\n            }\n            Reflect.construct(a, [], w);\n          } else {\n            try {\n              w.call();\n            } catch (t) {\n              r = t;\n            }\n            a.call(w.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (t) {\n            r = t;\n          }\n          (w = a()) && "function" === typeof w.catch && w.catch(function () {});\n        }\n      } catch (t) {\n        if (t && r && "string" === typeof t.stack) return [t.stack, r.stack];\n      }\n      return [null, null];\n    }\n  };\n  d.DetermineComponentFrameRoot.displayName = "DetermineComponentFrameRoot";\n  var e = Object.getOwnPropertyDescriptor(d.DetermineComponentFrameRoot, "name");\n  e && e.configurable && Object.defineProperty(d.DetermineComponentFrameRoot, "name", {\n    value: "DetermineComponentFrameRoot"\n  });\n  try {\n    var f = d.DetermineComponentFrameRoot(),\n      g = f[0],\n      h = f[1];\n    if (g && h) {\n      var l = g.split("\\n"),\n        p = h.split("\\n");\n      for (e = d = 0; d < l.length && !l[d].includes("DetermineComponentFrameRoot");) d++;\n      for (; e < p.length && !p[e].includes("DetermineComponentFrameRoot");) e++;\n      if (d === l.length || e === p.length) for (d = l.length - 1, e = p.length - 1; 1 <= d && 0 <= e && l[d] !== p[e];) e--;\n      for (; 1 <= d && 0 <= e; d--, e--) if (l[d] !== p[e]) {\n        if (1 !== d || 1 !== e) {\n          do if (d--, e--, 0 > e || l[d] !== p[e]) {\n            var q = "\\n" + l[d].replace(" at new ", " at ");\n            a.displayName && q.includes("<anonymous>") && (q = q.replace("<anonymous>", a.displayName));\n            return q;\n          } while (1 <= d && 0 <= e);\n        }\n        break;\n      }\n    }\n  } finally {\n    bc = !1, Error.prepareStackTrace = c;\n  }\n  return (c = a ? a.displayName || a.name : "") ? ac(c) : "";\n}\nfunction dc(a) {\n  switch (a.tag) {\n    case 26:\n    case 27:\n    case 5:\n      return ac(a.type);\n    case 16:\n      return ac("Lazy");\n    case 13:\n      return ac("Suspense");\n    case 19:\n      return ac("SuspenseList");\n    case 0:\n    case 2:\n    case 15:\n      return a = cc(a.type, !1), a;\n    case 11:\n      return a = cc(a.type.render, !1), a;\n    case 1:\n      return a = cc(a.type, !0), a;\n    default:\n      return "";\n  }\n}\nfunction ec(a) {\n  if (null == a) return null;\n  if ("function" === typeof a) return a.displayName || a.name || null;\n  if ("string" === typeof a) return a;\n  switch (a) {\n    case na:\n      return "Fragment";\n    case ma:\n      return "Portal";\n    case pa:\n      return "Profiler";\n    case oa:\n      return "StrictMode";\n    case ua:\n      return "Suspense";\n    case va:\n      return "SuspenseList";\n    case Ba:\n      return "Cache";\n  }\n  if ("object" === typeof a) switch (a.$$typeof) {\n    case ra:\n      return (a.displayName || "Context") + ".Consumer";\n    case qa:\n      return (a._context.displayName || "Context") + ".Provider";\n    case ta:\n      var b = a.render;\n      a = a.displayName;\n      a || (a = b.displayName || b.name || "", a = "" !== a ? "ForwardRef(" + a + ")" : "ForwardRef");\n      return a;\n    case wa:\n      return b = a.displayName || null, null !== b ? b : ec(a.type) || "Memo";\n    case xa:\n      b = a._payload;\n      a = a._init;\n      try {\n        return ec(a(b));\n      } catch (c) {}\n  }\n  return null;\n}\nfunction fc(a) {\n  var b = a.type;\n  switch (a.tag) {\n    case 24:\n      return "Cache";\n    case 9:\n      return (b.displayName || "Context") + ".Consumer";\n    case 10:\n      return (b._context.displayName || "Context") + ".Provider";\n    case 18:\n      return "DehydratedFragment";\n    case 11:\n      return a = b.render, a = a.displayName || a.name || "", b.displayName || ("" !== a ? "ForwardRef(" + a + ")" : "ForwardRef");\n    case 7:\n      return "Fragment";\n    case 26:\n    case 27:\n    case 5:\n      return b;\n    case 4:\n      return "Portal";\n    case 3:\n      return "Root";\n    case 6:\n      return "Text";\n    case 16:\n      return ec(b);\n    case 8:\n      return b === oa ? "StrictMode" : "Mode";\n    case 22:\n      return "Offscreen";\n    case 12:\n      return "Profiler";\n    case 21:\n      return "Scope";\n    case 13:\n      return "Suspense";\n    case 19:\n      return "SuspenseList";\n    case 25:\n      return "TracingMarker";\n    case 1:\n    case 0:\n    case 17:\n    case 2:\n    case 14:\n    case 15:\n      if ("function" === typeof b) return b.displayName || b.name || null;\n      if ("string" === typeof b) return b;\n  }\n  return null;\n}\nfunction gc(a) {\n  switch (typeof a) {\n    case "boolean":\n    case "number":\n    case "string":\n    case "undefined":\n      return a;\n    case "object":\n      return a;\n    default:\n      return "";\n  }\n}\nfunction hc(a) {\n  var b = a.type;\n  return (a = a.nodeName) && "input" === a.toLowerCase() && ("checkbox" === b || "radio" === b);\n}\nfunction ic(a) {\n  var b = hc(a) ? "checked" : "value",\n    c = Object.getOwnPropertyDescriptor(a.constructor.prototype, b),\n    d = "" + a[b];\n  if (!a.hasOwnProperty(b) && "undefined" !== typeof c && "function" === typeof c.get && "function" === typeof c.set) {\n    var e = c.get,\n      f = c.set;\n    Object.defineProperty(a, b, {\n      configurable: !0,\n      get: function () {\n        return e.call(this);\n      },\n      set: function (g) {\n        d = "" + g;\n        f.call(this, g);\n      }\n    });\n    Object.defineProperty(a, b, {\n      enumerable: c.enumerable\n    });\n    return {\n      getValue: function () {\n        return d;\n      },\n      setValue: function (g) {\n        d = "" + g;\n      },\n      stopTracking: function () {\n        a._valueTracker = null;\n        delete a[b];\n      }\n    };\n  }\n}\nfunction jc(a) {\n  a._valueTracker || (a._valueTracker = ic(a));\n}\nfunction kc(a) {\n  if (!a) return !1;\n  var b = a._valueTracker;\n  if (!b) return !0;\n  var c = b.getValue();\n  var d = "";\n  a && (d = hc(a) ? a.checked ? "true" : "false" : a.value);\n  a = d;\n  return a !== c ? (b.setValue(a), !0) : !1;\n}\nfunction lc(a) {\n  a = a || ("undefined" !== typeof document ? document : void 0);\n  if ("undefined" === typeof a) return null;\n  try {\n    return a.activeElement || a.body;\n  } catch (b) {\n    return a.body;\n  }\n}\nvar mc = /[\\n"\\\\]/g;\nfunction nc(a) {\n  return a.replace(mc, function (b) {\n    return "\\\\" + b.charCodeAt(0).toString(16) + " ";\n  });\n}\nfunction oc(a, b, c, d, e, f, g, h) {\n  a.name = "";\n  null != g && "function" !== typeof g && "symbol" !== typeof g && "boolean" !== typeof g ? a.type = g : a.removeAttribute("type");\n  if (null != b) {\n    if ("number" === g) {\n      if (0 === b && "" === a.value || a.value != b) a.value = "" + gc(b);\n    } else a.value !== "" + gc(b) && (a.value = "" + gc(b));\n  } else "submit" !== g && "reset" !== g || a.removeAttribute("value");\n  null != b ? pc(a, g, gc(b)) : null != c ? pc(a, g, gc(c)) : null != d && a.removeAttribute("value");\n  null == e && null != f && (a.defaultChecked = !!f);\n  null != e && (a.checked = e && "function" !== typeof e && "symbol" !== typeof e);\n  null != h && "function" !== typeof h && "symbol" !== typeof h && "boolean" !== typeof h ? a.name = "" + gc(h) : a.removeAttribute("name");\n}\nfunction qc(a, b, c, d, e, f, g, h) {\n  null != f && "function" !== typeof f && "symbol" !== typeof f && "boolean" !== typeof f && (a.type = f);\n  if (null != b || null != c) {\n    if (!("submit" !== f && "reset" !== f || void 0 !== b && null !== b)) return;\n    c = null != c ? "" + gc(c) : "";\n    b = null != b ? "" + gc(b) : c;\n    h || b === a.value || (a.value = b);\n    a.defaultValue = b;\n  }\n  d = null != d ? d : e;\n  d = "function" !== typeof d && "symbol" !== typeof d && !!d;\n  a.checked = h ? a.checked : !!d;\n  a.defaultChecked = !!d;\n  null != g && "function" !== typeof g && "symbol" !== typeof g && "boolean" !== typeof g && (a.name = g);\n}\nfunction pc(a, b, c) {\n  "number" === b && lc(a.ownerDocument) === a || a.defaultValue === "" + c || (a.defaultValue = "" + c);\n}\nvar rc = Array.isArray;\nfunction sc(a, b, c, d) {\n  a = a.options;\n  if (b) {\n    b = {};\n    for (var e = 0; e < c.length; e++) b["$" + c[e]] = !0;\n    for (c = 0; c < a.length; c++) e = b.hasOwnProperty("$" + a[c].value), a[c].selected !== e && (a[c].selected = e), e && d && (a[c].defaultSelected = !0);\n  } else {\n    c = "" + gc(c);\n    b = null;\n    for (e = 0; e < a.length; e++) {\n      if (a[e].value === c) {\n        a[e].selected = !0;\n        d && (a[e].defaultSelected = !0);\n        return;\n      }\n      null !== b || a[e].disabled || (b = a[e]);\n    }\n    null !== b && (b.selected = !0);\n  }\n}\nfunction tc(a, b, c) {\n  if (null != b && (b = "" + gc(b), b !== a.value && (a.value = b), null == c)) {\n    a.defaultValue !== b && (a.defaultValue = b);\n    return;\n  }\n  a.defaultValue = null != c ? "" + gc(c) : "";\n}\nfunction uc(a, b, c, d) {\n  if (null == b) {\n    if (null != d) {\n      if (null != c) throw Error(u(92));\n      if (rc(d)) {\n        if (1 < d.length) throw Error(u(93));\n        d = d[0];\n      }\n      c = d;\n    }\n    null == c && (c = "");\n    b = c;\n  }\n  c = gc(b);\n  a.defaultValue = c;\n  d = a.textContent;\n  d === c && "" !== d && null !== d && (a.value = d);\n}\nvar vc;\nfunction wc(a, b) {\n  if ("http://www.w3.org/2000/svg" !== a.namespaceURI || "innerHTML" in a) a.innerHTML = b;else {\n    vc = vc || document.createElement("div");\n    vc.innerHTML = "<svg>" + b.valueOf().toString() + "</svg>";\n    for (b = vc.firstChild; a.firstChild;) a.removeChild(a.firstChild);\n    for (; b.firstChild;) a.appendChild(b.firstChild);\n  }\n}\nvar xc = wc;\n"undefined" !== typeof MSApp && MSApp.execUnsafeLocalFunction && (xc = function (a, b) {\n  return MSApp.execUnsafeLocalFunction(function () {\n    return wc(a, b);\n  });\n});\nvar yc = xc;\nfunction zc(a, b) {\n  if (b) {\n    var c = a.firstChild;\n    if (c && c === a.lastChild && 3 === c.nodeType) {\n      c.nodeValue = b;\n      return;\n    }\n  }\n  a.textContent = b;\n}\nvar Ac = new Set("animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp".split(" "));\nfunction Bc(a, b, c) {\n  var d = 0 === b.indexOf("--");\n  null == c || "boolean" === typeof c || "" === c ? d ? a.setProperty(b, "") : "float" === b ? a.cssFloat = "" : a[b] = "" : d ? a.setProperty(b, c) : "number" !== typeof c || 0 === c || Ac.has(b) ? "float" === b ? a.cssFloat = c : a[b] = ("" + c).trim() : a[b] = c + "px";\n}\nfunction Cc(a, b, c) {\n  if (null != b && "object" !== typeof b) throw Error(u(62));\n  a = a.style;\n  if (null != c) {\n    for (var d in c) !c.hasOwnProperty(d) || null != b && b.hasOwnProperty(d) || (0 === d.indexOf("--") ? a.setProperty(d, "") : "float" === d ? a.cssFloat = "" : a[d] = "");\n    for (var e in b) d = b[e], b.hasOwnProperty(e) && c[e] !== d && Bc(a, e, d);\n  } else for (var f in b) b.hasOwnProperty(f) && Bc(a, f, b[f]);\n}\nfunction Dc(a) {\n  if (-1 === a.indexOf("-")) return !1;\n  switch (a) {\n    case "annotation-xml":\n    case "color-profile":\n    case "font-face":\n    case "font-face-src":\n    case "font-face-uri":\n    case "font-face-format":\n    case "font-face-name":\n    case "missing-glyph":\n      return !1;\n    default:\n      return !0;\n  }\n}\nvar Ec = new Map([["acceptCharset", "accept-charset"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"], ["crossOrigin", "crossorigin"], ["accentHeight", "accent-height"], ["alignmentBaseline", "alignment-baseline"], ["arabicForm", "arabic-form"], ["baselineShift", "baseline-shift"], ["capHeight", "cap-height"], ["clipPath", "clip-path"], ["clipRule", "clip-rule"], ["colorInterpolation", "color-interpolation"], ["colorInterpolationFilters", "color-interpolation-filters"], ["colorProfile", "color-profile"], ["colorRendering", "color-rendering"], ["dominantBaseline", "dominant-baseline"], ["enableBackground", "enable-background"], ["fillOpacity", "fill-opacity"], ["fillRule", "fill-rule"], ["floodColor", "flood-color"], ["floodOpacity", "flood-opacity"], ["fontFamily", "font-family"], ["fontSize", "font-size"], ["fontSizeAdjust", "font-size-adjust"], ["fontStretch", "font-stretch"], ["fontStyle", "font-style"], ["fontVariant", "font-variant"], ["fontWeight", "font-weight"], ["glyphName", "glyph-name"], ["glyphOrientationHorizontal", "glyph-orientation-horizontal"], ["glyphOrientationVertical", "glyph-orientation-vertical"], ["horizAdvX", "horiz-adv-x"], ["horizOriginX", "horiz-origin-x"], ["imageRendering", "image-rendering"], ["letterSpacing", "letter-spacing"], ["lightingColor", "lighting-color"], ["markerEnd", "marker-end"], ["markerMid", "marker-mid"], ["markerStart", "marker-start"], ["overlinePosition", "overline-position"], ["overlineThickness", "overline-thickness"], ["paintOrder", "paint-order"], ["panose-1", "panose-1"], ["pointerEvents", "pointer-events"], ["renderingIntent", "rendering-intent"], ["shapeRendering", "shape-rendering"], ["stopColor", "stop-color"], ["stopOpacity", "stop-opacity"], ["strikethroughPosition", "strikethrough-position"], ["strikethroughThickness", "strikethrough-thickness"], ["strokeDasharray", "stroke-dasharray"], ["strokeDashoffset", "stroke-dashoffset"], ["strokeLinecap", "stroke-linecap"], ["strokeLinejoin", "stroke-linejoin"], ["strokeMiterlimit", "stroke-miterlimit"], ["strokeOpacity", "stroke-opacity"], ["strokeWidth", "stroke-width"], ["textAnchor", "text-anchor"], ["textDecoration", "text-decoration"], ["textRendering", "text-rendering"], ["transformOrigin", "transform-origin"], ["underlinePosition", "underline-position"], ["underlineThickness", "underline-thickness"], ["unicodeBidi", "unicode-bidi"], ["unicodeRange", "unicode-range"], ["unitsPerEm", "units-per-em"], ["vAlphabetic", "v-alphabetic"], ["vHanging", "v-hanging"], ["vIdeographic", "v-ideographic"], ["vMathematical", "v-mathematical"], ["vectorEffect", "vector-effect"], ["vertAdvY", "vert-adv-y"], ["vertOriginX", "vert-origin-x"], ["vertOriginY", "vert-origin-y"], ["wordSpacing", "word-spacing"], ["writingMode", "writing-mode"], ["xmlnsXlink", "xmlns:xlink"], ["xHeight", "x-height"]]),\n  Fc = null;\nfunction Gc(a) {\n  a = a.target || a.srcElement || window;\n  a.correspondingUseElement && (a = a.correspondingUseElement);\n  return 3 === a.nodeType ? a.parentNode : a;\n}\nvar Hc = null,\n  Ic = null;\nfunction Jc(a) {\n  var b = Jb(a);\n  if (b && (a = b.stateNode)) {\n    var c = Lb(a);\n    a: switch (a = b.stateNode, b.type) {\n      case "input":\n        oc(a, c.value, c.defaultValue, c.defaultValue, c.checked, c.defaultChecked, c.type, c.name);\n        b = c.name;\n        if ("radio" === c.type && null != b) {\n          for (c = a; c.parentNode;) c = c.parentNode;\n          c = c.querySelectorAll(\'input[name="\' + nc("" + b) + \'"][type="radio"]\');\n          for (b = 0; b < c.length; b++) {\n            var d = c[b];\n            if (d !== a && d.form === a.form) {\n              var e = Lb(d);\n              if (!e) throw Error(u(90));\n              oc(d, e.value, e.defaultValue, e.defaultValue, e.checked, e.defaultChecked, e.type, e.name);\n            }\n          }\n          for (b = 0; b < c.length; b++) d = c[b], d.form === a.form && kc(d);\n        }\n        break a;\n      case "textarea":\n        tc(a, c.value, c.defaultValue);\n        break a;\n      case "select":\n        b = c.value, null != b && sc(a, !!c.multiple, b, !1);\n    }\n  }\n}\nfunction Kc(a) {\n  Hc ? Ic ? Ic.push(a) : Ic = [a] : Hc = a;\n}\nfunction Lc() {\n  if (Hc) {\n    var a = Hc,\n      b = Ic;\n    Ic = Hc = null;\n    Jc(a);\n    if (b) for (a = 0; a < b.length; a++) Jc(b[a]);\n  }\n}\nfunction Mc(a) {\n  var b = a,\n    c = a;\n  if (a.alternate) for (; b.return;) b = b.return;else {\n    a = b;\n    do b = a, 0 !== (b.flags & 4098) && (c = b.return), a = b.return; while (a);\n  }\n  return 3 === b.tag ? c : null;\n}\nfunction Nc(a) {\n  if (13 === a.tag) {\n    var b = a.memoizedState;\n    null === b && (a = a.alternate, null !== a && (b = a.memoizedState));\n    if (null !== b) return b.dehydrated;\n  }\n  return null;\n}\nfunction Oc(a) {\n  if (Mc(a) !== a) throw Error(u(188));\n}\nfunction Pc(a) {\n  var b = a.alternate;\n  if (!b) {\n    b = Mc(a);\n    if (null === b) throw Error(u(188));\n    return b !== a ? null : a;\n  }\n  for (var c = a, d = b;;) {\n    var e = c.return;\n    if (null === e) break;\n    var f = e.alternate;\n    if (null === f) {\n      d = e.return;\n      if (null !== d) {\n        c = d;\n        continue;\n      }\n      break;\n    }\n    if (e.child === f.child) {\n      for (f = e.child; f;) {\n        if (f === c) return Oc(e), a;\n        if (f === d) return Oc(e), b;\n        f = f.sibling;\n      }\n      throw Error(u(188));\n    }\n    if (c.return !== d.return) c = e, d = f;else {\n      for (var g = !1, h = e.child; h;) {\n        if (h === c) {\n          g = !0;\n          c = e;\n          d = f;\n          break;\n        }\n        if (h === d) {\n          g = !0;\n          d = e;\n          c = f;\n          break;\n        }\n        h = h.sibling;\n      }\n      if (!g) {\n        for (h = f.child; h;) {\n          if (h === c) {\n            g = !0;\n            c = f;\n            d = e;\n            break;\n          }\n          if (h === d) {\n            g = !0;\n            d = f;\n            c = e;\n            break;\n          }\n          h = h.sibling;\n        }\n        if (!g) throw Error(u(189));\n      }\n    }\n    if (c.alternate !== d) throw Error(u(190));\n  }\n  if (3 !== c.tag) throw Error(u(188));\n  return c.stateNode.current === c ? a : b;\n}\nfunction Qc(a) {\n  a = Pc(a);\n  return null !== a ? Rc(a) : null;\n}\nfunction Rc(a) {\n  var b = a.tag;\n  if (5 === b || 26 === b || 27 === b || 6 === b) return a;\n  for (a = a.child; null !== a;) {\n    b = Rc(a);\n    if (null !== b) return b;\n    a = a.sibling;\n  }\n  return null;\n}\nvar Sc = {},\n  Tc = ka(Sc),\n  Uc = ka(!1),\n  Vc = Sc;\nfunction Wc(a, b) {\n  var c = a.type.contextTypes;\n  if (!c) return Sc;\n  var d = a.stateNode;\n  if (d && d.__reactInternalMemoizedUnmaskedChildContext === b) return d.__reactInternalMemoizedMaskedChildContext;\n  var e = {},\n    f;\n  for (f in c) e[f] = b[f];\n  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = b, a.__reactInternalMemoizedMaskedChildContext = e);\n  return e;\n}\nfunction Xc(a) {\n  a = a.childContextTypes;\n  return null !== a && void 0 !== a;\n}\nfunction Yc() {\n  D(Uc);\n  D(Tc);\n}\nfunction Zc(a, b, c) {\n  if (Tc.current !== Sc) throw Error(u(168));\n  E(Tc, b);\n  E(Uc, c);\n}\nfunction $c(a, b, c) {\n  var d = a.stateNode;\n  b = b.childContextTypes;\n  if ("function" !== typeof d.getChildContext) return c;\n  d = d.getChildContext();\n  for (var e in d) if (!(e in b)) throw Error(u(108, fc(a) || "Unknown", e));\n  return C({}, c, d);\n}\nfunction ad(a) {\n  a = (a = a.stateNode) && a.__reactInternalMemoizedMergedChildContext || Sc;\n  Vc = Tc.current;\n  E(Tc, a);\n  E(Uc, Uc.current);\n  return !0;\n}\nfunction bd(a, b, c) {\n  var d = a.stateNode;\n  if (!d) throw Error(u(169));\n  c ? (a = $c(a, b, Vc), d.__reactInternalMemoizedMergedChildContext = a, D(Uc), D(Tc), E(Tc, a)) : D(Uc);\n  E(Uc, c);\n}\nfunction cd(a, b) {\n  return a === b && (0 !== a || 1 / a === 1 / b) || a !== a && b !== b;\n}\nvar dd = "function" === typeof Object.is ? Object.is : cd,\n  ed = [],\n  fd = 0,\n  gd = null,\n  hd = 0,\n  id = [],\n  jd = 0,\n  kd = null,\n  ld = 1,\n  md = "";\nfunction nd(a, b) {\n  ed[fd++] = hd;\n  ed[fd++] = gd;\n  gd = a;\n  hd = b;\n}\nfunction od(a, b, c) {\n  id[jd++] = ld;\n  id[jd++] = md;\n  id[jd++] = kd;\n  kd = a;\n  var d = ld;\n  a = md;\n  var e = 32 - db(d) - 1;\n  d &= ~(1 << e);\n  c += 1;\n  var f = 32 - db(b) + e;\n  if (30 < f) {\n    var g = e - e % 5;\n    f = (d & (1 << g) - 1).toString(32);\n    d >>= g;\n    e -= g;\n    ld = 1 << 32 - db(b) + e | c << e | d;\n    md = f + a;\n  } else ld = 1 << f | c << e | d, md = a;\n}\nfunction pd(a) {\n  null !== a.return && (nd(a, 1), od(a, 1, 0));\n}\nfunction qd(a) {\n  for (; a === gd;) gd = ed[--fd], ed[fd] = null, hd = ed[--fd], ed[fd] = null;\n  for (; a === kd;) kd = id[--jd], id[jd] = null, md = id[--jd], id[jd] = null, ld = id[--jd], id[jd] = null;\n}\nvar G = null,\n  J = null,\n  K = !1,\n  rd = null,\n  sd = !1;\nfunction td(a, b) {\n  var c = ud(5, null, null, 0);\n  c.elementType = "DELETED";\n  c.stateNode = b;\n  c.return = a;\n  b = a.deletions;\n  null === b ? (a.deletions = [c], a.flags |= 16) : b.push(c);\n}\nfunction vd(a, b) {\n  b.flags = b.flags & -4097 | 2;\n}\nfunction wd(a, b) {\n  b = xd(b, a.type, a.pendingProps, sd);\n  return null !== b ? (a.stateNode = b, G = a, J = yd(b.firstChild), sd = !1, !0) : !1;\n}\nfunction zd(a, b) {\n  b = Ad(b, a.pendingProps, sd);\n  return null !== b ? (a.stateNode = b, G = a, J = null, !0) : !1;\n}\nfunction Bd(a, b) {\n  a: {\n    var c = b;\n    for (b = sd; 8 !== c.nodeType;) {\n      if (!b) {\n        b = null;\n        break a;\n      }\n      c = Cd(c);\n      if (null === c) {\n        b = null;\n        break a;\n      }\n    }\n    b = c;\n  }\n  return null !== b ? (c = null !== kd ? {\n    id: ld,\n    overflow: md\n  } : null, a.memoizedState = {\n    dehydrated: b,\n    treeContext: c,\n    retryLane: 536870912\n  }, c = ud(18, null, null, 0), c.stateNode = b, c.return = a, a.child = c, G = a, J = null, !0) : !1;\n}\nfunction Dd(a) {\n  return 0 !== (a.mode & 1) && 0 === (a.flags & 128);\n}\nfunction Ed() {\n  throw Error(u(418));\n}\nfunction Fd(a) {\n  for (G = a.return; G;) switch (G.tag) {\n    case 3:\n    case 27:\n      sd = !0;\n      return;\n    case 5:\n    case 13:\n      sd = !1;\n      return;\n    default:\n      G = G.return;\n  }\n}\nfunction Gd(a) {\n  if (a !== G) return !1;\n  if (!K) return Fd(a), K = !0, !1;\n  var b = !1,\n    c;\n  if (c = 3 !== a.tag && 27 !== a.tag) {\n    if (c = 5 === a.tag) c = a.type, c = !("form" !== c && "button" !== c) || Hd(a.type, a.memoizedProps);\n    c = !c;\n  }\n  c && (b = !0);\n  if (b && (b = J)) if (Dd(a)) Id(), Ed();else for (; b;) td(a, b), b = Cd(b);\n  Fd(a);\n  if (13 === a.tag) {\n    a = a.memoizedState;\n    a = null !== a ? a.dehydrated : null;\n    if (!a) throw Error(u(317));\n    a: {\n      a = a.nextSibling;\n      for (b = 0; a;) {\n        if (8 === a.nodeType) if (c = a.data, "/$" === c) {\n          if (0 === b) {\n            J = Cd(a);\n            break a;\n          }\n          b--;\n        } else "$" !== c && "$!" !== c && "$?" !== c || b++;\n        a = a.nextSibling;\n      }\n      J = null;\n    }\n  } else J = G ? Cd(a.stateNode) : null;\n  return !0;\n}\nfunction Id() {\n  for (var a = J; a;) a = Cd(a);\n}\nfunction Jd() {\n  J = G = null;\n  K = !1;\n}\nfunction Kd(a) {\n  null === rd ? rd = [a] : rd.push(a);\n}\nvar Ld = [],\n  Md = 0,\n  Nd = 0;\nfunction Od() {\n  for (var a = Md, b = Nd = Md = 0; b < a;) {\n    var c = Ld[b];\n    Ld[b++] = null;\n    var d = Ld[b];\n    Ld[b++] = null;\n    var e = Ld[b];\n    Ld[b++] = null;\n    var f = Ld[b];\n    Ld[b++] = null;\n    if (null !== d && null !== e) {\n      var g = d.pending;\n      null === g ? e.next = e : (e.next = g.next, g.next = e);\n      d.pending = e;\n    }\n    0 !== f && Pd(c, e, f);\n  }\n}\nfunction Qd(a, b, c, d) {\n  Ld[Md++] = a;\n  Ld[Md++] = b;\n  Ld[Md++] = c;\n  Ld[Md++] = d;\n  Nd |= d;\n  a.lanes |= d;\n  a = a.alternate;\n  null !== a && (a.lanes |= d);\n}\nfunction Rd(a, b, c, d) {\n  Qd(a, b, c, d);\n  return Sd(a);\n}\nfunction Td(a, b) {\n  Qd(a, null, null, b);\n  return Sd(a);\n}\nfunction Pd(a, b, c) {\n  a.lanes |= c;\n  var d = a.alternate;\n  null !== d && (d.lanes |= c);\n  for (var e = !1, f = a.return; null !== f;) f.childLanes |= c, d = f.alternate, null !== d && (d.childLanes |= c), 22 === f.tag && (a = f.stateNode, null === a || a._visibility & 1 || (e = !0)), a = f, f = f.return;\n  e && null !== b && 3 === a.tag && (f = a.stateNode, e = 31 - db(c), f = f.hiddenUpdates, a = f[e], null === a ? f[e] = [b] : a.push(b), b.lane = c | 536870912);\n}\nfunction Sd(a) {\n  if (50 < Ud) throw Ud = 0, Vd = null, Error(u(185));\n  for (var b = a.return; null !== b;) a = b, b = a.return;\n  return 3 === a.tag ? a.stateNode : null;\n}\nvar Wd = !1;\nfunction Xd(a) {\n  a.updateQueue = {\n    baseState: a.memoizedState,\n    firstBaseUpdate: null,\n    lastBaseUpdate: null,\n    shared: {\n      pending: null,\n      lanes: 0,\n      hiddenCallbacks: null\n    },\n    callbacks: null\n  };\n}\nfunction Yd(a, b) {\n  a = a.updateQueue;\n  b.updateQueue === a && (b.updateQueue = {\n    baseState: a.baseState,\n    firstBaseUpdate: a.firstBaseUpdate,\n    lastBaseUpdate: a.lastBaseUpdate,\n    shared: a.shared,\n    callbacks: null\n  });\n}\nfunction Zd(a) {\n  return {\n    lane: a,\n    tag: 0,\n    payload: null,\n    callback: null,\n    next: null\n  };\n}\nfunction $d(a, b, c) {\n  var d = a.updateQueue;\n  if (null === d) return null;\n  d = d.shared;\n  if (0 !== (L & 2)) {\n    var e = d.pending;\n    null === e ? b.next = b : (b.next = e.next, e.next = b);\n    d.pending = b;\n    b = Sd(a);\n    Pd(a, null, c);\n    return b;\n  }\n  Qd(a, d, b, c);\n  return Sd(a);\n}\nfunction ae(a, b, c) {\n  b = b.updateQueue;\n  if (null !== b && (b = b.shared, 0 !== (c & 4194176))) {\n    var d = b.lanes;\n    d &= a.pendingLanes;\n    c |= d;\n    b.lanes = c;\n    rb(a, c);\n  }\n}\nfunction be(a, b) {\n  var c = a.updateQueue,\n    d = a.alternate;\n  if (null !== d && (d = d.updateQueue, c === d)) {\n    var e = null,\n      f = null;\n    c = c.firstBaseUpdate;\n    if (null !== c) {\n      do {\n        var g = {\n          lane: c.lane,\n          tag: c.tag,\n          payload: c.payload,\n          callback: null,\n          next: null\n        };\n        null === f ? e = f = g : f = f.next = g;\n        c = c.next;\n      } while (null !== c);\n      null === f ? e = f = b : f = f.next = b;\n    } else e = f = b;\n    c = {\n      baseState: d.baseState,\n      firstBaseUpdate: e,\n      lastBaseUpdate: f,\n      shared: d.shared,\n      callbacks: d.callbacks\n    };\n    a.updateQueue = c;\n    return;\n  }\n  a = c.lastBaseUpdate;\n  null === a ? c.firstBaseUpdate = b : a.next = b;\n  c.lastBaseUpdate = b;\n}\nfunction ce(a, b, c, d) {\n  var e = a.updateQueue;\n  Wd = !1;\n  var f = e.firstBaseUpdate,\n    g = e.lastBaseUpdate,\n    h = e.shared.pending;\n  if (null !== h) {\n    e.shared.pending = null;\n    var l = h,\n      p = l.next;\n    l.next = null;\n    null === g ? f = p : g.next = p;\n    g = l;\n    var q = a.alternate;\n    null !== q && (q = q.updateQueue, h = q.lastBaseUpdate, h !== g && (null === h ? q.firstBaseUpdate = p : h.next = p, q.lastBaseUpdate = l));\n  }\n  if (null !== f) {\n    var w = e.baseState;\n    g = 0;\n    q = p = l = null;\n    h = f;\n    do {\n      var r = h.lane & -536870913,\n        t = r !== h.lane;\n      if (t ? (M & r) === r : (d & r) === r) {\n        null !== q && (q = q.next = {\n          lane: 0,\n          tag: h.tag,\n          payload: h.payload,\n          callback: null,\n          next: null\n        });\n        a: {\n          var z = a,\n            B = h;\n          r = b;\n          var U = c;\n          switch (B.tag) {\n            case 1:\n              z = B.payload;\n              if ("function" === typeof z) {\n                w = z.call(U, w, r);\n                break a;\n              }\n              w = z;\n              break a;\n            case 3:\n              z.flags = z.flags & -65537 | 128;\n            case 0:\n              z = B.payload;\n              r = "function" === typeof z ? z.call(U, w, r) : z;\n              if (null === r || void 0 === r) break a;\n              w = C({}, w, r);\n              break a;\n            case 2:\n              Wd = !0;\n          }\n        }\n        r = h.callback;\n        null !== r && (a.flags |= 64, t && (a.flags |= 8192), t = e.callbacks, null === t ? e.callbacks = [r] : t.push(r));\n      } else t = {\n        lane: r,\n        tag: h.tag,\n        payload: h.payload,\n        callback: h.callback,\n        next: null\n      }, null === q ? (p = q = t, l = w) : q = q.next = t, g |= r;\n      h = h.next;\n      if (null === h) if (h = e.shared.pending, null === h) break;else t = h, h = t.next, t.next = null, e.lastBaseUpdate = t, e.shared.pending = null;\n    } while (1);\n    null === q && (l = w);\n    e.baseState = l;\n    e.firstBaseUpdate = p;\n    e.lastBaseUpdate = q;\n    null === f && (e.shared.lanes = 0);\n    de |= g;\n    a.lanes = g;\n    a.memoizedState = w;\n  }\n}\nfunction ee(a, b) {\n  if ("function" !== typeof a) throw Error(u(191, a));\n  a.call(b);\n}\nfunction fe(a, b) {\n  var c = a.callbacks;\n  if (null !== c) for (a.callbacks = null, a = 0; a < c.length; a++) ee(c[a], b);\n}\nfunction ge(a, b) {\n  if (dd(a, b)) return !0;\n  if ("object" !== typeof a || null === a || "object" !== typeof b || null === b) return !1;\n  var c = Object.keys(a),\n    d = Object.keys(b);\n  if (c.length !== d.length) return !1;\n  for (d = 0; d < c.length; d++) {\n    var e = c[d];\n    if (!vb.call(b, e) || !dd(a[e], b[e])) return !1;\n  }\n  return !0;\n}\nvar he = Error(u(460)),\n  ie = Error(u(474)),\n  je = {\n    then: function () {}\n  };\nfunction ke(a) {\n  a = a.status;\n  return "fulfilled" === a || "rejected" === a;\n}\nfunction le() {}\nfunction me(a, b, c) {\n  c = a[c];\n  void 0 === c ? a.push(b) : c !== b && (b.then(le, le), b = c);\n  switch (b.status) {\n    case "fulfilled":\n      return b.value;\n    case "rejected":\n      a = b.reason;\n      if (a === he) throw Error(u(483));\n      throw a;\n    default:\n      if ("string" === typeof b.status) b.then(le, le);else {\n        a = N;\n        if (null !== a && 100 < a.shellSuspendCounter) throw Error(u(482));\n        a = b;\n        a.status = "pending";\n        a.then(function (d) {\n          if ("pending" === b.status) {\n            var e = b;\n            e.status = "fulfilled";\n            e.value = d;\n          }\n        }, function (d) {\n          if ("pending" === b.status) {\n            var e = b;\n            e.status = "rejected";\n            e.reason = d;\n          }\n        });\n        switch (b.status) {\n          case "fulfilled":\n            return b.value;\n          case "rejected":\n            a = b.reason;\n            if (a === he) throw Error(u(483));\n            throw a;\n        }\n      }\n      ne = b;\n      throw he;\n  }\n}\nvar ne = null;\nfunction oe() {\n  if (null === ne) throw Error(u(459));\n  var a = ne;\n  ne = null;\n  return a;\n}\nvar pe = null,\n  qe = 0;\nfunction re(a) {\n  var b = qe;\n  qe += 1;\n  null === pe && (pe = []);\n  return me(pe, a, b);\n}\nfunction se(a, b, c) {\n  a = c.ref;\n  if (null !== a && "function" !== typeof a && "object" !== typeof a) {\n    if (c._owner) {\n      c = c._owner;\n      if (c) {\n        if (1 !== c.tag) throw Error(u(309));\n        var d = c.stateNode;\n      }\n      if (!d) throw Error(u(147, a));\n      var e = d,\n        f = "" + a;\n      if (null !== b && null !== b.ref && "function" === typeof b.ref && b.ref._stringRef === f) return b.ref;\n      b = function (g) {\n        var h = e.refs;\n        null === g ? delete h[f] : h[f] = g;\n      };\n      b._stringRef = f;\n      return b;\n    }\n    if ("string" !== typeof a) throw Error(u(284));\n    if (!c._owner) throw Error(u(290, a));\n  }\n  return a;\n}\nfunction te(a, b) {\n  a = Object.prototype.toString.call(b);\n  throw Error(u(31, "[object Object]" === a ? "object with keys {" + Object.keys(b).join(", ") + "}" : a));\n}\nfunction ue(a) {\n  var b = a._init;\n  return b(a._payload);\n}\nfunction ve(a) {\n  function b(m, k) {\n    if (a) {\n      var n = m.deletions;\n      null === n ? (m.deletions = [k], m.flags |= 16) : n.push(k);\n    }\n  }\n  function c(m, k) {\n    if (!a) return null;\n    for (; null !== k;) b(m, k), k = k.sibling;\n    return null;\n  }\n  function d(m, k) {\n    for (m = new Map(); null !== k;) null !== k.key ? m.set(k.key, k) : m.set(k.index, k), k = k.sibling;\n    return m;\n  }\n  function e(m, k) {\n    m = we(m, k);\n    m.index = 0;\n    m.sibling = null;\n    return m;\n  }\n  function f(m, k, n) {\n    m.index = n;\n    if (!a) return m.flags |= 1048576, k;\n    n = m.alternate;\n    if (null !== n) return n = n.index, n < k ? (m.flags |= 33554434, k) : n;\n    m.flags |= 33554434;\n    return k;\n  }\n  function g(m) {\n    a && null === m.alternate && (m.flags |= 33554434);\n    return m;\n  }\n  function h(m, k, n, v) {\n    if (null === k || 6 !== k.tag) return k = xe(n, m.mode, v), k.return = m, k;\n    k = e(k, n);\n    k.return = m;\n    return k;\n  }\n  function l(m, k, n, v) {\n    var x = n.type;\n    if (x === na) return q(m, k, n.props.children, v, n.key);\n    if (null !== k && (k.elementType === x || "object" === typeof x && null !== x && x.$$typeof === xa && ue(x) === k.type)) return v = e(k, n.props), v.ref = se(m, k, n), v.return = m, v;\n    v = ye(n.type, n.key, n.props, null, null, m.mode, v);\n    v.ref = se(m, k, n);\n    v.return = m;\n    return v;\n  }\n  function p(m, k, n, v) {\n    if (null === k || 4 !== k.tag || k.stateNode.containerInfo !== n.containerInfo || k.stateNode.implementation !== n.implementation) return k = ze(n, m.mode, v), k.return = m, k;\n    k = e(k, n.children || []);\n    k.return = m;\n    return k;\n  }\n  function q(m, k, n, v, x) {\n    if (null === k || 7 !== k.tag) return k = Ae(n, m.mode, v, x), k.return = m, k;\n    k = e(k, n);\n    k.return = m;\n    return k;\n  }\n  function w(m, k, n) {\n    if ("string" === typeof k && "" !== k || "number" === typeof k) return k = xe("" + k, m.mode, n), k.return = m, k;\n    if ("object" === typeof k && null !== k) {\n      switch (k.$$typeof) {\n        case la:\n          return n = ye(k.type, k.key, k.props, null, null, m.mode, n), n.ref = se(m, null, k), n.return = m, n;\n        case ma:\n          return k = ze(k, m.mode, n), k.return = m, k;\n        case xa:\n          var v = k._init;\n          return w(m, v(k._payload), n);\n      }\n      if (rc(k) || Da(k)) return k = Ae(k, m.mode, n, null), k.return = m, k;\n      if ("function" === typeof k.then) return w(m, re(k), n);\n      if (k.$$typeof === ra || k.$$typeof === sa) return w(m, Be(m, k, n), n);\n      te(m, k);\n    }\n    return null;\n  }\n  function r(m, k, n, v) {\n    var x = null !== k ? k.key : null;\n    if ("string" === typeof n && "" !== n || "number" === typeof n) return null !== x ? null : h(m, k, "" + n, v);\n    if ("object" === typeof n && null !== n) {\n      switch (n.$$typeof) {\n        case la:\n          return n.key === x ? l(m, k, n, v) : null;\n        case ma:\n          return n.key === x ? p(m, k, n, v) : null;\n        case xa:\n          return x = n._init, r(m, k, x(n._payload), v);\n      }\n      if (rc(n) || Da(n)) return null !== x ? null : q(m, k, n, v, null);\n      if ("function" === typeof n.then) return r(m, k, re(n), v);\n      if (n.$$typeof === ra || n.$$typeof === sa) return r(m, k, Be(m, n, v), v);\n      te(m, n);\n    }\n    return null;\n  }\n  function t(m, k, n, v, x) {\n    if ("string" === typeof v && "" !== v || "number" === typeof v) return m = m.get(n) || null, h(k, m, "" + v, x);\n    if ("object" === typeof v && null !== v) {\n      switch (v.$$typeof) {\n        case la:\n          return m = m.get(null === v.key ? n : v.key) || null, l(k, m, v, x);\n        case ma:\n          return m = m.get(null === v.key ? n : v.key) || null, p(k, m, v, x);\n        case xa:\n          var A = v._init;\n          return t(m, k, n, A(v._payload), x);\n      }\n      if (rc(v) || Da(v)) return m = m.get(n) || null, q(k, m, v, x, null);\n      if ("function" === typeof v.then) return t(m, k, n, re(v), x);\n      if (v.$$typeof === ra || v.$$typeof === sa) return t(m, k, n, Be(k, v, x), x);\n      te(k, v);\n    }\n    return null;\n  }\n  function z(m, k, n, v) {\n    for (var x = null, A = null, y = k, H = k = 0, ha = null; null !== y && H < n.length; H++) {\n      y.index > H ? (ha = y, y = null) : ha = y.sibling;\n      var I = r(m, y, n[H], v);\n      if (null === I) {\n        null === y && (y = ha);\n        break;\n      }\n      a && y && null === I.alternate && b(m, y);\n      k = f(I, k, H);\n      null === A ? x = I : A.sibling = I;\n      A = I;\n      y = ha;\n    }\n    if (H === n.length) return c(m, y), K && nd(m, H), x;\n    if (null === y) {\n      for (; H < n.length; H++) y = w(m, n[H], v), null !== y && (k = f(y, k, H), null === A ? x = y : A.sibling = y, A = y);\n      K && nd(m, H);\n      return x;\n    }\n    for (y = d(m, y); H < n.length; H++) ha = t(y, m, H, n[H], v), null !== ha && (a && null !== ha.alternate && y.delete(null === ha.key ? H : ha.key), k = f(ha, k, H), null === A ? x = ha : A.sibling = ha, A = ha);\n    a && y.forEach(function (Eb) {\n      return b(m, Eb);\n    });\n    K && nd(m, H);\n    return x;\n  }\n  function B(m, k, n, v) {\n    var x = Da(n);\n    if ("function" !== typeof x) throw Error(u(150));\n    n = x.call(n);\n    if (null == n) throw Error(u(151));\n    for (var A = x = null, y = k, H = k = 0, ha = null, I = n.next(); null !== y && !I.done; H++, I = n.next()) {\n      y.index > H ? (ha = y, y = null) : ha = y.sibling;\n      var Eb = r(m, y, I.value, v);\n      if (null === Eb) {\n        null === y && (y = ha);\n        break;\n      }\n      a && y && null === Eb.alternate && b(m, y);\n      k = f(Eb, k, H);\n      null === A ? x = Eb : A.sibling = Eb;\n      A = Eb;\n      y = ha;\n    }\n    if (I.done) return c(m, y), K && nd(m, H), x;\n    if (null === y) {\n      for (; !I.done; H++, I = n.next()) I = w(m, I.value, v), null !== I && (k = f(I, k, H), null === A ? x = I : A.sibling = I, A = I);\n      K && nd(m, H);\n      return x;\n    }\n    for (y = d(m, y); !I.done; H++, I = n.next()) I = t(y, m, H, I.value, v), null !== I && (a && null !== I.alternate && y.delete(null === I.key ? H : I.key), k = f(I, k, H), null === A ? x = I : A.sibling = I, A = I);\n    a && y.forEach(function (Jm) {\n      return b(m, Jm);\n    });\n    K && nd(m, H);\n    return x;\n  }\n  function U(m, k, n, v) {\n    "object" === typeof n && null !== n && n.type === na && null === n.key && (n = n.props.children);\n    if ("object" === typeof n && null !== n) {\n      switch (n.$$typeof) {\n        case la:\n          a: {\n            for (var x = n.key, A = k; null !== A;) {\n              if (A.key === x) {\n                x = n.type;\n                if (x === na) {\n                  if (7 === A.tag) {\n                    c(m, A.sibling);\n                    k = e(A, n.props.children);\n                    k.return = m;\n                    m = k;\n                    break a;\n                  }\n                } else if (A.elementType === x || "object" === typeof x && null !== x && x.$$typeof === xa && ue(x) === A.type) {\n                  c(m, A.sibling);\n                  k = e(A, n.props);\n                  k.ref = se(m, A, n);\n                  k.return = m;\n                  m = k;\n                  break a;\n                }\n                c(m, A);\n                break;\n              } else b(m, A);\n              A = A.sibling;\n            }\n            n.type === na ? (k = Ae(n.props.children, m.mode, v, n.key), k.return = m, m = k) : (v = ye(n.type, n.key, n.props, null, null, m.mode, v), v.ref = se(m, k, n), v.return = m, m = v);\n          }\n          return g(m);\n        case ma:\n          a: {\n            for (A = n.key; null !== k;) {\n              if (k.key === A) {\n                if (4 === k.tag && k.stateNode.containerInfo === n.containerInfo && k.stateNode.implementation === n.implementation) {\n                  c(m, k.sibling);\n                  k = e(k, n.children || []);\n                  k.return = m;\n                  m = k;\n                  break a;\n                } else {\n                  c(m, k);\n                  break;\n                }\n              } else b(m, k);\n              k = k.sibling;\n            }\n            k = ze(n, m.mode, v);\n            k.return = m;\n            m = k;\n          }\n          return g(m);\n        case xa:\n          return A = n._init, V(m, k, A(n._payload), v);\n      }\n      if (rc(n)) return z(m, k, n, v);\n      if (Da(n)) return B(m, k, n, v);\n      if ("function" === typeof n.then) return U(m, k, re(n), v);\n      if (n.$$typeof === ra || n.$$typeof === sa) return U(m, k, Be(m, n, v), v);\n      te(m, n);\n    }\n    return "string" === typeof n && "" !== n || "number" === typeof n ? (n = "" + n, null !== k && 6 === k.tag ? (c(m, k.sibling), k = e(k, n), k.return = m, m = k) : (c(m, k), k = xe(n, m.mode, v), k.return = m, m = k), g(m)) : c(m, k);\n  }\n  function V(m, k, n, v) {\n    qe = 0;\n    m = U(m, k, n, v);\n    pe = null;\n    return m;\n  }\n  return V;\n}\nvar Ce = ve(!0),\n  De = ve(!1),\n  Ee = ka(null),\n  Fe = ka(0);\nfunction Ge(a, b) {\n  a = He;\n  E(Fe, a);\n  E(Ee, b);\n  He = a | b.baseLanes;\n}\nfunction Ie() {\n  E(Fe, He);\n  E(Ee, Ee.current);\n}\nfunction Je() {\n  He = Fe.current;\n  D(Ee);\n  D(Fe);\n}\nvar Ke = ka(null),\n  Le = null;\nfunction Me(a) {\n  var b = a.alternate;\n  E(Ne, Ne.current & 1);\n  E(Ke, a);\n  null === Le && (null === b || null !== Ee.current ? Le = a : null !== b.memoizedState && (Le = a));\n}\nfunction Oe(a) {\n  if (22 === a.tag) {\n    if (E(Ne, Ne.current), E(Ke, a), null === Le) {\n      var b = a.alternate;\n      null !== b && null !== b.memoizedState && (Le = a);\n    }\n  } else Pe(a);\n}\nfunction Pe() {\n  E(Ne, Ne.current);\n  E(Ke, Ke.current);\n}\nfunction Qe(a) {\n  D(Ke);\n  Le === a && (Le = null);\n  D(Ne);\n}\nvar Ne = ka(0);\nfunction Re(a) {\n  for (var b = a; null !== b;) {\n    if (13 === b.tag) {\n      var c = b.memoizedState;\n      if (null !== c && (c = c.dehydrated, null === c || "$?" === c.data || "$!" === c.data)) return b;\n    } else if (19 === b.tag && void 0 !== b.memoizedProps.revealOrder) {\n      if (0 !== (b.flags & 128)) return b;\n    } else if (null !== b.child) {\n      b.child.return = b;\n      b = b.child;\n      continue;\n    }\n    if (b === a) break;\n    for (; null === b.sibling;) {\n      if (null === b.return || b.return === a) return null;\n      b = b.return;\n    }\n    b.sibling.return = b.return;\n    b = b.sibling;\n  }\n  return null;\n}\nvar Se = null,\n  Te = null,\n  Ue = !1,\n  Ve = !1,\n  We = !1,\n  Xe = 0;\nfunction Ye(a) {\n  a !== Te && null === a.next && (null === Te ? Se = Te = a : Te = Te.next = a);\n  Ve = !0;\n  Ue || (Ue = !0, Ze($e));\n}\nfunction af(a) {\n  if (!We && Ve) {\n    var b = null;\n    We = !0;\n    do {\n      var c = !1;\n      for (var d = Se; null !== d;) {\n        if (!a || 0 === d.tag) {\n          var e = M,\n            f = jb(d, d === N ? e : 0);\n          if (0 !== (f & 3)) try {\n            c = !0;\n            e = d;\n            if (0 !== (L & 6)) throw Error(u(327));\n            if (!bf()) {\n              var g = cf(e, f);\n              if (0 !== e.tag && 2 === g) {\n                var h = f,\n                  l = lb(e, h);\n                0 !== l && (f = l, g = df(e, h, l));\n              }\n              if (1 === g) throw h = ef, ff(e, 0), gf(e, f, 0), Ye(e), h;\n              6 === g ? gf(e, f, 0) : (e.finishedWork = e.current.alternate, e.finishedLanes = f, hf(e, jf, kf, lf));\n            }\n            Ye(e);\n          } catch (p) {\n            null === b ? b = [p] : b.push(p);\n          }\n        }\n        d = d.next;\n      }\n    } while (c);\n    We = !1;\n    if (null !== b) {\n      if (1 < b.length) {\n        if ("function" === typeof AggregateError) throw new AggregateError(b);\n        for (a = 1; a < b.length; a++) Ze(mf.bind(null, b[a]));\n      }\n      throw b[0];\n    }\n  }\n}\nfunction mf(a) {\n  throw a;\n}\nfunction $e() {\n  Ve = Ue = !1;\n  for (var a = Ta(), b = null, c = Se; null !== c;) {\n    var d = c.next;\n    if (0 !== Xe && nf()) {\n      var e = c,\n        f = Xe;\n      e.pendingLanes |= 2;\n      e.entangledLanes |= 2;\n      e.entanglements[1] |= f;\n    }\n    e = of(c, a);\n    0 === e ? (c.next = null, null === b ? Se = d : b.next = d, null === d && (Te = b)) : (b = c, 0 !== (e & 3) && (Ve = !0));\n    c = d;\n  }\n  Xe = 0;\n  af(!1);\n}\nfunction of(a, b) {\n  for (var c = a.suspendedLanes, d = a.pingedLanes, e = a.expirationTimes, f = a.pendingLanes & -62914561; 0 < f;) {\n    var g = 31 - db(f),\n      h = 1 << g,\n      l = e[g];\n    if (-1 === l) {\n      if (0 === (h & c) || 0 !== (h & d)) e[g] = kb(h, b);\n    } else l <= b && (a.expiredLanes |= h);\n    f &= ~h;\n  }\n  b = N;\n  c = M;\n  c = jb(a, a === b ? c : 0);\n  d = a.callbackNode;\n  if (0 === c || a === b && 2 === O || null !== a.cancelPendingCommit) return null !== d && null !== d && Qa(d), a.callbackNode = null, a.callbackPriority = 0;\n  if (0 !== (c & 3)) return null !== d && null !== d && Qa(d), a.callbackPriority = 2, a.callbackNode = null, 2;\n  b = c & -c;\n  if (b === a.callbackPriority) return b;\n  null !== d && Qa(d);\n  switch (ub(c)) {\n    case 2:\n      c = Va;\n      break;\n    case 8:\n      c = Wa;\n      break;\n    case 32:\n      c = Xa;\n      break;\n    case 268435456:\n      c = Za;\n      break;\n    default:\n      c = Xa;\n  }\n  d = pf.bind(null, a);\n  c = Pa(c, d);\n  a.callbackPriority = b;\n  a.callbackNode = c;\n  return b;\n}\nfunction Ze(a) {\n  qf(function () {\n    0 !== (L & 6) ? Pa(Va, a) : a();\n  });\n}\nfunction rf() {\n  if (0 === Xe) {\n    var a = gb;\n    gb <<= 1;\n    0 === (gb & 4194176) && (gb = 128);\n    Xe = a;\n  }\n  return Xe;\n}\nvar sf = null,\n  tf = 0,\n  uf = 0;\nfunction vf(a, b) {\n  if (null === sf) {\n    var c = sf = [];\n    tf = 0;\n    uf = rf();\n  } else c = sf;\n  tf++;\n  var d = wf(c),\n    e = "pending",\n    f,\n    g;\n  a.then(function (h) {\n    e = "fulfilled";\n    f = null !== b ? b : h;\n    xf();\n  }, function (h) {\n    e = "rejected";\n    g = h;\n    xf();\n  });\n  c.push(function () {\n    switch (e) {\n      case "fulfilled":\n        d.status = "fulfilled";\n        d.value = f;\n        break;\n      case "rejected":\n        d.status = "rejected";\n        d.reason = g;\n        break;\n      default:\n        throw Error(u(478));\n    }\n  });\n  return d;\n}\nfunction yf(a, b) {\n  var c = null !== b ? b : a;\n  if (null === sf) return c;\n  a = sf;\n  var d = wf(a);\n  a.push(function () {\n    d.status = "fulfilled";\n    d.value = c;\n  });\n  return d;\n}\nfunction xf() {\n  if (null !== sf && 0 === --tf) {\n    var a = sf;\n    sf = null;\n    for (var b = uf = 0; b < a.length; b++) (0, a[b])();\n  }\n}\nfunction wf(a) {\n  return {\n    status: "pending",\n    value: null,\n    reason: null,\n    then: function (b) {\n      a.push(b);\n    }\n  };\n}\nvar zf = da.ReactCurrentDispatcher,\n  Af = da.ReactCurrentBatchConfig,\n  Bf = 0,\n  P = null,\n  Q = null,\n  R = null,\n  Cf = !1,\n  Df = !1,\n  Ef = !1,\n  Ff = 0,\n  Gf = 0,\n  Hf = null,\n  If = 0;\nfunction Jf() {\n  throw Error(u(321));\n}\nfunction Kf(a, b) {\n  if (null === b) return !1;\n  for (var c = 0; c < b.length && c < a.length; c++) if (!dd(a[c], b[c])) return !1;\n  return !0;\n}\nfunction Lf(a, b, c, d, e, f) {\n  Bf = f;\n  P = b;\n  b.memoizedState = null;\n  b.updateQueue = null;\n  b.lanes = 0;\n  zf.current = null === a || null === a.memoizedState ? Mf : Nf;\n  Ef = !1;\n  a = c(d, e);\n  Ef = !1;\n  Df && (a = Of(b, c, d, e));\n  Pf();\n  return a;\n}\nfunction Pf() {\n  zf.current = Qf;\n  var a = null !== Q && null !== Q.next;\n  Bf = 0;\n  R = Q = P = null;\n  Cf = !1;\n  Gf = 0;\n  Hf = null;\n  if (a) throw Error(u(300));\n}\nfunction Of(a, b, c, d) {\n  P = a;\n  var e = 0;\n  do {\n    Df && (Hf = null);\n    Gf = 0;\n    Df = !1;\n    if (25 <= e) throw Error(u(301));\n    e += 1;\n    R = Q = null;\n    a.updateQueue = null;\n    zf.current = Rf;\n    var f = b(c, d);\n  } while (Df);\n  return f;\n}\nfunction Sf() {\n  var a = zf.current.useState()[0];\n  return "function" === typeof a.then ? Tf(a) : a;\n}\nfunction Uf() {\n  var a = 0 !== Ff;\n  Ff = 0;\n  return a;\n}\nfunction Vf(a, b, c) {\n  b.updateQueue = a.updateQueue;\n  b.flags &= -2053;\n  a.lanes &= ~c;\n}\nfunction Wf(a) {\n  if (Cf) {\n    for (a = a.memoizedState; null !== a;) {\n      var b = a.queue;\n      null !== b && (b.pending = null);\n      a = a.next;\n    }\n    Cf = !1;\n  }\n  Bf = 0;\n  R = Q = P = null;\n  Df = !1;\n  Gf = Ff = 0;\n  Hf = null;\n}\nfunction Xf() {\n  var a = {\n    memoizedState: null,\n    baseState: null,\n    baseQueue: null,\n    queue: null,\n    next: null\n  };\n  null === R ? P.memoizedState = R = a : R = R.next = a;\n  return R;\n}\nfunction Yf() {\n  if (null === Q) {\n    var a = P.alternate;\n    a = null !== a ? a.memoizedState : null;\n  } else a = Q.next;\n  var b = null === R ? P.memoizedState : R.next;\n  if (null !== b) R = b, Q = a;else {\n    if (null === a) {\n      if (null === P.alternate) throw Error(u(467));\n      throw Error(u(310));\n    }\n    Q = a;\n    a = {\n      memoizedState: Q.memoizedState,\n      baseState: Q.baseState,\n      baseQueue: Q.baseQueue,\n      queue: Q.queue,\n      next: null\n    };\n    null === R ? P.memoizedState = R = a : R = R.next = a;\n  }\n  return R;\n}\nvar Zf;\nZf = function () {\n  return {\n    lastEffect: null,\n    events: null,\n    stores: null\n  };\n};\nfunction Tf(a) {\n  var b = Gf;\n  Gf += 1;\n  null === Hf && (Hf = []);\n  a = me(Hf, a, b);\n  null === P.alternate && (null === R ? null === P.memoizedState : null === R.next) && (zf.current = Mf);\n  return a;\n}\nfunction $f(a) {\n  if (null !== a && "object" === typeof a) {\n    if ("function" === typeof a.then) return Tf(a);\n    if (a.$$typeof === ra || a.$$typeof === sa) return ag(a);\n  }\n  throw Error(u(438, String(a)));\n}\nfunction bg(a, b) {\n  return "function" === typeof b ? b(a) : b;\n}\nfunction cg(a) {\n  var b = Yf();\n  return dg(b, Q, a);\n}\nfunction dg(a, b, c) {\n  var d = a.queue;\n  if (null === d) throw Error(u(311));\n  d.lastRenderedReducer = c;\n  var e = a.baseQueue,\n    f = d.pending;\n  if (null !== f) {\n    if (null !== e) {\n      var g = e.next;\n      e.next = f.next;\n      f.next = g;\n    }\n    b.baseQueue = e = f;\n    d.pending = null;\n  }\n  if (null !== e) {\n    b = e.next;\n    f = a.baseState;\n    var h = g = null,\n      l = null,\n      p = b;\n    do {\n      var q = p.lane & -536870913;\n      if (q !== p.lane ? (M & q) === q : (Bf & q) === q) {\n        q = p.revertLane;\n        if (0 === q) null !== l && (l = l.next = {\n          lane: 0,\n          revertLane: 0,\n          action: p.action,\n          hasEagerState: p.hasEagerState,\n          eagerState: p.eagerState,\n          next: null\n        });else if ((Bf & q) === q) {\n          p = p.next;\n          continue;\n        } else {\n          var w = {\n            lane: 0,\n            revertLane: p.revertLane,\n            action: p.action,\n            hasEagerState: p.hasEagerState,\n            eagerState: p.eagerState,\n            next: null\n          };\n          null === l ? (h = l = w, g = f) : l = l.next = w;\n          P.lanes |= q;\n          de |= q;\n        }\n        q = p.action;\n        Ef && c(f, q);\n        f = p.hasEagerState ? p.eagerState : c(f, q);\n      } else w = {\n        lane: q,\n        revertLane: p.revertLane,\n        action: p.action,\n        hasEagerState: p.hasEagerState,\n        eagerState: p.eagerState,\n        next: null\n      }, null === l ? (h = l = w, g = f) : l = l.next = w, P.lanes |= q, de |= q;\n      p = p.next;\n    } while (null !== p && p !== b);\n    null === l ? g = f : l.next = h;\n    dd(f, a.memoizedState) || (eg = !0);\n    a.memoizedState = f;\n    a.baseState = g;\n    a.baseQueue = l;\n    d.lastRenderedState = f;\n  }\n  null === e && (d.lanes = 0);\n  return [a.memoizedState, d.dispatch];\n}\nfunction fg(a) {\n  var b = Yf(),\n    c = b.queue;\n  if (null === c) throw Error(u(311));\n  c.lastRenderedReducer = a;\n  var d = c.dispatch,\n    e = c.pending,\n    f = b.memoizedState;\n  if (null !== e) {\n    c.pending = null;\n    var g = e = e.next;\n    do f = a(f, g.action), g = g.next; while (g !== e);\n    dd(f, b.memoizedState) || (eg = !0);\n    b.memoizedState = f;\n    null === b.baseQueue && (b.baseState = f);\n    c.lastRenderedState = f;\n  }\n  return [f, d];\n}\nfunction gg(a, b, c) {\n  var d = P,\n    e = Yf(),\n    f = K;\n  if (f) {\n    if (void 0 === c) throw Error(u(407));\n    c = c();\n  } else c = b();\n  var g = !dd((Q || e).memoizedState, c);\n  g && (e.memoizedState = c, eg = !0);\n  e = e.queue;\n  hg(ig.bind(null, d, e, a), [a]);\n  if (e.getSnapshot !== b || g || null !== R && R.memoizedState.tag & 1) {\n    d.flags |= 2048;\n    jg(9, kg.bind(null, d, e, c, b), {\n      destroy: void 0\n    }, null);\n    if (null === N) throw Error(u(349));\n    f || 0 !== (Bf & 60) || lg(d, b, c);\n  }\n  return c;\n}\nfunction lg(a, b, c) {\n  a.flags |= 16384;\n  a = {\n    getSnapshot: b,\n    value: c\n  };\n  b = P.updateQueue;\n  null === b ? (b = Zf(), P.updateQueue = b, b.stores = [a]) : (c = b.stores, null === c ? b.stores = [a] : c.push(a));\n}\nfunction kg(a, b, c, d) {\n  b.value = c;\n  b.getSnapshot = d;\n  mg(b) && ng(a);\n}\nfunction ig(a, b, c) {\n  return c(function () {\n    mg(b) && ng(a);\n  });\n}\nfunction mg(a) {\n  var b = a.getSnapshot;\n  a = a.value;\n  try {\n    var c = b();\n    return !dd(a, c);\n  } catch (d) {\n    return !0;\n  }\n}\nfunction ng(a) {\n  var b = Td(a, 2);\n  null !== b && og(b, a, 2);\n}\nfunction pg(a) {\n  var b = Xf();\n  "function" === typeof a && (a = a());\n  b.memoizedState = b.baseState = a;\n  b.queue = {\n    pending: null,\n    lanes: 0,\n    dispatch: null,\n    lastRenderedReducer: bg,\n    lastRenderedState: a\n  };\n  return b;\n}\nfunction qg(a, b, c, d) {\n  a.baseState = c;\n  return dg(a, Q, "function" === typeof d ? d : bg);\n}\nfunction rg(a, b, c, d) {\n  if (sg(a)) throw Error(u(485));\n  a = b.pending;\n  null === a ? (a = {\n    payload: d,\n    next: null\n  }, a.next = b.pending = a, tg(b, c, d)) : b.pending = a.next = {\n    payload: d,\n    next: a.next\n  };\n}\nfunction tg(a, b, c) {\n  var d = a.action,\n    e = a.state,\n    f = Af.transition;\n  Af.transition = {};\n  try {\n    var g = d(e, c);\n    if (null !== g && "object" === typeof g && "function" === typeof g.then) {\n      g.then(function (p) {\n        a.state = p;\n        ug(a, b);\n      }, function () {\n        return ug(a, b);\n      });\n      var h = vf(g, null);\n      b(h);\n    } else {\n      var l = yf(g, null);\n      b(l);\n      a.state = g;\n      ug(a, b);\n    }\n  } catch (p) {\n    b({\n      then: function () {},\n      status: "rejected",\n      reason: p\n    }), ug(a, b);\n  } finally {\n    Af.transition = f;\n  }\n}\nfunction ug(a, b) {\n  var c = a.pending;\n  if (null !== c) {\n    var d = c.next;\n    d === c ? a.pending = null : (d = d.next, c.next = d, tg(a, b, d.payload));\n  }\n}\nfunction vg(a, b) {\n  return b;\n}\nfunction wg(a, b, c) {\n  a = dg(a, b, vg)[0];\n  a = "object" === typeof a && null !== a && "function" === typeof a.then ? Tf(a) : a;\n  b = Yf();\n  var d = b.queue,\n    e = d.dispatch;\n  c !== b.memoizedState && (P.flags |= 2048, jg(9, xg.bind(null, d, c), {\n    destroy: void 0\n  }, null));\n  return [a, e];\n}\nfunction xg(a, b) {\n  a.action = b;\n}\nfunction jg(a, b, c, d) {\n  a = {\n    tag: a,\n    create: b,\n    inst: c,\n    deps: d,\n    next: null\n  };\n  b = P.updateQueue;\n  null === b ? (b = Zf(), P.updateQueue = b, b.lastEffect = a.next = a) : (c = b.lastEffect, null === c ? b.lastEffect = a.next = a : (d = c.next, c.next = a, a.next = d, b.lastEffect = a));\n  return a;\n}\nfunction yg() {\n  return Yf().memoizedState;\n}\nfunction zg(a, b, c, d) {\n  var e = Xf();\n  P.flags |= a;\n  e.memoizedState = jg(1 | b, c, {\n    destroy: void 0\n  }, void 0 === d ? null : d);\n}\nfunction Ag(a, b, c, d) {\n  var e = Yf();\n  d = void 0 === d ? null : d;\n  var f = e.memoizedState.inst;\n  null !== Q && null !== d && Kf(d, Q.memoizedState.deps) ? e.memoizedState = jg(b, c, f, d) : (P.flags |= a, e.memoizedState = jg(1 | b, c, f, d));\n}\nfunction Bg(a, b) {\n  zg(8390656, 8, a, b);\n}\nfunction hg(a, b) {\n  Ag(2048, 8, a, b);\n}\nfunction Cg(a, b) {\n  return Ag(4, 2, a, b);\n}\nfunction Dg(a, b) {\n  return Ag(4, 4, a, b);\n}\nfunction Eg(a, b) {\n  if ("function" === typeof b) return a = a(), b(a), function () {\n    b(null);\n  };\n  if (null !== b && void 0 !== b) return a = a(), b.current = a, function () {\n    b.current = null;\n  };\n}\nfunction Fg(a, b, c) {\n  c = null !== c && void 0 !== c ? c.concat([a]) : null;\n  Ag(4, 4, Eg.bind(null, b, a), c);\n}\nfunction Gg() {}\nfunction Hg(a, b) {\n  var c = Yf();\n  b = void 0 === b ? null : b;\n  var d = c.memoizedState;\n  if (null !== b && Kf(b, d[1])) return d[0];\n  c.memoizedState = [a, b];\n  return a;\n}\nfunction Ig(a, b) {\n  var c = Yf();\n  b = void 0 === b ? null : b;\n  var d = c.memoizedState;\n  if (null !== b && Kf(b, d[1])) return d[0];\n  Ef && a();\n  a = a();\n  c.memoizedState = [a, b];\n  return a;\n}\nfunction Jg(a, b, c) {\n  if (dd(c, b)) return c;\n  if (null !== Ee.current) return a.memoizedState = c, dd(c, b) || (eg = !0), c;\n  if (0 === (Bf & 42)) return eg = !0, a.memoizedState = c;\n  0 === lf && (lf = 0 === (M & 536870912) || K ? rf() : 536870912);\n  a = lf;\n  P.lanes |= a;\n  de |= a;\n  return b;\n}\nfunction Kg(a, b, c, d, e) {\n  var f = F;\n  F = 0 !== f && 8 > f ? f : 8;\n  var g = Af.transition;\n  Af.transition = {};\n  Lg(a, !1, b, c);\n  try {\n    var h = e();\n    if (null !== h && "object" === typeof h && "function" === typeof h.then) {\n      var l = vf(h, d);\n      Mg(a, b, l);\n    } else {\n      var p = yf(h, d);\n      Mg(a, b, p);\n    }\n  } catch (q) {\n    Mg(a, b, {\n      then: function () {},\n      status: "rejected",\n      reason: q\n    });\n  } finally {\n    F = f, Af.transition = g;\n  }\n}\nfunction Ng(a, b, c, d) {\n  if (5 !== a.tag) throw Error(u(476));\n  if (null === a.memoizedState) {\n    var e = {\n      pending: null,\n      lanes: 0,\n      dispatch: null,\n      lastRenderedReducer: bg,\n      lastRenderedState: fa\n    };\n    var f = e;\n    e = {\n      memoizedState: fa,\n      baseState: fa,\n      baseQueue: null,\n      queue: e,\n      next: null\n    };\n    a.memoizedState = e;\n    var g = a.alternate;\n    null !== g && (g.memoizedState = e);\n  } else f = a.memoizedState.queue;\n  Kg(a, f, b, fa, function () {\n    return c(d);\n  });\n}\nfunction Og() {\n  var a = ag(Ia);\n  return null !== a ? a : fa;\n}\nfunction Pg() {\n  return Yf().memoizedState;\n}\nfunction Qg() {\n  return Yf().memoizedState;\n}\nfunction Rg(a) {\n  for (var b = a.return; null !== b;) {\n    switch (b.tag) {\n      case 24:\n      case 3:\n        var c = Sg(b);\n        a = Zd(c);\n        var d = $d(b, a, c);\n        null !== d && (og(d, b, c), ae(d, b, c));\n        b = {\n          cache: Tg()\n        };\n        a.payload = b;\n        return;\n    }\n    b = b.return;\n  }\n}\nfunction Ug(a, b, c) {\n  var d = Sg(a);\n  c = {\n    lane: d,\n    revertLane: 0,\n    action: c,\n    hasEagerState: !1,\n    eagerState: null,\n    next: null\n  };\n  sg(a) ? Vg(b, c) : (c = Rd(a, b, c, d), null !== c && (og(c, a, d), Wg(c, b, d)));\n}\nfunction Mg(a, b, c) {\n  var d = Sg(a),\n    e = {\n      lane: d,\n      revertLane: 0,\n      action: c,\n      hasEagerState: !1,\n      eagerState: null,\n      next: null\n    };\n  if (sg(a)) Vg(b, e);else {\n    var f = a.alternate;\n    if (0 === a.lanes && (null === f || 0 === f.lanes) && (f = b.lastRenderedReducer, null !== f)) try {\n      var g = b.lastRenderedState,\n        h = f(g, c);\n      e.hasEagerState = !0;\n      e.eagerState = h;\n      if (dd(h, g)) {\n        Qd(a, b, e, 0);\n        null === N && Od();\n        return;\n      }\n    } catch (l) {} finally {}\n    c = Rd(a, b, e, d);\n    null !== c && (og(c, a, d), Wg(c, b, d));\n  }\n}\nfunction Lg(a, b, c, d) {\n  d = {\n    lane: 2,\n    revertLane: rf(),\n    action: d,\n    hasEagerState: !1,\n    eagerState: null,\n    next: null\n  };\n  if (sg(a)) {\n    if (b) throw Error(u(479));\n  } else b = Rd(a, c, d, 2), null !== b && og(b, a, 2);\n}\nfunction sg(a) {\n  var b = a.alternate;\n  return a === P || null !== b && b === P;\n}\nfunction Vg(a, b) {\n  Df = Cf = !0;\n  var c = a.pending;\n  null === c ? b.next = b : (b.next = c.next, c.next = b);\n  a.pending = b;\n}\nfunction Wg(a, b, c) {\n  if (0 !== (c & 4194176)) {\n    var d = b.lanes;\n    d &= a.pendingLanes;\n    c |= d;\n    b.lanes = c;\n    rb(a, c);\n  }\n}\nvar Qf = {\n  readContext: ag,\n  use: $f,\n  useCallback: Jf,\n  useContext: Jf,\n  useEffect: Jf,\n  useImperativeHandle: Jf,\n  useInsertionEffect: Jf,\n  useLayoutEffect: Jf,\n  useMemo: Jf,\n  useReducer: Jf,\n  useRef: Jf,\n  useState: Jf,\n  useDebugValue: Jf,\n  useDeferredValue: Jf,\n  useTransition: Jf,\n  useSyncExternalStore: Jf,\n  useId: Jf\n};\nQf.useCacheRefresh = Jf;\nQf.useHostTransitionStatus = Jf;\nQf.useFormState = Jf;\nQf.useOptimistic = Jf;\nvar Mf = {\n  readContext: ag,\n  use: $f,\n  useCallback: function (a, b) {\n    Xf().memoizedState = [a, void 0 === b ? null : b];\n    return a;\n  },\n  useContext: ag,\n  useEffect: Bg,\n  useImperativeHandle: function (a, b, c) {\n    c = null !== c && void 0 !== c ? c.concat([a]) : null;\n    zg(4194308, 4, Eg.bind(null, b, a), c);\n  },\n  useLayoutEffect: function (a, b) {\n    return zg(4194308, 4, a, b);\n  },\n  useInsertionEffect: function (a, b) {\n    zg(4, 2, a, b);\n  },\n  useMemo: function (a, b) {\n    var c = Xf();\n    b = void 0 === b ? null : b;\n    Ef && a();\n    a = a();\n    c.memoizedState = [a, b];\n    return a;\n  },\n  useReducer: function (a, b, c) {\n    var d = Xf();\n    b = void 0 !== c ? c(b) : b;\n    d.memoizedState = d.baseState = b;\n    a = {\n      pending: null,\n      lanes: 0,\n      dispatch: null,\n      lastRenderedReducer: a,\n      lastRenderedState: b\n    };\n    d.queue = a;\n    a = a.dispatch = Ug.bind(null, P, a);\n    return [d.memoizedState, a];\n  },\n  useRef: function (a) {\n    var b = Xf();\n    a = {\n      current: a\n    };\n    return b.memoizedState = a;\n  },\n  useState: function (a) {\n    a = pg(a);\n    var b = a.queue,\n      c = Mg.bind(null, P, b);\n    b.dispatch = c;\n    return [a.memoizedState, c];\n  },\n  useDebugValue: Gg,\n  useDeferredValue: function (a) {\n    Xf().memoizedState = a;\n    return a;\n  },\n  useTransition: function () {\n    var a = pg(!1);\n    a = Kg.bind(null, P, a.queue, !0, !1);\n    Xf().memoizedState = a;\n    return [!1, a];\n  },\n  useSyncExternalStore: function (a, b, c) {\n    var d = P,\n      e = Xf();\n    if (K) {\n      if (void 0 === c) throw Error(u(407));\n      c = c();\n    } else {\n      c = b();\n      if (null === N) throw Error(u(349));\n      0 !== (M & 60) || lg(d, b, c);\n    }\n    e.memoizedState = c;\n    var f = {\n      value: c,\n      getSnapshot: b\n    };\n    e.queue = f;\n    Bg(ig.bind(null, d, f, a), [a]);\n    d.flags |= 2048;\n    jg(9, kg.bind(null, d, f, c, b), {\n      destroy: void 0\n    }, null);\n    return c;\n  },\n  useId: function () {\n    var a = Xf(),\n      b = N.identifierPrefix;\n    if (K) {\n      var c = md;\n      var d = ld;\n      c = (d & ~(1 << 32 - db(d) - 1)).toString(32) + c;\n      b = ":" + b + "R" + c;\n      c = Ff++;\n      0 < c && (b += "H" + c.toString(32));\n      b += ":";\n    } else c = If++, b = ":" + b + "r" + c.toString(32) + ":";\n    return a.memoizedState = b;\n  },\n  useCacheRefresh: function () {\n    return Xf().memoizedState = Rg.bind(null, P);\n  }\n};\nMf.useHostTransitionStatus = Og;\nMf.useFormState = function (a, b) {\n  if (K) {\n    var c = N.formState;\n    if (null !== c) {\n      a: {\n        if (K) {\n          if (J) {\n            b: {\n              var d = J;\n              for (var e = sd; 8 !== d.nodeType;) {\n                if (!e) {\n                  d = null;\n                  break b;\n                }\n                d = Cd(d);\n                if (null === d) {\n                  d = null;\n                  break b;\n                }\n              }\n              e = d.data;\n              d = "F!" === e || "F" === e ? d : null;\n            }\n            if (d) {\n              J = Cd(d);\n              d = "F!" === d.data;\n              break a;\n            }\n          }\n          Ed();\n        }\n        d = !1;\n      }\n      d && (b = c[0]);\n    }\n  }\n  c = Xf();\n  c.memoizedState = c.baseState = b;\n  d = {\n    pending: null,\n    lanes: 0,\n    dispatch: null,\n    lastRenderedReducer: vg,\n    lastRenderedState: b\n  };\n  c.queue = d;\n  c = Mg.bind(null, P, d);\n  d.dispatch = c;\n  d = Xf();\n  e = {\n    state: b,\n    dispatch: null,\n    action: a,\n    pending: null\n  };\n  d.queue = e;\n  c = rg.bind(null, P, e, c);\n  e.dispatch = c;\n  d.memoizedState = a;\n  return [b, c];\n};\nMf.useOptimistic = function (a) {\n  var b = Xf();\n  b.memoizedState = b.baseState = a;\n  var c = {\n    pending: null,\n    lanes: 0,\n    dispatch: null,\n    lastRenderedReducer: null,\n    lastRenderedState: null\n  };\n  b.queue = c;\n  b = Lg.bind(null, P, !0, c);\n  c.dispatch = b;\n  return [a, b];\n};\nvar Nf = {\n  readContext: ag,\n  use: $f,\n  useCallback: Hg,\n  useContext: ag,\n  useEffect: hg,\n  useImperativeHandle: Fg,\n  useInsertionEffect: Cg,\n  useLayoutEffect: Dg,\n  useMemo: Ig,\n  useReducer: cg,\n  useRef: yg,\n  useState: function () {\n    return cg(bg);\n  },\n  useDebugValue: Gg,\n  useDeferredValue: function (a) {\n    var b = Yf();\n    return Jg(b, Q.memoizedState, a);\n  },\n  useTransition: function () {\n    var a = cg(bg)[0],\n      b = Yf().memoizedState;\n    return ["boolean" === typeof a ? a : Tf(a), b];\n  },\n  useSyncExternalStore: gg,\n  useId: Pg\n};\nNf.useCacheRefresh = Qg;\nNf.useHostTransitionStatus = Og;\nNf.useFormState = function (a) {\n  var b = Yf();\n  return wg(b, Q, a);\n};\nNf.useOptimistic = function (a, b) {\n  var c = Yf();\n  return qg(c, Q, a, b);\n};\nvar Rf = {\n  readContext: ag,\n  use: $f,\n  useCallback: Hg,\n  useContext: ag,\n  useEffect: hg,\n  useImperativeHandle: Fg,\n  useInsertionEffect: Cg,\n  useLayoutEffect: Dg,\n  useMemo: Ig,\n  useReducer: fg,\n  useRef: yg,\n  useState: function () {\n    return fg(bg);\n  },\n  useDebugValue: Gg,\n  useDeferredValue: function (a) {\n    var b = Yf();\n    return null === Q ? (b.memoizedState = a, a) : Jg(b, Q.memoizedState, a);\n  },\n  useTransition: function () {\n    var a = fg(bg)[0],\n      b = Yf().memoizedState;\n    return ["boolean" === typeof a ? a : Tf(a), b];\n  },\n  useSyncExternalStore: gg,\n  useId: Pg\n};\nRf.useCacheRefresh = Qg;\nRf.useHostTransitionStatus = Og;\nRf.useFormState = function (a) {\n  var b = Yf(),\n    c = Q;\n  if (null !== c) return wg(b, c, a);\n  b = b.memoizedState;\n  c = Yf();\n  var d = c.queue.dispatch;\n  c.memoizedState = a;\n  return [b, d];\n};\nRf.useOptimistic = function (a, b) {\n  var c = Yf();\n  if (null !== Q) return qg(c, Q, a, b);\n  c.baseState = a;\n  return [a, c.queue.dispatch];\n};\nfunction Xg(a, b) {\n  if (a && a.defaultProps) {\n    b = C({}, b);\n    a = a.defaultProps;\n    for (var c in a) void 0 === b[c] && (b[c] = a[c]);\n    return b;\n  }\n  return b;\n}\nfunction Yg(a, b, c, d) {\n  b = a.memoizedState;\n  c = c(d, b);\n  c = null === c || void 0 === c ? b : C({}, b, c);\n  a.memoizedState = c;\n  0 === a.lanes && (a.updateQueue.baseState = c);\n}\nvar Zg = {\n  isMounted: function (a) {\n    return (a = a._reactInternals) ? Mc(a) === a : !1;\n  },\n  enqueueSetState: function (a, b, c) {\n    a = a._reactInternals;\n    var d = Sg(a),\n      e = Zd(d);\n    e.payload = b;\n    void 0 !== c && null !== c && (e.callback = c);\n    b = $d(a, e, d);\n    null !== b && (og(b, a, d), ae(b, a, d));\n  },\n  enqueueReplaceState: function (a, b, c) {\n    a = a._reactInternals;\n    var d = Sg(a),\n      e = Zd(d);\n    e.tag = 1;\n    e.payload = b;\n    void 0 !== c && null !== c && (e.callback = c);\n    b = $d(a, e, d);\n    null !== b && (og(b, a, d), ae(b, a, d));\n  },\n  enqueueForceUpdate: function (a, b) {\n    a = a._reactInternals;\n    var c = Sg(a),\n      d = Zd(c);\n    d.tag = 2;\n    void 0 !== b && null !== b && (d.callback = b);\n    b = $d(a, d, c);\n    null !== b && (og(b, a, c), ae(b, a, c));\n  }\n};\nfunction $g(a, b, c, d, e, f, g) {\n  a = a.stateNode;\n  return "function" === typeof a.shouldComponentUpdate ? a.shouldComponentUpdate(d, f, g) : b.prototype && b.prototype.isPureReactComponent ? !ge(c, d) || !ge(e, f) : !0;\n}\nfunction ah(a, b, c) {\n  var d = !1,\n    e = Sc;\n  var f = b.contextType;\n  "object" === typeof f && null !== f ? f = ag(f) : (e = Xc(b) ? Vc : Tc.current, d = b.contextTypes, f = (d = null !== d && void 0 !== d) ? Wc(a, e) : Sc);\n  b = new b(c, f);\n  a.memoizedState = null !== b.state && void 0 !== b.state ? b.state : null;\n  b.updater = Zg;\n  a.stateNode = b;\n  b._reactInternals = a;\n  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = e, a.__reactInternalMemoizedMaskedChildContext = f);\n  return b;\n}\nfunction bh(a, b, c, d) {\n  a = b.state;\n  "function" === typeof b.componentWillReceiveProps && b.componentWillReceiveProps(c, d);\n  "function" === typeof b.UNSAFE_componentWillReceiveProps && b.UNSAFE_componentWillReceiveProps(c, d);\n  b.state !== a && Zg.enqueueReplaceState(b, b.state, null);\n}\nfunction ch(a, b, c, d) {\n  var e = a.stateNode;\n  e.props = c;\n  e.state = a.memoizedState;\n  e.refs = {};\n  Xd(a);\n  var f = b.contextType;\n  "object" === typeof f && null !== f ? e.context = ag(f) : (f = Xc(b) ? Vc : Tc.current, e.context = Wc(a, f));\n  e.state = a.memoizedState;\n  f = b.getDerivedStateFromProps;\n  "function" === typeof f && (Yg(a, b, f, c), e.state = a.memoizedState);\n  "function" === typeof b.getDerivedStateFromProps || "function" === typeof e.getSnapshotBeforeUpdate || "function" !== typeof e.UNSAFE_componentWillMount && "function" !== typeof e.componentWillMount || (b = e.state, "function" === typeof e.componentWillMount && e.componentWillMount(), "function" === typeof e.UNSAFE_componentWillMount && e.UNSAFE_componentWillMount(), b !== e.state && Zg.enqueueReplaceState(e, e.state, null), ce(a, c, e, d), e.state = a.memoizedState);\n  "function" === typeof e.componentDidMount && (a.flags |= 4194308);\n}\nfunction dh(a, b) {\n  try {\n    var c = "",\n      d = b;\n    do c += dc(d), d = d.return; while (d);\n    var e = c;\n  } catch (f) {\n    e = "\\nError generating stack: " + f.message + "\\n" + f.stack;\n  }\n  return {\n    value: a,\n    source: b,\n    stack: e,\n    digest: null\n  };\n}\nfunction eh(a, b, c) {\n  return {\n    value: a,\n    source: null,\n    stack: null != c ? c : null,\n    digest: null != b ? b : null\n  };\n}\nfunction fh(a, b) {\n  try {\n    console.error(b.value);\n  } catch (c) {\n    setTimeout(function () {\n      throw c;\n    });\n  }\n}\nfunction gh(a, b, c) {\n  c = Zd(c);\n  c.tag = 3;\n  c.payload = {\n    element: null\n  };\n  var d = b.value;\n  c.callback = function () {\n    hh || (hh = !0, ih = d);\n    fh(a, b);\n  };\n  return c;\n}\nfunction jh(a, b, c) {\n  c = Zd(c);\n  c.tag = 3;\n  var d = a.type.getDerivedStateFromError;\n  if ("function" === typeof d) {\n    var e = b.value;\n    c.payload = function () {\n      return d(e);\n    };\n    c.callback = function () {\n      fh(a, b);\n    };\n  }\n  var f = a.stateNode;\n  null !== f && "function" === typeof f.componentDidCatch && (c.callback = function () {\n    fh(a, b);\n    "function" !== typeof d && (null === kh ? kh = new Set([this]) : kh.add(this));\n    var g = b.stack;\n    this.componentDidCatch(b.value, {\n      componentStack: null !== g ? g : ""\n    });\n  });\n  return c;\n}\nfunction lh(a, b, c, d, e) {\n  if (0 === (a.mode & 1)) return a === b ? a.flags |= 65536 : (a.flags |= 128, c.flags |= 131072, c.flags &= -52805, 1 === c.tag && (null === c.alternate ? c.tag = 17 : (b = Zd(2), b.tag = 2, $d(c, b, 2))), c.lanes |= 2), a;\n  a.flags |= 65536;\n  a.lanes = e;\n  return a;\n}\nfunction mh(a, b, c, d, e) {\n  c.flags |= 32768;\n  if (null !== d && "object" === typeof d && "function" === typeof d.then) {\n    var f = c.tag;\n    0 !== (c.mode & 1) || 0 !== f && 11 !== f && 15 !== f || ((f = c.alternate) ? (c.updateQueue = f.updateQueue, c.memoizedState = f.memoizedState, c.lanes = f.lanes) : (c.updateQueue = null, c.memoizedState = null));\n    f = Ke.current;\n    if (null !== f) {\n      switch (f.tag) {\n        case 13:\n          c.mode & 1 && (null === Le ? nh() : null === f.alternate && 0 === oh && (oh = 3));\n          f.flags &= -257;\n          lh(f, b, c, a, e);\n          d === je ? f.flags |= 16384 : (b = f.updateQueue, null === b ? f.updateQueue = new Set([d]) : b.add(d), f.mode & 1 && ph(a, d, e));\n          return;\n        case 22:\n          if (f.mode & 1) {\n            f.flags |= 65536;\n            d === je ? f.flags |= 16384 : (b = f.updateQueue, null === b ? (b = {\n              transitions: null,\n              markerInstances: null,\n              retryQueue: new Set([d])\n            }, f.updateQueue = b) : (c = b.retryQueue, null === c ? b.retryQueue = new Set([d]) : c.add(d)), ph(a, d, e));\n            return;\n          }\n      }\n      throw Error(u(435, f.tag));\n    }\n    if (1 === a.tag) {\n      ph(a, d, e);\n      nh();\n      return;\n    }\n    d = Error(u(426));\n  }\n  if (K && c.mode & 1 && (f = Ke.current, null !== f)) {\n    0 === (f.flags & 65536) && (f.flags |= 256);\n    lh(f, b, c, a, e);\n    Kd(dh(d, c));\n    return;\n  }\n  a = d = dh(d, c);\n  4 !== oh && (oh = 2);\n  null === qh ? qh = [a] : qh.push(a);\n  a = b;\n  do {\n    switch (a.tag) {\n      case 3:\n        a.flags |= 65536;\n        e &= -e;\n        a.lanes |= e;\n        e = gh(a, d, e);\n        be(a, e);\n        return;\n      case 1:\n        if (b = d, c = a.type, f = a.stateNode, 0 === (a.flags & 128) && ("function" === typeof c.getDerivedStateFromError || null !== f && "function" === typeof f.componentDidCatch && (null === kh || !kh.has(f)))) {\n          a.flags |= 65536;\n          e &= -e;\n          a.lanes |= e;\n          e = jh(a, b, e);\n          be(a, e);\n          return;\n        }\n    }\n    a = a.return;\n  } while (null !== a);\n}\nvar rh = da.ReactCurrentOwner,\n  sh = Error(u(461)),\n  eg = !1;\nfunction th(a, b, c, d) {\n  b.child = null === a ? De(b, null, c, d) : Ce(b, a.child, c, d);\n}\nfunction uh(a, b, c, d, e) {\n  c = c.render;\n  var f = b.ref;\n  vh(b, e);\n  d = Lf(a, b, c, d, f, e);\n  c = Uf();\n  if (null !== a && !eg) return Vf(a, b, e), wh(a, b, e);\n  K && c && pd(b);\n  b.flags |= 1;\n  th(a, b, d, e);\n  return b.child;\n}\nfunction xh(a, b, c, d, e) {\n  if (null === a) {\n    var f = c.type;\n    if ("function" === typeof f && !yh(f) && void 0 === f.defaultProps && null === c.compare && void 0 === c.defaultProps) return b.tag = 15, b.type = f, zh(a, b, f, d, e);\n    a = ye(c.type, null, d, null, b, b.mode, e);\n    a.ref = b.ref;\n    a.return = b;\n    return b.child = a;\n  }\n  f = a.child;\n  if (0 === (a.lanes & e)) {\n    var g = f.memoizedProps;\n    c = c.compare;\n    c = null !== c ? c : ge;\n    if (c(g, d) && a.ref === b.ref) return wh(a, b, e);\n  }\n  b.flags |= 1;\n  a = we(f, d);\n  a.ref = b.ref;\n  a.return = b;\n  return b.child = a;\n}\nfunction zh(a, b, c, d, e) {\n  if (null !== a) {\n    var f = a.memoizedProps;\n    if (ge(f, d) && a.ref === b.ref) if (eg = !1, b.pendingProps = d = f, 0 !== (a.lanes & e)) 0 !== (a.flags & 131072) && (eg = !0);else return b.lanes = a.lanes, wh(a, b, e);\n  }\n  return Ah(a, b, c, d, e);\n}\nfunction Bh(a, b, c) {\n  var d = b.pendingProps,\n    e = d.children,\n    f = 0 !== (b.stateNode._pendingVisibility & 2),\n    g = null !== a ? a.memoizedState : null;\n  Ch(a, b);\n  if ("hidden" === d.mode || f) {\n    if (0 !== (b.flags & 128)) {\n      c = null !== g ? g.baseLanes | c : c;\n      if (null !== a) {\n        d = b.child = a.child;\n        for (e = 0; null !== d;) e = e | d.lanes | d.childLanes, d = d.sibling;\n        b.childLanes = e & ~c;\n      } else b.childLanes = 0, b.child = null;\n      return Dh(a, b, c);\n    }\n    if (0 === (b.mode & 1)) b.memoizedState = {\n      baseLanes: 0,\n      cachePool: null\n    }, null !== a && Eh(b, null), Ie(), Oe(b);else if (0 !== (c & 536870912)) b.memoizedState = {\n      baseLanes: 0,\n      cachePool: null\n    }, null !== a && Eh(b, null !== g ? g.cachePool : null), null !== g ? Ge(b, g) : Ie(), Oe(b);else return b.lanes = b.childLanes = 536870912, Dh(a, b, null !== g ? g.baseLanes | c : c);\n  } else null !== g ? (Eh(b, g.cachePool), Ge(b, g), Pe(b), b.memoizedState = null) : (null !== a && Eh(b, null), Ie(), Pe(b));\n  th(a, b, e, c);\n  return b.child;\n}\nfunction Dh(a, b, c) {\n  var d = Fh();\n  d = null === d ? null : {\n    parent: S._currentValue,\n    pool: d\n  };\n  b.memoizedState = {\n    baseLanes: c,\n    cachePool: d\n  };\n  null !== a && Eh(b, null);\n  Ie();\n  Oe(b);\n  return null;\n}\nfunction Ch(a, b) {\n  var c = b.ref;\n  if (null === a && null !== c || null !== a && a.ref !== c) b.flags |= 512, b.flags |= 2097152;\n}\nfunction Ah(a, b, c, d, e) {\n  var f = Xc(c) ? Vc : Tc.current;\n  f = Wc(b, f);\n  vh(b, e);\n  c = Lf(a, b, c, d, f, e);\n  d = Uf();\n  if (null !== a && !eg) return Vf(a, b, e), wh(a, b, e);\n  K && d && pd(b);\n  b.flags |= 1;\n  th(a, b, c, e);\n  return b.child;\n}\nfunction Gh(a, b, c, d, e, f) {\n  vh(b, f);\n  c = Of(b, d, c, e);\n  Pf();\n  d = Uf();\n  if (null !== a && !eg) return Vf(a, b, f), wh(a, b, f);\n  K && d && pd(b);\n  b.flags |= 1;\n  th(a, b, c, f);\n  return b.child;\n}\nfunction Hh(a, b, c, d, e) {\n  if (Xc(c)) {\n    var f = !0;\n    ad(b);\n  } else f = !1;\n  vh(b, e);\n  if (null === b.stateNode) Ih(a, b), ah(b, c, d), ch(b, c, d, e), d = !0;else if (null === a) {\n    var g = b.stateNode,\n      h = b.memoizedProps;\n    g.props = h;\n    var l = g.context,\n      p = c.contextType;\n    "object" === typeof p && null !== p ? p = ag(p) : (p = Xc(c) ? Vc : Tc.current, p = Wc(b, p));\n    var q = c.getDerivedStateFromProps,\n      w = "function" === typeof q || "function" === typeof g.getSnapshotBeforeUpdate;\n    w || "function" !== typeof g.UNSAFE_componentWillReceiveProps && "function" !== typeof g.componentWillReceiveProps || (h !== d || l !== p) && bh(b, g, d, p);\n    Wd = !1;\n    var r = b.memoizedState;\n    g.state = r;\n    ce(b, d, g, e);\n    l = b.memoizedState;\n    h !== d || r !== l || Uc.current || Wd ? ("function" === typeof q && (Yg(b, c, q, d), l = b.memoizedState), (h = Wd || $g(b, c, h, d, r, l, p)) ? (w || "function" !== typeof g.UNSAFE_componentWillMount && "function" !== typeof g.componentWillMount || ("function" === typeof g.componentWillMount && g.componentWillMount(), "function" === typeof g.UNSAFE_componentWillMount && g.UNSAFE_componentWillMount()), "function" === typeof g.componentDidMount && (b.flags |= 4194308)) : ("function" === typeof g.componentDidMount && (b.flags |= 4194308), b.memoizedProps = d, b.memoizedState = l), g.props = d, g.state = l, g.context = p, d = h) : ("function" === typeof g.componentDidMount && (b.flags |= 4194308), d = !1);\n  } else {\n    g = b.stateNode;\n    Yd(a, b);\n    h = b.memoizedProps;\n    p = b.type === b.elementType ? h : Xg(b.type, h);\n    g.props = p;\n    w = b.pendingProps;\n    r = g.context;\n    l = c.contextType;\n    "object" === typeof l && null !== l ? l = ag(l) : (l = Xc(c) ? Vc : Tc.current, l = Wc(b, l));\n    var t = c.getDerivedStateFromProps;\n    (q = "function" === typeof t || "function" === typeof g.getSnapshotBeforeUpdate) || "function" !== typeof g.UNSAFE_componentWillReceiveProps && "function" !== typeof g.componentWillReceiveProps || (h !== w || r !== l) && bh(b, g, d, l);\n    Wd = !1;\n    r = b.memoizedState;\n    g.state = r;\n    ce(b, d, g, e);\n    var z = b.memoizedState;\n    h !== w || r !== z || Uc.current || Wd ? ("function" === typeof t && (Yg(b, c, t, d), z = b.memoizedState), (p = Wd || $g(b, c, p, d, r, z, l) || !1) ? (q || "function" !== typeof g.UNSAFE_componentWillUpdate && "function" !== typeof g.componentWillUpdate || ("function" === typeof g.componentWillUpdate && g.componentWillUpdate(d, z, l), "function" === typeof g.UNSAFE_componentWillUpdate && g.UNSAFE_componentWillUpdate(d, z, l)), "function" === typeof g.componentDidUpdate && (b.flags |= 4), "function" === typeof g.getSnapshotBeforeUpdate && (b.flags |= 1024)) : ("function" !== typeof g.componentDidUpdate || h === a.memoizedProps && r === a.memoizedState || (b.flags |= 4), "function" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && r === a.memoizedState || (b.flags |= 1024), b.memoizedProps = d, b.memoizedState = z), g.props = d, g.state = z, g.context = l, d = p) : ("function" !== typeof g.componentDidUpdate || h === a.memoizedProps && r === a.memoizedState || (b.flags |= 4), "function" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && r === a.memoizedState || (b.flags |= 1024), d = !1);\n  }\n  return Jh(a, b, c, d, f, e);\n}\nfunction Jh(a, b, c, d, e, f) {\n  Ch(a, b);\n  var g = 0 !== (b.flags & 128);\n  if (!d && !g) return e && bd(b, c, !1), wh(a, b, f);\n  d = b.stateNode;\n  rh.current = b;\n  var h = g && "function" !== typeof c.getDerivedStateFromError ? null : d.render();\n  b.flags |= 1;\n  null !== a && g ? (b.child = Ce(b, a.child, null, f), b.child = Ce(b, null, h, f)) : th(a, b, h, f);\n  b.memoizedState = d.state;\n  e && bd(b, c, !0);\n  return b.child;\n}\nfunction Kh(a) {\n  var b = a.stateNode;\n  b.pendingContext ? Zc(a, b.pendingContext, b.pendingContext !== b.context) : b.context && Zc(a, b.context, !1);\n  Ja(a, b.containerInfo);\n}\nfunction Lh(a, b, c, d, e) {\n  Jd();\n  Kd(e);\n  b.flags |= 256;\n  th(a, b, c, d);\n  return b.child;\n}\nvar Mh = {\n  dehydrated: null,\n  treeContext: null,\n  retryLane: 0\n};\nfunction Nh(a) {\n  return {\n    baseLanes: a,\n    cachePool: Oh()\n  };\n}\nfunction Ph(a, b, c) {\n  var d = b.pendingProps,\n    e = !1,\n    f = 0 !== (b.flags & 128),\n    g;\n  (g = f) || (g = null !== a && null === a.memoizedState ? !1 : 0 !== (Ne.current & 2));\n  g && (e = !0, b.flags &= -129);\n  if (null === a) {\n    if (K) {\n      e ? Me(b) : Pe(b);\n      K && ((f = a = J, f) ? Bd(b, f) || (Dd(b) && Ed(), J = Cd(f), g = G, J && Bd(b, J) ? td(g, f) : (vd(G, b), K = !1, G = b, J = a)) : (Dd(b) && Ed(), vd(G, b), K = !1, G = b, J = a));\n      a = b.memoizedState;\n      if (null !== a && (a = a.dehydrated, null !== a)) return 0 === (b.mode & 1) ? b.lanes = 2 : "$!" === a.data ? b.lanes = 16 : b.lanes = 536870912, null;\n      Qe(b);\n    }\n    f = d.children;\n    a = d.fallback;\n    if (e) return Pe(b), d = b.mode, e = b.child, f = {\n      mode: "hidden",\n      children: f\n    }, 0 === (d & 1) && null !== e ? (e.childLanes = 0, e.pendingProps = f) : e = Qh(f, d, 0, null), a = Ae(a, d, c, null), e.return = b, a.return = b, e.sibling = a, b.child = e, b.child.memoizedState = Nh(c), b.memoizedState = Mh, a;\n    Me(b);\n    return Rh(b, f);\n  }\n  g = a.memoizedState;\n  if (null !== g) {\n    var h = g.dehydrated;\n    if (null !== h) return Sh(a, b, f, d, h, g, c);\n  }\n  if (e) {\n    Pe(b);\n    e = d.fallback;\n    f = b.mode;\n    g = a.child;\n    h = g.sibling;\n    var l = {\n      mode: "hidden",\n      children: d.children\n    };\n    0 === (f & 1) && b.child !== g ? (d = b.child, d.childLanes = 0, d.pendingProps = l, b.deletions = null) : (d = we(g, l), d.subtreeFlags = g.subtreeFlags & 31457280);\n    null !== h ? e = we(h, e) : (e = Ae(e, f, c, null), e.flags |= 2);\n    e.return = b;\n    d.return = b;\n    d.sibling = e;\n    b.child = d;\n    d = e;\n    e = b.child;\n    f = a.child.memoizedState;\n    null === f ? f = Nh(c) : (g = f.cachePool, null !== g ? (h = S._currentValue, g = g.parent !== h ? {\n      parent: h,\n      pool: h\n    } : g) : g = Oh(), f = {\n      baseLanes: f.baseLanes | c,\n      cachePool: g\n    });\n    e.memoizedState = f;\n    e.childLanes = a.childLanes & ~c;\n    b.memoizedState = Mh;\n    return d;\n  }\n  Me(b);\n  e = a.child;\n  a = e.sibling;\n  d = we(e, {\n    mode: "visible",\n    children: d.children\n  });\n  0 === (b.mode & 1) && (d.lanes = c);\n  d.return = b;\n  d.sibling = null;\n  null !== a && (c = b.deletions, null === c ? (b.deletions = [a], b.flags |= 16) : c.push(a));\n  b.child = d;\n  b.memoizedState = null;\n  return d;\n}\nfunction Rh(a, b) {\n  b = Qh({\n    mode: "visible",\n    children: b\n  }, a.mode, 0, null);\n  b.return = a;\n  return a.child = b;\n}\nfunction Th(a, b, c, d) {\n  null !== d && Kd(d);\n  Ce(b, a.child, null, c);\n  a = Rh(b, b.pendingProps.children);\n  a.flags |= 2;\n  b.memoizedState = null;\n  return a;\n}\nfunction Sh(a, b, c, d, e, f, g) {\n  if (c) {\n    if (b.flags & 256) return Me(b), b.flags &= -257, e = eh(Error(u(422))), Th(a, b, g, e);\n    if (null !== b.memoizedState) return Pe(b), b.child = a.child, b.flags |= 128, null;\n    Pe(b);\n    e = d.fallback;\n    f = b.mode;\n    d = Qh({\n      mode: "visible",\n      children: d.children\n    }, f, 0, null);\n    e = Ae(e, f, g, null);\n    e.flags |= 2;\n    d.return = b;\n    e.return = b;\n    d.sibling = e;\n    b.child = d;\n    0 !== (b.mode & 1) && Ce(b, a.child, null, g);\n    b.child.memoizedState = Nh(g);\n    b.memoizedState = Mh;\n    return e;\n  }\n  Me(b);\n  if (0 === (b.mode & 1)) return Th(a, b, g, null);\n  if ("$!" === e.data) {\n    e = e.nextSibling && e.nextSibling.dataset;\n    if (e) var h = e.dgst;\n    e = h;\n    f = Error(u(419));\n    f.digest = e;\n    e = eh(f, e, void 0);\n    return Th(a, b, g, e);\n  }\n  h = 0 !== (g & a.childLanes);\n  if (eg || h) {\n    d = N;\n    if (null !== d) {\n      h = g & -g;\n      if (0 !== (h & 42)) h = 1;else switch (h) {\n        case 2:\n          h = 1;\n          break;\n        case 8:\n          h = 4;\n          break;\n        case 32:\n          h = 16;\n          break;\n        case 128:\n        case 256:\n        case 512:\n        case 1024:\n        case 2048:\n        case 4096:\n        case 8192:\n        case 16384:\n        case 32768:\n        case 65536:\n        case 131072:\n        case 262144:\n        case 524288:\n        case 1048576:\n        case 2097152:\n        case 4194304:\n        case 8388608:\n        case 16777216:\n        case 33554432:\n          h = 64;\n          break;\n        case 268435456:\n          h = 134217728;\n          break;\n        default:\n          h = 0;\n      }\n      h = 0 !== (h & (d.suspendedLanes | g)) ? 0 : h;\n      if (0 !== h && h !== f.retryLane) throw f.retryLane = h, Td(a, h), og(d, a, h), sh;\n    }\n    "$?" !== e.data && nh();\n    return Th(a, b, g, null);\n  }\n  if ("$?" === e.data) return b.flags |= 128, b.child = a.child, b = Uh.bind(null, a), e._reactRetry = b, null;\n  a = f.treeContext;\n  J = yd(e.nextSibling);\n  G = b;\n  K = !0;\n  rd = null;\n  sd = !1;\n  null !== a && (id[jd++] = ld, id[jd++] = md, id[jd++] = kd, ld = a.id, md = a.overflow, kd = b);\n  b = Rh(b, d.children);\n  b.flags |= 4096;\n  return b;\n}\nfunction Vh(a, b, c) {\n  a.lanes |= b;\n  var d = a.alternate;\n  null !== d && (d.lanes |= b);\n  Wh(a.return, b, c);\n}\nfunction Xh(a, b, c, d, e) {\n  var f = a.memoizedState;\n  null === f ? a.memoizedState = {\n    isBackwards: b,\n    rendering: null,\n    renderingStartTime: 0,\n    last: d,\n    tail: c,\n    tailMode: e\n  } : (f.isBackwards = b, f.rendering = null, f.renderingStartTime = 0, f.last = d, f.tail = c, f.tailMode = e);\n}\nfunction Yh(a, b, c) {\n  var d = b.pendingProps,\n    e = d.revealOrder,\n    f = d.tail;\n  th(a, b, d.children, c);\n  d = Ne.current;\n  if (0 !== (d & 2)) d = d & 1 | 2, b.flags |= 128;else {\n    if (null !== a && 0 !== (a.flags & 128)) a: for (a = b.child; null !== a;) {\n      if (13 === a.tag) null !== a.memoizedState && Vh(a, c, b);else if (19 === a.tag) Vh(a, c, b);else if (null !== a.child) {\n        a.child.return = a;\n        a = a.child;\n        continue;\n      }\n      if (a === b) break a;\n      for (; null === a.sibling;) {\n        if (null === a.return || a.return === b) break a;\n        a = a.return;\n      }\n      a.sibling.return = a.return;\n      a = a.sibling;\n    }\n    d &= 1;\n  }\n  E(Ne, d);\n  if (0 === (b.mode & 1)) b.memoizedState = null;else switch (e) {\n    case "forwards":\n      c = b.child;\n      for (e = null; null !== c;) a = c.alternate, null !== a && null === Re(a) && (e = c), c = c.sibling;\n      c = e;\n      null === c ? (e = b.child, b.child = null) : (e = c.sibling, c.sibling = null);\n      Xh(b, !1, e, c, f);\n      break;\n    case "backwards":\n      c = null;\n      e = b.child;\n      for (b.child = null; null !== e;) {\n        a = e.alternate;\n        if (null !== a && null === Re(a)) {\n          b.child = e;\n          break;\n        }\n        a = e.sibling;\n        e.sibling = c;\n        c = e;\n        e = a;\n      }\n      Xh(b, !0, c, null, f);\n      break;\n    case "together":\n      Xh(b, !1, null, null, void 0);\n      break;\n    default:\n      b.memoizedState = null;\n  }\n  return b.child;\n}\nfunction Ih(a, b) {\n  0 === (b.mode & 1) && null !== a && (a.alternate = null, b.alternate = null, b.flags |= 2);\n}\nfunction wh(a, b, c) {\n  null !== a && (b.dependencies = a.dependencies);\n  de |= b.lanes;\n  if (0 === (c & b.childLanes)) return null;\n  if (null !== a && b.child !== a.child) throw Error(u(153));\n  if (null !== b.child) {\n    a = b.child;\n    c = we(a, a.pendingProps);\n    b.child = c;\n    for (c.return = b; null !== a.sibling;) a = a.sibling, c = c.sibling = we(a, a.pendingProps), c.return = b;\n    c.sibling = null;\n  }\n  return b.child;\n}\nfunction Zh(a, b, c) {\n  switch (b.tag) {\n    case 3:\n      Kh(b);\n      $h(b, S, a.memoizedState.cache);\n      Jd();\n      break;\n    case 27:\n    case 5:\n      Na(b);\n      break;\n    case 1:\n      Xc(b.type) && ad(b);\n      break;\n    case 4:\n      Ja(b, b.stateNode.containerInfo);\n      break;\n    case 10:\n      $h(b, b.type._context, b.memoizedProps.value);\n      break;\n    case 13:\n      var d = b.memoizedState;\n      if (null !== d) {\n        if (null !== d.dehydrated) return Me(b), b.flags |= 128, null;\n        if (0 !== (c & b.child.childLanes)) return Ph(a, b, c);\n        Me(b);\n        a = wh(a, b, c);\n        return null !== a ? a.sibling : null;\n      }\n      Me(b);\n      break;\n    case 19:\n      d = 0 !== (c & b.childLanes);\n      if (0 !== (a.flags & 128)) {\n        if (d) return Yh(a, b, c);\n        b.flags |= 128;\n      }\n      var e = b.memoizedState;\n      null !== e && (e.rendering = null, e.tail = null, e.lastEffect = null);\n      E(Ne, Ne.current);\n      if (d) break;else return null;\n    case 22:\n    case 23:\n      return b.lanes = 0, Bh(a, b, c);\n    case 24:\n      $h(b, S, a.memoizedState.cache);\n  }\n  return wh(a, b, c);\n}\nvar ai = ka(null),\n  bi = null,\n  ci = null,\n  di = null;\nfunction ei() {\n  di = ci = bi = null;\n}\nfunction $h(a, b, c) {\n  E(ai, b._currentValue);\n  b._currentValue = c;\n}\nfunction fi(a) {\n  a._currentValue = ai.current;\n  D(ai);\n}\nfunction Wh(a, b, c) {\n  for (; null !== a;) {\n    var d = a.alternate;\n    (a.childLanes & b) !== b ? (a.childLanes |= b, null !== d && (d.childLanes |= b)) : null !== d && (d.childLanes & b) !== b && (d.childLanes |= b);\n    if (a === c) break;\n    a = a.return;\n  }\n}\nfunction gi(a, b, c) {\n  var d = a.child;\n  null !== d && (d.return = a);\n  for (; null !== d;) {\n    var e = d.dependencies;\n    if (null !== e) {\n      var f = d.child;\n      for (var g = e.firstContext; null !== g;) {\n        if (g.context === b) {\n          if (1 === d.tag) {\n            g = Zd(c & -c);\n            g.tag = 2;\n            var h = d.updateQueue;\n            if (null !== h) {\n              h = h.shared;\n              var l = h.pending;\n              null === l ? g.next = g : (g.next = l.next, l.next = g);\n              h.pending = g;\n            }\n          }\n          d.lanes |= c;\n          g = d.alternate;\n          null !== g && (g.lanes |= c);\n          Wh(d.return, c, a);\n          e.lanes |= c;\n          break;\n        }\n        g = g.next;\n      }\n    } else if (10 === d.tag) f = d.type === a.type ? null : d.child;else if (18 === d.tag) {\n      f = d.return;\n      if (null === f) throw Error(u(341));\n      f.lanes |= c;\n      e = f.alternate;\n      null !== e && (e.lanes |= c);\n      Wh(f, c, a);\n      f = d.sibling;\n    } else f = d.child;\n    if (null !== f) f.return = d;else for (f = d; null !== f;) {\n      if (f === a) {\n        f = null;\n        break;\n      }\n      d = f.sibling;\n      if (null !== d) {\n        d.return = f.return;\n        f = d;\n        break;\n      }\n      f = f.return;\n    }\n    d = f;\n  }\n}\nfunction vh(a, b) {\n  bi = a;\n  di = ci = null;\n  a = a.dependencies;\n  null !== a && null !== a.firstContext && (0 !== (a.lanes & b) && (eg = !0), a.firstContext = null);\n}\nfunction ag(a) {\n  return hi(bi, a);\n}\nfunction Be(a, b, c) {\n  null === bi && vh(a, c);\n  return hi(a, b);\n}\nfunction hi(a, b) {\n  var c = b._currentValue;\n  if (di !== b) if (b = {\n    context: b,\n    memoizedValue: c,\n    next: null\n  }, null === ci) {\n    if (null === a) throw Error(u(308));\n    ci = b;\n    a.dependencies = {\n      lanes: 0,\n      firstContext: b\n    };\n  } else ci = ci.next = b;\n  return c;\n}\nvar ii = "undefined" !== typeof AbortController ? AbortController : function () {\n    var a = [],\n      b = this.signal = {\n        aborted: !1,\n        addEventListener: function (c, d) {\n          a.push(d);\n        }\n      };\n    this.abort = function () {\n      b.aborted = !0;\n      a.forEach(function (c) {\n        return c();\n      });\n    };\n  },\n  ji = ba.unstable_scheduleCallback,\n  ki = ba.unstable_NormalPriority,\n  S = {\n    $$typeof: ra,\n    Consumer: null,\n    Provider: null,\n    _currentValue: null,\n    _currentValue2: null,\n    _threadCount: 0,\n    _defaultValue: null,\n    _globalName: null\n  };\nfunction Tg() {\n  return {\n    controller: new ii(),\n    data: new Map(),\n    refCount: 0\n  };\n}\nfunction li(a) {\n  a.refCount--;\n  0 === a.refCount && ji(ki, function () {\n    a.controller.abort();\n  });\n}\nvar mi = da.ReactCurrentBatchConfig,\n  ni = ka(null);\nfunction Fh() {\n  var a = ni.current;\n  return null !== a ? a : N.pooledCache;\n}\nfunction Eh(a, b) {\n  null === b ? E(ni, ni.current) : E(ni, b.pool);\n}\nfunction Oh() {\n  var a = Fh();\n  return null === a ? null : {\n    parent: S._currentValue,\n    pool: a\n  };\n}\nfunction oi(a) {\n  a.flags |= 4;\n}\nfunction pi(a) {\n  a.flags |= 2097664;\n}\nfunction qi(a, b) {\n  if ("stylesheet" !== b.type || 0 !== (b.state.loading & 4)) a.flags &= -16777217;else if (a.flags |= 16777216, 0 === (M & 42) && (b = "stylesheet" === b.type && 0 === (b.state.loading & 3) ? !1 : !0, !b)) if (ri()) a.flags |= 8192;else throw ne = je, ie;\n}\nfunction si(a, b) {\n  null !== b ? a.flags |= 4 : a.flags & 16384 && (b = 22 !== a.tag ? mb() : 536870912, a.lanes |= b);\n}\nfunction ti(a, b) {\n  if (!K) switch (a.tailMode) {\n    case "hidden":\n      b = a.tail;\n      for (var c = null; null !== b;) null !== b.alternate && (c = b), b = b.sibling;\n      null === c ? a.tail = null : c.sibling = null;\n      break;\n    case "collapsed":\n      c = a.tail;\n      for (var d = null; null !== c;) null !== c.alternate && (d = c), c = c.sibling;\n      null === d ? b || null === a.tail ? a.tail = null : a.tail.sibling = null : d.sibling = null;\n  }\n}\nfunction T(a) {\n  var b = null !== a.alternate && a.alternate.child === a.child,\n    c = 0,\n    d = 0;\n  if (b) for (var e = a.child; null !== e;) c |= e.lanes | e.childLanes, d |= e.subtreeFlags & 31457280, d |= e.flags & 31457280, e.return = a, e = e.sibling;else for (e = a.child; null !== e;) c |= e.lanes | e.childLanes, d |= e.subtreeFlags, d |= e.flags, e.return = a, e = e.sibling;\n  a.subtreeFlags |= d;\n  a.childLanes = c;\n  return b;\n}\nfunction ui(a, b, c) {\n  var d = b.pendingProps;\n  qd(b);\n  switch (b.tag) {\n    case 2:\n    case 16:\n    case 15:\n    case 0:\n    case 11:\n    case 7:\n    case 8:\n    case 12:\n    case 9:\n    case 14:\n      return T(b), null;\n    case 1:\n      return Xc(b.type) && Yc(), T(b), null;\n    case 3:\n      c = b.stateNode;\n      d = null;\n      null !== a && (d = a.memoizedState.cache);\n      b.memoizedState.cache !== d && (b.flags |= 2048);\n      fi(S);\n      Ma();\n      D(Uc);\n      D(Tc);\n      c.pendingContext && (c.context = c.pendingContext, c.pendingContext = null);\n      if (null === a || null === a.child) Gd(b) ? oi(b) : null === a || a.memoizedState.isDehydrated && 0 === (b.flags & 256) || (b.flags |= 1024, null !== rd && (vi(rd), rd = null));\n      T(b);\n      return null;\n    case 26:\n      c = b.memoizedState;\n      if (null === a) oi(b), null !== b.ref && pi(b), null !== c ? (T(b), qi(b, c)) : (T(b), b.flags &= -16777217);else {\n        var e = a.memoizedState;\n        c !== e && oi(b);\n        a.ref !== b.ref && pi(b);\n        null !== c ? (T(b), c === e ? b.flags &= -16777217 : qi(b, c)) : (a.memoizedProps !== d && oi(b), T(b), b.flags &= -16777217);\n      }\n      return null;\n    case 27:\n      Oa(b);\n      c = Ga.current;\n      e = b.type;\n      if (null !== a && null != b.stateNode) a.memoizedProps !== d && oi(b), a.ref !== b.ref && pi(b);else {\n        if (!d) {\n          if (null === b.stateNode) throw Error(u(166));\n          T(b);\n          return null;\n        }\n        a = Ea.current;\n        Gd(b) ? wi(b.stateNode, b.type, b.memoizedProps, a, b) : (a = xi(e, d, c), b.stateNode = a, oi(b));\n        null !== b.ref && pi(b);\n      }\n      T(b);\n      return null;\n    case 5:\n      Oa(b);\n      c = b.type;\n      if (null !== a && null != b.stateNode) a.memoizedProps !== d && oi(b), a.ref !== b.ref && pi(b);else {\n        if (!d) {\n          if (null === b.stateNode) throw Error(u(166));\n          T(b);\n          return null;\n        }\n        a = Ea.current;\n        if (Gd(b)) wi(b.stateNode, b.type, b.memoizedProps, a, b);else {\n          e = yi(Ga.current);\n          switch (a) {\n            case 1:\n              a = e.createElementNS("http://www.w3.org/2000/svg", c);\n              break;\n            case 2:\n              a = e.createElementNS("http://www.w3.org/1998/Math/MathML", c);\n              break;\n            default:\n              switch (c) {\n                case "svg":\n                  a = e.createElementNS("http://www.w3.org/2000/svg", c);\n                  break;\n                case "math":\n                  a = e.createElementNS("http://www.w3.org/1998/Math/MathML", c);\n                  break;\n                case "script":\n                  a = e.createElement("div");\n                  a.innerHTML = "<script>\\x3c/script>";\n                  a = a.removeChild(a.firstChild);\n                  break;\n                case "select":\n                  a = "string" === typeof d.is ? e.createElement("select", {\n                    is: d.is\n                  }) : e.createElement("select");\n                  d.multiple ? a.multiple = !0 : d.size && (a.size = d.size);\n                  break;\n                default:\n                  a = "string" === typeof d.is ? e.createElement(c, {\n                    is: d.is\n                  }) : e.createElement(c);\n              }\n          }\n          a[xb] = b;\n          a[yb] = d;\n          a: for (e = b.child; null !== e;) {\n            if (5 === e.tag || 6 === e.tag) a.appendChild(e.stateNode);else if (4 !== e.tag && 27 !== e.tag && null !== e.child) {\n              e.child.return = e;\n              e = e.child;\n              continue;\n            }\n            if (e === b) break a;\n            for (; null === e.sibling;) {\n              if (null === e.return || e.return === b) break a;\n              e = e.return;\n            }\n            e.sibling.return = e.return;\n            e = e.sibling;\n          }\n          b.stateNode = a;\n          a: switch (zi(a, c, d), c) {\n            case "button":\n            case "input":\n            case "select":\n            case "textarea":\n              a = !!d.autoFocus;\n              break a;\n            case "img":\n              a = !0;\n              break a;\n            default:\n              a = !1;\n          }\n          a && oi(b);\n        }\n        null !== b.ref && pi(b);\n      }\n      T(b);\n      b.flags &= -16777217;\n      return null;\n    case 6:\n      if (a && null != b.stateNode) a.memoizedProps !== d && oi(b);else {\n        if ("string" !== typeof d && null === b.stateNode) throw Error(u(166));\n        a = Ga.current;\n        if (Gd(b)) {\n          a: {\n            a = b.stateNode;\n            c = b.memoizedProps;\n            a[xb] = b;\n            if (d = a.nodeValue !== c) if (e = G, null !== e) switch (e.tag) {\n              case 3:\n                e = 0 !== (e.mode & 1);\n                Ai(a.nodeValue, c, e);\n                if (e) {\n                  a = !1;\n                  break a;\n                }\n                break;\n              case 27:\n              case 5:\n                var f = 0 !== (e.mode & 1);\n                !0 !== e.memoizedProps.suppressHydrationWarning && Ai(a.nodeValue, c, f);\n                if (f) {\n                  a = !1;\n                  break a;\n                }\n            }\n            a = d;\n          }\n          a && oi(b);\n        } else a = yi(a).createTextNode(d), a[xb] = b, b.stateNode = a;\n      }\n      T(b);\n      return null;\n    case 13:\n      Qe(b);\n      d = b.memoizedState;\n      if (null === a || null !== a.memoizedState && null !== a.memoizedState.dehydrated) {\n        if (K && null !== J && 0 !== (b.mode & 1) && 0 === (b.flags & 128)) Id(), Jd(), b.flags |= 384, e = !1;else if (e = Gd(b), null !== d && null !== d.dehydrated) {\n          if (null === a) {\n            if (!e) throw Error(u(318));\n            e = b.memoizedState;\n            e = null !== e ? e.dehydrated : null;\n            if (!e) throw Error(u(317));\n            e[xb] = b;\n          } else Jd(), 0 === (b.flags & 128) && (b.memoizedState = null), b.flags |= 4;\n          T(b);\n          e = !1;\n        } else null !== rd && (vi(rd), rd = null), e = !0;\n        if (!e) return b.flags & 256 ? b : null;\n      }\n      if (0 !== (b.flags & 128)) return b.lanes = c, b;\n      c = null !== d;\n      a = null !== a && null !== a.memoizedState;\n      c && (d = b.child, e = null, null !== d.alternate && null !== d.alternate.memoizedState && null !== d.alternate.memoizedState.cachePool && (e = d.alternate.memoizedState.cachePool.pool), f = null, null !== d.memoizedState && null !== d.memoizedState.cachePool && (f = d.memoizedState.cachePool.pool), f !== e && (d.flags |= 2048));\n      c !== a && c && (b.child.flags |= 8192);\n      si(b, b.updateQueue);\n      T(b);\n      return null;\n    case 4:\n      return Ma(), null === a && Bi(b.stateNode.containerInfo), T(b), null;\n    case 10:\n      return fi(b.type._context), T(b), null;\n    case 17:\n      return Xc(b.type) && Yc(), T(b), null;\n    case 19:\n      D(Ne);\n      e = b.memoizedState;\n      if (null === e) return T(b), null;\n      d = 0 !== (b.flags & 128);\n      f = e.rendering;\n      if (null === f) {\n        if (d) ti(e, !1);else {\n          if (0 !== oh || null !== a && 0 !== (a.flags & 128)) for (a = b.child; null !== a;) {\n            f = Re(a);\n            if (null !== f) {\n              b.flags |= 128;\n              ti(e, !1);\n              a = f.updateQueue;\n              b.updateQueue = a;\n              si(b, a);\n              b.subtreeFlags = 0;\n              a = c;\n              for (c = b.child; null !== c;) Ci(c, a), c = c.sibling;\n              E(Ne, Ne.current & 1 | 2);\n              return b.child;\n            }\n            a = a.sibling;\n          }\n          null !== e.tail && Ta() > Di && (b.flags |= 128, d = !0, ti(e, !1), b.lanes = 4194304);\n        }\n      } else {\n        if (!d) if (a = Re(f), null !== a) {\n          if (b.flags |= 128, d = !0, a = a.updateQueue, b.updateQueue = a, si(b, a), ti(e, !0), null === e.tail && "hidden" === e.tailMode && !f.alternate && !K) return T(b), null;\n        } else 2 * Ta() - e.renderingStartTime > Di && 536870912 !== c && (b.flags |= 128, d = !0, ti(e, !1), b.lanes = 4194304);\n        e.isBackwards ? (f.sibling = b.child, b.child = f) : (a = e.last, null !== a ? a.sibling = f : b.child = f, e.last = f);\n      }\n      if (null !== e.tail) return b = e.tail, e.rendering = b, e.tail = b.sibling, e.renderingStartTime = Ta(), b.sibling = null, a = Ne.current, E(Ne, d ? a & 1 | 2 : a & 1), b;\n      T(b);\n      return null;\n    case 22:\n    case 23:\n      return Qe(b), Je(), d = null !== b.memoizedState, null !== a ? null !== a.memoizedState !== d && (b.flags |= 8192) : d && (b.flags |= 8192), d && 0 !== (b.mode & 1) ? 0 !== (c & 536870912) && 0 === (b.flags & 128) && (T(b), b.subtreeFlags & 6 && (b.flags |= 8192)) : T(b), c = b.updateQueue, null !== c && si(b, c.retryQueue), c = null, null !== a && null !== a.memoizedState && null !== a.memoizedState.cachePool && (c = a.memoizedState.cachePool.pool), d = null, null !== b.memoizedState && null !== b.memoizedState.cachePool && (d = b.memoizedState.cachePool.pool), d !== c && (b.flags |= 2048), null !== a && D(ni), null;\n    case 24:\n      return c = null, null !== a && (c = a.memoizedState.cache), b.memoizedState.cache !== c && (b.flags |= 2048), fi(S), T(b), null;\n    case 25:\n      return null;\n  }\n  throw Error(u(156, b.tag));\n}\nfunction Ei(a, b) {\n  qd(b);\n  switch (b.tag) {\n    case 1:\n      return Xc(b.type) && Yc(), a = b.flags, a & 65536 ? (b.flags = a & -65537 | 128, b) : null;\n    case 3:\n      return fi(S), Ma(), D(Uc), D(Tc), a = b.flags, 0 !== (a & 65536) && 0 === (a & 128) ? (b.flags = a & -65537 | 128, b) : null;\n    case 26:\n    case 27:\n    case 5:\n      return Oa(b), null;\n    case 13:\n      Qe(b);\n      a = b.memoizedState;\n      if (null !== a && null !== a.dehydrated) {\n        if (null === b.alternate) throw Error(u(340));\n        Jd();\n      }\n      a = b.flags;\n      return a & 65536 ? (b.flags = a & -65537 | 128, b) : null;\n    case 19:\n      return D(Ne), null;\n    case 4:\n      return Ma(), null;\n    case 10:\n      return fi(b.type._context), null;\n    case 22:\n    case 23:\n      return Qe(b), Je(), null !== a && D(ni), a = b.flags, a & 65536 ? (b.flags = a & -65537 | 128, b) : null;\n    case 24:\n      return fi(S), null;\n    case 25:\n      return null;\n    default:\n      return null;\n  }\n}\nfunction Fi(a, b) {\n  qd(b);\n  switch (b.tag) {\n    case 1:\n      a = b.type.childContextTypes;\n      null !== a && void 0 !== a && Yc();\n      break;\n    case 3:\n      fi(S);\n      Ma();\n      D(Uc);\n      D(Tc);\n      break;\n    case 26:\n    case 27:\n    case 5:\n      Oa(b);\n      break;\n    case 4:\n      Ma();\n      break;\n    case 13:\n      Qe(b);\n      break;\n    case 19:\n      D(Ne);\n      break;\n    case 10:\n      fi(b.type._context);\n      break;\n    case 22:\n    case 23:\n      Qe(b);\n      Je();\n      null !== a && D(ni);\n      break;\n    case 24:\n      fi(S);\n  }\n}\nfunction Gi(a, b, c) {\n  var d = Array.prototype.slice.call(arguments, 3);\n  try {\n    b.apply(c, d);\n  } catch (e) {\n    this.onError(e);\n  }\n}\nvar Hi = !1,\n  Ii = null,\n  Ji = !1,\n  Ki = null,\n  Li = {\n    onError: function (a) {\n      Hi = !0;\n      Ii = a;\n    }\n  };\nfunction Mi(a, b, c, d, e, f, g, h, l) {\n  Hi = !1;\n  Ii = null;\n  Gi.apply(Li, arguments);\n}\nfunction Ni(a, b, c, d, e, f, g, h, l) {\n  Mi.apply(this, arguments);\n  if (Hi) {\n    if (Hi) {\n      var p = Ii;\n      Hi = !1;\n      Ii = null;\n    } else throw Error(u(198));\n    Ji || (Ji = !0, Ki = p);\n  }\n}\nvar Oi = !1,\n  Pi = !1,\n  Qi = "function" === typeof WeakSet ? WeakSet : Set,\n  Ri = null;\nfunction Si(a, b) {\n  try {\n    var c = a.ref;\n    if (null !== c) {\n      var d = a.stateNode;\n      switch (a.tag) {\n        case 26:\n        case 27:\n        case 5:\n          var e = d;\n          break;\n        default:\n          e = d;\n      }\n      "function" === typeof c ? a.refCleanup = c(e) : c.current = e;\n    }\n  } catch (f) {\n    W(a, b, f);\n  }\n}\nfunction Ti(a, b) {\n  var c = a.ref,\n    d = a.refCleanup;\n  if (null !== c) if ("function" === typeof d) try {\n    d();\n  } catch (e) {\n    W(a, b, e);\n  } finally {\n    a.refCleanup = null, a = a.alternate, null != a && (a.refCleanup = null);\n  } else if ("function" === typeof c) try {\n    c(null);\n  } catch (e) {\n    W(a, b, e);\n  } else c.current = null;\n}\nfunction Ui(a, b, c) {\n  try {\n    c();\n  } catch (d) {\n    W(a, b, d);\n  }\n}\nvar Vi = !1;\nfunction Wi(a, b) {\n  Xi = Yi;\n  a = Zi();\n  if ($i(a)) {\n    if ("selectionStart" in a) var c = {\n      start: a.selectionStart,\n      end: a.selectionEnd\n    };else a: {\n      c = (c = a.ownerDocument) && c.defaultView || window;\n      var d = c.getSelection && c.getSelection();\n      if (d && 0 !== d.rangeCount) {\n        c = d.anchorNode;\n        var e = d.anchorOffset,\n          f = d.focusNode;\n        d = d.focusOffset;\n        try {\n          c.nodeType, f.nodeType;\n        } catch (n) {\n          c = null;\n          break a;\n        }\n        var g = 0,\n          h = -1,\n          l = -1,\n          p = 0,\n          q = 0,\n          w = a,\n          r = null;\n        b: for (;;) {\n          for (var t;;) {\n            w !== c || 0 !== e && 3 !== w.nodeType || (h = g + e);\n            w !== f || 0 !== d && 3 !== w.nodeType || (l = g + d);\n            3 === w.nodeType && (g += w.nodeValue.length);\n            if (null === (t = w.firstChild)) break;\n            r = w;\n            w = t;\n          }\n          for (;;) {\n            if (w === a) break b;\n            r === c && ++p === e && (h = g);\n            r === f && ++q === d && (l = g);\n            if (null !== (t = w.nextSibling)) break;\n            w = r;\n            r = w.parentNode;\n          }\n          w = t;\n        }\n        c = -1 === h || -1 === l ? null : {\n          start: h,\n          end: l\n        };\n      } else c = null;\n    }\n    c = c || {\n      start: 0,\n      end: 0\n    };\n  } else c = null;\n  aj = {\n    focusedElem: a,\n    selectionRange: c\n  };\n  Yi = !1;\n  for (Ri = b; null !== Ri;) if (b = Ri, a = b.child, 0 !== (b.subtreeFlags & 1028) && null !== a) a.return = b, Ri = a;else for (; null !== Ri;) {\n    b = Ri;\n    try {\n      var z = b.alternate,\n        B = b.flags;\n      switch (b.tag) {\n        case 0:\n          break;\n        case 11:\n        case 15:\n          break;\n        case 1:\n          if (0 !== (B & 1024) && null !== z) {\n            var U = z.memoizedProps,\n              V = z.memoizedState,\n              m = b.stateNode,\n              k = m.getSnapshotBeforeUpdate(b.elementType === b.type ? U : Xg(b.type, U), V);\n            m.__reactInternalSnapshotBeforeUpdate = k;\n          }\n          break;\n        case 3:\n          0 !== (B & 1024) && bj(b.stateNode.containerInfo);\n          break;\n        case 5:\n        case 26:\n        case 27:\n        case 6:\n        case 4:\n        case 17:\n          break;\n        default:\n          if (0 !== (B & 1024)) throw Error(u(163));\n      }\n    } catch (n) {\n      W(b, b.return, n);\n    }\n    a = b.sibling;\n    if (null !== a) {\n      a.return = b.return;\n      Ri = a;\n      break;\n    }\n    Ri = b.return;\n  }\n  z = Vi;\n  Vi = !1;\n  return z;\n}\nfunction cj(a, b, c) {\n  var d = b.updateQueue;\n  d = null !== d ? d.lastEffect : null;\n  if (null !== d) {\n    var e = d = d.next;\n    do {\n      if ((e.tag & a) === a) {\n        var f = e.inst,\n          g = f.destroy;\n        void 0 !== g && (f.destroy = void 0, Ui(b, c, g));\n      }\n      e = e.next;\n    } while (e !== d);\n  }\n}\nfunction dj(a, b) {\n  b = b.updateQueue;\n  b = null !== b ? b.lastEffect : null;\n  if (null !== b) {\n    var c = b = b.next;\n    do {\n      if ((c.tag & a) === a) {\n        var d = c.create,\n          e = c.inst;\n        d = d();\n        e.destroy = d;\n      }\n      c = c.next;\n    } while (c !== b);\n  }\n}\nfunction ej(a, b) {\n  try {\n    dj(b, a);\n  } catch (c) {\n    W(a, a.return, c);\n  }\n}\nfunction fj(a) {\n  var b = a.updateQueue;\n  if (null !== b) {\n    var c = a.stateNode;\n    try {\n      fe(b, c);\n    } catch (d) {\n      W(a, a.return, d);\n    }\n  }\n}\nfunction gj(a) {\n  var b = a.type,\n    c = a.memoizedProps,\n    d = a.stateNode;\n  try {\n    a: switch (b) {\n      case "button":\n      case "input":\n      case "select":\n      case "textarea":\n        c.autoFocus && d.focus();\n        break a;\n      case "img":\n        c.src && (d.src = c.src);\n    }\n  } catch (e) {\n    W(a, a.return, e);\n  }\n}\nfunction hj(a, b, c) {\n  var d = c.flags;\n  switch (c.tag) {\n    case 0:\n    case 11:\n    case 15:\n      ij(a, c);\n      d & 4 && ej(c, 5);\n      break;\n    case 1:\n      ij(a, c);\n      if (d & 4) if (a = c.stateNode, null === b) try {\n        a.componentDidMount();\n      } catch (h) {\n        W(c, c.return, h);\n      } else {\n        var e = c.elementType === c.type ? b.memoizedProps : Xg(c.type, b.memoizedProps);\n        b = b.memoizedState;\n        try {\n          a.componentDidUpdate(e, b, a.__reactInternalSnapshotBeforeUpdate);\n        } catch (h) {\n          W(c, c.return, h);\n        }\n      }\n      d & 64 && fj(c);\n      d & 512 && Si(c, c.return);\n      break;\n    case 3:\n      ij(a, c);\n      if (d & 64 && (d = c.updateQueue, null !== d)) {\n        a = null;\n        if (null !== c.child) switch (c.child.tag) {\n          case 27:\n          case 5:\n            a = c.child.stateNode;\n            break;\n          case 1:\n            a = c.child.stateNode;\n        }\n        try {\n          fe(d, a);\n        } catch (h) {\n          W(c, c.return, h);\n        }\n      }\n      break;\n    case 26:\n      ij(a, c);\n      d & 512 && Si(c, c.return);\n      break;\n    case 27:\n    case 5:\n      ij(a, c);\n      null === b && d & 4 && gj(c);\n      d & 512 && Si(c, c.return);\n      break;\n    case 12:\n      ij(a, c);\n      break;\n    case 13:\n      ij(a, c);\n      d & 4 && jj(a, c);\n      break;\n    case 22:\n      if (0 !== (c.mode & 1)) {\n        if (e = null !== c.memoizedState || Oi, !e) {\n          b = null !== b && null !== b.memoizedState || Pi;\n          var f = Oi,\n            g = Pi;\n          Oi = e;\n          (Pi = b) && !g ? kj(a, c, 0 !== (c.subtreeFlags & 8772)) : ij(a, c);\n          Oi = f;\n          Pi = g;\n        }\n      } else ij(a, c);\n      d & 512 && ("manual" === c.memoizedProps.mode ? Si(c, c.return) : Ti(c, c.return));\n      break;\n    default:\n      ij(a, c);\n  }\n}\nfunction lj(a) {\n  var b = a.alternate;\n  null !== b && (a.alternate = null, lj(b));\n  a.child = null;\n  a.deletions = null;\n  a.sibling = null;\n  5 === a.tag && (b = a.stateNode, null !== b && Gb(b));\n  a.stateNode = null;\n  a.return = null;\n  a.dependencies = null;\n  a.memoizedProps = null;\n  a.memoizedState = null;\n  a.pendingProps = null;\n  a.stateNode = null;\n  a.updateQueue = null;\n}\nfunction mj(a) {\n  return 5 === a.tag || 3 === a.tag || 26 === a.tag || 27 === a.tag || 4 === a.tag;\n}\nfunction nj(a) {\n  a: for (;;) {\n    for (; null === a.sibling;) {\n      if (null === a.return || mj(a.return)) return null;\n      a = a.return;\n    }\n    a.sibling.return = a.return;\n    for (a = a.sibling; 5 !== a.tag && 6 !== a.tag && 27 !== a.tag && 18 !== a.tag;) {\n      if (a.flags & 2) continue a;\n      if (null === a.child || 4 === a.tag) continue a;else a.child.return = a, a = a.child;\n    }\n    if (!(a.flags & 2)) return a.stateNode;\n  }\n}\nfunction oj(a, b, c) {\n  var d = a.tag;\n  if (5 === d || 6 === d) a = a.stateNode, b ? 8 === c.nodeType ? c.parentNode.insertBefore(a, b) : c.insertBefore(a, b) : (8 === c.nodeType ? (b = c.parentNode, b.insertBefore(a, c)) : (b = c, b.appendChild(a)), c = c._reactRootContainer, null !== c && void 0 !== c || null !== b.onclick || (b.onclick = pj));else if (4 !== d && 27 !== d && (a = a.child, null !== a)) for (oj(a, b, c), a = a.sibling; null !== a;) oj(a, b, c), a = a.sibling;\n}\nfunction qj(a, b, c) {\n  var d = a.tag;\n  if (5 === d || 6 === d) a = a.stateNode, b ? c.insertBefore(a, b) : c.appendChild(a);else if (4 !== d && 27 !== d && (a = a.child, null !== a)) for (qj(a, b, c), a = a.sibling; null !== a;) qj(a, b, c), a = a.sibling;\n}\nvar rj = null,\n  sj = !1;\nfunction tj(a, b, c) {\n  for (c = c.child; null !== c;) uj(a, b, c), c = c.sibling;\n}\nfunction uj(a, b, c) {\n  if (ab && "function" === typeof ab.onCommitFiberUnmount) try {\n    ab.onCommitFiberUnmount($a, c);\n  } catch (l) {}\n  switch (c.tag) {\n    case 26:\n      Pi || Ti(c, b);\n      tj(a, b, c);\n      c.memoizedState ? c.memoizedState.count-- : c.stateNode && (c = c.stateNode, c.parentNode.removeChild(c));\n      break;\n    case 27:\n      Pi || Ti(c, b);\n      var d = rj,\n        e = sj;\n      rj = c.stateNode;\n      tj(a, b, c);\n      c = c.stateNode;\n      for (a = c.attributes; a.length;) c.removeAttributeNode(a[0]);\n      Gb(c);\n      rj = d;\n      sj = e;\n      break;\n    case 5:\n      Pi || Ti(c, b);\n    case 6:\n      d = rj;\n      e = sj;\n      rj = null;\n      tj(a, b, c);\n      rj = d;\n      sj = e;\n      null !== rj && (sj ? (a = rj, c = c.stateNode, 8 === a.nodeType ? a.parentNode.removeChild(c) : a.removeChild(c)) : rj.removeChild(c.stateNode));\n      break;\n    case 18:\n      null !== rj && (sj ? (a = rj, c = c.stateNode, 8 === a.nodeType ? vj(a.parentNode, c) : 1 === a.nodeType && vj(a, c), wj(a)) : vj(rj, c.stateNode));\n      break;\n    case 4:\n      d = rj;\n      e = sj;\n      rj = c.stateNode.containerInfo;\n      sj = !0;\n      tj(a, b, c);\n      rj = d;\n      sj = e;\n      break;\n    case 0:\n    case 11:\n    case 14:\n    case 15:\n      if (!Pi && (d = c.updateQueue, null !== d && (d = d.lastEffect, null !== d))) {\n        e = d = d.next;\n        do {\n          var f = e.tag,\n            g = e.inst,\n            h = g.destroy;\n          void 0 !== h && (0 !== (f & 2) ? (g.destroy = void 0, Ui(c, b, h)) : 0 !== (f & 4) && (g.destroy = void 0, Ui(c, b, h)));\n          e = e.next;\n        } while (e !== d);\n      }\n      tj(a, b, c);\n      break;\n    case 1:\n      if (!Pi && (Ti(c, b), d = c.stateNode, "function" === typeof d.componentWillUnmount)) try {\n        d.props = c.memoizedProps, d.state = c.memoizedState, d.componentWillUnmount();\n      } catch (l) {\n        W(c, b, l);\n      }\n      tj(a, b, c);\n      break;\n    case 21:\n      tj(a, b, c);\n      break;\n    case 22:\n      Ti(c, b);\n      c.mode & 1 ? (Pi = (d = Pi) || null !== c.memoizedState, tj(a, b, c), Pi = d) : tj(a, b, c);\n      break;\n    default:\n      tj(a, b, c);\n  }\n}\nfunction jj(a, b) {\n  if (null === b.memoizedState && (a = b.alternate, null !== a && (a = a.memoizedState, null !== a && (a = a.dehydrated, null !== a)))) try {\n    wj(a);\n  } catch (c) {\n    W(b, b.return, c);\n  }\n}\nfunction xj(a) {\n  switch (a.tag) {\n    case 13:\n    case 19:\n      var b = a.stateNode;\n      null === b && (b = a.stateNode = new Qi());\n      return b;\n    case 22:\n      return a = a.stateNode, b = a._retryCache, null === b && (b = a._retryCache = new Qi()), b;\n    default:\n      throw Error(u(435, a.tag));\n  }\n}\nfunction yj(a, b) {\n  var c = xj(a);\n  b.forEach(function (d) {\n    var e = zj.bind(null, a, d);\n    c.has(d) || (c.add(d), d.then(e, e));\n  });\n}\nfunction Aj(a, b) {\n  var c = b.deletions;\n  if (null !== c) for (var d = 0; d < c.length; d++) {\n    var e = c[d];\n    try {\n      var f = a,\n        g = b,\n        h = g;\n      a: for (; null !== h;) {\n        switch (h.tag) {\n          case 27:\n          case 5:\n            rj = h.stateNode;\n            sj = !1;\n            break a;\n          case 3:\n            rj = h.stateNode.containerInfo;\n            sj = !0;\n            break a;\n          case 4:\n            rj = h.stateNode.containerInfo;\n            sj = !0;\n            break a;\n        }\n        h = h.return;\n      }\n      if (null === rj) throw Error(u(160));\n      uj(f, g, e);\n      rj = null;\n      sj = !1;\n      var l = e.alternate;\n      null !== l && (l.return = null);\n      e.return = null;\n    } catch (p) {\n      W(e, b, p);\n    }\n  }\n  if (b.subtreeFlags & 12854) for (b = b.child; null !== b;) Bj(b, a), b = b.sibling;\n}\nvar Cj = null;\nfunction Bj(a, b) {\n  var c = a.alternate,\n    d = a.flags;\n  switch (a.tag) {\n    case 0:\n    case 11:\n    case 14:\n    case 15:\n      Aj(b, a);\n      Dj(a);\n      if (d & 4) {\n        try {\n          cj(3, a, a.return), dj(3, a);\n        } catch (t) {\n          W(a, a.return, t);\n        }\n        try {\n          cj(5, a, a.return);\n        } catch (t) {\n          W(a, a.return, t);\n        }\n      }\n      break;\n    case 1:\n      Aj(b, a);\n      Dj(a);\n      d & 512 && null !== c && Ti(c, c.return);\n      d & 64 && Oi && (a = a.updateQueue, null !== a && (c = a.callbacks, null !== c && (d = a.shared.hiddenCallbacks, a.shared.hiddenCallbacks = null === d ? c : d.concat(c))));\n      break;\n    case 26:\n      var e = Cj;\n      Aj(b, a);\n      Dj(a);\n      d & 512 && null !== c && Ti(c, c.return);\n      if (d & 4) if (b = null !== c ? c.memoizedState : null, d = a.memoizedState, null === c) {\n        if (null === d) {\n          if (null === a.stateNode) {\n            a: {\n              c = a.type;\n              d = a.memoizedProps;\n              b = e.ownerDocument || e;\n              b: switch (c) {\n                case "title":\n                  e = b.getElementsByTagName("title")[0];\n                  if (!e || e[Fb] || e[xb] || "http://www.w3.org/2000/svg" === e.namespaceURI || e.hasAttribute("itemprop")) e = b.createElement(c), b.head.insertBefore(e, b.querySelector("head > title"));\n                  zi(e, c, d);\n                  e[xb] = a;\n                  Nb(e);\n                  c = e;\n                  break a;\n                case "link":\n                  var f = Ej("link", "href", b).get(c + (d.href || ""));\n                  if (f) for (var g = 0; g < f.length; g++) if (e = f[g], e.getAttribute("href") === (null == d.href ? null : d.href) && e.getAttribute("rel") === (null == d.rel ? null : d.rel) && e.getAttribute("title") === (null == d.title ? null : d.title) && e.getAttribute("crossorigin") === (null == d.crossOrigin ? null : d.crossOrigin)) {\n                    f.splice(g, 1);\n                    break b;\n                  }\n                  e = b.createElement(c);\n                  zi(e, c, d);\n                  b.head.appendChild(e);\n                  break;\n                case "meta":\n                  if (f = Ej("meta", "content", b).get(c + (d.content || ""))) for (g = 0; g < f.length; g++) if (e = f[g], e.getAttribute("content") === (null == d.content ? null : "" + d.content) && e.getAttribute("name") === (null == d.name ? null : d.name) && e.getAttribute("property") === (null == d.property ? null : d.property) && e.getAttribute("http-equiv") === (null == d.httpEquiv ? null : d.httpEquiv) && e.getAttribute("charset") === (null == d.charSet ? null : d.charSet)) {\n                    f.splice(g, 1);\n                    break b;\n                  }\n                  e = b.createElement(c);\n                  zi(e, c, d);\n                  b.head.appendChild(e);\n                  break;\n                default:\n                  throw Error(u(468, c));\n              }\n              e[xb] = a;\n              Nb(e);\n              c = e;\n            }\n            a.stateNode = c;\n          } else Fj(e, a.type, a.stateNode);\n        } else a.stateNode = Gj(e, d, a.memoizedProps);\n      } else if (b !== d) null === b ? null !== c.stateNode && (c = c.stateNode, c.parentNode.removeChild(c)) : b.count--, null === d ? Fj(e, a.type, a.stateNode) : Gj(e, d, a.memoizedProps);else if (null === d && null !== a.stateNode) {\n        a.updateQueue = null;\n        try {\n          var h = a.stateNode,\n            l = a.memoizedProps;\n          Hj(h, a.type, c.memoizedProps, l);\n          h[yb] = l;\n        } catch (t) {\n          W(a, a.return, t);\n        }\n      }\n      break;\n    case 27:\n      if (d & 4 && null === a.alternate) {\n        e = a.stateNode;\n        f = a.memoizedProps;\n        for (g = e.firstChild; g;) {\n          var p = g.nextSibling,\n            q = g.nodeName;\n          g[Fb] || "HEAD" === q || "BODY" === q || "SCRIPT" === q || "STYLE" === q || "LINK" === q && "stylesheet" === g.rel.toLowerCase() || e.removeChild(g);\n          g = p;\n        }\n        g = a.type;\n        for (p = e.attributes; p.length;) e.removeAttributeNode(p[0]);\n        zi(e, g, f);\n        e[xb] = a;\n        e[yb] = f;\n      }\n    case 5:\n      Aj(b, a);\n      Dj(a);\n      d & 512 && null !== c && Ti(c, c.return);\n      if (a.flags & 32) {\n        b = a.stateNode;\n        try {\n          zc(b, "");\n        } catch (t) {\n          W(a, a.return, t);\n        }\n      }\n      if (d & 4 && (d = a.stateNode, null != d)) {\n        b = a.memoizedProps;\n        c = null !== c ? c.memoizedProps : b;\n        e = a.type;\n        a.updateQueue = null;\n        try {\n          Hj(d, e, c, b), d[yb] = b;\n        } catch (t) {\n          W(a, a.return, t);\n        }\n      }\n      break;\n    case 6:\n      Aj(b, a);\n      Dj(a);\n      if (d & 4) {\n        if (null === a.stateNode) throw Error(u(162));\n        c = a.stateNode;\n        d = a.memoizedProps;\n        try {\n          c.nodeValue = d;\n        } catch (t) {\n          W(a, a.return, t);\n        }\n      }\n      break;\n    case 3:\n      Ij = null;\n      e = Cj;\n      Cj = Jj(b.containerInfo);\n      Aj(b, a);\n      Cj = e;\n      Dj(a);\n      if (d & 4 && null !== c && c.memoizedState.isDehydrated) try {\n        wj(b.containerInfo);\n      } catch (t) {\n        W(a, a.return, t);\n      }\n      break;\n    case 4:\n      c = Cj;\n      Cj = Jj(a.stateNode.containerInfo);\n      Aj(b, a);\n      Dj(a);\n      Cj = c;\n      break;\n    case 13:\n      Aj(b, a);\n      Dj(a);\n      a.child.flags & 8192 && null !== a.memoizedState !== (null !== c && null !== c.memoizedState) && (Kj = Ta());\n      d & 4 && (c = a.updateQueue, null !== c && (a.updateQueue = null, yj(a, c)));\n      break;\n    case 22:\n      d & 512 && null !== c && Ti(c, c.return);\n      h = null !== a.memoizedState;\n      l = null !== c && null !== c.memoizedState;\n      if (a.mode & 1) {\n        var w = Oi,\n          r = Pi;\n        Oi = w || h;\n        Pi = r || l;\n        Aj(b, a);\n        Pi = r;\n        Oi = w;\n      } else Aj(b, a);\n      Dj(a);\n      b = a.stateNode;\n      b._current = a;\n      b._visibility &= -3;\n      b._visibility |= b._pendingVisibility & 2;\n      if (d & 8192 && (b._visibility = h ? b._visibility & -2 : b._visibility | 1, h && (b = Oi || Pi, null === c || l || b || 0 !== (a.mode & 1) && Lj(a)), null === a.memoizedProps || "manual" !== a.memoizedProps.mode)) a: for (c = null, b = a;;) {\n        if (5 === b.tag || 26 === b.tag || 27 === b.tag) {\n          if (null === c) {\n            c = b;\n            try {\n              e = b.stateNode, h ? (f = e.style, "function" === typeof f.setProperty ? f.setProperty("display", "none", "important") : f.display = "none") : (g = b.stateNode, p = b.memoizedProps.style, q = void 0 !== p && null !== p && p.hasOwnProperty("display") ? p.display : null, g.style.display = null == q || "boolean" === typeof q ? "" : ("" + q).trim());\n            } catch (t) {\n              W(a, a.return, t);\n            }\n          }\n        } else if (6 === b.tag) {\n          if (null === c) try {\n            b.stateNode.nodeValue = h ? "" : b.memoizedProps;\n          } catch (t) {\n            W(a, a.return, t);\n          }\n        } else if ((22 !== b.tag && 23 !== b.tag || null === b.memoizedState || b === a) && null !== b.child) {\n          b.child.return = b;\n          b = b.child;\n          continue;\n        }\n        if (b === a) break a;\n        for (; null === b.sibling;) {\n          if (null === b.return || b.return === a) break a;\n          c === b && (c = null);\n          b = b.return;\n        }\n        c === b && (c = null);\n        b.sibling.return = b.return;\n        b = b.sibling;\n      }\n      d & 4 && (c = a.updateQueue, null !== c && (d = c.retryQueue, null !== d && (c.retryQueue = null, yj(a, d))));\n      break;\n    case 19:\n      Aj(b, a);\n      Dj(a);\n      d & 4 && (c = a.updateQueue, null !== c && (a.updateQueue = null, yj(a, c)));\n      break;\n    case 21:\n      break;\n    default:\n      Aj(b, a), Dj(a);\n  }\n}\nfunction Dj(a) {\n  var b = a.flags;\n  if (b & 2) {\n    try {\n      if (27 !== a.tag) {\n        b: {\n          for (var c = a.return; null !== c;) {\n            if (mj(c)) {\n              var d = c;\n              break b;\n            }\n            c = c.return;\n          }\n          throw Error(u(160));\n        }\n        switch (d.tag) {\n          case 27:\n            var e = d.stateNode,\n              f = nj(a);\n            qj(a, f, e);\n            break;\n          case 5:\n            var g = d.stateNode;\n            d.flags & 32 && (zc(g, ""), d.flags &= -33);\n            var h = nj(a);\n            qj(a, h, g);\n            break;\n          case 3:\n          case 4:\n            var l = d.stateNode.containerInfo,\n              p = nj(a);\n            oj(a, p, l);\n            break;\n          default:\n            throw Error(u(161));\n        }\n      }\n    } catch (q) {\n      W(a, a.return, q);\n    }\n    a.flags &= -3;\n  }\n  b & 4096 && (a.flags &= -4097);\n}\nfunction ij(a, b) {\n  if (b.subtreeFlags & 8772) for (b = b.child; null !== b;) hj(a, b.alternate, b), b = b.sibling;\n}\nfunction Lj(a) {\n  for (a = a.child; null !== a;) {\n    var b = a;\n    switch (b.tag) {\n      case 0:\n      case 11:\n      case 14:\n      case 15:\n        cj(4, b, b.return);\n        Lj(b);\n        break;\n      case 1:\n        Ti(b, b.return);\n        var c = b.stateNode;\n        if ("function" === typeof c.componentWillUnmount) {\n          var d = b,\n            e = b.return;\n          try {\n            var f = d;\n            c.props = f.memoizedProps;\n            c.state = f.memoizedState;\n            c.componentWillUnmount();\n          } catch (g) {\n            W(d, e, g);\n          }\n        }\n        Lj(b);\n        break;\n      case 26:\n      case 27:\n      case 5:\n        Ti(b, b.return);\n        Lj(b);\n        break;\n      case 22:\n        Ti(b, b.return);\n        null === b.memoizedState && Lj(b);\n        break;\n      default:\n        Lj(b);\n    }\n    a = a.sibling;\n  }\n}\nfunction kj(a, b, c) {\n  c = c && 0 !== (b.subtreeFlags & 8772);\n  for (b = b.child; null !== b;) {\n    var d = b.alternate,\n      e = a,\n      f = b,\n      g = f.flags;\n    switch (f.tag) {\n      case 0:\n      case 11:\n      case 15:\n        kj(e, f, c);\n        ej(f, 4);\n        break;\n      case 1:\n        kj(e, f, c);\n        e = f.stateNode;\n        if ("function" === typeof e.componentDidMount) try {\n          e.componentDidMount();\n        } catch (l) {\n          W(f, f.return, l);\n        }\n        d = f.updateQueue;\n        if (null !== d) {\n          var h = d.shared.hiddenCallbacks;\n          if (null !== h) for (d.shared.hiddenCallbacks = null, d = 0; d < h.length; d++) ee(h[d], e);\n        }\n        c && g & 64 && fj(f);\n        Si(f, f.return);\n        break;\n      case 26:\n      case 27:\n      case 5:\n        kj(e, f, c);\n        c && null === d && g & 4 && gj(f);\n        Si(f, f.return);\n        break;\n      case 12:\n        kj(e, f, c);\n        break;\n      case 13:\n        kj(e, f, c);\n        c && g & 4 && jj(e, f);\n        break;\n      case 22:\n        null === f.memoizedState && kj(e, f, c);\n        Si(f, f.return);\n        break;\n      default:\n        kj(e, f, c);\n    }\n    b = b.sibling;\n  }\n}\nfunction Mj(a, b) {\n  try {\n    dj(b, a);\n  } catch (c) {\n    W(a, a.return, c);\n  }\n}\nfunction Nj(a, b) {\n  var c = null;\n  null !== a && null !== a.memoizedState && null !== a.memoizedState.cachePool && (c = a.memoizedState.cachePool.pool);\n  a = null;\n  null !== b.memoizedState && null !== b.memoizedState.cachePool && (a = b.memoizedState.cachePool.pool);\n  a !== c && (null != a && a.refCount++, null != c && li(c));\n}\nfunction Oj(a, b) {\n  a = null;\n  null !== b.alternate && (a = b.alternate.memoizedState.cache);\n  b = b.memoizedState.cache;\n  b !== a && (b.refCount++, null != a && li(a));\n}\nfunction Pj(a, b, c, d) {\n  if (b.subtreeFlags & 10256) for (b = b.child; null !== b;) Qj(a, b, c, d), b = b.sibling;\n}\nfunction Qj(a, b, c, d) {\n  var e = b.flags;\n  switch (b.tag) {\n    case 0:\n    case 11:\n    case 15:\n      Pj(a, b, c, d);\n      e & 2048 && Mj(b, 9);\n      break;\n    case 3:\n      Pj(a, b, c, d);\n      e & 2048 && (a = null, null !== b.alternate && (a = b.alternate.memoizedState.cache), b = b.memoizedState.cache, b !== a && (b.refCount++, null != a && li(a)));\n      break;\n    case 23:\n      break;\n    case 22:\n      var f = b.stateNode;\n      null !== b.memoizedState ? f._visibility & 4 ? Pj(a, b, c, d) : b.mode & 1 ? Rj(a, b) : (f._visibility |= 4, Pj(a, b, c, d)) : f._visibility & 4 ? Pj(a, b, c, d) : (f._visibility |= 4, Sj(a, b, c, d, 0 !== (b.subtreeFlags & 10256)));\n      e & 2048 && Nj(b.alternate, b);\n      break;\n    case 24:\n      Pj(a, b, c, d);\n      e & 2048 && Oj(b.alternate, b);\n      break;\n    default:\n      Pj(a, b, c, d);\n  }\n}\nfunction Sj(a, b, c, d, e) {\n  e = e && 0 !== (b.subtreeFlags & 10256);\n  for (b = b.child; null !== b;) {\n    var f = a,\n      g = b,\n      h = c,\n      l = d,\n      p = g.flags;\n    switch (g.tag) {\n      case 0:\n      case 11:\n      case 15:\n        Sj(f, g, h, l, e);\n        Mj(g, 8);\n        break;\n      case 23:\n        break;\n      case 22:\n        var q = g.stateNode;\n        null !== g.memoizedState ? q._visibility & 4 ? Sj(f, g, h, l, e) : g.mode & 1 ? Rj(f, g) : (q._visibility |= 4, Sj(f, g, h, l, e)) : (q._visibility |= 4, Sj(f, g, h, l, e));\n        e && p & 2048 && Nj(g.alternate, g);\n        break;\n      case 24:\n        Sj(f, g, h, l, e);\n        e && p & 2048 && Oj(g.alternate, g);\n        break;\n      default:\n        Sj(f, g, h, l, e);\n    }\n    b = b.sibling;\n  }\n}\nfunction Rj(a, b) {\n  if (b.subtreeFlags & 10256) for (b = b.child; null !== b;) {\n    var c = a,\n      d = b,\n      e = d.flags;\n    switch (d.tag) {\n      case 22:\n        Rj(c, d);\n        e & 2048 && Nj(d.alternate, d);\n        break;\n      case 24:\n        Rj(c, d);\n        e & 2048 && Oj(d.alternate, d);\n        break;\n      default:\n        Rj(c, d);\n    }\n    b = b.sibling;\n  }\n}\nvar Tj = 8192;\nfunction Uj(a) {\n  if (a.subtreeFlags & Tj) for (a = a.child; null !== a;) Vj(a), a = a.sibling;\n}\nfunction Vj(a) {\n  switch (a.tag) {\n    case 26:\n      Uj(a);\n      a.flags & Tj && null !== a.memoizedState && Wj(Cj, a.memoizedState, a.memoizedProps);\n      break;\n    case 5:\n      Uj(a);\n      break;\n    case 3:\n    case 4:\n      var b = Cj;\n      Cj = Jj(a.stateNode.containerInfo);\n      Uj(a);\n      Cj = b;\n      break;\n    case 22:\n      null === a.memoizedState && (b = a.alternate, null !== b && null !== b.memoizedState ? (b = Tj, Tj = 16777216, Uj(a), Tj = b) : Uj(a));\n      break;\n    default:\n      Uj(a);\n  }\n}\nfunction Xj(a) {\n  var b = a.alternate;\n  if (null !== b && (a = b.child, null !== a)) {\n    b.child = null;\n    do b = a.sibling, a.sibling = null, a = b; while (null !== a);\n  }\n}\nfunction Yj(a) {\n  var b = a.deletions;\n  if (0 !== (a.flags & 16)) {\n    if (null !== b) for (var c = 0; c < b.length; c++) {\n      var d = b[c];\n      Ri = d;\n      Zj(d, a);\n    }\n    Xj(a);\n  }\n  if (a.subtreeFlags & 10256) for (a = a.child; null !== a;) ak(a), a = a.sibling;\n}\nfunction ak(a) {\n  switch (a.tag) {\n    case 0:\n    case 11:\n    case 15:\n      Yj(a);\n      a.flags & 2048 && cj(9, a, a.return);\n      break;\n    case 22:\n      var b = a.stateNode;\n      null !== a.memoizedState && b._visibility & 4 && (null === a.return || 13 !== a.return.tag) ? (b._visibility &= -5, bk(a)) : Yj(a);\n      break;\n    default:\n      Yj(a);\n  }\n}\nfunction bk(a) {\n  var b = a.deletions;\n  if (0 !== (a.flags & 16)) {\n    if (null !== b) for (var c = 0; c < b.length; c++) {\n      var d = b[c];\n      Ri = d;\n      Zj(d, a);\n    }\n    Xj(a);\n  }\n  for (a = a.child; null !== a;) {\n    b = a;\n    switch (b.tag) {\n      case 0:\n      case 11:\n      case 15:\n        cj(8, b, b.return);\n        bk(b);\n        break;\n      case 22:\n        c = b.stateNode;\n        c._visibility & 4 && (c._visibility &= -5, bk(b));\n        break;\n      default:\n        bk(b);\n    }\n    a = a.sibling;\n  }\n}\nfunction Zj(a, b) {\n  for (; null !== Ri;) {\n    var c = Ri;\n    switch (c.tag) {\n      case 0:\n      case 11:\n      case 15:\n        cj(8, c, b);\n        break;\n      case 23:\n      case 22:\n        if (null !== c.memoizedState && null !== c.memoizedState.cachePool) {\n          var d = c.memoizedState.cachePool.pool;\n          null != d && d.refCount++;\n        }\n        break;\n      case 24:\n        li(c.memoizedState.cache);\n    }\n    d = c.child;\n    if (null !== d) d.return = c, Ri = d;else a: for (c = a; null !== Ri;) {\n      d = Ri;\n      var e = d.sibling,\n        f = d.return;\n      lj(d);\n      if (d === c) {\n        Ri = null;\n        break a;\n      }\n      if (null !== e) {\n        e.return = f;\n        Ri = e;\n        break a;\n      }\n      Ri = f;\n    }\n  }\n}\nvar ck = {\n    getCacheSignal: function () {\n      return ag(S).controller.signal;\n    },\n    getCacheForType: function (a) {\n      var b = ag(S),\n        c = b.data.get(a);\n      void 0 === c && (c = a(), b.data.set(a, c));\n      return c;\n    }\n  },\n  dk = "function" === typeof WeakMap ? WeakMap : Map,\n  ek = da.ReactCurrentDispatcher,\n  fk = da.ReactCurrentCache,\n  gk = da.ReactCurrentOwner,\n  hk = da.ReactCurrentBatchConfig,\n  L = 0,\n  N = null,\n  X = null,\n  M = 0,\n  O = 0,\n  ik = null,\n  jk = !1,\n  He = 0,\n  oh = 0,\n  ef = null,\n  de = 0,\n  kk = 0,\n  lk = 0,\n  lf = 0,\n  qh = null,\n  jf = null,\n  Kj = 0,\n  Di = Infinity,\n  kf = null,\n  hh = !1,\n  ih = null,\n  kh = null,\n  mk = !1,\n  nk = null,\n  ok = 0,\n  pk = 0,\n  qk = null,\n  Ud = 0,\n  Vd = null;\nfunction Sg(a) {\n  if (0 === (a.mode & 1)) return 2;\n  if (0 !== (L & 2) && 0 !== M) return M & -M;\n  if (null !== mi.transition) return a = uf, 0 !== a ? a : rf();\n  a = F;\n  if (0 !== a) return a;\n  a = window.event;\n  a = void 0 === a ? 32 : rk(a.type);\n  return a;\n}\nfunction og(a, b, c) {\n  if (a === N && 2 === O || null !== a.cancelPendingCommit) ff(a, 0), gf(a, M, lf);\n  ob(a, c);\n  if (0 === (L & 2) || a !== N) a === N && (0 === (L & 2) && (kk |= c), 4 === oh && gf(a, M, lf)), Ye(a), 2 === c && 0 === L && 0 === (b.mode & 1) && (Di = Ta() + 500, af(!0));\n}\nfunction pf(a, b) {\n  if (0 !== (L & 6)) throw Error(u(327));\n  var c = a.callbackNode;\n  if (bf() && a.callbackNode !== c) return null;\n  var d = jb(a, a === N ? M : 0);\n  if (0 === d) return null;\n  var e = 0 === (d & 60) && 0 === (d & a.expiredLanes) && !b;\n  b = e ? sk(a, d) : cf(a, d);\n  if (0 !== b) {\n    var f = e;\n    do {\n      if (6 === b) gf(a, d, 0);else {\n        e = a.current.alternate;\n        if (f && !tk(e)) {\n          b = cf(a, d);\n          f = !1;\n          continue;\n        }\n        if (2 === b) {\n          f = d;\n          var g = lb(a, f);\n          0 !== g && (d = g, b = df(a, f, g));\n        }\n        if (1 === b) throw c = ef, ff(a, 0), gf(a, d, 0), Ye(a), c;\n        a.finishedWork = e;\n        a.finishedLanes = d;\n        a: {\n          f = a;\n          switch (b) {\n            case 0:\n            case 1:\n              throw Error(u(345));\n            case 4:\n              if ((d & 4194176) === d) {\n                gf(f, d, lf);\n                break a;\n              }\n              break;\n            case 2:\n            case 3:\n            case 5:\n              break;\n            default:\n              throw Error(u(329));\n          }\n          if ((d & 62914560) === d && (b = Kj + 300 - Ta(), 10 < b)) {\n            gf(f, d, lf);\n            if (0 !== jb(f, 0)) break a;\n            f.timeoutHandle = uk(vk.bind(null, f, e, jf, kf, d, lf), b);\n            break a;\n          }\n          vk(f, e, jf, kf, d, lf);\n        }\n      }\n      break;\n    } while (1);\n  }\n  Ye(a);\n  of(a, Ta());\n  a = a.callbackNode === c ? pf.bind(null, a) : null;\n  return a;\n}\nfunction df(a, b, c) {\n  var d = qh,\n    e = a.current.memoizedState.isDehydrated;\n  e && (ff(a, c).flags |= 256);\n  c = cf(a, c);\n  if (2 !== c) {\n    if (jk && !e) return a.errorRecoveryDisabledLanes |= b, kk |= b, 4;\n    a = jf;\n    jf = d;\n    null !== a && vi(a);\n  }\n  return c;\n}\nfunction vi(a) {\n  null === jf ? jf = a : jf.push.apply(jf, a);\n}\nfunction vk(a, b, c, d, e, f) {\n  if (0 === (e & 42) && (wk = {\n    stylesheets: null,\n    count: 0,\n    unsuspend: xk\n  }, Vj(b), b = yk(), null !== b)) {\n    a.cancelPendingCommit = b(hf.bind(null, a, c, d));\n    gf(a, e, f);\n    return;\n  }\n  hf(a, c, d, f);\n}\nfunction tk(a) {\n  for (var b = a;;) {\n    if (b.flags & 16384) {\n      var c = b.updateQueue;\n      if (null !== c && (c = c.stores, null !== c)) for (var d = 0; d < c.length; d++) {\n        var e = c[d],\n          f = e.getSnapshot;\n        e = e.value;\n        try {\n          if (!dd(f(), e)) return !1;\n        } catch (g) {\n          return !1;\n        }\n      }\n    }\n    c = b.child;\n    if (b.subtreeFlags & 16384 && null !== c) c.return = b, b = c;else {\n      if (b === a) break;\n      for (; null === b.sibling;) {\n        if (null === b.return || b.return === a) return !0;\n        b = b.return;\n      }\n      b.sibling.return = b.return;\n      b = b.sibling;\n    }\n  }\n  return !0;\n}\nfunction gf(a, b, c) {\n  b &= ~lk;\n  b &= ~kk;\n  a.suspendedLanes |= b;\n  a.pingedLanes &= ~b;\n  for (var d = a.expirationTimes, e = b; 0 < e;) {\n    var f = 31 - db(e),\n      g = 1 << f;\n    d[f] = -1;\n    e &= ~g;\n  }\n  0 !== c && qb(a, c, b);\n}\nfunction zk(a, b) {\n  var c = L;\n  L |= 1;\n  try {\n    return a(b);\n  } finally {\n    L = c, 0 === L && (Di = Ta() + 500, af(!0));\n  }\n}\nfunction Ak(a) {\n  null !== nk && 0 === nk.tag && 0 === (L & 6) && bf();\n  var b = L;\n  L |= 1;\n  var c = hk.transition,\n    d = F;\n  try {\n    if (hk.transition = null, F = 2, a) return a();\n  } finally {\n    F = d, hk.transition = c, L = b, 0 === (L & 6) && af(!1);\n  }\n}\nfunction Bk() {\n  if (null !== X) {\n    if (0 === O) var a = X.return;else a = X, ei(), Wf(a), pe = null, qe = 0, a = X;\n    for (; null !== a;) Fi(a.alternate, a), a = a.return;\n    X = null;\n  }\n}\nfunction ff(a, b) {\n  a.finishedWork = null;\n  a.finishedLanes = 0;\n  var c = a.timeoutHandle;\n  -1 !== c && (a.timeoutHandle = -1, Ck(c));\n  c = a.cancelPendingCommit;\n  null !== c && (a.cancelPendingCommit = null, c());\n  Bk();\n  N = a;\n  X = c = we(a.current, null);\n  M = b;\n  O = 0;\n  ik = null;\n  jk = !1;\n  oh = 0;\n  ef = null;\n  lf = lk = kk = de = 0;\n  jf = qh = null;\n  0 !== (b & 8) && (b |= b & 32);\n  var d = a.entangledLanes;\n  if (0 !== d) for (a = a.entanglements, d &= b; 0 < d;) {\n    var e = 31 - db(d),\n      f = 1 << e;\n    b |= a[e];\n    d &= ~f;\n  }\n  He = b;\n  Od();\n  return c;\n}\nfunction Dk(a, b) {\n  P = null;\n  zf.current = Qf;\n  gk.current = null;\n  b === he ? (b = oe(), O = ri() && 0 === (de & 134217727) && 0 === (kk & 134217727) ? 2 : 3) : b === ie ? (b = oe(), O = 4) : O = b === sh ? 8 : null !== b && "object" === typeof b && "function" === typeof b.then ? 6 : 1;\n  ik = b;\n  null === X && (oh = 1, ef = b);\n}\nfunction ri() {\n  var a = Ke.current;\n  return null === a ? !0 : (M & 4194176) === M ? null === Le ? !0 : !1 : (M & 62914560) === M || 0 !== (M & 536870912) ? a === Le : !1;\n}\nfunction Ek() {\n  var a = ek.current;\n  ek.current = Qf;\n  return null === a ? Qf : a;\n}\nfunction Fk() {\n  var a = fk.current;\n  fk.current = ck;\n  return a;\n}\nfunction nh() {\n  oh = 4;\n  0 === (de & 134217727) && 0 === (kk & 134217727) || null === N || gf(N, M, lf);\n}\nfunction cf(a, b) {\n  var c = L;\n  L |= 2;\n  var d = Ek(),\n    e = Fk();\n  if (N !== a || M !== b) kf = null, ff(a, b);\n  b = !1;\n  a: do try {\n    if (0 !== O && null !== X) {\n      var f = X,\n        g = ik;\n      switch (O) {\n        case 8:\n          Bk();\n          oh = 6;\n          break a;\n        case 3:\n        case 2:\n          b || null !== Ke.current || (b = !0);\n        default:\n          O = 0, ik = null, Gk(f, g);\n      }\n    }\n    Hk();\n    break;\n  } catch (h) {\n    Dk(a, h);\n  } while (1);\n  b && a.shellSuspendCounter++;\n  ei();\n  L = c;\n  ek.current = d;\n  fk.current = e;\n  if (null !== X) throw Error(u(261));\n  N = null;\n  M = 0;\n  Od();\n  return oh;\n}\nfunction Hk() {\n  for (; null !== X;) Ik(X);\n}\nfunction sk(a, b) {\n  var c = L;\n  L |= 2;\n  var d = Ek(),\n    e = Fk();\n  if (N !== a || M !== b) kf = null, Di = Ta() + 500, ff(a, b);\n  a: do try {\n    if (0 !== O && null !== X) {\n      b = X;\n      var f = ik;\n      b: switch (O) {\n        case 1:\n          O = 0;\n          ik = null;\n          Gk(b, f);\n          break;\n        case 2:\n          if (ke(f)) {\n            O = 0;\n            ik = null;\n            Jk(b);\n            break;\n          }\n          b = function () {\n            2 === O && N === a && (O = 7);\n            Ye(a);\n          };\n          f.then(b, b);\n          break a;\n        case 3:\n          O = 7;\n          break a;\n        case 4:\n          O = 5;\n          break a;\n        case 7:\n          ke(f) ? (O = 0, ik = null, Jk(b)) : (O = 0, ik = null, Gk(b, f));\n          break;\n        case 5:\n          switch (X.tag) {\n            case 5:\n            case 26:\n            case 27:\n              b = X;\n              O = 0;\n              ik = null;\n              var g = b.sibling;\n              if (null !== g) X = g;else {\n                var h = b.return;\n                null !== h ? (X = h, Kk(h)) : X = null;\n              }\n              break b;\n          }\n          O = 0;\n          ik = null;\n          Gk(b, f);\n          break;\n        case 6:\n          O = 0;\n          ik = null;\n          Gk(b, f);\n          break;\n        case 8:\n          Bk();\n          oh = 6;\n          break a;\n        default:\n          throw Error(u(462));\n      }\n    }\n    Lk();\n    break;\n  } catch (l) {\n    Dk(a, l);\n  } while (1);\n  ei();\n  ek.current = d;\n  fk.current = e;\n  L = c;\n  if (null !== X) return 0;\n  N = null;\n  M = 0;\n  Od();\n  return oh;\n}\nfunction Lk() {\n  for (; null !== X && !Ra();) Ik(X);\n}\nfunction Ik(a) {\n  var b = Mk(a.alternate, a, He);\n  a.memoizedProps = a.pendingProps;\n  null === b ? Kk(a) : X = b;\n  gk.current = null;\n}\nfunction Jk(a) {\n  var b = a.alternate;\n  switch (a.tag) {\n    case 2:\n      a.tag = 0;\n    case 15:\n    case 0:\n      var c = a.type,\n        d = a.pendingProps;\n      d = a.elementType === c ? d : Xg(c, d);\n      var e = Xc(c) ? Vc : Tc.current;\n      e = Wc(a, e);\n      b = Gh(b, a, d, c, e, M);\n      break;\n    case 11:\n      c = a.type.render;\n      d = a.pendingProps;\n      d = a.elementType === c ? d : Xg(c, d);\n      b = Gh(b, a, d, c, a.ref, M);\n      break;\n    case 5:\n      Wf(a);\n    default:\n      Fi(b, a), a = X = Ci(a, He), b = Mk(b, a, He);\n  }\n  a.memoizedProps = a.pendingProps;\n  null === b ? Kk(a) : X = b;\n  gk.current = null;\n}\nfunction Gk(a, b) {\n  ei();\n  Wf(a);\n  pe = null;\n  qe = 0;\n  var c = a.return;\n  if (null === c || null === N) oh = 1, ef = b, X = null;else {\n    try {\n      mh(N, c, a, b, M);\n    } catch (d) {\n      throw X = c, d;\n    }\n    if (a.flags & 32768) a: {\n      do {\n        b = Ei(a.alternate, a);\n        if (null !== b) {\n          b.flags &= 32767;\n          X = b;\n          break a;\n        }\n        a = a.return;\n        null !== a && (a.flags |= 32768, a.subtreeFlags = 0, a.deletions = null);\n        X = a;\n      } while (null !== a);\n      oh = 6;\n      X = null;\n    } else Kk(a);\n  }\n}\nfunction Kk(a) {\n  var b = a;\n  do {\n    a = b.return;\n    var c = ui(b.alternate, b, He);\n    if (null !== c) {\n      X = c;\n      return;\n    }\n    b = b.sibling;\n    if (null !== b) {\n      X = b;\n      return;\n    }\n    X = b = a;\n  } while (null !== b);\n  0 === oh && (oh = 5);\n}\nfunction hf(a, b, c, d) {\n  var e = F,\n    f = hk.transition;\n  try {\n    hk.transition = null, F = 2, Nk(a, b, c, e, d);\n  } finally {\n    hk.transition = f, F = e;\n  }\n  return null;\n}\nfunction Nk(a, b, c, d, e) {\n  do bf(); while (null !== nk);\n  if (0 !== (L & 6)) throw Error(u(327));\n  var f = a.finishedWork,\n    g = a.finishedLanes;\n  if (null === f) return null;\n  a.finishedWork = null;\n  a.finishedLanes = 0;\n  if (f === a.current) throw Error(u(177));\n  a.callbackNode = null;\n  a.callbackPriority = 0;\n  a.cancelPendingCommit = null;\n  var h = f.lanes | f.childLanes;\n  h |= Nd;\n  pb(a, h, e);\n  a === N && (X = N = null, M = 0);\n  0 === (f.subtreeFlags & 10256) && 0 === (f.flags & 10256) || mk || (mk = !0, pk = h, qk = c, Ok(Xa, function () {\n    bf();\n    return null;\n  }));\n  c = 0 !== (f.flags & 15990);\n  if (0 !== (f.subtreeFlags & 15990) || c) {\n    c = hk.transition;\n    hk.transition = null;\n    e = F;\n    F = 2;\n    var l = L;\n    L |= 4;\n    gk.current = null;\n    Wi(a, f);\n    Bj(f, a);\n    Pk(aj);\n    Yi = !!Xi;\n    aj = Xi = null;\n    a.current = f;\n    hj(a, f.alternate, f);\n    Sa();\n    L = l;\n    F = e;\n    hk.transition = c;\n  } else a.current = f;\n  mk ? (mk = !1, nk = a, ok = g) : Qk(a, h);\n  h = a.pendingLanes;\n  0 === h && (kh = null);\n  bb(f.stateNode, d);\n  Ye(a);\n  if (null !== b) for (d = a.onRecoverableError, f = 0; f < b.length; f++) h = b[f], c = {\n    digest: h.digest,\n    componentStack: h.stack\n  }, d(h.value, c);\n  if (hh) throw hh = !1, a = ih, ih = null, a;\n  0 !== (ok & 3) && 0 !== a.tag && bf();\n  h = a.pendingLanes;\n  0 !== (g & 4194218) && 0 !== (h & 42) ? a === Vd ? Ud++ : (Ud = 0, Vd = a) : Ud = 0;\n  af(!1);\n  return null;\n}\nfunction Qk(a, b) {\n  0 === (a.pooledCacheLanes &= b) && (b = a.pooledCache, null != b && (a.pooledCache = null, li(b)));\n}\nfunction bf() {\n  if (null !== nk) {\n    var a = nk,\n      b = pk;\n    pk = 0;\n    var c = ub(ok),\n      d = 32 > c ? 32 : c;\n    c = hk.transition;\n    var e = F;\n    try {\n      hk.transition = null;\n      F = d;\n      if (null === nk) var f = !1;else {\n        d = qk;\n        qk = null;\n        var g = nk,\n          h = ok;\n        nk = null;\n        ok = 0;\n        if (0 !== (L & 6)) throw Error(u(331));\n        var l = L;\n        L |= 4;\n        ak(g.current);\n        Qj(g, g.current, h, d);\n        L = l;\n        af(!1);\n        if (ab && "function" === typeof ab.onPostCommitFiberRoot) try {\n          ab.onPostCommitFiberRoot($a, g);\n        } catch (p) {}\n        f = !0;\n      }\n      return f;\n    } finally {\n      F = e, hk.transition = c, Qk(a, b);\n    }\n  }\n  return !1;\n}\nfunction Rk(a, b, c) {\n  b = dh(c, b);\n  b = gh(a, b, 2);\n  a = $d(a, b, 2);\n  null !== a && (ob(a, 2), Ye(a));\n}\nfunction W(a, b, c) {\n  if (3 === a.tag) Rk(a, a, c);else for (; null !== b;) {\n    if (3 === b.tag) {\n      Rk(b, a, c);\n      break;\n    } else if (1 === b.tag) {\n      var d = b.stateNode;\n      if ("function" === typeof b.type.getDerivedStateFromError || "function" === typeof d.componentDidCatch && (null === kh || !kh.has(d))) {\n        a = dh(c, a);\n        a = jh(b, a, 2);\n        b = $d(b, a, 2);\n        null !== b && (ob(b, 2), Ye(b));\n        break;\n      }\n    }\n    b = b.return;\n  }\n}\nfunction ph(a, b, c) {\n  var d = a.pingCache;\n  if (null === d) {\n    d = a.pingCache = new dk();\n    var e = new Set();\n    d.set(b, e);\n  } else e = d.get(b), void 0 === e && (e = new Set(), d.set(b, e));\n  e.has(c) || (jk = !0, e.add(c), a = Sk.bind(null, a, b, c), b.then(a, a));\n}\nfunction Sk(a, b, c) {\n  var d = a.pingCache;\n  null !== d && d.delete(b);\n  a.pingedLanes |= a.suspendedLanes & c;\n  N === a && (M & c) === c && (4 === oh || 3 === oh && (M & 62914560) === M && 300 > Ta() - Kj ? 0 === (L & 2) && ff(a, 0) : lk |= c);\n  Ye(a);\n}\nfunction Tk(a, b) {\n  0 === b && (b = 0 === (a.mode & 1) ? 2 : mb());\n  a = Td(a, b);\n  null !== a && (ob(a, b), Ye(a));\n}\nfunction Uh(a) {\n  var b = a.memoizedState,\n    c = 0;\n  null !== b && (c = b.retryLane);\n  Tk(a, c);\n}\nfunction zj(a, b) {\n  var c = 0;\n  switch (a.tag) {\n    case 13:\n      var d = a.stateNode;\n      var e = a.memoizedState;\n      null !== e && (c = e.retryLane);\n      break;\n    case 19:\n      d = a.stateNode;\n      break;\n    case 22:\n      d = a.stateNode._retryCache;\n      break;\n    default:\n      throw Error(u(314));\n  }\n  null !== d && d.delete(b);\n  Tk(a, c);\n}\nvar Mk;\nMk = function (a, b, c) {\n  if (null !== a) {\n    if (a.memoizedProps !== b.pendingProps || Uc.current) eg = !0;else {\n      if (0 === (a.lanes & c) && 0 === (b.flags & 128)) return eg = !1, Zh(a, b, c);\n      eg = 0 !== (a.flags & 131072) ? !0 : !1;\n    }\n  } else eg = !1, K && 0 !== (b.flags & 1048576) && od(b, hd, b.index);\n  b.lanes = 0;\n  switch (b.tag) {\n    case 2:\n      var d = b.type;\n      Ih(a, b);\n      a = b.pendingProps;\n      var e = Wc(b, Tc.current);\n      vh(b, c);\n      e = Lf(null, b, d, a, e, c);\n      var f = Uf();\n      b.flags |= 1;\n      "object" === typeof e && null !== e && "function" === typeof e.render && void 0 === e.$$typeof ? (b.tag = 1, b.memoizedState = null, b.updateQueue = null, Xc(d) ? (f = !0, ad(b)) : f = !1, b.memoizedState = null !== e.state && void 0 !== e.state ? e.state : null, Xd(b), e.updater = Zg, b.stateNode = e, e._reactInternals = b, ch(b, d, a, c), b = Jh(null, b, d, !0, f, c)) : (b.tag = 0, K && f && pd(b), th(null, b, e, c), b = b.child);\n      return b;\n    case 16:\n      d = b.elementType;\n      a: {\n        Ih(a, b);\n        a = b.pendingProps;\n        e = d._init;\n        d = e(d._payload);\n        b.type = d;\n        e = b.tag = Uk(d);\n        a = Xg(d, a);\n        switch (e) {\n          case 0:\n            b = Ah(null, b, d, a, c);\n            break a;\n          case 1:\n            b = Hh(null, b, d, a, c);\n            break a;\n          case 11:\n            b = uh(null, b, d, a, c);\n            break a;\n          case 14:\n            b = xh(null, b, d, Xg(d.type, a), c);\n            break a;\n        }\n        throw Error(u(306, d, ""));\n      }\n      return b;\n    case 0:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : Xg(d, e), Ah(a, b, d, e, c);\n    case 1:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : Xg(d, e), Hh(a, b, d, e, c);\n    case 3:\n      a: {\n        Kh(b);\n        if (null === a) throw Error(u(387));\n        e = b.pendingProps;\n        f = b.memoizedState;\n        d = f.element;\n        Yd(a, b);\n        ce(b, e, null, c);\n        var g = b.memoizedState;\n        e = g.cache;\n        $h(b, S, e);\n        e !== f.cache && gi(b, S, c);\n        e = g.element;\n        if (f.isDehydrated) {\n          if (f = {\n            element: e,\n            isDehydrated: !1,\n            cache: g.cache\n          }, b.updateQueue.baseState = f, b.memoizedState = f, b.flags & 256) {\n            d = dh(Error(u(423)), b);\n            b = Lh(a, b, e, c, d);\n            break a;\n          } else if (e !== d) {\n            d = dh(Error(u(424)), b);\n            b = Lh(a, b, e, c, d);\n            break a;\n          } else for (J = yd(b.stateNode.containerInfo.firstChild), G = b, K = !0, rd = null, sd = !0, c = De(b, null, e, c), b.child = c; c;) c.flags = c.flags & -3 | 4096, c = c.sibling;\n        } else {\n          Jd();\n          if (e === d) {\n            b = wh(a, b, c);\n            break a;\n          }\n          th(a, b, e, c);\n        }\n        b = b.child;\n      }\n      return b;\n    case 26:\n      return Ch(a, b), c = b.memoizedState = Vk(b.type, null === a ? null : a.memoizedProps, b.pendingProps), null !== a || K || null !== c || (c = b.type, a = b.pendingProps, d = yi(Ga.current).createElement(c), d[xb] = b, d[yb] = a, zi(d, c, a), Nb(d), b.stateNode = d), null;\n    case 27:\n      return Na(b), null === a && K && (d = b.stateNode = xi(b.type, b.pendingProps, Ga.current), G = b, sd = !0, J = yd(d.firstChild)), d = b.pendingProps.children, null !== a || K ? th(a, b, d, c) : b.child = Ce(b, null, d, c), Ch(a, b), b.child;\n    case 5:\n      return Na(b), null === a && K && ((e = d = J, e) ? wd(b, e) || (Dd(b) && Ed(), J = Cd(e), f = G, J && wd(b, J) ? td(f, e) : (vd(G, b), K = !1, G = b, J = d)) : (Dd(b) && Ed(), vd(G, b), K = !1, G = b, J = d)), e = b.type, f = b.pendingProps, g = null !== a ? a.memoizedProps : null, d = f.children, Hd(e, f) ? d = null : null !== g && Hd(e, g) && (b.flags |= 32), null !== b.memoizedState && (e = Lf(a, b, Sf, null, null, c), Ia._currentValue = e, eg && null !== a && a.memoizedState.memoizedState !== e && gi(b, Ia, c)), Ch(a, b), th(a, b, d, c), b.child;\n    case 6:\n      return null === a && K && ((d = "" !== b.pendingProps, a = c = J, a && d) ? zd(b, a) || (Dd(b) && Ed(), J = Cd(a), d = G, J && zd(b, J) ? td(d, a) : (vd(G, b), K = !1, G = b, J = c)) : (Dd(b) && Ed(), vd(G, b), K = !1, G = b, J = c)), null;\n    case 13:\n      return Ph(a, b, c);\n    case 4:\n      return Ja(b, b.stateNode.containerInfo), d = b.pendingProps, null === a ? b.child = Ce(b, null, d, c) : th(a, b, d, c), b.child;\n    case 11:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : Xg(d, e), uh(a, b, d, e, c);\n    case 7:\n      return th(a, b, b.pendingProps, c), b.child;\n    case 8:\n      return th(a, b, b.pendingProps.children, c), b.child;\n    case 12:\n      return th(a, b, b.pendingProps.children, c), b.child;\n    case 10:\n      a: {\n        d = b.type._context;\n        e = b.pendingProps;\n        f = b.memoizedProps;\n        g = e.value;\n        $h(b, d, g);\n        if (null !== f) if (dd(f.value, g)) {\n          if (f.children === e.children && !Uc.current) {\n            b = wh(a, b, c);\n            break a;\n          }\n        } else gi(b, d, c);\n        th(a, b, e.children, c);\n        b = b.child;\n      }\n      return b;\n    case 9:\n      return e = b.type, d = b.pendingProps.children, vh(b, c), e = ag(e), d = d(e), b.flags |= 1, th(a, b, d, c), b.child;\n    case 14:\n      return d = b.type, e = Xg(d, b.pendingProps), e = Xg(d.type, e), xh(a, b, d, e, c);\n    case 15:\n      return zh(a, b, b.type, b.pendingProps, c);\n    case 17:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : Xg(d, e), Ih(a, b), b.tag = 1, Xc(d) ? (a = !0, ad(b)) : a = !1, vh(b, c), ah(b, d, e), ch(b, d, e, c), Jh(null, b, d, !0, a, c);\n    case 19:\n      return Yh(a, b, c);\n    case 22:\n      return Bh(a, b, c);\n    case 24:\n      return vh(b, c), d = ag(S), null === a ? (e = Fh(), null === e && (e = N, f = Tg(), e.pooledCache = f, f.refCount++, null !== f && (e.pooledCacheLanes |= c), e = f), b.memoizedState = {\n        parent: d,\n        cache: e\n      }, Xd(b), $h(b, S, e)) : (0 !== (a.lanes & c) && (Yd(a, b), ce(b, null, null, c)), e = a.memoizedState, f = b.memoizedState, e.parent !== d ? (e = {\n        parent: d,\n        cache: d\n      }, b.memoizedState = e, 0 === b.lanes && (b.memoizedState = b.updateQueue.baseState = e), $h(b, S, d)) : (d = f.cache, $h(b, S, d), d !== e.cache && gi(b, S, c))), th(a, b, b.pendingProps.children, c), b.child;\n  }\n  throw Error(u(156, b.tag));\n};\nfunction Ok(a, b) {\n  return Pa(a, b);\n}\nfunction Wk(a, b, c, d) {\n  this.tag = a;\n  this.key = c;\n  this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;\n  this.index = 0;\n  this.refCleanup = this.ref = null;\n  this.pendingProps = b;\n  this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;\n  this.mode = d;\n  this.subtreeFlags = this.flags = 0;\n  this.deletions = null;\n  this.childLanes = this.lanes = 0;\n  this.alternate = null;\n}\nfunction ud(a, b, c, d) {\n  return new Wk(a, b, c, d);\n}\nfunction yh(a) {\n  a = a.prototype;\n  return !(!a || !a.isReactComponent);\n}\nfunction Uk(a) {\n  if ("function" === typeof a) return yh(a) ? 1 : 0;\n  if (void 0 !== a && null !== a) {\n    a = a.$$typeof;\n    if (a === ta) return 11;\n    if (a === wa) return 14;\n  }\n  return 2;\n}\nfunction we(a, b) {\n  var c = a.alternate;\n  null === c ? (c = ud(a.tag, b, a.key, a.mode), c.elementType = a.elementType, c.type = a.type, c.stateNode = a.stateNode, c.alternate = a, a.alternate = c) : (c.pendingProps = b, c.type = a.type, c.flags = 0, c.subtreeFlags = 0, c.deletions = null);\n  c.flags = a.flags & 31457280;\n  c.childLanes = a.childLanes;\n  c.lanes = a.lanes;\n  c.child = a.child;\n  c.memoizedProps = a.memoizedProps;\n  c.memoizedState = a.memoizedState;\n  c.updateQueue = a.updateQueue;\n  b = a.dependencies;\n  c.dependencies = null === b ? null : {\n    lanes: b.lanes,\n    firstContext: b.firstContext\n  };\n  c.sibling = a.sibling;\n  c.index = a.index;\n  c.ref = a.ref;\n  c.refCleanup = a.refCleanup;\n  return c;\n}\nfunction Ci(a, b) {\n  a.flags &= 31457282;\n  var c = a.alternate;\n  null === c ? (a.childLanes = 0, a.lanes = b, a.child = null, a.subtreeFlags = 0, a.memoizedProps = null, a.memoizedState = null, a.updateQueue = null, a.dependencies = null, a.stateNode = null) : (a.childLanes = c.childLanes, a.lanes = c.lanes, a.child = c.child, a.subtreeFlags = 0, a.deletions = null, a.memoizedProps = c.memoizedProps, a.memoizedState = c.memoizedState, a.updateQueue = c.updateQueue, a.type = c.type, b = c.dependencies, a.dependencies = null === b ? null : {\n    lanes: b.lanes,\n    firstContext: b.firstContext\n  });\n  return a;\n}\nfunction ye(a, b, c, d, e, f, g) {\n  e = 2;\n  d = a;\n  if ("function" === typeof a) yh(a) && (e = 1);else if ("string" === typeof a) e = Xk(a, c, Ea.current) ? 26 : "html" === a || "head" === a || "body" === a ? 27 : 5;else a: switch (a) {\n    case na:\n      return Ae(c.children, f, g, b);\n    case oa:\n      e = 8;\n      f |= 8;\n      0 !== (f & 1) && (f |= 16);\n      break;\n    case pa:\n      return a = ud(12, c, b, f | 2), a.elementType = pa, a.lanes = g, a;\n    case ua:\n      return a = ud(13, c, b, f), a.elementType = ua, a.lanes = g, a;\n    case va:\n      return a = ud(19, c, b, f), a.elementType = va, a.lanes = g, a;\n    case za:\n      return Qh(c, f, g, b);\n    case Aa:\n    case ya:\n    case Ba:\n      return a = ud(24, c, b, f), a.elementType = Ba, a.lanes = g, a;\n    default:\n      if ("object" === typeof a && null !== a) switch (a.$$typeof) {\n        case qa:\n          e = 10;\n          break a;\n        case ra:\n          e = 9;\n          break a;\n        case ta:\n          e = 11;\n          break a;\n        case wa:\n          e = 14;\n          break a;\n        case xa:\n          e = 16;\n          d = null;\n          break a;\n      }\n      throw Error(u(130, null == a ? a : typeof a, ""));\n  }\n  b = ud(e, c, b, f);\n  b.elementType = a;\n  b.type = d;\n  b.lanes = g;\n  return b;\n}\nfunction Ae(a, b, c, d) {\n  a = ud(7, a, d, b);\n  a.lanes = c;\n  return a;\n}\nfunction Qh(a, b, c, d) {\n  a = ud(22, a, d, b);\n  a.elementType = za;\n  a.lanes = c;\n  var e = {\n    _visibility: 1,\n    _pendingVisibility: 1,\n    _pendingMarkers: null,\n    _retryCache: null,\n    _transitions: null,\n    _current: null,\n    detach: function () {\n      var f = e._current;\n      if (null === f) throw Error(u(456));\n      if (0 === (e._pendingVisibility & 2)) {\n        var g = Td(f, 2);\n        null !== g && (e._pendingVisibility |= 2, og(g, f, 2));\n      }\n    },\n    attach: function () {\n      var f = e._current;\n      if (null === f) throw Error(u(456));\n      if (0 !== (e._pendingVisibility & 2)) {\n        var g = Td(f, 2);\n        null !== g && (e._pendingVisibility &= -3, og(g, f, 2));\n      }\n    }\n  };\n  a.stateNode = e;\n  return a;\n}\nfunction xe(a, b, c) {\n  a = ud(6, a, null, b);\n  a.lanes = c;\n  return a;\n}\nfunction ze(a, b, c) {\n  b = ud(4, null !== a.children ? a.children : [], a.key, b);\n  b.lanes = c;\n  b.stateNode = {\n    containerInfo: a.containerInfo,\n    pendingChildren: null,\n    implementation: a.implementation\n  };\n  return b;\n}\nfunction Yk(a, b, c, d, e, f) {\n  this.tag = b;\n  this.containerInfo = a;\n  this.finishedWork = this.pingCache = this.current = this.pendingChildren = null;\n  this.timeoutHandle = -1;\n  this.callbackNode = this.next = this.pendingContext = this.context = this.cancelPendingCommit = null;\n  this.callbackPriority = 0;\n  this.expirationTimes = nb(-1);\n  this.entangledLanes = this.shellSuspendCounter = this.errorRecoveryDisabledLanes = this.finishedLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0;\n  this.entanglements = nb(0);\n  this.hiddenUpdates = nb(null);\n  this.identifierPrefix = d;\n  this.onRecoverableError = e;\n  this.pooledCache = null;\n  this.pooledCacheLanes = 0;\n  this.formState = f;\n  this.incompleteTransitions = new Map();\n}\nfunction Zk(a, b, c, d, e, f, g, h, l, p, q) {\n  a = new Yk(a, b, c, h, l, q);\n  1 === b ? (b = 1, !0 === f && (b |= 24)) : b = 0;\n  f = ud(3, null, null, b);\n  a.current = f;\n  f.stateNode = a;\n  b = Tg();\n  b.refCount++;\n  a.pooledCache = b;\n  b.refCount++;\n  f.memoizedState = {\n    element: d,\n    isDehydrated: c,\n    cache: b\n  };\n  Xd(f);\n  return a;\n}\nfunction $k(a, b, c) {\n  var d = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;\n  return {\n    $$typeof: ma,\n    key: null == d ? null : "" + d,\n    children: a,\n    containerInfo: b,\n    implementation: c\n  };\n}\nfunction al(a) {\n  if (!a) return Sc;\n  a = a._reactInternals;\n  a: {\n    if (Mc(a) !== a || 1 !== a.tag) throw Error(u(170));\n    var b = a;\n    do {\n      switch (b.tag) {\n        case 3:\n          b = b.stateNode.context;\n          break a;\n        case 1:\n          if (Xc(b.type)) {\n            b = b.stateNode.__reactInternalMemoizedMergedChildContext;\n            break a;\n          }\n      }\n      b = b.return;\n    } while (null !== b);\n    throw Error(u(171));\n  }\n  if (1 === a.tag) {\n    var c = a.type;\n    if (Xc(c)) return $c(a, c, b);\n  }\n  return b;\n}\nfunction bl(a, b, c, d, e, f, g, h, l, p, q) {\n  a = Zk(c, d, !0, a, e, f, g, h, l, p, q);\n  a.context = al(null);\n  c = a.current;\n  d = Sg(c);\n  e = Zd(d);\n  e.callback = void 0 !== b && null !== b ? b : null;\n  $d(c, e, d);\n  a.current.lanes = d;\n  ob(a, d);\n  Ye(a);\n  return a;\n}\nfunction cl(a, b, c, d) {\n  var e = b.current,\n    f = Sg(e);\n  c = al(c);\n  null === b.context ? b.context = c : b.pendingContext = c;\n  b = Zd(f);\n  b.payload = {\n    element: a\n  };\n  d = void 0 === d ? null : d;\n  null !== d && (b.callback = d);\n  a = $d(e, b, f);\n  null !== a && (og(a, e, f), ae(a, e, f));\n  return f;\n}\nfunction dl(a) {\n  a = a.current;\n  if (!a.child) return null;\n  switch (a.child.tag) {\n    case 27:\n    case 5:\n      return a.child.stateNode;\n    default:\n      return a.child.stateNode;\n  }\n}\nfunction el(a) {\n  switch (a.tag) {\n    case 3:\n      var b = a.stateNode;\n      if (b.current.memoizedState.isDehydrated) {\n        var c = ib(b.pendingLanes);\n        0 !== c && (sb(b, c), Ye(b), 0 === (L & 6) && (Di = Ta() + 500, af(!1)));\n      }\n      break;\n    case 13:\n      Ak(function () {\n        var d = Td(a, 2);\n        null !== d && og(d, a, 2);\n      }), fl(a, 2);\n  }\n}\nfunction gl(a, b) {\n  a = a.memoizedState;\n  if (null !== a && null !== a.dehydrated) {\n    var c = a.retryLane;\n    a.retryLane = 0 !== c && c < b ? c : b;\n  }\n}\nfunction fl(a, b) {\n  gl(a, b);\n  (a = a.alternate) && gl(a, b);\n}\nfunction hl(a) {\n  if (13 === a.tag) {\n    var b = Td(a, 67108864);\n    null !== b && og(b, a, 67108864);\n    fl(a, 67108864);\n  }\n}\nfunction il() {\n  return null;\n}\nvar jl = !1;\nfunction kl(a, b, c) {\n  if (jl) return a(b, c);\n  jl = !0;\n  try {\n    return zk(a, b, c);\n  } finally {\n    if (jl = !1, null !== Hc || null !== Ic) Ak(), Lc();\n  }\n}\nfunction ll(a, b) {\n  var c = a.stateNode;\n  if (null === c) return null;\n  var d = Lb(c);\n  if (null === d) return null;\n  c = d[b];\n  a: switch (b) {\n    case "onClick":\n    case "onClickCapture":\n    case "onDoubleClick":\n    case "onDoubleClickCapture":\n    case "onMouseDown":\n    case "onMouseDownCapture":\n    case "onMouseMove":\n    case "onMouseMoveCapture":\n    case "onMouseUp":\n    case "onMouseUpCapture":\n    case "onMouseEnter":\n      (d = !d.disabled) || (a = a.type, d = !("button" === a || "input" === a || "select" === a || "textarea" === a));\n      a = !d;\n      break a;\n    default:\n      a = !1;\n  }\n  if (a) return null;\n  if (c && "function" !== typeof c) throw Error(u(231, b, typeof c));\n  return c;\n}\nvar ml = !1;\nif (Sb) try {\n  var nl = {};\n  Object.defineProperty(nl, "passive", {\n    get: function () {\n      ml = !0;\n    }\n  });\n  window.addEventListener("test", nl, nl);\n  window.removeEventListener("test", nl, nl);\n} catch (a) {\n  ml = !1;\n}\nfunction ol(a) {\n  var b = a.keyCode;\n  "charCode" in a ? (a = a.charCode, 0 === a && 13 === b && (a = 13)) : a = b;\n  10 === a && (a = 13);\n  return 32 <= a || 13 === a ? a : 0;\n}\nfunction pl() {\n  return !0;\n}\nfunction ql() {\n  return !1;\n}\nfunction rl(a) {\n  function b(c, d, e, f, g) {\n    this._reactName = c;\n    this._targetInst = e;\n    this.type = d;\n    this.nativeEvent = f;\n    this.target = g;\n    this.currentTarget = null;\n    for (var h in a) a.hasOwnProperty(h) && (c = a[h], this[h] = c ? c(f) : f[h]);\n    this.isDefaultPrevented = (null != f.defaultPrevented ? f.defaultPrevented : !1 === f.returnValue) ? pl : ql;\n    this.isPropagationStopped = ql;\n    return this;\n  }\n  C(b.prototype, {\n    preventDefault: function () {\n      this.defaultPrevented = !0;\n      var c = this.nativeEvent;\n      c && (c.preventDefault ? c.preventDefault() : "unknown" !== typeof c.returnValue && (c.returnValue = !1), this.isDefaultPrevented = pl);\n    },\n    stopPropagation: function () {\n      var c = this.nativeEvent;\n      c && (c.stopPropagation ? c.stopPropagation() : "unknown" !== typeof c.cancelBubble && (c.cancelBubble = !0), this.isPropagationStopped = pl);\n    },\n    persist: function () {},\n    isPersistent: pl\n  });\n  return b;\n}\nvar sl = {\n    eventPhase: 0,\n    bubbles: 0,\n    cancelable: 0,\n    timeStamp: function (a) {\n      return a.timeStamp || Date.now();\n    },\n    defaultPrevented: 0,\n    isTrusted: 0\n  },\n  tl = rl(sl),\n  ul = C({}, sl, {\n    view: 0,\n    detail: 0\n  }),\n  vl = rl(ul),\n  wl,\n  xl,\n  yl,\n  Al = C({}, ul, {\n    screenX: 0,\n    screenY: 0,\n    clientX: 0,\n    clientY: 0,\n    pageX: 0,\n    pageY: 0,\n    ctrlKey: 0,\n    shiftKey: 0,\n    altKey: 0,\n    metaKey: 0,\n    getModifierState: zl,\n    button: 0,\n    buttons: 0,\n    relatedTarget: function (a) {\n      return void 0 === a.relatedTarget ? a.fromElement === a.srcElement ? a.toElement : a.fromElement : a.relatedTarget;\n    },\n    movementX: function (a) {\n      if ("movementX" in a) return a.movementX;\n      a !== yl && (yl && "mousemove" === a.type ? (wl = a.screenX - yl.screenX, xl = a.screenY - yl.screenY) : xl = wl = 0, yl = a);\n      return wl;\n    },\n    movementY: function (a) {\n      return "movementY" in a ? a.movementY : xl;\n    }\n  }),\n  Bl = rl(Al),\n  Cl = C({}, Al, {\n    dataTransfer: 0\n  }),\n  Dl = rl(Cl),\n  El = C({}, ul, {\n    relatedTarget: 0\n  }),\n  Fl = rl(El),\n  Gl = C({}, sl, {\n    animationName: 0,\n    elapsedTime: 0,\n    pseudoElement: 0\n  }),\n  Hl = rl(Gl),\n  Il = C({}, sl, {\n    clipboardData: function (a) {\n      return "clipboardData" in a ? a.clipboardData : window.clipboardData;\n    }\n  }),\n  Jl = rl(Il),\n  Kl = C({}, sl, {\n    data: 0\n  }),\n  Ll = rl(Kl),\n  Ml = {\n    Esc: "Escape",\n    Spacebar: " ",\n    Left: "ArrowLeft",\n    Up: "ArrowUp",\n    Right: "ArrowRight",\n    Down: "ArrowDown",\n    Del: "Delete",\n    Win: "OS",\n    Menu: "ContextMenu",\n    Apps: "ContextMenu",\n    Scroll: "ScrollLock",\n    MozPrintableKey: "Unidentified"\n  },\n  Nl = {\n    8: "Backspace",\n    9: "Tab",\n    12: "Clear",\n    13: "Enter",\n    16: "Shift",\n    17: "Control",\n    18: "Alt",\n    19: "Pause",\n    20: "CapsLock",\n    27: "Escape",\n    32: " ",\n    33: "PageUp",\n    34: "PageDown",\n    35: "End",\n    36: "Home",\n    37: "ArrowLeft",\n    38: "ArrowUp",\n    39: "ArrowRight",\n    40: "ArrowDown",\n    45: "Insert",\n    46: "Delete",\n    112: "F1",\n    113: "F2",\n    114: "F3",\n    115: "F4",\n    116: "F5",\n    117: "F6",\n    118: "F7",\n    119: "F8",\n    120: "F9",\n    121: "F10",\n    122: "F11",\n    123: "F12",\n    144: "NumLock",\n    145: "ScrollLock",\n    224: "Meta"\n  },\n  Ol = {\n    Alt: "altKey",\n    Control: "ctrlKey",\n    Meta: "metaKey",\n    Shift: "shiftKey"\n  };\nfunction Pl(a) {\n  var b = this.nativeEvent;\n  return b.getModifierState ? b.getModifierState(a) : (a = Ol[a]) ? !!b[a] : !1;\n}\nfunction zl() {\n  return Pl;\n}\nvar Ql = C({}, ul, {\n    key: function (a) {\n      if (a.key) {\n        var b = Ml[a.key] || a.key;\n        if ("Unidentified" !== b) return b;\n      }\n      return "keypress" === a.type ? (a = ol(a), 13 === a ? "Enter" : String.fromCharCode(a)) : "keydown" === a.type || "keyup" === a.type ? Nl[a.keyCode] || "Unidentified" : "";\n    },\n    code: 0,\n    location: 0,\n    ctrlKey: 0,\n    shiftKey: 0,\n    altKey: 0,\n    metaKey: 0,\n    repeat: 0,\n    locale: 0,\n    getModifierState: zl,\n    charCode: function (a) {\n      return "keypress" === a.type ? ol(a) : 0;\n    },\n    keyCode: function (a) {\n      return "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;\n    },\n    which: function (a) {\n      return "keypress" === a.type ? ol(a) : "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;\n    }\n  }),\n  Rl = rl(Ql),\n  Sl = C({}, Al, {\n    pointerId: 0,\n    width: 0,\n    height: 0,\n    pressure: 0,\n    tangentialPressure: 0,\n    tiltX: 0,\n    tiltY: 0,\n    twist: 0,\n    pointerType: 0,\n    isPrimary: 0\n  }),\n  Tl = rl(Sl),\n  Ul = C({}, ul, {\n    touches: 0,\n    targetTouches: 0,\n    changedTouches: 0,\n    altKey: 0,\n    metaKey: 0,\n    ctrlKey: 0,\n    shiftKey: 0,\n    getModifierState: zl\n  }),\n  Vl = rl(Ul),\n  Wl = C({}, sl, {\n    propertyName: 0,\n    elapsedTime: 0,\n    pseudoElement: 0\n  }),\n  Xl = rl(Wl),\n  Yl = C({}, Al, {\n    deltaX: function (a) {\n      return "deltaX" in a ? a.deltaX : "wheelDeltaX" in a ? -a.wheelDeltaX : 0;\n    },\n    deltaY: function (a) {\n      return "deltaY" in a ? a.deltaY : "wheelDeltaY" in a ? -a.wheelDeltaY : "wheelDelta" in a ? -a.wheelDelta : 0;\n    },\n    deltaZ: 0,\n    deltaMode: 0\n  }),\n  Zl = rl(Yl);\nfunction $l(a, b, c, d, e) {\n  if ("submit" === b && c && c.stateNode === e) {\n    var f = Lb(e).action,\n      g = d.submitter;\n    g && (b = (b = Lb(g)) ? b.formAction : g.getAttribute("formAction"), null != b && (f = b, g = null));\n    if ("function" === typeof f) {\n      var h = new tl("action", "action", null, d, e);\n      a.push({\n        event: h,\n        listeners: [{\n          instance: null,\n          listener: function () {\n            if (!d.defaultPrevented) {\n              h.preventDefault();\n              if (g) {\n                var l = g.ownerDocument.createElement("input");\n                l.name = g.name;\n                l.value = g.value;\n                g.parentNode.insertBefore(l, g);\n                var p = new FormData(e);\n                l.parentNode.removeChild(l);\n              } else p = new FormData(e);\n              Ng(c, {\n                pending: !0,\n                data: p,\n                method: e.method,\n                action: f\n              }, f, p);\n            }\n          },\n          currentTarget: e\n        }]\n      });\n    }\n  }\n}\nvar am = !1,\n  bm = null,\n  cm = null,\n  dm = null,\n  em = new Map(),\n  fm = new Map(),\n  gm = [],\n  hm = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset".split(" ");\nfunction im(a, b) {\n  switch (a) {\n    case "focusin":\n    case "focusout":\n      bm = null;\n      break;\n    case "dragenter":\n    case "dragleave":\n      cm = null;\n      break;\n    case "mouseover":\n    case "mouseout":\n      dm = null;\n      break;\n    case "pointerover":\n    case "pointerout":\n      em.delete(b.pointerId);\n      break;\n    case "gotpointercapture":\n    case "lostpointercapture":\n      fm.delete(b.pointerId);\n  }\n}\nfunction jm(a, b, c, d, e, f) {\n  if (null === a || a.nativeEvent !== f) return a = {\n    blockedOn: b,\n    domEventName: c,\n    eventSystemFlags: d,\n    nativeEvent: f,\n    targetContainers: [e]\n  }, null !== b && (b = Jb(b), null !== b && hl(b)), a;\n  a.eventSystemFlags |= d;\n  b = a.targetContainers;\n  null !== e && -1 === b.indexOf(e) && b.push(e);\n  return a;\n}\nfunction km(a, b, c, d, e) {\n  switch (b) {\n    case "focusin":\n      return bm = jm(bm, a, b, c, d, e), !0;\n    case "dragenter":\n      return cm = jm(cm, a, b, c, d, e), !0;\n    case "mouseover":\n      return dm = jm(dm, a, b, c, d, e), !0;\n    case "pointerover":\n      var f = e.pointerId;\n      em.set(f, jm(em.get(f) || null, a, b, c, d, e));\n      return !0;\n    case "gotpointercapture":\n      return f = e.pointerId, fm.set(f, jm(fm.get(f) || null, a, b, c, d, e)), !0;\n  }\n  return !1;\n}\nfunction lm(a) {\n  var b = Hb(a.target);\n  if (null !== b) {\n    var c = Mc(b);\n    if (null !== c) if (b = c.tag, 13 === b) {\n      if (b = Nc(c), null !== b) {\n        a.blockedOn = b;\n        tb(a.priority, function () {\n          if (13 === c.tag) {\n            var d = Sg(c),\n              e = Td(c, d);\n            null !== e && og(e, c, d);\n            fl(c, d);\n          }\n        });\n        return;\n      }\n    } else if (3 === b && c.stateNode.current.memoizedState.isDehydrated) {\n      a.blockedOn = 3 === c.tag ? c.stateNode.containerInfo : null;\n      return;\n    }\n  }\n  a.blockedOn = null;\n}\nfunction mm(a) {\n  if (null !== a.blockedOn) return !1;\n  for (var b = a.targetContainers; 0 < b.length;) {\n    var c = nm(a.nativeEvent);\n    if (null === c) {\n      c = a.nativeEvent;\n      var d = new c.constructor(c.type, c);\n      Fc = d;\n      c.target.dispatchEvent(d);\n      Fc = null;\n    } else return b = Jb(c), null !== b && hl(b), a.blockedOn = c, !1;\n    b.shift();\n  }\n  return !0;\n}\nfunction om(a, b, c) {\n  mm(a) && c.delete(b);\n}\nfunction pm() {\n  am = !1;\n  null !== bm && mm(bm) && (bm = null);\n  null !== cm && mm(cm) && (cm = null);\n  null !== dm && mm(dm) && (dm = null);\n  em.forEach(om);\n  fm.forEach(om);\n}\nfunction qm(a, b) {\n  a.blockedOn === b && (a.blockedOn = null, am || (am = !0, ba.unstable_scheduleCallback(ba.unstable_NormalPriority, pm)));\n}\nvar rm = null;\nfunction sm(a) {\n  rm !== a && (rm = a, ba.unstable_scheduleCallback(ba.unstable_NormalPriority, function () {\n    rm === a && (rm = null);\n    for (var b = 0; b < a.length; b += 3) {\n      var c = a[b],\n        d = a[b + 1],\n        e = a[b + 2];\n      if ("function" !== typeof d) if (null === tm(d || c)) continue;else break;\n      var f = Jb(c);\n      null !== f && (a.splice(b, 3), b -= 3, Ng(f, {\n        pending: !0,\n        data: e,\n        method: c.method,\n        action: d\n      }, d, e));\n    }\n  }));\n}\nfunction wj(a) {\n  function b(l) {\n    return qm(l, a);\n  }\n  null !== bm && qm(bm, a);\n  null !== cm && qm(cm, a);\n  null !== dm && qm(dm, a);\n  em.forEach(b);\n  fm.forEach(b);\n  for (var c = 0; c < gm.length; c++) {\n    var d = gm[c];\n    d.blockedOn === a && (d.blockedOn = null);\n  }\n  for (; 0 < gm.length && (c = gm[0], null === c.blockedOn);) lm(c), null === c.blockedOn && gm.shift();\n  c = a.getRootNode().$$reactFormReplay;\n  if (null != c) for (d = 0; d < c.length; d += 3) {\n    var e = c[d],\n      f = c[d + 1],\n      g = Lb(e);\n    if ("function" === typeof f) g || sm(c);else if (g) {\n      var h = null;\n      if (f && f.hasAttribute("formAction")) {\n        if (e = f, g = Lb(f)) h = g.formAction;else {\n          if (null !== tm(e)) continue;\n        }\n      } else h = g.action;\n      "function" === typeof h ? c[d + 1] = h : (c.splice(d, 3), d -= 3);\n      sm(c);\n    }\n  }\n}\nvar um = da.ReactCurrentBatchConfig,\n  Yi = !0;\nfunction vm(a, b, c, d) {\n  var e = F,\n    f = um.transition;\n  um.transition = null;\n  try {\n    F = 2, wm(a, b, c, d);\n  } finally {\n    F = e, um.transition = f;\n  }\n}\nfunction xm(a, b, c, d) {\n  var e = F,\n    f = um.transition;\n  um.transition = null;\n  try {\n    F = 8, wm(a, b, c, d);\n  } finally {\n    F = e, um.transition = f;\n  }\n}\nfunction wm(a, b, c, d) {\n  if (Yi) {\n    var e = nm(d);\n    if (null === e) ym(a, b, d, zm, c), im(a, d);else if (km(e, a, b, c, d)) d.stopPropagation();else if (im(a, d), b & 4 && -1 < hm.indexOf(a)) {\n      for (; null !== e;) {\n        var f = Jb(e);\n        null !== f && el(f);\n        f = nm(d);\n        null === f && ym(a, b, d, zm, c);\n        if (f === e) break;\n        e = f;\n      }\n      null !== e && d.stopPropagation();\n    } else ym(a, b, d, null, c);\n  }\n}\nfunction nm(a) {\n  a = Gc(a);\n  return tm(a);\n}\nvar zm = null;\nfunction tm(a) {\n  zm = null;\n  a = Hb(a);\n  if (null !== a) {\n    var b = Mc(a);\n    if (null === b) a = null;else {\n      var c = b.tag;\n      if (13 === c) {\n        a = Nc(b);\n        if (null !== a) return a;\n        a = null;\n      } else if (3 === c) {\n        if (b.stateNode.current.memoizedState.isDehydrated) return 3 === b.tag ? b.stateNode.containerInfo : null;\n        a = null;\n      } else b !== a && (a = null);\n    }\n  }\n  zm = a;\n  return null;\n}\nfunction rk(a) {\n  switch (a) {\n    case "cancel":\n    case "click":\n    case "close":\n    case "contextmenu":\n    case "copy":\n    case "cut":\n    case "auxclick":\n    case "dblclick":\n    case "dragend":\n    case "dragstart":\n    case "drop":\n    case "focusin":\n    case "focusout":\n    case "input":\n    case "invalid":\n    case "keydown":\n    case "keypress":\n    case "keyup":\n    case "mousedown":\n    case "mouseup":\n    case "paste":\n    case "pause":\n    case "play":\n    case "pointercancel":\n    case "pointerdown":\n    case "pointerup":\n    case "ratechange":\n    case "reset":\n    case "resize":\n    case "seeked":\n    case "submit":\n    case "touchcancel":\n    case "touchend":\n    case "touchstart":\n    case "volumechange":\n    case "change":\n    case "selectionchange":\n    case "textInput":\n    case "compositionstart":\n    case "compositionend":\n    case "compositionupdate":\n    case "beforeblur":\n    case "afterblur":\n    case "beforeinput":\n    case "blur":\n    case "fullscreenchange":\n    case "focus":\n    case "hashchange":\n    case "popstate":\n    case "select":\n    case "selectstart":\n      return 2;\n    case "drag":\n    case "dragenter":\n    case "dragexit":\n    case "dragleave":\n    case "dragover":\n    case "mousemove":\n    case "mouseout":\n    case "mouseover":\n    case "pointermove":\n    case "pointerout":\n    case "pointerover":\n    case "scroll":\n    case "toggle":\n    case "touchmove":\n    case "wheel":\n    case "mouseenter":\n    case "mouseleave":\n    case "pointerenter":\n    case "pointerleave":\n      return 8;\n    case "message":\n      switch (Ua()) {\n        case Va:\n          return 2;\n        case Wa:\n          return 8;\n        case Xa:\n        case Ya:\n          return 32;\n        case Za:\n          return 268435456;\n        default:\n          return 32;\n      }\n    default:\n      return 32;\n  }\n}\nvar Am = null,\n  Bm = null,\n  Cm = null;\nfunction Dm() {\n  if (Cm) return Cm;\n  var a,\n    b = Bm,\n    c = b.length,\n    d,\n    e = "value" in Am ? Am.value : Am.textContent,\n    f = e.length;\n  for (a = 0; a < c && b[a] === e[a]; a++);\n  var g = c - a;\n  for (d = 1; d <= g && b[c - d] === e[f - d]; d++);\n  return Cm = e.slice(a, 1 < d ? 1 - d : void 0);\n}\nvar Em = [9, 13, 27, 32],\n  Fm = Sb && "CompositionEvent" in window,\n  Gm = null;\nSb && "documentMode" in document && (Gm = document.documentMode);\nvar Hm = Sb && "TextEvent" in window && !Gm,\n  Im = Sb && (!Fm || Gm && 8 < Gm && 11 >= Gm),\n  Km = String.fromCharCode(32),\n  Lm = !1;\nfunction Mm(a, b) {\n  switch (a) {\n    case "keyup":\n      return -1 !== Em.indexOf(b.keyCode);\n    case "keydown":\n      return 229 !== b.keyCode;\n    case "keypress":\n    case "mousedown":\n    case "focusout":\n      return !0;\n    default:\n      return !1;\n  }\n}\nfunction Nm(a) {\n  a = a.detail;\n  return "object" === typeof a && "data" in a ? a.data : null;\n}\nvar Om = !1;\nfunction Pm(a, b) {\n  switch (a) {\n    case "compositionend":\n      return Nm(b);\n    case "keypress":\n      if (32 !== b.which) return null;\n      Lm = !0;\n      return Km;\n    case "textInput":\n      return a = b.data, a === Km && Lm ? null : a;\n    default:\n      return null;\n  }\n}\nfunction Qm(a, b) {\n  if (Om) return "compositionend" === a || !Fm && Mm(a, b) ? (a = Dm(), Cm = Bm = Am = null, Om = !1, a) : null;\n  switch (a) {\n    case "paste":\n      return null;\n    case "keypress":\n      if (!(b.ctrlKey || b.altKey || b.metaKey) || b.ctrlKey && b.altKey) {\n        if (b.char && 1 < b.char.length) return b.char;\n        if (b.which) return String.fromCharCode(b.which);\n      }\n      return null;\n    case "compositionend":\n      return Im && "ko" !== b.locale ? null : b.data;\n    default:\n      return null;\n  }\n}\nvar Rm = {\n  color: !0,\n  date: !0,\n  datetime: !0,\n  "datetime-local": !0,\n  email: !0,\n  month: !0,\n  number: !0,\n  password: !0,\n  range: !0,\n  search: !0,\n  tel: !0,\n  text: !0,\n  time: !0,\n  url: !0,\n  week: !0\n};\nfunction Sm(a) {\n  var b = a && a.nodeName && a.nodeName.toLowerCase();\n  return "input" === b ? !!Rm[a.type] : "textarea" === b ? !0 : !1;\n}\nfunction Tm(a, b, c, d) {\n  Kc(d);\n  b = Um(b, "onChange");\n  0 < b.length && (c = new tl("onChange", "change", null, c, d), a.push({\n    event: c,\n    listeners: b\n  }));\n}\nvar Vm = null,\n  Wm = null;\nfunction Xm(a) {\n  Ym(a, 0);\n}\nfunction Zm(a) {\n  var b = Kb(a);\n  if (kc(b)) return a;\n}\nfunction $m(a, b) {\n  if ("change" === a) return b;\n}\nvar an = !1;\nif (Sb) {\n  var bn;\n  if (Sb) {\n    var cn = ("oninput" in document);\n    if (!cn) {\n      var dn = document.createElement("div");\n      dn.setAttribute("oninput", "return;");\n      cn = "function" === typeof dn.oninput;\n    }\n    bn = cn;\n  } else bn = !1;\n  an = bn && (!document.documentMode || 9 < document.documentMode);\n}\nfunction en() {\n  Vm && (Vm.detachEvent("onpropertychange", fn), Wm = Vm = null);\n}\nfunction fn(a) {\n  if ("value" === a.propertyName && Zm(Wm)) {\n    var b = [];\n    Tm(b, Wm, a, Gc(a));\n    kl(Xm, b);\n  }\n}\nfunction gn(a, b, c) {\n  "focusin" === a ? (en(), Vm = b, Wm = c, Vm.attachEvent("onpropertychange", fn)) : "focusout" === a && en();\n}\nfunction hn(a) {\n  if ("selectionchange" === a || "keyup" === a || "keydown" === a) return Zm(Wm);\n}\nfunction jn(a, b) {\n  if ("click" === a) return Zm(b);\n}\nfunction kn(a, b) {\n  if ("input" === a || "change" === a) return Zm(b);\n}\nfunction ln(a) {\n  for (; a && a.firstChild;) a = a.firstChild;\n  return a;\n}\nfunction mn(a, b) {\n  var c = ln(a);\n  a = 0;\n  for (var d; c;) {\n    if (3 === c.nodeType) {\n      d = a + c.textContent.length;\n      if (a <= b && d >= b) return {\n        node: c,\n        offset: b - a\n      };\n      a = d;\n    }\n    a: {\n      for (; c;) {\n        if (c.nextSibling) {\n          c = c.nextSibling;\n          break a;\n        }\n        c = c.parentNode;\n      }\n      c = void 0;\n    }\n    c = ln(c);\n  }\n}\nfunction nn(a, b) {\n  return a && b ? a === b ? !0 : a && 3 === a.nodeType ? !1 : b && 3 === b.nodeType ? nn(a, b.parentNode) : "contains" in a ? a.contains(b) : a.compareDocumentPosition ? !!(a.compareDocumentPosition(b) & 16) : !1 : !1;\n}\nfunction Zi() {\n  for (var a = window, b = lc(); b instanceof a.HTMLIFrameElement;) {\n    try {\n      var c = "string" === typeof b.contentWindow.location.href;\n    } catch (d) {\n      c = !1;\n    }\n    if (c) a = b.contentWindow;else break;\n    b = lc(a.document);\n  }\n  return b;\n}\nfunction $i(a) {\n  var b = a && a.nodeName && a.nodeName.toLowerCase();\n  return b && ("input" === b && ("text" === a.type || "search" === a.type || "tel" === a.type || "url" === a.type || "password" === a.type) || "textarea" === b || "true" === a.contentEditable);\n}\nfunction Pk(a) {\n  var b = Zi(),\n    c = a.focusedElem,\n    d = a.selectionRange;\n  if (b !== c && c && c.ownerDocument && nn(c.ownerDocument.documentElement, c)) {\n    if (null !== d && $i(c)) if (b = d.start, a = d.end, void 0 === a && (a = b), "selectionStart" in c) c.selectionStart = b, c.selectionEnd = Math.min(a, c.value.length);else if (a = (b = c.ownerDocument || document) && b.defaultView || window, a.getSelection) {\n      a = a.getSelection();\n      var e = c.textContent.length,\n        f = Math.min(d.start, e);\n      d = void 0 === d.end ? f : Math.min(d.end, e);\n      !a.extend && f > d && (e = d, d = f, f = e);\n      e = mn(c, f);\n      var g = mn(c, d);\n      e && g && (1 !== a.rangeCount || a.anchorNode !== e.node || a.anchorOffset !== e.offset || a.focusNode !== g.node || a.focusOffset !== g.offset) && (b = b.createRange(), b.setStart(e.node, e.offset), a.removeAllRanges(), f > d ? (a.addRange(b), a.extend(g.node, g.offset)) : (b.setEnd(g.node, g.offset), a.addRange(b)));\n    }\n    b = [];\n    for (a = c; a = a.parentNode;) 1 === a.nodeType && b.push({\n      element: a,\n      left: a.scrollLeft,\n      top: a.scrollTop\n    });\n    "function" === typeof c.focus && c.focus();\n    for (c = 0; c < b.length; c++) a = b[c], a.element.scrollLeft = a.left, a.element.scrollTop = a.top;\n  }\n}\nvar on = Sb && "documentMode" in document && 11 >= document.documentMode,\n  pn = null,\n  qn = null,\n  rn = null,\n  sn = !1;\nfunction tn(a, b, c) {\n  var d = c.window === c ? c.document : 9 === c.nodeType ? c : c.ownerDocument;\n  sn || null == pn || pn !== lc(d) || (d = pn, "selectionStart" in d && $i(d) ? d = {\n    start: d.selectionStart,\n    end: d.selectionEnd\n  } : (d = (d.ownerDocument && d.ownerDocument.defaultView || window).getSelection(), d = {\n    anchorNode: d.anchorNode,\n    anchorOffset: d.anchorOffset,\n    focusNode: d.focusNode,\n    focusOffset: d.focusOffset\n  }), rn && ge(rn, d) || (rn = d, d = Um(qn, "onSelect"), 0 < d.length && (b = new tl("onSelect", "select", null, b, c), a.push({\n    event: b,\n    listeners: d\n  }), b.target = pn)));\n}\nfunction un(a, b) {\n  var c = {};\n  c[a.toLowerCase()] = b.toLowerCase();\n  c["Webkit" + a] = "webkit" + b;\n  c["Moz" + a] = "moz" + b;\n  return c;\n}\nvar vn = {\n    animationend: un("Animation", "AnimationEnd"),\n    animationiteration: un("Animation", "AnimationIteration"),\n    animationstart: un("Animation", "AnimationStart"),\n    transitionend: un("Transition", "TransitionEnd")\n  },\n  wn = {},\n  xn = {};\nSb && (xn = document.createElement("div").style, "AnimationEvent" in window || (delete vn.animationend.animation, delete vn.animationiteration.animation, delete vn.animationstart.animation), "TransitionEvent" in window || delete vn.transitionend.transition);\nfunction yn(a) {\n  if (wn[a]) return wn[a];\n  if (!vn[a]) return a;\n  var b = vn[a],\n    c;\n  for (c in b) if (b.hasOwnProperty(c) && c in xn) return wn[a] = b[c];\n  return a;\n}\nvar zn = yn("animationend"),\n  An = yn("animationiteration"),\n  Bn = yn("animationstart"),\n  Cn = yn("transitionend"),\n  Dn = new Map(),\n  En = "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll scrollEnd toggle touchMove waiting wheel".split(" ");\nfunction Fn(a, b) {\n  Dn.set(a, b);\n  Qb(b, [a]);\n}\nfor (var Gn = 0; Gn < En.length; Gn++) {\n  var Hn = En[Gn],\n    In = Hn.toLowerCase(),\n    Jn = Hn[0].toUpperCase() + Hn.slice(1);\n  Fn(In, "on" + Jn);\n}\nFn(zn, "onAnimationEnd");\nFn(An, "onAnimationIteration");\nFn(Bn, "onAnimationStart");\nFn("dblclick", "onDoubleClick");\nFn("focusin", "onFocus");\nFn("focusout", "onBlur");\nFn(Cn, "onTransitionEnd");\nRb("onMouseEnter", ["mouseout", "mouseover"]);\nRb("onMouseLeave", ["mouseout", "mouseover"]);\nRb("onPointerEnter", ["pointerout", "pointerover"]);\nRb("onPointerLeave", ["pointerout", "pointerover"]);\nQb("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" "));\nQb("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));\nQb("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);\nQb("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" "));\nQb("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" "));\nQb("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));\nvar Kn = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),\n  Ln = new Set("cancel close invalid load scroll scrollend toggle".split(" ").concat(Kn));\nfunction Mn(a, b, c) {\n  var d = a.type || "unknown-event";\n  a.currentTarget = c;\n  Ni(d, b, void 0, a);\n  a.currentTarget = null;\n}\nfunction Ym(a, b) {\n  b = 0 !== (b & 4);\n  for (var c = 0; c < a.length; c++) {\n    var d = a[c],\n      e = d.event;\n    d = d.listeners;\n    a: {\n      var f = void 0;\n      if (b) for (var g = d.length - 1; 0 <= g; g--) {\n        var h = d[g],\n          l = h.instance,\n          p = h.currentTarget;\n        h = h.listener;\n        if (l !== f && e.isPropagationStopped()) break a;\n        Mn(e, h, p);\n        f = l;\n      } else for (g = 0; g < d.length; g++) {\n        h = d[g];\n        l = h.instance;\n        p = h.currentTarget;\n        h = h.listener;\n        if (l !== f && e.isPropagationStopped()) break a;\n        Mn(e, h, p);\n        f = l;\n      }\n    }\n  }\n  if (Ji) throw a = Ki, Ji = !1, Ki = null, a;\n}\nfunction Y(a, b) {\n  var c = b[Ab];\n  void 0 === c && (c = b[Ab] = new Set());\n  var d = a + "__bubble";\n  c.has(d) || (Nn(b, a, 2, !1), c.add(d));\n}\nfunction On(a, b, c) {\n  var d = 0;\n  b && (d |= 4);\n  Nn(c, a, d, b);\n}\nvar Pn = "_reactListening" + Math.random().toString(36).slice(2);\nfunction Bi(a) {\n  if (!a[Pn]) {\n    a[Pn] = !0;\n    Ob.forEach(function (c) {\n      "selectionchange" !== c && (Ln.has(c) || On(c, !1, a), On(c, !0, a));\n    });\n    var b = 9 === a.nodeType ? a : a.ownerDocument;\n    null === b || b[Pn] || (b[Pn] = !0, On("selectionchange", !1, b));\n  }\n}\nfunction Nn(a, b, c, d) {\n  switch (rk(b)) {\n    case 2:\n      var e = vm;\n      break;\n    case 8:\n      e = xm;\n      break;\n    default:\n      e = wm;\n  }\n  c = e.bind(null, b, c, a);\n  e = void 0;\n  !ml || "touchstart" !== b && "touchmove" !== b && "wheel" !== b || (e = !0);\n  d ? void 0 !== e ? a.addEventListener(b, c, {\n    capture: !0,\n    passive: e\n  }) : a.addEventListener(b, c, !0) : void 0 !== e ? a.addEventListener(b, c, {\n    passive: e\n  }) : a.addEventListener(b, c, !1);\n}\nfunction ym(a, b, c, d, e) {\n  var f = d;\n  if (0 === (b & 1) && 0 === (b & 2) && null !== d) a: for (;;) {\n    if (null === d) return;\n    var g = d.tag;\n    if (3 === g || 4 === g) {\n      var h = d.stateNode.containerInfo;\n      if (h === e || 8 === h.nodeType && h.parentNode === e) break;\n      if (4 === g) for (g = d.return; null !== g;) {\n        var l = g.tag;\n        if (3 === l || 4 === l) if (l = g.stateNode.containerInfo, l === e || 8 === l.nodeType && l.parentNode === e) return;\n        g = g.return;\n      }\n      for (; null !== h;) {\n        g = Hb(h);\n        if (null === g) return;\n        l = g.tag;\n        if (5 === l || 6 === l || 26 === l || 27 === l) {\n          d = f = g;\n          continue a;\n        }\n        h = h.parentNode;\n      }\n    }\n    d = d.return;\n  }\n  kl(function () {\n    var p = f,\n      q = Gc(c),\n      w = [];\n    a: {\n      var r = Dn.get(a);\n      if (void 0 !== r) {\n        var t = tl,\n          z = a;\n        switch (a) {\n          case "keypress":\n            if (0 === ol(c)) break a;\n          case "keydown":\n          case "keyup":\n            t = Rl;\n            break;\n          case "focusin":\n            z = "focus";\n            t = Fl;\n            break;\n          case "focusout":\n            z = "blur";\n            t = Fl;\n            break;\n          case "beforeblur":\n          case "afterblur":\n            t = Fl;\n            break;\n          case "click":\n            if (2 === c.button) break a;\n          case "auxclick":\n          case "dblclick":\n          case "mousedown":\n          case "mousemove":\n          case "mouseup":\n          case "mouseout":\n          case "mouseover":\n          case "contextmenu":\n            t = Bl;\n            break;\n          case "drag":\n          case "dragend":\n          case "dragenter":\n          case "dragexit":\n          case "dragleave":\n          case "dragover":\n          case "dragstart":\n          case "drop":\n            t = Dl;\n            break;\n          case "touchcancel":\n          case "touchend":\n          case "touchmove":\n          case "touchstart":\n            t = Vl;\n            break;\n          case zn:\n          case An:\n          case Bn:\n            t = Hl;\n            break;\n          case Cn:\n            t = Xl;\n            break;\n          case "scroll":\n          case "scrollend":\n            t = vl;\n            break;\n          case "wheel":\n            t = Zl;\n            break;\n          case "copy":\n          case "cut":\n          case "paste":\n            t = Jl;\n            break;\n          case "gotpointercapture":\n          case "lostpointercapture":\n          case "pointercancel":\n          case "pointerdown":\n          case "pointermove":\n          case "pointerout":\n          case "pointerover":\n          case "pointerup":\n            t = Tl;\n        }\n        var B = 0 !== (b & 4),\n          U = !B && ("scroll" === a || "scrollend" === a),\n          V = B ? null !== r ? r + "Capture" : null : r;\n        B = [];\n        for (var m = p, k; null !== m;) {\n          var n = m;\n          k = n.stateNode;\n          n = n.tag;\n          5 !== n && 26 !== n && 27 !== n || null === k || null === V || (n = ll(m, V), null != n && B.push(Qn(m, n, k)));\n          if (U) break;\n          m = m.return;\n        }\n        0 < B.length && (r = new t(r, z, null, c, q), w.push({\n          event: r,\n          listeners: B\n        }));\n      }\n    }\n    if (0 === (b & 7)) {\n      a: {\n        r = "mouseover" === a || "pointerover" === a;\n        t = "mouseout" === a || "pointerout" === a;\n        if (r && c !== Fc && (z = c.relatedTarget || c.fromElement) && (Hb(z) || z[zb])) break a;\n        if (t || r) {\n          r = q.window === q ? q : (r = q.ownerDocument) ? r.defaultView || r.parentWindow : window;\n          if (t) {\n            if (z = c.relatedTarget || c.toElement, t = p, z = z ? Hb(z) : null, null !== z && (U = Mc(z), B = z.tag, z !== U || 5 !== B && 27 !== B && 6 !== B)) z = null;\n          } else t = null, z = p;\n          if (t !== z) {\n            B = Bl;\n            n = "onMouseLeave";\n            V = "onMouseEnter";\n            m = "mouse";\n            if ("pointerout" === a || "pointerover" === a) B = Tl, n = "onPointerLeave", V = "onPointerEnter", m = "pointer";\n            U = null == t ? r : Kb(t);\n            k = null == z ? r : Kb(z);\n            r = new B(n, m + "leave", t, c, q);\n            r.target = U;\n            r.relatedTarget = k;\n            n = null;\n            Hb(q) === p && (B = new B(V, m + "enter", z, c, q), B.target = k, B.relatedTarget = U, n = B);\n            U = n;\n            if (t && z) b: {\n              B = t;\n              V = z;\n              m = 0;\n              for (k = B; k; k = Rn(k)) m++;\n              k = 0;\n              for (n = V; n; n = Rn(n)) k++;\n              for (; 0 < m - k;) B = Rn(B), m--;\n              for (; 0 < k - m;) V = Rn(V), k--;\n              for (; m--;) {\n                if (B === V || null !== V && B === V.alternate) break b;\n                B = Rn(B);\n                V = Rn(V);\n              }\n              B = null;\n            } else B = null;\n            null !== t && Sn(w, r, t, B, !1);\n            null !== z && null !== U && Sn(w, U, z, B, !0);\n          }\n        }\n      }\n      a: {\n        r = p ? Kb(p) : window;\n        t = r.nodeName && r.nodeName.toLowerCase();\n        if ("select" === t || "input" === t && "file" === r.type) var v = $m;else if (Sm(r)) {\n          if (an) v = kn;else {\n            v = hn;\n            var x = gn;\n          }\n        } else (t = r.nodeName) && "input" === t.toLowerCase() && ("checkbox" === r.type || "radio" === r.type) && (v = jn);\n        if (v && (v = v(a, p))) {\n          Tm(w, v, c, q);\n          break a;\n        }\n        x && x(a, r, p);\n        "focusout" === a && p && "number" === r.type && null != p.memoizedProps.value && pc(r, "number", r.value);\n      }\n      x = p ? Kb(p) : window;\n      switch (a) {\n        case "focusin":\n          if (Sm(x) || "true" === x.contentEditable) pn = x, qn = p, rn = null;\n          break;\n        case "focusout":\n          rn = qn = pn = null;\n          break;\n        case "mousedown":\n          sn = !0;\n          break;\n        case "contextmenu":\n        case "mouseup":\n        case "dragend":\n          sn = !1;\n          tn(w, c, q);\n          break;\n        case "selectionchange":\n          if (on) break;\n        case "keydown":\n        case "keyup":\n          tn(w, c, q);\n      }\n      var A;\n      if (Fm) b: {\n        switch (a) {\n          case "compositionstart":\n            var y = "onCompositionStart";\n            break b;\n          case "compositionend":\n            y = "onCompositionEnd";\n            break b;\n          case "compositionupdate":\n            y = "onCompositionUpdate";\n            break b;\n        }\n        y = void 0;\n      } else Om ? Mm(a, c) && (y = "onCompositionEnd") : "keydown" === a && 229 === c.keyCode && (y = "onCompositionStart");\n      y && (Im && "ko" !== c.locale && (Om || "onCompositionStart" !== y ? "onCompositionEnd" === y && Om && (A = Dm()) : (Am = q, Bm = "value" in Am ? Am.value : Am.textContent, Om = !0)), x = Um(p, y), 0 < x.length && (y = new Ll(y, a, null, c, q), w.push({\n        event: y,\n        listeners: x\n      }), A ? y.data = A : (A = Nm(c), null !== A && (y.data = A))));\n      if (A = Hm ? Pm(a, c) : Qm(a, c)) y = Um(p, "onBeforeInput"), 0 < y.length && (x = new Ll("onBeforeInput", "beforeinput", null, c, q), w.push({\n        event: x,\n        listeners: y\n      }), x.data = A);\n      $l(w, a, p, c, q);\n    }\n    Ym(w, b);\n  });\n}\nfunction Qn(a, b, c) {\n  return {\n    instance: a,\n    listener: b,\n    currentTarget: c\n  };\n}\nfunction Um(a, b) {\n  for (var c = b + "Capture", d = []; null !== a;) {\n    var e = a,\n      f = e.stateNode;\n    e = e.tag;\n    5 !== e && 26 !== e && 27 !== e || null === f || (e = ll(a, c), null != e && d.unshift(Qn(a, e, f)), e = ll(a, b), null != e && d.push(Qn(a, e, f)));\n    a = a.return;\n  }\n  return d;\n}\nfunction Rn(a) {\n  if (null === a) return null;\n  do a = a.return; while (a && 5 !== a.tag && 27 !== a.tag);\n  return a ? a : null;\n}\nfunction Sn(a, b, c, d, e) {\n  for (var f = b._reactName, g = []; null !== c && c !== d;) {\n    var h = c,\n      l = h.alternate,\n      p = h.stateNode;\n    h = h.tag;\n    if (null !== l && l === d) break;\n    5 !== h && 26 !== h && 27 !== h || null === p || (l = p, e ? (p = ll(c, f), null != p && g.unshift(Qn(c, p, l))) : e || (p = ll(c, f), null != p && g.push(Qn(c, p, l))));\n    c = c.return;\n  }\n  0 !== g.length && a.push({\n    event: b,\n    listeners: g\n  });\n}\nvar Tn = /\\r\\n?/g,\n  Un = /\\u0000|\\uFFFD/g;\nfunction Vn(a) {\n  return ("string" === typeof a ? a : "" + a).replace(Tn, "\\n").replace(Un, "");\n}\nfunction Ai(a, b, c) {\n  b = Vn(b);\n  if (Vn(a) !== b && c) throw Error(u(425));\n}\nfunction pj() {}\nfunction Z(a, b, c, d, e, f) {\n  switch (c) {\n    case "children":\n      "string" === typeof d ? "body" === b || "textarea" === b && "" === d || zc(a, d) : "number" === typeof d && "body" !== b && zc(a, "" + d);\n      break;\n    case "className":\n      Yb(a, "class", d);\n      break;\n    case "tabIndex":\n      Yb(a, "tabindex", d);\n      break;\n    case "dir":\n    case "role":\n    case "viewBox":\n    case "width":\n    case "height":\n      Yb(a, c, d);\n      break;\n    case "style":\n      Cc(a, d, f);\n      break;\n    case "src":\n    case "href":\n      if (null == d || "function" === typeof d || "symbol" === typeof d || "boolean" === typeof d) {\n        a.removeAttribute(c);\n        break;\n      }\n      a.setAttribute(c, "" + d);\n      break;\n    case "action":\n    case "formAction":\n      if ("function" === typeof d) {\n        a.setAttribute(c, "javascript:throw new Error(\'A React form was unexpectedly submitted. If you called form.submit() manually, consider using form.requestSubmit() instead. If you\\\\\'re trying to use event.stopPropagation() in a submit event handler, consider also calling event.preventDefault().\')");\n        break;\n      } else "function" === typeof f && ("formAction" === c ? ("input" !== b && Z(a, b, "name", e.name, e, null), Z(a, b, "formEncType", e.formEncType, e, null), Z(a, b, "formMethod", e.formMethod, e, null), Z(a, b, "formTarget", e.formTarget, e, null)) : (Z(a, b, "encType", e.encType, e, null), Z(a, b, "method", e.method, e, null), Z(a, b, "target", e.target, e, null)));\n      if (null == d || "symbol" === typeof d || "boolean" === typeof d) {\n        a.removeAttribute(c);\n        break;\n      }\n      a.setAttribute(c, "" + d);\n      break;\n    case "onClick":\n      null != d && (a.onclick = pj);\n      break;\n    case "onScroll":\n      null != d && Y("scroll", a);\n      break;\n    case "onScrollEnd":\n      null != d && Y("scrollend", a);\n      break;\n    case "dangerouslySetInnerHTML":\n      if (null != d) {\n        if ("object" !== typeof d || !("__html" in d)) throw Error(u(61));\n        d = d.__html;\n        if (null != d) {\n          if (null != e.children) throw Error(u(60));\n          yc(a, d);\n        }\n      }\n      break;\n    case "multiple":\n      a.multiple = d && "function" !== typeof d && "symbol" !== typeof d;\n      break;\n    case "muted":\n      a.muted = d && "function" !== typeof d && "symbol" !== typeof d;\n      break;\n    case "suppressContentEditableWarning":\n    case "suppressHydrationWarning":\n    case "defaultValue":\n    case "defaultChecked":\n    case "innerHTML":\n      break;\n    case "autoFocus":\n      break;\n    case "xlinkHref":\n      if (null == d || "function" === typeof d || "boolean" === typeof d || "symbol" === typeof d) {\n        a.removeAttribute("xlink:href");\n        break;\n      }\n      a.setAttributeNS("http://www.w3.org/1999/xlink", "xlink:href", "" + d);\n      break;\n    case "contentEditable":\n    case "spellCheck":\n    case "draggable":\n    case "value":\n    case "autoReverse":\n    case "externalResourcesRequired":\n    case "focusable":\n    case "preserveAlpha":\n      null != d && "function" !== typeof d && "symbol" !== typeof d ? a.setAttribute(c, "" + d) : a.removeAttribute(c);\n      break;\n    case "allowFullScreen":\n    case "async":\n    case "autoPlay":\n    case "controls":\n    case "default":\n    case "defer":\n    case "disabled":\n    case "disablePictureInPicture":\n    case "disableRemotePlayback":\n    case "formNoValidate":\n    case "hidden":\n    case "loop":\n    case "noModule":\n    case "noValidate":\n    case "open":\n    case "playsInline":\n    case "readOnly":\n    case "required":\n    case "reversed":\n    case "scoped":\n    case "seamless":\n    case "itemScope":\n      d && "function" !== typeof d && "symbol" !== typeof d ? a.setAttribute(c, "") : a.removeAttribute(c);\n      break;\n    case "capture":\n    case "download":\n      !0 === d ? a.setAttribute(c, "") : !1 !== d && null != d && "function" !== typeof d && "symbol" !== typeof d ? a.setAttribute(c, d) : a.removeAttribute(c);\n      break;\n    case "cols":\n    case "rows":\n    case "size":\n    case "span":\n      null != d && "function" !== typeof d && "symbol" !== typeof d && !isNaN(d) && 1 <= d ? a.setAttribute(c, d) : a.removeAttribute(c);\n      break;\n    case "rowSpan":\n    case "start":\n      null == d || "function" === typeof d || "symbol" === typeof d || isNaN(d) ? a.removeAttribute(c) : a.setAttribute(c, d);\n      break;\n    case "xlinkActuate":\n      Zb(a, "http://www.w3.org/1999/xlink", "xlink:actuate", d);\n      break;\n    case "xlinkArcrole":\n      Zb(a, "http://www.w3.org/1999/xlink", "xlink:arcrole", d);\n      break;\n    case "xlinkRole":\n      Zb(a, "http://www.w3.org/1999/xlink", "xlink:role", d);\n      break;\n    case "xlinkShow":\n      Zb(a, "http://www.w3.org/1999/xlink", "xlink:show", d);\n      break;\n    case "xlinkTitle":\n      Zb(a, "http://www.w3.org/1999/xlink", "xlink:title", d);\n      break;\n    case "xlinkType":\n      Zb(a, "http://www.w3.org/1999/xlink", "xlink:type", d);\n      break;\n    case "xmlBase":\n      Zb(a, "http://www.w3.org/XML/1998/namespace", "xml:base", d);\n      break;\n    case "xmlLang":\n      Zb(a, "http://www.w3.org/XML/1998/namespace", "xml:lang", d);\n      break;\n    case "xmlSpace":\n      Zb(a, "http://www.w3.org/XML/1998/namespace", "xml:space", d);\n      break;\n    case "is":\n      Xb(a, "is", d);\n      break;\n    default:\n      if (!(2 < c.length) || "o" !== c[0] && "O" !== c[0] || "n" !== c[1] && "N" !== c[1]) e = Ec.get(c) || c, Xb(a, e, d);\n  }\n}\nfunction Wn(a, b, c, d, e, f) {\n  switch (c) {\n    case "style":\n      Cc(a, d, f);\n      break;\n    case "dangerouslySetInnerHTML":\n      if (null != d) {\n        if ("object" !== typeof d || !("__html" in d)) throw Error(u(61));\n        b = d.__html;\n        if (null != b) {\n          if (null != e.children) throw Error(u(60));\n          yc(a, b);\n        }\n      }\n      break;\n    case "children":\n      "string" === typeof d ? zc(a, d) : "number" === typeof d && zc(a, "" + d);\n      break;\n    case "onScroll":\n      null != d && Y("scroll", a);\n      break;\n    case "onScrollEnd":\n      null != d && Y("scrollend", a);\n      break;\n    case "onClick":\n      null != d && (a.onclick = pj);\n      break;\n    case "suppressContentEditableWarning":\n    case "suppressHydrationWarning":\n    case "innerHTML":\n      break;\n    default:\n      Pb.hasOwnProperty(c) || ("boolean" === typeof d && (d = "" + d), Xb(a, c, d));\n  }\n}\nfunction zi(a, b, c) {\n  switch (b) {\n    case "div":\n    case "span":\n    case "svg":\n    case "path":\n    case "a":\n    case "g":\n    case "p":\n    case "li":\n      break;\n    case "input":\n      Y("invalid", a);\n      var d = null,\n        e = null,\n        f = null,\n        g = null,\n        h = null,\n        l = null;\n      for (q in c) if (c.hasOwnProperty(q)) {\n        var p = c[q];\n        if (null != p) switch (q) {\n          case "name":\n            d = p;\n            break;\n          case "type":\n            e = p;\n            break;\n          case "checked":\n            h = p;\n            break;\n          case "defaultChecked":\n            l = p;\n            break;\n          case "value":\n            f = p;\n            break;\n          case "defaultValue":\n            g = p;\n            break;\n          case "children":\n          case "dangerouslySetInnerHTML":\n            if (null != p) throw Error(u(137, b));\n            break;\n          default:\n            Z(a, b, q, p, c, null);\n        }\n      }\n      qc(a, f, g, h, l, e, d, !1);\n      jc(a);\n      return;\n    case "select":\n      Y("invalid", a);\n      var q = e = f = null;\n      for (d in c) if (c.hasOwnProperty(d) && (g = c[d], null != g)) switch (d) {\n        case "value":\n          f = g;\n          break;\n        case "defaultValue":\n          e = g;\n          break;\n        case "multiple":\n          q = g;\n        default:\n          Z(a, b, d, g, c, null);\n      }\n      b = f;\n      c = e;\n      a.multiple = !!q;\n      null != b ? sc(a, !!q, b, !1) : null != c && sc(a, !!q, c, !0);\n      return;\n    case "textarea":\n      Y("invalid", a);\n      f = d = q = null;\n      for (e in c) if (c.hasOwnProperty(e) && (g = c[e], null != g)) switch (e) {\n        case "value":\n          q = g;\n          break;\n        case "defaultValue":\n          d = g;\n          break;\n        case "children":\n          f = g;\n          break;\n        case "dangerouslySetInnerHTML":\n          if (null != g) throw Error(u(91));\n          break;\n        default:\n          Z(a, b, e, g, c, null);\n      }\n      uc(a, q, d, f);\n      jc(a);\n      return;\n    case "option":\n      for (g in c) if (c.hasOwnProperty(g) && (q = c[g], null != q)) switch (g) {\n        case "selected":\n          a.selected = q && "function" !== typeof q && "symbol" !== typeof q;\n          break;\n        default:\n          Z(a, b, g, q, c, null);\n      }\n      return;\n    case "dialog":\n      Y("cancel", a);\n      Y("close", a);\n      break;\n    case "iframe":\n    case "object":\n      Y("load", a);\n      break;\n    case "video":\n    case "audio":\n      for (q = 0; q < Kn.length; q++) Y(Kn[q], a);\n      break;\n    case "image":\n      Y("error", a);\n      Y("load", a);\n      break;\n    case "details":\n      Y("toggle", a);\n      break;\n    case "embed":\n    case "source":\n    case "img":\n    case "link":\n      Y("error", a), Y("load", a);\n    case "area":\n    case "base":\n    case "br":\n    case "col":\n    case "hr":\n    case "keygen":\n    case "meta":\n    case "param":\n    case "track":\n    case "wbr":\n    case "menuitem":\n      for (h in c) if (c.hasOwnProperty(h) && (q = c[h], null != q)) switch (h) {\n        case "children":\n        case "dangerouslySetInnerHTML":\n          throw Error(u(137, b));\n        default:\n          Z(a, b, h, q, c, null);\n      }\n      return;\n    default:\n      if (Dc(b)) {\n        for (l in c) c.hasOwnProperty(l) && (q = c[l], null != q && Wn(a, b, l, q, c, null));\n        return;\n      }\n  }\n  for (f in c) c.hasOwnProperty(f) && (q = c[f], null != q && Z(a, b, f, q, c, null));\n}\nfunction Hj(a, b, c, d) {\n  switch (b) {\n    case "div":\n    case "span":\n    case "svg":\n    case "path":\n    case "a":\n    case "g":\n    case "p":\n    case "li":\n      break;\n    case "input":\n      var e = null,\n        f = null,\n        g = null,\n        h = null,\n        l = null,\n        p = null,\n        q = null;\n      for (t in c) {\n        var w = c[t];\n        if (c.hasOwnProperty(t) && null != w) switch (t) {\n          case "checked":\n            break;\n          case "value":\n            break;\n          case "defaultValue":\n            l = w;\n          default:\n            d.hasOwnProperty(t) || Z(a, b, t, null, d, w);\n        }\n      }\n      for (var r in d) {\n        var t = d[r];\n        w = c[r];\n        if (d.hasOwnProperty(r) && (null != t || null != w)) switch (r) {\n          case "type":\n            f = t;\n            break;\n          case "name":\n            e = t;\n            break;\n          case "checked":\n            p = t;\n            break;\n          case "defaultChecked":\n            q = t;\n            break;\n          case "value":\n            g = t;\n            break;\n          case "defaultValue":\n            h = t;\n            break;\n          case "children":\n          case "dangerouslySetInnerHTML":\n            if (null != t) throw Error(u(137, b));\n            break;\n          default:\n            t !== w && Z(a, b, r, t, d, w);\n        }\n      }\n      oc(a, g, h, l, p, q, f, e);\n      return;\n    case "select":\n      t = g = h = r = null;\n      for (f in c) if (l = c[f], c.hasOwnProperty(f) && null != l) switch (f) {\n        case "value":\n          break;\n        case "multiple":\n          t = l;\n        default:\n          d.hasOwnProperty(f) || Z(a, b, f, null, d, l);\n      }\n      for (e in d) if (f = d[e], l = c[e], d.hasOwnProperty(e) && (null != f || null != l)) switch (e) {\n        case "value":\n          r = f;\n          break;\n        case "defaultValue":\n          h = f;\n          break;\n        case "multiple":\n          g = f;\n        default:\n          f !== l && Z(a, b, e, f, d, l);\n      }\n      b = h;\n      c = g;\n      d = t;\n      null != r ? sc(a, !!c, r, !1) : !!d !== !!c && (null != b ? sc(a, !!c, b, !0) : sc(a, !!c, c ? [] : "", !1));\n      return;\n    case "textarea":\n      t = r = null;\n      for (h in c) if (e = c[h], c.hasOwnProperty(h) && null != e && !d.hasOwnProperty(h)) switch (h) {\n        case "value":\n          break;\n        case "children":\n          break;\n        default:\n          Z(a, b, h, null, d, e);\n      }\n      for (g in d) if (e = d[g], f = c[g], d.hasOwnProperty(g) && (null != e || null != f)) switch (g) {\n        case "value":\n          r = e;\n          break;\n        case "defaultValue":\n          t = e;\n          break;\n        case "children":\n          break;\n        case "dangerouslySetInnerHTML":\n          if (null != e) throw Error(u(91));\n          break;\n        default:\n          e !== f && Z(a, b, g, e, d, f);\n      }\n      tc(a, r, t);\n      return;\n    case "option":\n      for (var z in c) if (r = c[z], c.hasOwnProperty(z) && null != r && !d.hasOwnProperty(z)) switch (z) {\n        case "selected":\n          a.selected = !1;\n          break;\n        default:\n          Z(a, b, z, null, d, r);\n      }\n      for (l in d) if (r = d[l], t = c[l], d.hasOwnProperty(l) && r !== t && (null != r || null != t)) switch (l) {\n        case "selected":\n          a.selected = r && "function" !== typeof r && "symbol" !== typeof r;\n          break;\n        default:\n          Z(a, b, l, r, d, t);\n      }\n      return;\n    case "img":\n    case "link":\n    case "area":\n    case "base":\n    case "br":\n    case "col":\n    case "embed":\n    case "hr":\n    case "keygen":\n    case "meta":\n    case "param":\n    case "source":\n    case "track":\n    case "wbr":\n    case "menuitem":\n      for (var B in c) r = c[B], c.hasOwnProperty(B) && null != r && !d.hasOwnProperty(B) && Z(a, b, B, null, d, r);\n      for (p in d) if (r = d[p], t = c[p], d.hasOwnProperty(p) && r !== t && (null != r || null != t)) switch (p) {\n        case "children":\n        case "dangerouslySetInnerHTML":\n          if (null != r) throw Error(u(137, b));\n          break;\n        default:\n          Z(a, b, p, r, d, t);\n      }\n      return;\n    default:\n      if (Dc(b)) {\n        for (var U in c) r = c[U], c.hasOwnProperty(U) && null != r && !d.hasOwnProperty(U) && Wn(a, b, U, null, d, r);\n        for (q in d) r = d[q], t = c[q], !d.hasOwnProperty(q) || r === t || null == r && null == t || Wn(a, b, q, r, d, t);\n        return;\n      }\n  }\n  for (var V in c) r = c[V], c.hasOwnProperty(V) && null != r && !d.hasOwnProperty(V) && Z(a, b, V, null, d, r);\n  for (w in d) r = d[w], t = c[w], !d.hasOwnProperty(w) || r === t || null == r && null == t || Z(a, b, w, r, d, t);\n}\nvar Xi = null,\n  aj = null;\nfunction yi(a) {\n  return 9 === a.nodeType ? a : a.ownerDocument;\n}\nfunction Ka(a) {\n  switch (a) {\n    case "http://www.w3.org/2000/svg":\n      return 1;\n    case "http://www.w3.org/1998/Math/MathML":\n      return 2;\n    default:\n      return 0;\n  }\n}\nfunction La(a, b) {\n  if (0 === a) switch (b) {\n    case "svg":\n      return 1;\n    case "math":\n      return 2;\n    default:\n      return 0;\n  }\n  return 1 === a && "foreignObject" === b ? 0 : a;\n}\nfunction Hd(a, b) {\n  return "textarea" === a || "noscript" === a || "string" === typeof b.children || "number" === typeof b.children || "object" === typeof b.dangerouslySetInnerHTML && null !== b.dangerouslySetInnerHTML && null != b.dangerouslySetInnerHTML.__html;\n}\nvar Xn = null;\nfunction nf() {\n  var a = window.event;\n  if (a && "popstate" === a.type) {\n    if (a === Xn) return !1;\n    Xn = a;\n    return !0;\n  }\n  Xn = null;\n  return !1;\n}\nvar uk = "function" === typeof setTimeout ? setTimeout : void 0,\n  Ck = "function" === typeof clearTimeout ? clearTimeout : void 0,\n  Yn = "function" === typeof Promise ? Promise : void 0,\n  qf = "function" === typeof queueMicrotask ? queueMicrotask : "undefined" !== typeof Yn ? function (a) {\n    return Yn.resolve(null).then(a).catch(Zn);\n  } : uk;\nfunction Zn(a) {\n  setTimeout(function () {\n    throw a;\n  });\n}\nfunction vj(a, b) {\n  var c = b,\n    d = 0;\n  do {\n    var e = c.nextSibling;\n    a.removeChild(c);\n    if (e && 8 === e.nodeType) if (c = e.data, "/$" === c) {\n      if (0 === d) {\n        a.removeChild(e);\n        wj(b);\n        return;\n      }\n      d--;\n    } else "$" !== c && "$?" !== c && "$!" !== c || d++;\n    c = e;\n  } while (c);\n  wj(b);\n}\nfunction bj(a) {\n  var b = a.nodeType;\n  if (9 === b) $n(a);else if (1 === b) switch (a.nodeName) {\n    case "HEAD":\n    case "HTML":\n    case "BODY":\n      $n(a);\n      break;\n    default:\n      a.textContent = "";\n  }\n}\nfunction $n(a) {\n  var b = a.firstChild;\n  b && 10 === b.nodeType && (b = b.nextSibling);\n  for (; b;) {\n    var c = b;\n    b = b.nextSibling;\n    switch (c.nodeName) {\n      case "HTML":\n      case "HEAD":\n      case "BODY":\n        $n(c);\n        Gb(c);\n        continue;\n      case "SCRIPT":\n      case "STYLE":\n        continue;\n      case "LINK":\n        if ("stylesheet" === c.rel.toLowerCase()) continue;\n    }\n    a.removeChild(c);\n  }\n}\nfunction xd(a, b, c, d) {\n  for (; 1 === a.nodeType;) {\n    var e = c;\n    if (a.nodeName.toLowerCase() !== b.toLowerCase()) {\n      if (!d && ("INPUT" !== a.nodeName || "hidden" !== a.type)) break;\n    } else if (!d) {\n      if ("input" === b && "hidden" === a.type) {\n        var f = null == e.name ? null : "" + e.name;\n        if ("hidden" === e.type && a.getAttribute("name") === f) return a;\n      } else return a;\n    } else if (!a[Fb]) switch (b) {\n      case "meta":\n        if (!a.hasAttribute("itemprop")) break;\n        return a;\n      case "link":\n        f = a.getAttribute("rel");\n        if ("stylesheet" === f && a.hasAttribute("data-precedence")) break;else if (f !== e.rel || a.getAttribute("href") !== (null == e.href ? null : e.href) || a.getAttribute("crossorigin") !== (null == e.crossOrigin ? null : e.crossOrigin) || a.getAttribute("title") !== (null == e.title ? null : e.title)) break;\n        return a;\n      case "style":\n        if (a.hasAttribute("data-precedence")) break;\n        return a;\n      case "script":\n        f = a.getAttribute("src");\n        if ((f !== (null == e.src ? null : e.src) || a.getAttribute("type") !== (null == e.type ? null : e.type) || a.getAttribute("crossorigin") !== (null == e.crossOrigin ? null : e.crossOrigin)) && f && a.hasAttribute("async") && !a.hasAttribute("itemprop")) break;\n        return a;\n      default:\n        return a;\n    }\n    a = Cd(a);\n    if (null === a) break;\n  }\n  return null;\n}\nfunction Ad(a, b, c) {\n  if ("" === b) return null;\n  for (; 3 !== a.nodeType;) {\n    if ((1 !== a.nodeType || "INPUT" !== a.nodeName || "hidden" !== a.type) && !c) return null;\n    a = Cd(a);\n    if (null === a) return null;\n  }\n  return a;\n}\nfunction yd(a) {\n  for (; null != a; a = a.nextSibling) {\n    var b = a.nodeType;\n    if (1 === b || 3 === b) break;\n    if (8 === b) {\n      b = a.data;\n      if ("$" === b || "$!" === b || "$?" === b || "F!" === b || "F" === b) break;\n      if ("/$" === b) return null;\n    }\n  }\n  return a;\n}\nfunction Cd(a) {\n  return yd(a.nextSibling);\n}\nfunction wi(a, b, c, d, e) {\n  a[xb] = e;\n  a[yb] = c;\n  d = 0 !== (e.mode & 1);\n  switch (b) {\n    case "dialog":\n      Y("cancel", a);\n      Y("close", a);\n      break;\n    case "iframe":\n    case "object":\n    case "embed":\n      Y("load", a);\n      break;\n    case "video":\n    case "audio":\n      for (e = 0; e < Kn.length; e++) Y(Kn[e], a);\n      break;\n    case "source":\n      Y("error", a);\n      break;\n    case "img":\n    case "image":\n    case "link":\n      Y("error", a);\n      Y("load", a);\n      break;\n    case "details":\n      Y("toggle", a);\n      break;\n    case "input":\n      Y("invalid", a);\n      qc(a, c.value, c.defaultValue, c.checked, c.defaultChecked, c.type, c.name, !0);\n      jc(a);\n      break;\n    case "select":\n      Y("invalid", a);\n      break;\n    case "textarea":\n      Y("invalid", a), uc(a, c.value, c.defaultValue, c.children), jc(a);\n  }\n  e = c.children;\n  "string" !== typeof e && "number" !== typeof e || a.textContent === "" + e || (!0 !== c.suppressHydrationWarning && Ai(a.textContent, e, d), d || "body" === b || (a.textContent = e));\n  null != c.onScroll && Y("scroll", a);\n  null != c.onScrollEnd && Y("scrollend", a);\n  null != c.onClick && (a.onclick = pj);\n}\nfunction Ib(a) {\n  a = a.previousSibling;\n  for (var b = 0; a;) {\n    if (8 === a.nodeType) {\n      var c = a.data;\n      if ("$" === c || "$!" === c || "$?" === c) {\n        if (0 === b) return a;\n        b--;\n      } else "/$" === c && b++;\n    }\n    a = a.previousSibling;\n  }\n  return null;\n}\nfunction xi(a, b, c) {\n  b = yi(c);\n  switch (a) {\n    case "html":\n      a = b.documentElement;\n      if (!a) throw Error(u(452));\n      return a;\n    case "head":\n      a = b.head;\n      if (!a) throw Error(u(453));\n      return a;\n    case "body":\n      a = b.body;\n      if (!a) throw Error(u(454));\n      return a;\n    default:\n      throw Error(u(451));\n  }\n}\nvar ao = new Map(),\n  bo = new Set();\nfunction Jj(a) {\n  return "function" === typeof a.getRootNode ? a.getRootNode() : a.ownerDocument;\n}\nvar ko = {\n  prefetchDNS: co,\n  preconnect: eo,\n  preload: fo,\n  preloadModule: go,\n  preinitStyle: ho,\n  preinitScript: io,\n  preinitModuleScript: jo\n};\nfunction lo(a, b, c) {\n  var d = document;\n  if ("string" === typeof b && b) {\n    var e = nc(b);\n    e = \'link[rel="\' + a + \'"][href="\' + e + \'"]\';\n    "string" === typeof c && (e += \'[crossorigin="\' + c + \'"]\');\n    bo.has(e) || (bo.add(e), a = {\n      rel: a,\n      crossOrigin: c,\n      href: b\n    }, null === d.querySelector(e) && (b = d.createElement("link"), zi(b, "link", a), Nb(b), d.head.appendChild(b)));\n  }\n}\nfunction co(a) {\n  lo("dns-prefetch", a, null);\n}\nfunction eo(a, b) {\n  lo("preconnect", a, b);\n}\nfunction fo(a, b, c) {\n  var d = document;\n  if (a && b && d) {\n    var e = \'link[rel="preload"][as="\' + nc(b) + \'"]\';\n    "image" === b ? c && c.imageSrcSet ? (e += \'[imagesrcset="\' + nc(c.imageSrcSet) + \'"]\', "string" === typeof c.imageSizes && (e += \'[imagesizes="\' + nc(c.imageSizes) + \'"]\')) : e += \'[href="\' + nc(a) + \'"]\' : e += \'[href="\' + nc(a) + \'"]\';\n    var f = e;\n    switch (b) {\n      case "style":\n        f = mo(a);\n        break;\n      case "script":\n        f = no(a);\n    }\n    ao.has(f) || (a = C({\n      rel: "preload",\n      href: "image" === b && c && c.imageSrcSet ? void 0 : a,\n      as: b\n    }, c), ao.set(f, a), null !== d.querySelector(e) || "style" === b && d.querySelector(oo(f)) || "script" === b && d.querySelector(po(f)) || (b = d.createElement("link"), zi(b, "link", a), Nb(b), d.head.appendChild(b)));\n  }\n}\nfunction go(a, b) {\n  var c = document;\n  if (a) {\n    var d = b && "string" === typeof b.as ? b.as : "script",\n      e = \'link[rel="modulepreload"][as="\' + nc(d) + \'"][href="\' + nc(a) + \'"]\',\n      f = e;\n    switch (d) {\n      case "audioworklet":\n      case "paintworklet":\n      case "serviceworker":\n      case "sharedworker":\n      case "worker":\n      case "script":\n        f = no(a);\n    }\n    if (!ao.has(f) && (a = C({\n      rel: "modulepreload",\n      href: a\n    }, b), ao.set(f, a), null === c.querySelector(e))) {\n      switch (d) {\n        case "audioworklet":\n        case "paintworklet":\n        case "serviceworker":\n        case "sharedworker":\n        case "worker":\n        case "script":\n          if (c.querySelector(po(f))) return;\n      }\n      d = c.createElement("link");\n      zi(d, "link", a);\n      Nb(d);\n      c.head.appendChild(d);\n    }\n  }\n}\nfunction ho(a, b, c) {\n  var d = document;\n  if (a) {\n    var e = Mb(d).hoistableStyles,\n      f = mo(a);\n    b = b || "default";\n    var g = e.get(f);\n    if (!g) {\n      var h = {\n        loading: 0,\n        preload: null\n      };\n      if (g = d.querySelector(oo(f))) h.loading = 5;else {\n        a = C({\n          rel: "stylesheet",\n          href: a,\n          "data-precedence": b\n        }, c);\n        (c = ao.get(f)) && qo(a, c);\n        var l = g = d.createElement("link");\n        Nb(l);\n        zi(l, "link", a);\n        l._p = new Promise(function (p, q) {\n          l.onload = p;\n          l.onerror = q;\n        });\n        l.addEventListener("load", function () {\n          h.loading |= 1;\n        });\n        l.addEventListener("error", function () {\n          h.loading |= 2;\n        });\n        h.loading |= 4;\n        ro(g, b, d);\n      }\n      g = {\n        type: "stylesheet",\n        instance: g,\n        count: 1,\n        state: h\n      };\n      e.set(f, g);\n    }\n  }\n}\nfunction io(a, b) {\n  var c = document;\n  if (a) {\n    var d = Mb(c).hoistableScripts,\n      e = no(a),\n      f = d.get(e);\n    f || (f = c.querySelector(po(e)), f || (a = C({\n      src: a,\n      async: !0\n    }, b), (b = ao.get(e)) && so(a, b), f = c.createElement("script"), Nb(f), zi(f, "link", a), c.head.appendChild(f)), f = {\n      type: "script",\n      instance: f,\n      count: 1,\n      state: null\n    }, d.set(e, f));\n  }\n}\nfunction jo(a, b) {\n  var c = document;\n  if (a) {\n    var d = Mb(c).hoistableScripts,\n      e = no(a),\n      f = d.get(e);\n    f || (f = c.querySelector(po(e)), f || (a = C({\n      src: a,\n      async: !0,\n      type: "module"\n    }, b), (b = ao.get(e)) && so(a, b), f = c.createElement("script"), Nb(f), zi(f, "link", a), c.head.appendChild(f)), f = {\n      type: "script",\n      instance: f,\n      count: 1,\n      state: null\n    }, d.set(e, f));\n  }\n}\nfunction Vk(a, b, c) {\n  b = (b = Ga.current) ? Jj(b) : null;\n  if (!b) throw Error(u(446));\n  switch (a) {\n    case "meta":\n    case "title":\n      return null;\n    case "style":\n      return "string" === typeof c.precedence && "string" === typeof c.href ? (c = mo(c.href), b = Mb(b).hoistableStyles, a = b.get(c), a || (a = {\n        type: "style",\n        instance: null,\n        count: 0,\n        state: null\n      }, b.set(c, a)), a) : {\n        type: "void",\n        instance: null,\n        count: 0,\n        state: null\n      };\n    case "link":\n      if ("stylesheet" === c.rel && "string" === typeof c.href && "string" === typeof c.precedence) {\n        a = mo(c.href);\n        var d = Mb(b).hoistableStyles,\n          e = d.get(a);\n        e || (b = b.ownerDocument || b, e = {\n          type: "stylesheet",\n          instance: null,\n          count: 0,\n          state: {\n            loading: 0,\n            preload: null\n          }\n        }, d.set(a, e), ao.has(a) || to(b, a, {\n          rel: "preload",\n          as: "style",\n          href: c.href,\n          crossOrigin: c.crossOrigin,\n          integrity: c.integrity,\n          media: c.media,\n          hrefLang: c.hrefLang,\n          referrerPolicy: c.referrerPolicy\n        }, e.state));\n        return e;\n      }\n      return null;\n    case "script":\n      return "string" === typeof c.src && !0 === c.async ? (c = no(c.src), b = Mb(b).hoistableScripts, a = b.get(c), a || (a = {\n        type: "script",\n        instance: null,\n        count: 0,\n        state: null\n      }, b.set(c, a)), a) : {\n        type: "void",\n        instance: null,\n        count: 0,\n        state: null\n      };\n    default:\n      throw Error(u(444, a));\n  }\n}\nfunction mo(a) {\n  return \'href="\' + nc(a) + \'"\';\n}\nfunction oo(a) {\n  return \'link[rel="stylesheet"][\' + a + "]";\n}\nfunction uo(a) {\n  return C({}, a, {\n    "data-precedence": a.precedence,\n    precedence: null\n  });\n}\nfunction to(a, b, c, d) {\n  ao.set(b, c);\n  a.querySelector(oo(b)) || (a.querySelector(\'link[rel="preload"][as="style"][\' + b + "]") ? d.loading = 1 : (b = a.createElement("link"), d.preload = b, b.addEventListener("load", function () {\n    return d.loading |= 1;\n  }), b.addEventListener("error", function () {\n    return d.loading |= 2;\n  }), zi(b, "link", c), Nb(b), a.head.appendChild(b)));\n}\nfunction no(a) {\n  return \'[src="\' + nc(a) + \'"]\';\n}\nfunction po(a) {\n  return "script[async]" + a;\n}\nfunction Gj(a, b, c) {\n  b.count++;\n  if (null === b.instance) switch (b.type) {\n    case "style":\n      var d = a.querySelector(\'style[data-href~="\' + nc(c.href) + \'"]\');\n      if (d) return b.instance = d, Nb(d), d;\n      var e = C({}, c, {\n        "data-href": c.href,\n        "data-precedence": c.precedence,\n        href: null,\n        precedence: null\n      });\n      d = (a.ownerDocument || a).createElement("style");\n      Nb(d);\n      zi(d, "style", e);\n      ro(d, c.precedence, a);\n      return b.instance = d;\n    case "stylesheet":\n      e = mo(c.href);\n      var f = a.querySelector(oo(e));\n      if (f) return b.state.loading |= 4, b.instance = f, Nb(f), f;\n      d = uo(c);\n      (e = ao.get(e)) && qo(d, e);\n      f = (a.ownerDocument || a).createElement("link");\n      Nb(f);\n      var g = f;\n      g._p = new Promise(function (h, l) {\n        g.onload = h;\n        g.onerror = l;\n      });\n      zi(f, "link", d);\n      b.state.loading |= 4;\n      ro(f, c.precedence, a);\n      return b.instance = f;\n    case "script":\n      f = no(c.src);\n      if (e = a.querySelector(po(f))) return b.instance = e, Nb(e), e;\n      d = c;\n      if (e = ao.get(f)) d = C({}, c), so(d, e);\n      a = a.ownerDocument || a;\n      e = a.createElement("script");\n      Nb(e);\n      zi(e, "link", d);\n      a.head.appendChild(e);\n      return b.instance = e;\n    case "void":\n      return null;\n    default:\n      throw Error(u(443, b.type));\n  } else "stylesheet" === b.type && 0 === (b.state.loading & 4) && (d = b.instance, b.state.loading |= 4, ro(d, c.precedence, a));\n  return b.instance;\n}\nfunction ro(a, b, c) {\n  for (var d = c.querySelectorAll(\'link[rel="stylesheet"][data-precedence],style[data-precedence]\'), e = d.length ? d[d.length - 1] : null, f = e, g = 0; g < d.length; g++) {\n    var h = d[g];\n    if (h.dataset.precedence === b) f = h;else if (f !== e) break;\n  }\n  f ? f.parentNode.insertBefore(a, f.nextSibling) : (b = 9 === c.nodeType ? c.head : c, b.insertBefore(a, b.firstChild));\n}\nfunction qo(a, b) {\n  null == a.crossOrigin && (a.crossOrigin = b.crossOrigin);\n  null == a.referrerPolicy && (a.referrerPolicy = b.referrerPolicy);\n  null == a.title && (a.title = b.title);\n}\nfunction so(a, b) {\n  null == a.crossOrigin && (a.crossOrigin = b.crossOrigin);\n  null == a.referrerPolicy && (a.referrerPolicy = b.referrerPolicy);\n  null == a.integrity && (a.integrity = b.integrity);\n}\nvar Ij = null;\nfunction Ej(a, b, c) {\n  if (null === Ij) {\n    var d = new Map();\n    var e = Ij = new Map();\n    e.set(c, d);\n  } else e = Ij, d = e.get(c), d || (d = new Map(), e.set(c, d));\n  if (d.has(a)) return d;\n  d.set(a, null);\n  c = c.getElementsByTagName(a);\n  for (e = 0; e < c.length; e++) {\n    var f = c[e];\n    if (!(f[Fb] || f[xb] || "link" === a && "stylesheet" === f.getAttribute("rel")) && "http://www.w3.org/2000/svg" !== f.namespaceURI) {\n      var g = f.getAttribute(b) || "";\n      g = a + g;\n      var h = d.get(g);\n      h ? h.push(f) : d.set(g, [f]);\n    }\n  }\n  return d;\n}\nfunction Fj(a, b, c) {\n  a = a.ownerDocument || a;\n  a.head.insertBefore(c, "title" === b ? a.querySelector("head > title") : null);\n}\nfunction Xk(a, b, c) {\n  if (1 === c || null != b.itemProp) return !1;\n  switch (a) {\n    case "meta":\n    case "title":\n      return !0;\n    case "style":\n      if ("string" !== typeof b.precedence || "string" !== typeof b.href || "" === b.href) break;\n      return !0;\n    case "link":\n      if ("string" !== typeof b.rel || "string" !== typeof b.href || "" === b.href || b.onLoad || b.onError) break;\n      switch (b.rel) {\n        case "stylesheet":\n          return a = b.disabled, "string" === typeof b.precedence && null == a;\n        default:\n          return !0;\n      }\n    case "script":\n      if (!0 === b.async && !b.onLoad && !b.onError && "string" === typeof b.src && b.src) return !0;\n  }\n  return !1;\n}\nvar wk = null;\nfunction xk() {}\nfunction Wj(a, b, c) {\n  if (null === wk) throw Error(u(475));\n  var d = wk;\n  if ("stylesheet" === b.type && ("string" !== typeof c.media || !1 !== matchMedia(c.media).matches) && 0 === (b.state.loading & 4)) {\n    if (null === b.instance) {\n      var e = mo(c.href),\n        f = a.querySelector(oo(e));\n      if (f) {\n        a = f._p;\n        null !== a && "object" === typeof a && "function" === typeof a.then && (d.count++, d = vo.bind(d), a.then(d, d));\n        b.state.loading |= 4;\n        b.instance = f;\n        Nb(f);\n        return;\n      }\n      f = a.ownerDocument || a;\n      c = uo(c);\n      (e = ao.get(e)) && qo(c, e);\n      f = f.createElement("link");\n      Nb(f);\n      var g = f;\n      g._p = new Promise(function (h, l) {\n        g.onload = h;\n        g.onerror = l;\n      });\n      zi(f, "link", c);\n      b.instance = f;\n    }\n    null === d.stylesheets && (d.stylesheets = new Map());\n    d.stylesheets.set(b, a);\n    (a = b.state.preload) && 0 === (b.state.loading & 3) && (d.count++, b = vo.bind(d), a.addEventListener("load", b), a.addEventListener("error", b));\n  }\n}\nfunction yk() {\n  if (null === wk) throw Error(u(475));\n  var a = wk;\n  a.stylesheets && 0 === a.count && wo(a, a.stylesheets);\n  return 0 < a.count ? function (b) {\n    var c = setTimeout(function () {\n      a.stylesheets && wo(a, a.stylesheets);\n      if (a.unsuspend) {\n        var d = a.unsuspend;\n        a.unsuspend = null;\n        d();\n      }\n    }, 6E4);\n    a.unsuspend = b;\n    return function () {\n      a.unsuspend = null;\n      clearTimeout(c);\n    };\n  } : null;\n}\nfunction vo() {\n  this.count--;\n  if (0 === this.count) if (this.stylesheets) wo(this, this.stylesheets);else if (this.unsuspend) {\n    var a = this.unsuspend;\n    this.unsuspend = null;\n    a();\n  }\n}\nvar xo = null;\nfunction wo(a, b) {\n  a.stylesheets = null;\n  null !== a.unsuspend && (a.count++, xo = new Map(), b.forEach(yo, a), xo = null, vo.call(a));\n}\nfunction yo(a, b) {\n  if (!(b.state.loading & 4)) {\n    var c = xo.get(a);\n    if (c) var d = c.get("last");else {\n      c = new Map();\n      xo.set(a, c);\n      for (var e = a.querySelectorAll("link[data-precedence],style[data-precedence]"), f = 0; f < e.length; f++) {\n        var g = e[f];\n        if ("link" === g.nodeName || "not all" !== g.getAttribute("media")) c.set("p" + g.dataset.precedence, g), d = g;\n      }\n      d && c.set("last", d);\n    }\n    e = b.instance;\n    g = e.getAttribute("data-precedence");\n    f = c.get("p" + g) || d;\n    f === d && c.set("last", e);\n    c.set(g, e);\n    this.count++;\n    d = vo.bind(this);\n    e.addEventListener("load", d);\n    e.addEventListener("error", d);\n    f ? f.parentNode.insertBefore(e, f.nextSibling) : (a = 9 === a.nodeType ? a.head : a, a.insertBefore(e, a.firstChild));\n    b.state.loading |= 4;\n  }\n}\nvar zo = ca.Dispatcher;\n"undefined" !== typeof document && (zo.current = ko);\nvar Ao = "function" === typeof reportError ? reportError : function (a) {\n  console.error(a);\n};\nfunction Bo(a) {\n  this._internalRoot = a;\n}\nCo.prototype.render = Bo.prototype.render = function (a) {\n  var b = this._internalRoot;\n  if (null === b) throw Error(u(409));\n  cl(a, b, null, null);\n};\nCo.prototype.unmount = Bo.prototype.unmount = function () {\n  var a = this._internalRoot;\n  if (null !== a) {\n    this._internalRoot = null;\n    var b = a.containerInfo;\n    Ak(function () {\n      cl(null, a, null, null);\n    });\n    b[zb] = null;\n  }\n};\nfunction Co(a) {\n  this._internalRoot = a;\n}\nCo.prototype.unstable_scheduleHydration = function (a) {\n  if (a) {\n    var b = F;\n    a = {\n      blockedOn: null,\n      target: a,\n      priority: b\n    };\n    for (var c = 0; c < gm.length && 0 !== b && b < gm[c].priority; c++);\n    gm.splice(c, 0, a);\n    0 === c && lm(a);\n  }\n};\nfunction Do(a) {\n  return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType);\n}\nfunction Eo(a) {\n  return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType && (8 !== a.nodeType || " react-mount-point-unstable " !== a.nodeValue));\n}\nfunction Fo() {}\nfunction Go(a, b, c, d, e) {\n  if (e) {\n    if ("function" === typeof d) {\n      var f = d;\n      d = function () {\n        var p = dl(g);\n        f.call(p);\n      };\n    }\n    var g = bl(b, d, a, 0, null, !1, !1, "", Fo, null, null);\n    a._reactRootContainer = g;\n    a[zb] = g.current;\n    Bi(8 === a.nodeType ? a.parentNode : a);\n    Ak();\n    return g;\n  }\n  bj(a);\n  if ("function" === typeof d) {\n    var h = d;\n    d = function () {\n      var p = dl(l);\n      h.call(p);\n    };\n  }\n  var l = Zk(a, 0, !1, null, null, !1, !1, "", Fo, null, null);\n  a._reactRootContainer = l;\n  a[zb] = l.current;\n  Bi(8 === a.nodeType ? a.parentNode : a);\n  Ak(function () {\n    cl(b, l, c, d);\n  });\n  return l;\n}\nfunction Ho(a, b, c, d, e) {\n  var f = c._reactRootContainer;\n  if (f) {\n    var g = f;\n    if ("function" === typeof e) {\n      var h = e;\n      e = function () {\n        var l = dl(g);\n        h.call(l);\n      };\n    }\n    cl(b, g, a, e);\n  } else g = Go(c, b, a, e, d);\n  return dl(g);\n}\nfunction Io(a, b) {\n  if ("font" === a) return "";\n  if ("string" === typeof b) return "use-credentials" === b ? b : "";\n}\nvar Jo = ca.Dispatcher;\nca.Events = [Jb, Kb, Lb, Kc, Lc, zk];\nvar Ko = {\n  findFiberByHostInstance: Hb,\n  bundleType: 0,\n  version: "18.3.0-canary-c5b937576-20231219",\n  rendererPackageName: "react-dom"\n};\nvar Lo = {\n  bundleType: Ko.bundleType,\n  version: Ko.version,\n  rendererPackageName: Ko.rendererPackageName,\n  rendererConfig: Ko.rendererConfig,\n  overrideHookState: null,\n  overrideHookStateDeletePath: null,\n  overrideHookStateRenamePath: null,\n  overrideProps: null,\n  overridePropsDeletePath: null,\n  overridePropsRenamePath: null,\n  setErrorHandler: null,\n  setSuspenseHandler: null,\n  scheduleUpdate: null,\n  currentDispatcherRef: da.ReactCurrentDispatcher,\n  findHostInstanceByFiber: function (a) {\n    a = Qc(a);\n    return null === a ? null : a.stateNode;\n  },\n  findFiberByHostInstance: Ko.findFiberByHostInstance || il,\n  findHostInstancesForRefresh: null,\n  scheduleRefresh: null,\n  scheduleRoot: null,\n  setRefreshHandler: null,\n  getCurrentFiber: null,\n  reconcilerVersion: "18.3.0-canary-c5b937576-20231219"\n};\nif ("undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {\n  var Mo = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n  if (!Mo.isDisabled && Mo.supportsFiber) try {\n    $a = Mo.inject(Lo), ab = Mo;\n  } catch (a) {}\n}\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ca;\nexports.createPortal = function (a, b) {\n  var c = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;\n  if (!Do(b)) throw Error(u(200));\n  return $k(a, b, null, c);\n};\nexports.createRoot = function (a, b) {\n  if (!Do(a)) throw Error(u(299));\n  var c = !1,\n    d = "",\n    e = Ao,\n    f = null;\n  null !== b && void 0 !== b && (!0 === b.unstable_strictMode && (c = !0), void 0 !== b.identifierPrefix && (d = b.identifierPrefix), void 0 !== b.onRecoverableError && (e = b.onRecoverableError), void 0 !== b.unstable_transitionCallbacks && (f = b.unstable_transitionCallbacks));\n  b = Zk(a, 1, !1, null, null, c, !1, d, e, f, null);\n  a[zb] = b.current;\n  zo.current = ko;\n  Bi(8 === a.nodeType ? a.parentNode : a);\n  return new Bo(b);\n};\nexports.findDOMNode = function (a) {\n  if (null == a) return null;\n  if (1 === a.nodeType) return a;\n  var b = a._reactInternals;\n  if (void 0 === b) {\n    if ("function" === typeof a.render) throw Error(u(188));\n    a = Object.keys(a).join(",");\n    throw Error(u(268, a));\n  }\n  a = Qc(b);\n  a = null === a ? null : a.stateNode;\n  return a;\n};\nexports.flushSync = function (a) {\n  return Ak(a);\n};\nexports.hydrate = function (a, b, c) {\n  if (!Eo(b)) throw Error(u(200));\n  return Ho(null, a, b, !0, c);\n};\nexports.hydrateRoot = function (a, b, c) {\n  if (!Do(a)) throw Error(u(405));\n  var d = !1,\n    e = "",\n    f = Ao,\n    g = null,\n    h = null;\n  null !== c && void 0 !== c && (!0 === c.unstable_strictMode && (d = !0), void 0 !== c.identifierPrefix && (e = c.identifierPrefix), void 0 !== c.onRecoverableError && (f = c.onRecoverableError), void 0 !== c.unstable_transitionCallbacks && (g = c.unstable_transitionCallbacks), void 0 !== c.formState && (h = c.formState));\n  b = bl(b, null, a, 1, null != c ? c : null, d, !1, e, f, g, h);\n  a[zb] = b.current;\n  zo.current = ko;\n  Bi(a);\n  return new Co(b);\n};\nexports.preconnect = function (a, b) {\n  var c = Jo.current;\n  c && "string" === typeof a && (b ? (b = b.crossOrigin, b = "string" === typeof b ? "use-credentials" === b ? b : "" : void 0) : b = null, c.preconnect(a, b));\n};\nexports.prefetchDNS = function (a) {\n  var b = Jo.current;\n  b && "string" === typeof a && b.prefetchDNS(a);\n};\nexports.preinit = function (a, b) {\n  var c = Jo.current;\n  if (c && "string" === typeof a && b && "string" === typeof b.as) {\n    var d = b.as,\n      e = Io(d, b.crossOrigin),\n      f = "string" === typeof b.integrity ? b.integrity : void 0,\n      g = "string" === typeof b.fetchPriority ? b.fetchPriority : void 0;\n    "style" === d ? c.preinitStyle(a, "string" === typeof b.precedence ? b.precedence : void 0, {\n      crossOrigin: e,\n      integrity: f,\n      fetchPriority: g\n    }) : "script" === d && c.preinitScript(a, {\n      crossOrigin: e,\n      integrity: f,\n      fetchPriority: g,\n      nonce: "string" === typeof b.nonce ? b.nonce : void 0\n    });\n  }\n};\nexports.preinitModule = function (a, b) {\n  var c = Jo.current;\n  if (c && "string" === typeof a) if ("object" === typeof b && null !== b) {\n    if (null == b.as || "script" === b.as) {\n      var d = Io(b.as, b.crossOrigin);\n      c.preinitModuleScript(a, {\n        crossOrigin: d,\n        integrity: "string" === typeof b.integrity ? b.integrity : void 0,\n        nonce: "string" === typeof b.nonce ? b.nonce : void 0\n      });\n    }\n  } else null == b && c.preinitModuleScript(a);\n};\nexports.preload = function (a, b) {\n  var c = Jo.current;\n  if (c && "string" === typeof a && "object" === typeof b && null !== b && "string" === typeof b.as) {\n    var d = b.as,\n      e = Io(d, b.crossOrigin);\n    c.preload(a, d, {\n      crossOrigin: e,\n      integrity: "string" === typeof b.integrity ? b.integrity : void 0,\n      nonce: "string" === typeof b.nonce ? b.nonce : void 0,\n      type: "string" === typeof b.type ? b.type : void 0,\n      fetchPriority: "string" === typeof b.fetchPriority ? b.fetchPriority : void 0,\n      referrerPolicy: "string" === typeof b.referrerPolicy ? b.referrerPolicy : void 0,\n      imageSrcSet: "string" === typeof b.imageSrcSet ? b.imageSrcSet : void 0,\n      imageSizes: "string" === typeof b.imageSizes ? b.imageSizes : void 0\n    });\n  }\n};\nexports.preloadModule = function (a, b) {\n  var c = Jo.current;\n  if (c && "string" === typeof a) if (b) {\n    var d = Io(b.as, b.crossOrigin);\n    c.preloadModule(a, {\n      as: "string" === typeof b.as && "script" !== b.as ? b.as : void 0,\n      crossOrigin: d,\n      integrity: "string" === typeof b.integrity ? b.integrity : void 0\n    });\n  } else c.preloadModule(a);\n};\nexports.render = function (a, b, c) {\n  if (!Eo(b)) throw Error(u(200));\n  return Ho(null, a, b, !1, c);\n};\nexports.unmountComponentAtNode = function (a) {\n  if (!Eo(a)) throw Error(u(40));\n  return a._reactRootContainer ? (Ak(function () {\n    Ho(null, null, a, !1, function () {\n      a._reactRootContainer = null;\n      a[zb] = null;\n    });\n  }), !0) : !1;\n};\nexports.unstable_batchedUpdates = zk;\nexports.unstable_renderSubtreeIntoContainer = function (a, b, c, d) {\n  if (!Eo(c)) throw Error(u(200));\n  if (null == a || void 0 === a._reactInternals) throw Error(u(38));\n  return Ho(a, b, c, !1, d);\n};\nexports.useFormState = function (a, b, c) {\n  return ea.current.useFormState(a, b, c);\n};\nexports.useFormStatus = function () {\n  return ea.current.useHostTransitionStatus();\n};\nexports.version = "18.3.0-canary-c5b937576-20231219";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///93748\n')},3897:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval("\n\nvar m = __webpack_require__(46116);\nif (true) {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else { var i; }//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzg5Ny5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250Ly4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9jbGllbnQuanM/YTgyOSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBtID0gcmVxdWlyZSgncmVhY3QtZG9tJyk7XG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBleHBvcnRzLmNyZWF0ZVJvb3QgPSBtLmNyZWF0ZVJvb3Q7XG4gIGV4cG9ydHMuaHlkcmF0ZVJvb3QgPSBtLmh5ZHJhdGVSb290O1xufSBlbHNlIHtcbiAgdmFyIGkgPSBtLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEO1xuICBleHBvcnRzLmNyZWF0ZVJvb3QgPSBmdW5jdGlvbiAoYywgbykge1xuICAgIGkudXNpbmdDbGllbnRFbnRyeVBvaW50ID0gdHJ1ZTtcbiAgICB0cnkge1xuICAgICAgcmV0dXJuIG0uY3JlYXRlUm9vdChjLCBvKTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgaS51c2luZ0NsaWVudEVudHJ5UG9pbnQgPSBmYWxzZTtcbiAgICB9XG4gIH07XG4gIGV4cG9ydHMuaHlkcmF0ZVJvb3QgPSBmdW5jdGlvbiAoYywgaCwgbykge1xuICAgIGkudXNpbmdDbGllbnRFbnRyeVBvaW50ID0gdHJ1ZTtcbiAgICB0cnkge1xuICAgICAgcmV0dXJuIG0uaHlkcmF0ZVJvb3QoYywgaCwgbyk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGkudXNpbmdDbGllbnRFbnRyeVBvaW50ID0gZmFsc2U7XG4gICAgfVxuICB9O1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///3897\n")},46116:(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval("\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') {\n    return;\n  }\n  if (false) {}\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\nif (true) {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = __webpack_require__(93748);\n} else {}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDYxMTYuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250Ly4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9pbmRleC5qcz8wMjQyIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gY2hlY2tEQ0UoKSB7XG4gIC8qIGdsb2JhbCBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gKi9cbiAgaWYgKHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gPT09ICd1bmRlZmluZWQnIHx8IHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UgIT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyBUaGlzIGJyYW5jaCBpcyB1bnJlYWNoYWJsZSBiZWNhdXNlIHRoaXMgZnVuY3Rpb24gaXMgb25seSBjYWxsZWRcbiAgICAvLyBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGNvbmRpdGlvbiBpcyB0cnVlIG9ubHkgaW4gZGV2ZWxvcG1lbnQuXG4gICAgLy8gVGhlcmVmb3JlIGlmIHRoZSBicmFuY2ggaXMgc3RpbGwgaGVyZSwgZGVhZCBjb2RlIGVsaW1pbmF0aW9uIHdhc24ndFxuICAgIC8vIHByb3Blcmx5IGFwcGxpZWQuXG4gICAgLy8gRG9uJ3QgY2hhbmdlIHRoZSBtZXNzYWdlLiBSZWFjdCBEZXZUb29scyByZWxpZXMgb24gaXQuIEFsc28gbWFrZSBzdXJlXG4gICAgLy8gdGhpcyBtZXNzYWdlIGRvZXNuJ3Qgb2NjdXIgZWxzZXdoZXJlIGluIHRoaXMgZnVuY3Rpb24sIG9yIGl0IHdpbGwgY2F1c2VcbiAgICAvLyBhIGZhbHNlIHBvc2l0aXZlLlxuICAgIHRocm93IG5ldyBFcnJvcignXl9eJyk7XG4gIH1cbiAgdHJ5IHtcbiAgICAvLyBWZXJpZnkgdGhhdCB0aGUgY29kZSBhYm92ZSBoYXMgYmVlbiBkZWFkIGNvZGUgZWxpbWluYXRlZCAoRENFJ2QpLlxuICAgIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRShjaGVja0RDRSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIC8vIERldlRvb2xzIHNob3VsZG4ndCBjcmFzaCBSZWFjdCwgbm8gbWF0dGVyIHdoYXQuXG4gICAgLy8gV2Ugc2hvdWxkIHN0aWxsIHJlcG9ydCBpbiBjYXNlIHdlIGJyZWFrIHRoaXMgY29kZS5cbiAgICBjb25zb2xlLmVycm9yKGVycik7XG4gIH1cbn1cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIC8vIERDRSBjaGVjayBzaG91bGQgaGFwcGVuIGJlZm9yZSBSZWFjdERPTSBidW5kbGUgZXhlY3V0ZXMgc28gdGhhdFxuICAvLyBEZXZUb29scyBjYW4gcmVwb3J0IGJhZCBtaW5pZmljYXRpb24gZHVyaW5nIGluamVjdGlvbi5cbiAgY2hlY2tEQ0UoKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLmRldmVsb3BtZW50LmpzJyk7XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///46116\n")},75703:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval("var __webpack_unused_export__;\n\n\nvar l, s;\nif (true) {\n  l = __webpack_require__(9748);\n  s = __webpack_require__(94262);\n} else {}\n__webpack_unused_export__ = l.version;\n__webpack_unused_export__ = l.renderToString;\n__webpack_unused_export__ = l.renderToStaticMarkup;\n__webpack_unused_export__ = l.renderToNodeStream;\n__webpack_unused_export__ = l.renderToStaticNodeStream;\n__webpack_unused_export__ = s.renderToReadableStream;\nif (s.resume) {\n  __webpack_unused_export__ = s.resume;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzU3MDMuanMiLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnQvLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL3NlcnZlci5icm93c2VyLmpzP2YwMDkiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgbCwgcztcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGwgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20tc2VydmVyLWxlZ2FjeS5icm93c2VyLnByb2R1Y3Rpb24ubWluLmpzJyk7XG4gIHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20tc2VydmVyLmJyb3dzZXIucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIGwgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20tc2VydmVyLWxlZ2FjeS5icm93c2VyLmRldmVsb3BtZW50LmpzJyk7XG4gIHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20tc2VydmVyLmJyb3dzZXIuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbmV4cG9ydHMudmVyc2lvbiA9IGwudmVyc2lvbjtcbmV4cG9ydHMucmVuZGVyVG9TdHJpbmcgPSBsLnJlbmRlclRvU3RyaW5nO1xuZXhwb3J0cy5yZW5kZXJUb1N0YXRpY01hcmt1cCA9IGwucmVuZGVyVG9TdGF0aWNNYXJrdXA7XG5leHBvcnRzLnJlbmRlclRvTm9kZVN0cmVhbSA9IGwucmVuZGVyVG9Ob2RlU3RyZWFtO1xuZXhwb3J0cy5yZW5kZXJUb1N0YXRpY05vZGVTdHJlYW0gPSBsLnJlbmRlclRvU3RhdGljTm9kZVN0cmVhbTtcbmV4cG9ydHMucmVuZGVyVG9SZWFkYWJsZVN0cmVhbSA9IHMucmVuZGVyVG9SZWFkYWJsZVN0cmVhbTtcbmlmIChzLnJlc3VtZSkge1xuICBleHBvcnRzLnJlc3VtZSA9IHMucmVzdW1lO1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///75703\n")},4126:module=>{eval("/* global Map:readonly, Set:readonly, ArrayBuffer:readonly */\n\nvar hasElementType = typeof Element !== 'undefined';\nvar hasMap = typeof Map === 'function';\nvar hasSet = typeof Set === 'function';\nvar hasArrayBuffer = typeof ArrayBuffer === 'function' && !!ArrayBuffer.isView;\n\n// Note: We **don't** need `envHasBigInt64Array` in fde es6/index.js\n\nfunction equal(a, b) {\n  // START: fast-deep-equal es6/index.js 3.1.3\n  if (a === b) return true;\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;) if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    // START: Modifications:\n    // 1. Extra `has<Type> &&` helpers in initial condition allow es6 code\n    //    to co-exist with es5.\n    // 2. Replace `for of` with es5 compliant iteration using `for`.\n    //    Basically, take:\n    //\n    //    ```js\n    //    for (i of a.entries())\n    //      if (!b.has(i[0])) return false;\n    //    ```\n    //\n    //    ... and convert to:\n    //\n    //    ```js\n    //    it = a.entries();\n    //    while (!(i = it.next()).done)\n    //      if (!b.has(i.value[0])) return false;\n    //    ```\n    //\n    //    **Note**: `i` access switches to `i.value`.\n    var it;\n    if (hasMap && a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n      while (!(i = it.next()).done) if (!b.has(i.value[0])) return false;\n      it = a.entries();\n      while (!(i = it.next()).done) if (!equal(i.value[1], b.get(i.value[0]))) return false;\n      return true;\n    }\n    if (hasSet && a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n      while (!(i = it.next()).done) if (!b.has(i.value[0])) return false;\n      return true;\n    }\n    // END: Modifications\n\n    if (hasArrayBuffer && ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;) if (a[i] !== b[i]) return false;\n      return true;\n    }\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    // START: Modifications:\n    // Apply guards for `Object.create(null)` handling. See:\n    // - https://github.com/FormidableLabs/react-fast-compare/issues/64\n    // - https://github.com/epoberezkin/fast-deep-equal/issues/49\n    if (a.valueOf !== Object.prototype.valueOf && typeof a.valueOf === 'function' && typeof b.valueOf === 'function') return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString && typeof a.toString === 'function' && typeof b.toString === 'function') return a.toString() === b.toString();\n    // END: Modifications\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n    for (i = length; i-- !== 0;) if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n    // END: fast-deep-equal\n\n    // START: react-fast-compare\n    // custom handling for DOM elements\n    if (hasElementType && a instanceof Element) return false;\n\n    // custom handling for React/Preact\n    for (i = length; i-- !== 0;) {\n      if ((keys[i] === '_owner' || keys[i] === '__v' || keys[i] === '__o') && a.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner\n        // Preact-specific: avoid traversing Preact elements' __v and __o\n        //    __v = $_original / $_vnode\n        //    __o = $_owner\n        // These properties contain circular references and are not needed when\n        // comparing the actual elements (and not their owners)\n        // .$$typeof and ._store on just reasonable markers of elements\n\n        continue;\n      }\n\n      // all other properties should be traversed as usual\n      if (!equal(a[keys[i]], b[keys[i]])) return false;\n    }\n    // END: react-fast-compare\n\n    // START: fast-deep-equal\n    return true;\n  }\n  return a !== a && b !== b;\n}\n// end fast-deep-equal\n\nmodule.exports = function isEqual(a, b) {\n  try {\n    return equal(a, b);\n  } catch (error) {\n    if ((error.message || '').match(/stack|recursion/i)) {\n      // warn on circular references, don't crash\n      // browsers give this different errors name and messages:\n      // chrome/safari: \"RangeError\", \"Maximum call stack size exceeded\"\n      // firefox: \"InternalError\", too much recursion\"\n      // edge: \"Error\", \"Out of stack space\"\n      console.warn('react-fast-compare cannot handle circular refs');\n      return false;\n    }\n    // some other error. we should definitely know about these\n    throw error;\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDEyNi5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250Ly4vbm9kZV9tb2R1bGVzL3JlYWN0LWZhc3QtY29tcGFyZS9pbmRleC5qcz83NjgxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGdsb2JhbCBNYXA6cmVhZG9ubHksIFNldDpyZWFkb25seSwgQXJyYXlCdWZmZXI6cmVhZG9ubHkgKi9cblxudmFyIGhhc0VsZW1lbnRUeXBlID0gdHlwZW9mIEVsZW1lbnQgIT09ICd1bmRlZmluZWQnO1xudmFyIGhhc01hcCA9IHR5cGVvZiBNYXAgPT09ICdmdW5jdGlvbic7XG52YXIgaGFzU2V0ID0gdHlwZW9mIFNldCA9PT0gJ2Z1bmN0aW9uJztcbnZhciBoYXNBcnJheUJ1ZmZlciA9IHR5cGVvZiBBcnJheUJ1ZmZlciA9PT0gJ2Z1bmN0aW9uJyAmJiAhIUFycmF5QnVmZmVyLmlzVmlldztcblxuLy8gTm90ZTogV2UgKipkb24ndCoqIG5lZWQgYGVudkhhc0JpZ0ludDY0QXJyYXlgIGluIGZkZSBlczYvaW5kZXguanNcblxuZnVuY3Rpb24gZXF1YWwoYSwgYikge1xuICAvLyBTVEFSVDogZmFzdC1kZWVwLWVxdWFsIGVzNi9pbmRleC5qcyAzLjEuM1xuICBpZiAoYSA9PT0gYikgcmV0dXJuIHRydWU7XG4gIGlmIChhICYmIGIgJiYgdHlwZW9mIGEgPT0gJ29iamVjdCcgJiYgdHlwZW9mIGIgPT0gJ29iamVjdCcpIHtcbiAgICBpZiAoYS5jb25zdHJ1Y3RvciAhPT0gYi5jb25zdHJ1Y3RvcikgcmV0dXJuIGZhbHNlO1xuICAgIHZhciBsZW5ndGgsIGksIGtleXM7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoYSkpIHtcbiAgICAgIGxlbmd0aCA9IGEubGVuZ3RoO1xuICAgICAgaWYgKGxlbmd0aCAhPSBiLmxlbmd0aCkgcmV0dXJuIGZhbHNlO1xuICAgICAgZm9yIChpID0gbGVuZ3RoOyBpLS0gIT09IDA7KSBpZiAoIWVxdWFsKGFbaV0sIGJbaV0pKSByZXR1cm4gZmFsc2U7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICAvLyBTVEFSVDogTW9kaWZpY2F0aW9uczpcbiAgICAvLyAxLiBFeHRyYSBgaGFzPFR5cGU+ICYmYCBoZWxwZXJzIGluIGluaXRpYWwgY29uZGl0aW9uIGFsbG93IGVzNiBjb2RlXG4gICAgLy8gICAgdG8gY28tZXhpc3Qgd2l0aCBlczUuXG4gICAgLy8gMi4gUmVwbGFjZSBgZm9yIG9mYCB3aXRoIGVzNSBjb21wbGlhbnQgaXRlcmF0aW9uIHVzaW5nIGBmb3JgLlxuICAgIC8vICAgIEJhc2ljYWxseSwgdGFrZTpcbiAgICAvL1xuICAgIC8vICAgIGBgYGpzXG4gICAgLy8gICAgZm9yIChpIG9mIGEuZW50cmllcygpKVxuICAgIC8vICAgICAgaWYgKCFiLmhhcyhpWzBdKSkgcmV0dXJuIGZhbHNlO1xuICAgIC8vICAgIGBgYFxuICAgIC8vXG4gICAgLy8gICAgLi4uIGFuZCBjb252ZXJ0IHRvOlxuICAgIC8vXG4gICAgLy8gICAgYGBganNcbiAgICAvLyAgICBpdCA9IGEuZW50cmllcygpO1xuICAgIC8vICAgIHdoaWxlICghKGkgPSBpdC5uZXh0KCkpLmRvbmUpXG4gICAgLy8gICAgICBpZiAoIWIuaGFzKGkudmFsdWVbMF0pKSByZXR1cm4gZmFsc2U7XG4gICAgLy8gICAgYGBgXG4gICAgLy9cbiAgICAvLyAgICAqKk5vdGUqKjogYGlgIGFjY2VzcyBzd2l0Y2hlcyB0byBgaS52YWx1ZWAuXG4gICAgdmFyIGl0O1xuICAgIGlmIChoYXNNYXAgJiYgYSBpbnN0YW5jZW9mIE1hcCAmJiBiIGluc3RhbmNlb2YgTWFwKSB7XG4gICAgICBpZiAoYS5zaXplICE9PSBiLnNpemUpIHJldHVybiBmYWxzZTtcbiAgICAgIGl0ID0gYS5lbnRyaWVzKCk7XG4gICAgICB3aGlsZSAoIShpID0gaXQubmV4dCgpKS5kb25lKSBpZiAoIWIuaGFzKGkudmFsdWVbMF0pKSByZXR1cm4gZmFsc2U7XG4gICAgICBpdCA9IGEuZW50cmllcygpO1xuICAgICAgd2hpbGUgKCEoaSA9IGl0Lm5leHQoKSkuZG9uZSkgaWYgKCFlcXVhbChpLnZhbHVlWzFdLCBiLmdldChpLnZhbHVlWzBdKSkpIHJldHVybiBmYWxzZTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBpZiAoaGFzU2V0ICYmIGEgaW5zdGFuY2VvZiBTZXQgJiYgYiBpbnN0YW5jZW9mIFNldCkge1xuICAgICAgaWYgKGEuc2l6ZSAhPT0gYi5zaXplKSByZXR1cm4gZmFsc2U7XG4gICAgICBpdCA9IGEuZW50cmllcygpO1xuICAgICAgd2hpbGUgKCEoaSA9IGl0Lm5leHQoKSkuZG9uZSkgaWYgKCFiLmhhcyhpLnZhbHVlWzBdKSkgcmV0dXJuIGZhbHNlO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIC8vIEVORDogTW9kaWZpY2F0aW9uc1xuXG4gICAgaWYgKGhhc0FycmF5QnVmZmVyICYmIEFycmF5QnVmZmVyLmlzVmlldyhhKSAmJiBBcnJheUJ1ZmZlci5pc1ZpZXcoYikpIHtcbiAgICAgIGxlbmd0aCA9IGEubGVuZ3RoO1xuICAgICAgaWYgKGxlbmd0aCAhPSBiLmxlbmd0aCkgcmV0dXJuIGZhbHNlO1xuICAgICAgZm9yIChpID0gbGVuZ3RoOyBpLS0gIT09IDA7KSBpZiAoYVtpXSAhPT0gYltpXSkgcmV0dXJuIGZhbHNlO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGlmIChhLmNvbnN0cnVjdG9yID09PSBSZWdFeHApIHJldHVybiBhLnNvdXJjZSA9PT0gYi5zb3VyY2UgJiYgYS5mbGFncyA9PT0gYi5mbGFncztcbiAgICAvLyBTVEFSVDogTW9kaWZpY2F0aW9uczpcbiAgICAvLyBBcHBseSBndWFyZHMgZm9yIGBPYmplY3QuY3JlYXRlKG51bGwpYCBoYW5kbGluZy4gU2VlOlxuICAgIC8vIC0gaHR0cHM6Ly9naXRodWIuY29tL0Zvcm1pZGFibGVMYWJzL3JlYWN0LWZhc3QtY29tcGFyZS9pc3N1ZXMvNjRcbiAgICAvLyAtIGh0dHBzOi8vZ2l0aHViLmNvbS9lcG9iZXJlemtpbi9mYXN0LWRlZXAtZXF1YWwvaXNzdWVzLzQ5XG4gICAgaWYgKGEudmFsdWVPZiAhPT0gT2JqZWN0LnByb3RvdHlwZS52YWx1ZU9mICYmIHR5cGVvZiBhLnZhbHVlT2YgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIGIudmFsdWVPZiA9PT0gJ2Z1bmN0aW9uJykgcmV0dXJuIGEudmFsdWVPZigpID09PSBiLnZhbHVlT2YoKTtcbiAgICBpZiAoYS50b1N0cmluZyAhPT0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZyAmJiB0eXBlb2YgYS50b1N0cmluZyA9PT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgYi50b1N0cmluZyA9PT0gJ2Z1bmN0aW9uJykgcmV0dXJuIGEudG9TdHJpbmcoKSA9PT0gYi50b1N0cmluZygpO1xuICAgIC8vIEVORDogTW9kaWZpY2F0aW9uc1xuXG4gICAga2V5cyA9IE9iamVjdC5rZXlzKGEpO1xuICAgIGxlbmd0aCA9IGtleXMubGVuZ3RoO1xuICAgIGlmIChsZW5ndGggIT09IE9iamVjdC5rZXlzKGIpLmxlbmd0aCkgcmV0dXJuIGZhbHNlO1xuICAgIGZvciAoaSA9IGxlbmd0aDsgaS0tICE9PSAwOykgaWYgKCFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYiwga2V5c1tpXSkpIHJldHVybiBmYWxzZTtcbiAgICAvLyBFTkQ6IGZhc3QtZGVlcC1lcXVhbFxuXG4gICAgLy8gU1RBUlQ6IHJlYWN0LWZhc3QtY29tcGFyZVxuICAgIC8vIGN1c3RvbSBoYW5kbGluZyBmb3IgRE9NIGVsZW1lbnRzXG4gICAgaWYgKGhhc0VsZW1lbnRUeXBlICYmIGEgaW5zdGFuY2VvZiBFbGVtZW50KSByZXR1cm4gZmFsc2U7XG5cbiAgICAvLyBjdXN0b20gaGFuZGxpbmcgZm9yIFJlYWN0L1ByZWFjdFxuICAgIGZvciAoaSA9IGxlbmd0aDsgaS0tICE9PSAwOykge1xuICAgICAgaWYgKChrZXlzW2ldID09PSAnX293bmVyJyB8fCBrZXlzW2ldID09PSAnX192JyB8fCBrZXlzW2ldID09PSAnX19vJykgJiYgYS4kJHR5cGVvZikge1xuICAgICAgICAvLyBSZWFjdC1zcGVjaWZpYzogYXZvaWQgdHJhdmVyc2luZyBSZWFjdCBlbGVtZW50cycgX293bmVyXG4gICAgICAgIC8vIFByZWFjdC1zcGVjaWZpYzogYXZvaWQgdHJhdmVyc2luZyBQcmVhY3QgZWxlbWVudHMnIF9fdiBhbmQgX19vXG4gICAgICAgIC8vICAgIF9fdiA9ICRfb3JpZ2luYWwgLyAkX3Zub2RlXG4gICAgICAgIC8vICAgIF9fbyA9ICRfb3duZXJcbiAgICAgICAgLy8gVGhlc2UgcHJvcGVydGllcyBjb250YWluIGNpcmN1bGFyIHJlZmVyZW5jZXMgYW5kIGFyZSBub3QgbmVlZGVkIHdoZW5cbiAgICAgICAgLy8gY29tcGFyaW5nIHRoZSBhY3R1YWwgZWxlbWVudHMgKGFuZCBub3QgdGhlaXIgb3duZXJzKVxuICAgICAgICAvLyAuJCR0eXBlb2YgYW5kIC5fc3RvcmUgb24ganVzdCByZWFzb25hYmxlIG1hcmtlcnMgb2YgZWxlbWVudHNcblxuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgLy8gYWxsIG90aGVyIHByb3BlcnRpZXMgc2hvdWxkIGJlIHRyYXZlcnNlZCBhcyB1c3VhbFxuICAgICAgaWYgKCFlcXVhbChhW2tleXNbaV1dLCBiW2tleXNbaV1dKSkgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICAvLyBFTkQ6IHJlYWN0LWZhc3QtY29tcGFyZVxuXG4gICAgLy8gU1RBUlQ6IGZhc3QtZGVlcC1lcXVhbFxuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIHJldHVybiBhICE9PSBhICYmIGIgIT09IGI7XG59XG4vLyBlbmQgZmFzdC1kZWVwLWVxdWFsXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXNFcXVhbChhLCBiKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGVxdWFsKGEsIGIpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGlmICgoZXJyb3IubWVzc2FnZSB8fCAnJykubWF0Y2goL3N0YWNrfHJlY3Vyc2lvbi9pKSkge1xuICAgICAgLy8gd2FybiBvbiBjaXJjdWxhciByZWZlcmVuY2VzLCBkb24ndCBjcmFzaFxuICAgICAgLy8gYnJvd3NlcnMgZ2l2ZSB0aGlzIGRpZmZlcmVudCBlcnJvcnMgbmFtZSBhbmQgbWVzc2FnZXM6XG4gICAgICAvLyBjaHJvbWUvc2FmYXJpOiBcIlJhbmdlRXJyb3JcIiwgXCJNYXhpbXVtIGNhbGwgc3RhY2sgc2l6ZSBleGNlZWRlZFwiXG4gICAgICAvLyBmaXJlZm94OiBcIkludGVybmFsRXJyb3JcIiwgdG9vIG11Y2ggcmVjdXJzaW9uXCJcbiAgICAgIC8vIGVkZ2U6IFwiRXJyb3JcIiwgXCJPdXQgb2Ygc3RhY2sgc3BhY2VcIlxuICAgICAgY29uc29sZS53YXJuKCdyZWFjdC1mYXN0LWNvbXBhcmUgY2Fubm90IGhhbmRsZSBjaXJjdWxhciByZWZzJyk7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIC8vIHNvbWUgb3RoZXIgZXJyb3IuIHdlIHNob3VsZCBkZWZpbml0ZWx5IGtub3cgYWJvdXQgdGhlc2VcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///4126\n")},88506:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   B6: () => (/* binding */ HelmetProvider),\n/* harmony export */   ql: () => (/* binding */ Helmet)\n/* harmony export */ });\n/* unused harmony export HelmetData */\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(35466);\n/* harmony import */ var react_fast_compare__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(4126);\n/* harmony import */ var react_fast_compare__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_fast_compare__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var invariant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(16985);\n/* harmony import */ var invariant__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(invariant__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var shallowequal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(12807);\n/* harmony import */ var shallowequal__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(shallowequal__WEBPACK_IMPORTED_MODULE_3__);\n// src/index.tsx\n\n\n\n\n// src/Provider.tsx\n\n\n// src/server.ts\n\n\n// src/constants.ts\nvar TAG_NAMES = /* @__PURE__ */(TAG_NAMES2 => {\n  TAG_NAMES2["BASE"] = "base";\n  TAG_NAMES2["BODY"] = "body";\n  TAG_NAMES2["HEAD"] = "head";\n  TAG_NAMES2["HTML"] = "html";\n  TAG_NAMES2["LINK"] = "link";\n  TAG_NAMES2["META"] = "meta";\n  TAG_NAMES2["NOSCRIPT"] = "noscript";\n  TAG_NAMES2["SCRIPT"] = "script";\n  TAG_NAMES2["STYLE"] = "style";\n  TAG_NAMES2["TITLE"] = "title";\n  TAG_NAMES2["FRAGMENT"] = "Symbol(react.fragment)";\n  return TAG_NAMES2;\n})(TAG_NAMES || {});\nvar SEO_PRIORITY_TAGS = {\n  link: {\n    rel: ["amphtml", "canonical", "alternate"]\n  },\n  script: {\n    type: ["application/ld+json"]\n  },\n  meta: {\n    charset: "",\n    name: ["generator", "robots", "description"],\n    property: ["og:type", "og:title", "og:url", "og:image", "og:image:alt", "og:description", "twitter:url", "twitter:title", "twitter:description", "twitter:image", "twitter:image:alt", "twitter:card", "twitter:site"]\n  }\n};\nvar VALID_TAG_NAMES = Object.values(TAG_NAMES);\nvar REACT_TAG_MAP = {\n  accesskey: "accessKey",\n  charset: "charSet",\n  class: "className",\n  contenteditable: "contentEditable",\n  contextmenu: "contextMenu",\n  "http-equiv": "httpEquiv",\n  itemprop: "itemProp",\n  tabindex: "tabIndex"\n};\nvar HTML_TAG_MAP = Object.entries(REACT_TAG_MAP).reduce((carry, [key, value]) => {\n  carry[value] = key;\n  return carry;\n}, {});\nvar HELMET_ATTRIBUTE = "data-rh";\n\n// src/utils.ts\nvar HELMET_PROPS = {\n  DEFAULT_TITLE: "defaultTitle",\n  DEFER: "defer",\n  ENCODE_SPECIAL_CHARACTERS: "encodeSpecialCharacters",\n  ON_CHANGE_CLIENT_STATE: "onChangeClientState",\n  TITLE_TEMPLATE: "titleTemplate",\n  PRIORITIZE_SEO_TAGS: "prioritizeSeoTags"\n};\nvar getInnermostProperty = (propsList, property) => {\n  for (let i = propsList.length - 1; i >= 0; i -= 1) {\n    const props = propsList[i];\n    if (Object.prototype.hasOwnProperty.call(props, property)) {\n      return props[property];\n    }\n  }\n  return null;\n};\nvar getTitleFromPropsList = propsList => {\n  let innermostTitle = getInnermostProperty(propsList, "title" /* TITLE */);\n  const innermostTemplate = getInnermostProperty(propsList, HELMET_PROPS.TITLE_TEMPLATE);\n  if (Array.isArray(innermostTitle)) {\n    innermostTitle = innermostTitle.join("");\n  }\n  if (innermostTemplate && innermostTitle) {\n    return innermostTemplate.replace(/%s/g, () => innermostTitle);\n  }\n  const innermostDefaultTitle = getInnermostProperty(propsList, HELMET_PROPS.DEFAULT_TITLE);\n  return innermostTitle || innermostDefaultTitle || void 0;\n};\nvar getOnChangeClientState = propsList => getInnermostProperty(propsList, HELMET_PROPS.ON_CHANGE_CLIENT_STATE) || (() => {});\nvar getAttributesFromPropsList = (tagType, propsList) => propsList.filter(props => typeof props[tagType] !== "undefined").map(props => props[tagType]).reduce((tagAttrs, current) => ({\n  ...tagAttrs,\n  ...current\n}), {});\nvar getBaseTagFromPropsList = (primaryAttributes, propsList) => propsList.filter(props => typeof props["base" /* BASE */] !== "undefined").map(props => props["base" /* BASE */]).reverse().reduce((innermostBaseTag, tag) => {\n  if (!innermostBaseTag.length) {\n    const keys = Object.keys(tag);\n    for (let i = 0; i < keys.length; i += 1) {\n      const attributeKey = keys[i];\n      const lowerCaseAttributeKey = attributeKey.toLowerCase();\n      if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 && tag[lowerCaseAttributeKey]) {\n        return innermostBaseTag.concat(tag);\n      }\n    }\n  }\n  return innermostBaseTag;\n}, []);\nvar warn = msg => console && typeof console.warn === "function" && console.warn(msg);\nvar getTagsFromPropsList = (tagName, primaryAttributes, propsList) => {\n  const approvedSeenTags = {};\n  return propsList.filter(props => {\n    if (Array.isArray(props[tagName])) {\n      return true;\n    }\n    if (typeof props[tagName] !== "undefined") {\n      warn(`Helmet: ${tagName} should be of type "Array". Instead found type "${typeof props[tagName]}"`);\n    }\n    return false;\n  }).map(props => props[tagName]).reverse().reduce((approvedTags, instanceTags) => {\n    const instanceSeenTags = {};\n    instanceTags.filter(tag => {\n      let primaryAttributeKey;\n      const keys2 = Object.keys(tag);\n      for (let i = 0; i < keys2.length; i += 1) {\n        const attributeKey = keys2[i];\n        const lowerCaseAttributeKey = attributeKey.toLowerCase();\n        if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 && !(primaryAttributeKey === "rel" /* REL */ && tag[primaryAttributeKey].toLowerCase() === "canonical") && !(lowerCaseAttributeKey === "rel" /* REL */ && tag[lowerCaseAttributeKey].toLowerCase() === "stylesheet")) {\n          primaryAttributeKey = lowerCaseAttributeKey;\n        }\n        if (primaryAttributes.indexOf(attributeKey) !== -1 && (attributeKey === "innerHTML" /* INNER_HTML */ || attributeKey === "cssText" /* CSS_TEXT */ || attributeKey === "itemprop" /* ITEM_PROP */)) {\n          primaryAttributeKey = attributeKey;\n        }\n      }\n      if (!primaryAttributeKey || !tag[primaryAttributeKey]) {\n        return false;\n      }\n      const value = tag[primaryAttributeKey].toLowerCase();\n      if (!approvedSeenTags[primaryAttributeKey]) {\n        approvedSeenTags[primaryAttributeKey] = {};\n      }\n      if (!instanceSeenTags[primaryAttributeKey]) {\n        instanceSeenTags[primaryAttributeKey] = {};\n      }\n      if (!approvedSeenTags[primaryAttributeKey][value]) {\n        instanceSeenTags[primaryAttributeKey][value] = true;\n        return true;\n      }\n      return false;\n    }).reverse().forEach(tag => approvedTags.push(tag));\n    const keys = Object.keys(instanceSeenTags);\n    for (let i = 0; i < keys.length; i += 1) {\n      const attributeKey = keys[i];\n      const tagUnion = {\n        ...approvedSeenTags[attributeKey],\n        ...instanceSeenTags[attributeKey]\n      };\n      approvedSeenTags[attributeKey] = tagUnion;\n    }\n    return approvedTags;\n  }, []).reverse();\n};\nvar getAnyTrueFromPropsList = (propsList, checkedTag) => {\n  if (Array.isArray(propsList) && propsList.length) {\n    for (let index = 0; index < propsList.length; index += 1) {\n      const prop = propsList[index];\n      if (prop[checkedTag]) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\nvar reducePropsToState = propsList => ({\n  baseTag: getBaseTagFromPropsList(["href" /* HREF */], propsList),\n  bodyAttributes: getAttributesFromPropsList("bodyAttributes" /* BODY */, propsList),\n  defer: getInnermostProperty(propsList, HELMET_PROPS.DEFER),\n  encode: getInnermostProperty(propsList, HELMET_PROPS.ENCODE_SPECIAL_CHARACTERS),\n  htmlAttributes: getAttributesFromPropsList("htmlAttributes" /* HTML */, propsList),\n  linkTags: getTagsFromPropsList("link" /* LINK */, ["rel" /* REL */, "href" /* HREF */], propsList),\n  metaTags: getTagsFromPropsList("meta" /* META */, ["name" /* NAME */, "charset" /* CHARSET */, "http-equiv" /* HTTPEQUIV */, "property" /* PROPERTY */, "itemprop" /* ITEM_PROP */], propsList),\n  noscriptTags: getTagsFromPropsList("noscript" /* NOSCRIPT */, ["innerHTML" /* INNER_HTML */], propsList),\n  onChangeClientState: getOnChangeClientState(propsList),\n  scriptTags: getTagsFromPropsList("script" /* SCRIPT */, ["src" /* SRC */, "innerHTML" /* INNER_HTML */], propsList),\n  styleTags: getTagsFromPropsList("style" /* STYLE */, ["cssText" /* CSS_TEXT */], propsList),\n  title: getTitleFromPropsList(propsList),\n  titleAttributes: getAttributesFromPropsList("titleAttributes" /* TITLE */, propsList),\n  prioritizeSeoTags: getAnyTrueFromPropsList(propsList, HELMET_PROPS.PRIORITIZE_SEO_TAGS)\n});\nvar flattenArray = possibleArray => Array.isArray(possibleArray) ? possibleArray.join("") : possibleArray;\nvar checkIfPropsMatch = (props, toMatch) => {\n  const keys = Object.keys(props);\n  for (let i = 0; i < keys.length; i += 1) {\n    if (toMatch[keys[i]] && toMatch[keys[i]].includes(props[keys[i]])) {\n      return true;\n    }\n  }\n  return false;\n};\nvar prioritizer = (elementsList, propsToMatch) => {\n  if (Array.isArray(elementsList)) {\n    return elementsList.reduce((acc, elementAttrs) => {\n      if (checkIfPropsMatch(elementAttrs, propsToMatch)) {\n        acc.priority.push(elementAttrs);\n      } else {\n        acc.default.push(elementAttrs);\n      }\n      return acc;\n    }, {\n      priority: [],\n      default: []\n    });\n  }\n  return {\n    default: elementsList,\n    priority: []\n  };\n};\nvar without = (obj, key) => {\n  return {\n    ...obj,\n    [key]: void 0\n  };\n};\n\n// src/server.ts\nvar SELF_CLOSING_TAGS = ["noscript" /* NOSCRIPT */, "script" /* SCRIPT */, "style" /* STYLE */];\nvar encodeSpecialCharacters = (str, encode = true) => {\n  if (encode === false) {\n    return String(str);\n  }\n  return String(str).replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/\'/g, "&#x27;");\n};\nvar generateElementAttributesAsString = attributes => Object.keys(attributes).reduce((str, key) => {\n  const attr = typeof attributes[key] !== "undefined" ? `${key}="${attributes[key]}"` : `${key}`;\n  return str ? `${str} ${attr}` : attr;\n}, "");\nvar generateTitleAsString = (type, title, attributes, encode) => {\n  const attributeString = generateElementAttributesAsString(attributes);\n  const flattenedTitle = flattenArray(title);\n  return attributeString ? `<${type} ${HELMET_ATTRIBUTE}="true" ${attributeString}>${encodeSpecialCharacters(flattenedTitle, encode)}</${type}>` : `<${type} ${HELMET_ATTRIBUTE}="true">${encodeSpecialCharacters(flattenedTitle, encode)}</${type}>`;\n};\nvar generateTagsAsString = (type, tags, encode = true) => tags.reduce((str, t) => {\n  const tag = t;\n  const attributeHtml = Object.keys(tag).filter(attribute => !(attribute === "innerHTML" /* INNER_HTML */ || attribute === "cssText" /* CSS_TEXT */)).reduce((string, attribute) => {\n    const attr = typeof tag[attribute] === "undefined" ? attribute : `${attribute}="${encodeSpecialCharacters(tag[attribute], encode)}"`;\n    return string ? `${string} ${attr}` : attr;\n  }, "");\n  const tagContent = tag.innerHTML || tag.cssText || "";\n  const isSelfClosing = SELF_CLOSING_TAGS.indexOf(type) === -1;\n  return `${str}<${type} ${HELMET_ATTRIBUTE}="true" ${attributeHtml}${isSelfClosing ? `/>` : `>${tagContent}</${type}>`}`;\n}, "");\nvar convertElementAttributesToReactProps = (attributes, initProps = {}) => Object.keys(attributes).reduce((obj, key) => {\n  const mapped = REACT_TAG_MAP[key];\n  obj[mapped || key] = attributes[key];\n  return obj;\n}, initProps);\nvar generateTitleAsReactComponent = (_type, title, attributes) => {\n  const initProps = {\n    key: title,\n    [HELMET_ATTRIBUTE]: true\n  };\n  const props = convertElementAttributesToReactProps(attributes, initProps);\n  return [react__WEBPACK_IMPORTED_MODULE_0__.createElement("title" /* TITLE */, props, title)];\n};\nvar generateTagsAsReactComponent = (type, tags) => tags.map((tag, i) => {\n  const mappedTag = {\n    key: i,\n    [HELMET_ATTRIBUTE]: true\n  };\n  Object.keys(tag).forEach(attribute => {\n    const mapped = REACT_TAG_MAP[attribute];\n    const mappedAttribute = mapped || attribute;\n    if (mappedAttribute === "innerHTML" /* INNER_HTML */ || mappedAttribute === "cssText" /* CSS_TEXT */) {\n      const content = tag.innerHTML || tag.cssText;\n      mappedTag.dangerouslySetInnerHTML = {\n        __html: content\n      };\n    } else {\n      mappedTag[mappedAttribute] = tag[attribute];\n    }\n  });\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(type, mappedTag);\n});\nvar getMethodsForTag = (type, tags, encode = true) => {\n  switch (type) {\n    case "title" /* TITLE */:\n      return {\n        toComponent: () => generateTitleAsReactComponent(type, tags.title, tags.titleAttributes),\n        toString: () => generateTitleAsString(type, tags.title, tags.titleAttributes, encode)\n      };\n    case "bodyAttributes" /* BODY */:\n    case "htmlAttributes" /* HTML */:\n      return {\n        toComponent: () => convertElementAttributesToReactProps(tags),\n        toString: () => generateElementAttributesAsString(tags)\n      };\n    default:\n      return {\n        toComponent: () => generateTagsAsReactComponent(type, tags),\n        toString: () => generateTagsAsString(type, tags, encode)\n      };\n  }\n};\nvar getPriorityMethods = ({\n  metaTags,\n  linkTags,\n  scriptTags,\n  encode\n}) => {\n  const meta = prioritizer(metaTags, SEO_PRIORITY_TAGS.meta);\n  const link = prioritizer(linkTags, SEO_PRIORITY_TAGS.link);\n  const script = prioritizer(scriptTags, SEO_PRIORITY_TAGS.script);\n  const priorityMethods = {\n    toComponent: () => [...generateTagsAsReactComponent("meta" /* META */, meta.priority), ...generateTagsAsReactComponent("link" /* LINK */, link.priority), ...generateTagsAsReactComponent("script" /* SCRIPT */, script.priority)],\n    toString: () =>\n    // generate all the tags as strings and concatenate them\n    `${getMethodsForTag("meta" /* META */, meta.priority, encode)} ${getMethodsForTag("link" /* LINK */, link.priority, encode)} ${getMethodsForTag("script" /* SCRIPT */, script.priority, encode)}`\n  };\n  return {\n    priorityMethods,\n    metaTags: meta.default,\n    linkTags: link.default,\n    scriptTags: script.default\n  };\n};\nvar mapStateOnServer = props => {\n  const {\n    baseTag,\n    bodyAttributes,\n    encode = true,\n    htmlAttributes,\n    noscriptTags,\n    styleTags,\n    title = "",\n    titleAttributes,\n    prioritizeSeoTags\n  } = props;\n  let {\n    linkTags,\n    metaTags,\n    scriptTags\n  } = props;\n  let priorityMethods = {\n    toComponent: () => {},\n    toString: () => ""\n  };\n  if (prioritizeSeoTags) {\n    ({\n      priorityMethods,\n      linkTags,\n      metaTags,\n      scriptTags\n    } = getPriorityMethods(props));\n  }\n  return {\n    priority: priorityMethods,\n    base: getMethodsForTag("base" /* BASE */, baseTag, encode),\n    bodyAttributes: getMethodsForTag("bodyAttributes" /* BODY */, bodyAttributes, encode),\n    htmlAttributes: getMethodsForTag("htmlAttributes" /* HTML */, htmlAttributes, encode),\n    link: getMethodsForTag("link" /* LINK */, linkTags, encode),\n    meta: getMethodsForTag("meta" /* META */, metaTags, encode),\n    noscript: getMethodsForTag("noscript" /* NOSCRIPT */, noscriptTags, encode),\n    script: getMethodsForTag("script" /* SCRIPT */, scriptTags, encode),\n    style: getMethodsForTag("style" /* STYLE */, styleTags, encode),\n    title: getMethodsForTag("title" /* TITLE */, {\n      title,\n      titleAttributes\n    }, encode)\n  };\n};\nvar server_default = mapStateOnServer;\n\n// src/HelmetData.ts\nvar instances = [];\nvar isDocument = !!(typeof window !== "undefined" && window.document && window.document.createElement);\nvar HelmetData = class {\n  instances = [];\n  canUseDOM = isDocument;\n  context;\n  value = {\n    setHelmet: serverState => {\n      this.context.helmet = serverState;\n    },\n    helmetInstances: {\n      get: () => this.canUseDOM ? instances : this.instances,\n      add: instance => {\n        (this.canUseDOM ? instances : this.instances).push(instance);\n      },\n      remove: instance => {\n        const index = (this.canUseDOM ? instances : this.instances).indexOf(instance);\n        (this.canUseDOM ? instances : this.instances).splice(index, 1);\n      }\n    }\n  };\n  constructor(context, canUseDOM) {\n    this.context = context;\n    this.canUseDOM = canUseDOM || false;\n    if (!canUseDOM) {\n      context.helmet = server_default({\n        baseTag: [],\n        bodyAttributes: {},\n        encodeSpecialCharacters: true,\n        htmlAttributes: {},\n        linkTags: [],\n        metaTags: [],\n        noscriptTags: [],\n        scriptTags: [],\n        styleTags: [],\n        title: "",\n        titleAttributes: {}\n      });\n    }\n  }\n};\n\n// src/Provider.tsx\nvar defaultValue = {};\nvar Context = react__WEBPACK_IMPORTED_MODULE_0__.createContext(defaultValue);\nvar HelmetProvider = class _HelmetProvider extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n  static canUseDOM = isDocument;\n  helmetData;\n  constructor(props) {\n    super(props);\n    this.helmetData = new HelmetData(this.props.context || {}, _HelmetProvider.canUseDOM);\n  }\n  render() {\n    return /* @__PURE__ */react__WEBPACK_IMPORTED_MODULE_0__.createElement(Context.Provider, {\n      value: this.helmetData.value\n    }, this.props.children);\n  }\n};\n\n// src/Dispatcher.tsx\n\n\n\n// src/client.ts\nvar updateTags = (type, tags) => {\n  const headElement = document.head || document.querySelector("head" /* HEAD */);\n  const tagNodes = headElement.querySelectorAll(`${type}[${HELMET_ATTRIBUTE}]`);\n  const oldTags = [].slice.call(tagNodes);\n  const newTags = [];\n  let indexToDelete;\n  if (tags && tags.length) {\n    tags.forEach(tag => {\n      const newElement = document.createElement(type);\n      for (const attribute in tag) {\n        if (Object.prototype.hasOwnProperty.call(tag, attribute)) {\n          if (attribute === "innerHTML" /* INNER_HTML */) {\n            newElement.innerHTML = tag.innerHTML;\n          } else if (attribute === "cssText" /* CSS_TEXT */) {\n            if (newElement.styleSheet) {\n              newElement.styleSheet.cssText = tag.cssText;\n            } else {\n              newElement.appendChild(document.createTextNode(tag.cssText));\n            }\n          } else {\n            const attr = attribute;\n            const value = typeof tag[attr] === "undefined" ? "" : tag[attr];\n            newElement.setAttribute(attribute, value);\n          }\n        }\n      }\n      newElement.setAttribute(HELMET_ATTRIBUTE, "true");\n      if (oldTags.some((existingTag, index) => {\n        indexToDelete = index;\n        return newElement.isEqualNode(existingTag);\n      })) {\n        oldTags.splice(indexToDelete, 1);\n      } else {\n        newTags.push(newElement);\n      }\n    });\n  }\n  oldTags.forEach(tag => tag.parentNode?.removeChild(tag));\n  newTags.forEach(tag => headElement.appendChild(tag));\n  return {\n    oldTags,\n    newTags\n  };\n};\nvar updateAttributes = (tagName, attributes) => {\n  const elementTag = document.getElementsByTagName(tagName)[0];\n  if (!elementTag) {\n    return;\n  }\n  const helmetAttributeString = elementTag.getAttribute(HELMET_ATTRIBUTE);\n  const helmetAttributes = helmetAttributeString ? helmetAttributeString.split(",") : [];\n  const attributesToRemove = [...helmetAttributes];\n  const attributeKeys = Object.keys(attributes);\n  for (const attribute of attributeKeys) {\n    const value = attributes[attribute] || "";\n    if (elementTag.getAttribute(attribute) !== value) {\n      elementTag.setAttribute(attribute, value);\n    }\n    if (helmetAttributes.indexOf(attribute) === -1) {\n      helmetAttributes.push(attribute);\n    }\n    const indexToSave = attributesToRemove.indexOf(attribute);\n    if (indexToSave !== -1) {\n      attributesToRemove.splice(indexToSave, 1);\n    }\n  }\n  for (let i = attributesToRemove.length - 1; i >= 0; i -= 1) {\n    elementTag.removeAttribute(attributesToRemove[i]);\n  }\n  if (helmetAttributes.length === attributesToRemove.length) {\n    elementTag.removeAttribute(HELMET_ATTRIBUTE);\n  } else if (elementTag.getAttribute(HELMET_ATTRIBUTE) !== attributeKeys.join(",")) {\n    elementTag.setAttribute(HELMET_ATTRIBUTE, attributeKeys.join(","));\n  }\n};\nvar updateTitle = (title, attributes) => {\n  if (typeof title !== "undefined" && document.title !== title) {\n    document.title = flattenArray(title);\n  }\n  updateAttributes("title" /* TITLE */, attributes);\n};\nvar commitTagChanges = (newState, cb) => {\n  const {\n    baseTag,\n    bodyAttributes,\n    htmlAttributes,\n    linkTags,\n    metaTags,\n    noscriptTags,\n    onChangeClientState,\n    scriptTags,\n    styleTags,\n    title,\n    titleAttributes\n  } = newState;\n  updateAttributes("body" /* BODY */, bodyAttributes);\n  updateAttributes("html" /* HTML */, htmlAttributes);\n  updateTitle(title, titleAttributes);\n  const tagUpdates = {\n    baseTag: updateTags("base" /* BASE */, baseTag),\n    linkTags: updateTags("link" /* LINK */, linkTags),\n    metaTags: updateTags("meta" /* META */, metaTags),\n    noscriptTags: updateTags("noscript" /* NOSCRIPT */, noscriptTags),\n    scriptTags: updateTags("script" /* SCRIPT */, scriptTags),\n    styleTags: updateTags("style" /* STYLE */, styleTags)\n  };\n  const addedTags = {};\n  const removedTags = {};\n  Object.keys(tagUpdates).forEach(tagType => {\n    const {\n      newTags,\n      oldTags\n    } = tagUpdates[tagType];\n    if (newTags.length) {\n      addedTags[tagType] = newTags;\n    }\n    if (oldTags.length) {\n      removedTags[tagType] = tagUpdates[tagType].oldTags;\n    }\n  });\n  if (cb) {\n    cb();\n  }\n  onChangeClientState(newState, addedTags, removedTags);\n};\nvar _helmetCallback = null;\nvar handleStateChangeOnClient = newState => {\n  if (_helmetCallback) {\n    cancelAnimationFrame(_helmetCallback);\n  }\n  if (newState.defer) {\n    _helmetCallback = requestAnimationFrame(() => {\n      commitTagChanges(newState, () => {\n        _helmetCallback = null;\n      });\n    });\n  } else {\n    commitTagChanges(newState);\n    _helmetCallback = null;\n  }\n};\nvar client_default = handleStateChangeOnClient;\n\n// src/Dispatcher.tsx\nvar HelmetDispatcher = class extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n  rendered = false;\n  shouldComponentUpdate(nextProps) {\n    return !shallowequal__WEBPACK_IMPORTED_MODULE_3___default()(nextProps, this.props);\n  }\n  componentDidUpdate() {\n    this.emitChange();\n  }\n  componentWillUnmount() {\n    const {\n      helmetInstances\n    } = this.props.context;\n    helmetInstances.remove(this);\n    this.emitChange();\n  }\n  emitChange() {\n    const {\n      helmetInstances,\n      setHelmet\n    } = this.props.context;\n    let serverState = null;\n    const state = reducePropsToState(helmetInstances.get().map(instance => {\n      const props = {\n        ...instance.props\n      };\n      delete props.context;\n      return props;\n    }));\n    if (HelmetProvider.canUseDOM) {\n      client_default(state);\n    } else if (server_default) {\n      serverState = server_default(state);\n    }\n    setHelmet(serverState);\n  }\n  // componentWillMount will be deprecated\n  // for SSR, initialize on first render\n  // constructor is also unsafe in StrictMode\n  init() {\n    if (this.rendered) {\n      return;\n    }\n    this.rendered = true;\n    const {\n      helmetInstances\n    } = this.props.context;\n    helmetInstances.add(this);\n    this.emitChange();\n  }\n  render() {\n    this.init();\n    return null;\n  }\n};\n\n// src/index.tsx\nvar Helmet = class extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n  static defaultProps = {\n    defer: true,\n    encodeSpecialCharacters: true,\n    prioritizeSeoTags: false\n  };\n  shouldComponentUpdate(nextProps) {\n    return !react_fast_compare__WEBPACK_IMPORTED_MODULE_1___default()(without(this.props, "helmetData"), without(nextProps, "helmetData"));\n  }\n  mapNestedChildrenToProps(child, nestedChildren) {\n    if (!nestedChildren) {\n      return null;\n    }\n    switch (child.type) {\n      case "script" /* SCRIPT */:\n      case "noscript" /* NOSCRIPT */:\n        return {\n          innerHTML: nestedChildren\n        };\n      case "style" /* STYLE */:\n        return {\n          cssText: nestedChildren\n        };\n      default:\n        throw new Error(`<${child.type} /> elements are self-closing and can not contain children. Refer to our API for more information.`);\n    }\n  }\n  flattenArrayTypeChildren(child, arrayTypeChildren, newChildProps, nestedChildren) {\n    return {\n      ...arrayTypeChildren,\n      [child.type]: [...(arrayTypeChildren[child.type] || []), {\n        ...newChildProps,\n        ...this.mapNestedChildrenToProps(child, nestedChildren)\n      }]\n    };\n  }\n  mapObjectTypeChildren(child, newProps, newChildProps, nestedChildren) {\n    switch (child.type) {\n      case "title" /* TITLE */:\n        return {\n          ...newProps,\n          [child.type]: nestedChildren,\n          titleAttributes: {\n            ...newChildProps\n          }\n        };\n      case "body" /* BODY */:\n        return {\n          ...newProps,\n          bodyAttributes: {\n            ...newChildProps\n          }\n        };\n      case "html" /* HTML */:\n        return {\n          ...newProps,\n          htmlAttributes: {\n            ...newChildProps\n          }\n        };\n      default:\n        return {\n          ...newProps,\n          [child.type]: {\n            ...newChildProps\n          }\n        };\n    }\n  }\n  mapArrayTypeChildrenToProps(arrayTypeChildren, newProps) {\n    let newFlattenedProps = {\n      ...newProps\n    };\n    Object.keys(arrayTypeChildren).forEach(arrayChildName => {\n      newFlattenedProps = {\n        ...newFlattenedProps,\n        [arrayChildName]: arrayTypeChildren[arrayChildName]\n      };\n    });\n    return newFlattenedProps;\n  }\n  warnOnInvalidChildren(child, nestedChildren) {\n    invariant__WEBPACK_IMPORTED_MODULE_2___default()(VALID_TAG_NAMES.some(name => child.type === name), typeof child.type === "function" ? `You may be attempting to nest <Helmet> components within each other, which is not allowed. Refer to our API for more information.` : `Only elements types ${VALID_TAG_NAMES.join(", ")} are allowed. Helmet does not support rendering <${child.type}> elements. Refer to our API for more information.`);\n    invariant__WEBPACK_IMPORTED_MODULE_2___default()(!nestedChildren || typeof nestedChildren === "string" || Array.isArray(nestedChildren) && !nestedChildren.some(nestedChild => typeof nestedChild !== "string"), `Helmet expects a string as a child of <${child.type}>. Did you forget to wrap your children in braces? ( <${child.type}>{\\`\\`}</${child.type}> ) Refer to our API for more information.`);\n    return true;\n  }\n  mapChildrenToProps(children, newProps) {\n    let arrayTypeChildren = {};\n    react__WEBPACK_IMPORTED_MODULE_0__.Children.forEach(children, child => {\n      if (!child || !child.props) {\n        return;\n      }\n      const {\n        children: nestedChildren,\n        ...childProps\n      } = child.props;\n      const newChildProps = Object.keys(childProps).reduce((obj, key) => {\n        obj[HTML_TAG_MAP[key] || key] = childProps[key];\n        return obj;\n      }, {});\n      let {\n        type\n      } = child;\n      if (typeof type === "symbol") {\n        type = type.toString();\n      } else {\n        this.warnOnInvalidChildren(child, nestedChildren);\n      }\n      switch (type) {\n        case "Symbol(react.fragment)" /* FRAGMENT */:\n          newProps = this.mapChildrenToProps(nestedChildren, newProps);\n          break;\n        case "link" /* LINK */:\n        case "meta" /* META */:\n        case "noscript" /* NOSCRIPT */:\n        case "script" /* SCRIPT */:\n        case "style" /* STYLE */:\n          arrayTypeChildren = this.flattenArrayTypeChildren(child, arrayTypeChildren, newChildProps, nestedChildren);\n          break;\n        default:\n          newProps = this.mapObjectTypeChildren(child, newProps, newChildProps, nestedChildren);\n          break;\n      }\n    });\n    return this.mapArrayTypeChildrenToProps(arrayTypeChildren, newProps);\n  }\n  render() {\n    const {\n      children,\n      ...props\n    } = this.props;\n    let newProps = {\n      ...props\n    };\n    let {\n      helmetData\n    } = props;\n    if (children) {\n      newProps = this.mapChildrenToProps(children, newProps);\n    }\n    if (helmetData && !(helmetData instanceof HelmetData)) {\n      const data = helmetData;\n      helmetData = new HelmetData(data.context, true);\n      delete newProps.helmetData;\n    }\n    return helmetData ? /* @__PURE__ */react__WEBPACK_IMPORTED_MODULE_0__.createElement(HelmetDispatcher, {\n      ...newProps,\n      context: helmetData.value\n    }) : /* @__PURE__ */react__WEBPACK_IMPORTED_MODULE_0__.createElement(Context.Consumer, null, context => /* @__PURE__ */react__WEBPACK_IMPORTED_MODULE_0__.createElement(HelmetDispatcher, {\n      ...newProps,\n      context\n    }));\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///88506\n')},70072:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('var react__WEBPACK_IMPORTED_MODULE_0___namespace_cache;\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VK: () => (/* binding */ BrowserRouter),\n/* harmony export */   lr: () => (/* binding */ useSearchParams)\n/* harmony export */ });\n/* unused harmony exports Form, HashRouter, Link, NavLink, ScrollRestoration, UNSAFE_useScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, unstable_HistoryRouter, unstable_usePrompt, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSubmit */\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(35466);\n/* harmony import */ var react_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(96828);\n/* harmony import */ var _remix_run_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(21300);\n/**\n * React Router DOM v6.16.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n\n\n\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nconst defaultMethod = "get";\nconst defaultEncType = "application/x-www-form-urlencoded";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === "string";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === "button";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === "form";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === "input";\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && (\n  // Ignore everything but left clicks\n  !target || target === "_self") &&\n  // Let browser handle "target=_blank" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don\'t want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     [\'sort\', \'name\'],\n *     [\'sort\', \'price\']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: [\'name\', \'price\']\n *   });\n */\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = "";\n  }\n  return new URLSearchParams(typeof init === "string" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(value => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n  return searchParams;\n}\n// One-time check for submitter support\nlet _formDataSupportsSubmitter = null;\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(document.createElement("form"),\n      // @ts-expect-error if FormData supports the submitter parameter, this will throw\n      0);\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\nconst supportedFormEncTypes = new Set(["application/x-www-form-urlencoded", "multipart/form-data", "text/plain"]);\nfunction getFormEncType(encType) {\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\n     false ? 0 : void 0;\n    return null;\n  }\n  return encType;\n}\nfunction getFormSubmissionInfo(target, basename) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n  let body;\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we\'ll\n    // re-prefix in the router\n    let attr = target.getAttribute("action");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute("method") || defaultMethod;\n    encType = getFormEncType(target.getAttribute("enctype")) || defaultEncType;\n    formData = new FormData(target);\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === "submit" || target.type === "image")) {\n    let form = target.form;\n    if (form == null) {\n      throw new Error("Cannot submit a <button> or <input type=\\"submit\\"> without a <form>");\n    }\n    // <button>/<input type="submit"> may override attributes of <form>\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we\'ll\n    // re-prefix in the router\n    let attr = target.getAttribute("formaction") || form.getAttribute("action");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute("formmethod") || form.getAttribute("method") || defaultMethod;\n    encType = getFormEncType(target.getAttribute("formenctype")) || getFormEncType(form.getAttribute("enctype")) || defaultEncType;\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n    // If this browser doesn\'t support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let {\n        name,\n        type,\n        value\n      } = target;\n      if (type === "image") {\n        let prefix = name ? name + "." : "";\n        formData.append(prefix + "x", "0");\n        formData.append(prefix + "y", "0");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error("Cannot submit element that is not <form>, <button>, or " + "<input type=\\"submit|image\\">");\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n  // Send body for <Form encType="text/plain" so we encode it into text\n  if (formData && encType === "text/plain") {\n    body = formData;\n    formData = undefined;\n  }\n  return {\n    action,\n    method: method.toLowerCase(),\n    encType,\n    formData,\n    body\n  };\n}\nconst _excluded = (/* unused pure expression or super */ null && (["onClick", "relative", "reloadDocument", "replace", "state", "target", "to", "preventScrollReset"])),\n  _excluded2 = (/* unused pure expression or super */ null && (["aria-current", "caseSensitive", "className", "end", "style", "to", "children"])),\n  _excluded3 = (/* unused pure expression or super */ null && (["reloadDocument", "replace", "state", "method", "action", "onSubmit", "submit", "relative", "preventScrollReset"]));\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties\n  }).initialize();\n}\nfunction parseHydrationData() {\n  var _window;\n  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = _extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n  return state;\n}\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === "RouteErrorResponse") {\n      serialized[key] = new UNSAFE_ErrorResponseImpl(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === "Error") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === "function") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don\'t serialize SSR stack traces for security reasons\n            error.stack = "";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don\'t serialize SSR stack traces for security reasons\n        error.stack = "";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn\'t exist in `React`:\n  * import { startTransition } from "react"\n  * import * as React from from "react";\n    "startTransition" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from "react";\n    "startTransition" in React ? React["startTransition"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from "react";\n    const START_TRANSITION = "startTransition";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = "startTransition";\nconst startTransitionImpl = /*#__PURE__*/ (react__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (react__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(react__WEBPACK_IMPORTED_MODULE_0__, 2)))[START_TRANSITION];\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nfunction BrowserRouter(_ref) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref;\n  let historyRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__/* .createBrowserHistory */ .lX)({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = react__WEBPACK_IMPORTED_MODULE_0__.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_router__WEBPACK_IMPORTED_MODULE_2__/* .Router */ .F0, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nfunction HashRouter(_ref2) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref2;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It\'s important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    future,\n    history\n  } = _ref3;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\nif (false) {}\nconst isBrowser = typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined";\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n/**\n * The public API for rendering a history-aware <a>.\n */\nconst Link = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function LinkWithRef(_ref4, ref) {\n  let {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset\n    } = _ref4,\n    rest = _objectWithoutPropertiesLoose(_ref4, _excluded);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  // Rendered into <a href> for absolute URLs\n  let absoluteHref;\n  let isExternal = false;\n  if (typeof to === "string" && ABSOLUTE_URL_REGEX.test(to)) {\n    // Render the absolute href server- and client-side\n    absoluteHref = to;\n    // Only check for external origins client-side\n    if (isBrowser) {\n      try {\n        let currentUrl = new URL(window.location.href);\n        let targetUrl = to.startsWith("//") ? new URL(currentUrl.protocol + to) : new URL(to);\n        let path = stripBasename(targetUrl.pathname, basename);\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      } catch (e) {\n        // We can\'t do external URL detection without a valid URL\n         false ? 0 : void 0;\n      }\n    }\n  }\n  // Rendered into <a href> for relative URLs\n  let href = useHref(to, {\n    relative\n  });\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target,\n    preventScrollReset,\n    relative\n  });\n  function handleClick(event) {\n    if (onClick) onClick(event);\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n  return /*#__PURE__*/(\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement("a", _extends({}, rest, {\n      href: absoluteHref || href,\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n})));\nif (false) {}\n/**\n * A <Link> wrapper that knows if it\'s "active" or not.\n */\nconst NavLink = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function NavLinkWithRef(_ref5, ref) {\n  let {\n      "aria-current": ariaCurrentProp = "page",\n      caseSensitive = false,\n      className: classNameProp = "",\n      end = false,\n      style: styleProp,\n      to,\n      children\n    } = _ref5,\n    rest = _objectWithoutPropertiesLoose(_ref5, _excluded2);\n  let path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  let location = useLocation();\n  let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  let {\n    navigator\n  } = React.useContext(UNSAFE_NavigationContext);\n  let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  let locationPathname = location.pathname;\n  let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n  let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(toPathname.length) === "/";\n  let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === "/");\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n  if (typeof classNameProp === "function") {\n    className = classNameProp({\n      isActive,\n      isPending\n    });\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? "active" : null, isPending ? "pending" : null].filter(Boolean).join(" ");\n  }\n  let style = typeof styleProp === "function" ? styleProp({\n    isActive,\n    isPending\n  }) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    "aria-current": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to\n  }), typeof children === "function" ? children({\n    isActive,\n    isPending\n  }) : children);\n})));\nif (false) {}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nconst Form = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef((props, ref) => {\n  let submit = useSubmit();\n  return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n    submit: submit,\n    ref: ref\n  }));\n})));\nif (false) {}\nconst FormImpl = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef((_ref6, forwardedRef) => {\n  let {\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      submit,\n      relative,\n      preventScrollReset\n    } = _ref6,\n    props = _objectWithoutPropertiesLoose(_ref6, _excluded3);\n  let formMethod = method.toLowerCase() === "get" ? "get" : "post";\n  let formAction = useFormAction(action, {\n    relative\n  });\n  let submitHandler = event => {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    let submitter = event.nativeEvent.submitter;\n    let submitMethod = (submitter == null ? void 0 : submitter.getAttribute("formmethod")) || method;\n    submit(submitter || event.currentTarget, {\n      method: submitMethod,\n      replace,\n      state,\n      relative,\n      preventScrollReset\n    });\n  };\n  return /*#__PURE__*/React.createElement("form", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n})));\nif (false) {}\n/**\n * This component will emulate the browser\'s scroll restoration on location\n * changes.\n */\nfunction ScrollRestoration(_ref7) {\n  let {\n    getKey,\n    storageKey\n  } = _ref7;\n  useScrollRestoration({\n    getKey,\n    storageKey\n  });\n  return null;\n}\nif (false) {}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\nvar DataRouterHook;\n(function (DataRouterHook) {\n  DataRouterHook["UseScrollRestoration"] = "useScrollRestoration";\n  DataRouterHook["UseSubmit"] = "useSubmit";\n  DataRouterHook["UseSubmitFetcher"] = "useSubmitFetcher";\n  DataRouterHook["UseFetcher"] = "useFetcher";\n})(DataRouterHook || (DataRouterHook = {}));\nvar DataRouterStateHook;\n(function (DataRouterStateHook) {\n  DataRouterStateHook["UseFetchers"] = "useFetchers";\n  DataRouterStateHook["UseScrollRestoration"] = "useScrollRestoration";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + " must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ?  false ? 0 : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ?  false ? 0 : UNSAFE_invariant(false) : void 0;\n  return state;\n}\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nfunction useLinkClickHandler(to, _temp) {\n  let {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, {\n    relative\n  });\n  return React.useCallback(event => {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault();\n      // If the URL hasn\'t changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n      let replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace,\n        state,\n        preventScrollReset,\n        relative\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nfunction useSearchParams(defaultInit) {\n   false ? 0 : void 0;\n  let defaultSearchParamsRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n  let location = (0,react_router__WEBPACK_IMPORTED_MODULE_2__/* .useLocation */ .TH)();\n  let searchParams = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() =>\n  // Only merge in the defaults if we haven\'t yet called setSearchParams.\n  // Once we call that we want those to take precedence, otherwise you can\'t\n  // remove a param with setSearchParams({}) if it has an initial value\n  getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [location.search]);\n  let navigate = (0,react_router__WEBPACK_IMPORTED_MODULE_2__/* .useNavigate */ .s0)();\n  let setSearchParams = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((nextInit, navigateOptions) => {\n    const newSearchParams = createSearchParams(typeof nextInit === "function" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate("?" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\nfunction validateClientSideSubmission() {\n  if (typeof document === "undefined") {\n    throw new Error("You are calling submit during the server render. " + "Try calling submit within a `useEffect` or callback instead.");\n  }\n}\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nfunction useSubmit() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let currentRouteId = UNSAFE_useRouteId();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    validateClientSideSubmission();\n    let {\n      action,\n      method,\n      encType,\n      formData,\n      body\n    } = getFormSubmissionInfo(target, basename);\n    router.navigate(options.action || action, {\n      preventScrollReset: options.preventScrollReset,\n      formData,\n      body,\n      formMethod: options.method || method,\n      formEncType: options.encType || encType,\n      replace: options.replace,\n      state: options.state,\n      fromRouteId: currentRouteId\n    });\n  }, [router, basename, currentRouteId]);\n}\n/**\n * Returns the implementation for fetcher.submit\n */\nfunction useSubmitFetcher(fetcherKey, fetcherRouteId) {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmitFetcher);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    validateClientSideSubmission();\n    let {\n      action,\n      method,\n      encType,\n      formData,\n      body\n    } = getFormSubmissionInfo(target, basename);\n    !(fetcherRouteId != null) ?  false ? 0 : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, fetcherRouteId, options.action || action, {\n      preventScrollReset: options.preventScrollReset,\n      formData,\n      body,\n      formMethod: options.method || method,\n      formEncType: options.encType || encType\n    });\n  }, [router, basename, fetcherKey, fetcherRouteId]);\n}\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nfunction useFormAction(action, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ?  false ? 0 : UNSAFE_invariant(false) : void 0;\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = _extends({}, useResolvedPath(action ? action : ".", {\n    relative\n  }));\n  // Previously we set the default action to ".". The problem with this is that\n  // `useResolvedPath(".")` excludes search params of the resolved URL. This is\n  // the intended behavior of when "." is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(".") which will never include a search\n    path.search = location.search;\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete("index");\n      path.search = params.toString() ? "?" + params.toString() : "";\n    }\n  }\n  if ((!action || action === ".") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, "?index&") : "?index";\n  }\n  // If we\'re operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== "/") {\n    path.pathname = path.pathname === "/" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\nfunction createFetcherForm(fetcherKey, routeId) {\n  let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\n    let submit = useSubmitFetcher(fetcherKey, routeId);\n    return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n      ref: ref,\n      submit: submit\n    }));\n  });\n  if (false) {}\n  return FetcherForm;\n}\nlet fetcherId = 0;\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nfunction useFetcher() {\n  var _route$matches;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let route = React.useContext(UNSAFE_RouteContext);\n  !route ?  false ? 0 : UNSAFE_invariant(false) : void 0;\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !(routeId != null) ?  false ? 0 : UNSAFE_invariant(false) : void 0;\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    !routeId ?  false ? 0 : UNSAFE_invariant(false) : void 0;\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => href => {\n    !router ?  false ? 0 : UNSAFE_invariant(false) : void 0;\n    !routeId ?  false ? 0 : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitFetcher(fetcherKey, routeId);\n  let fetcher = router.getFetcher(fetcherKey);\n  let fetcherWithComponents = React.useMemo(() => _extends({\n    Form,\n    submit,\n    load\n  }, fetcher), [fetcher, Form, submit, load]);\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn("No router available to clean up from useFetcher()");\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nfunction useFetchers() {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\nconst SCROLL_RESTORATION_STORAGE_KEY = "react-router-scroll-positions";\nlet savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration(_temp3) {\n  let {\n    getKey,\n    storageKey\n  } = _temp3 === void 0 ? {} : _temp3;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let {\n    restoreScrollPosition,\n    preventScrollReset\n  } = useDataRouterState(DataRouterStateHook.UseScrollRestoration);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n  // Trigger manual scroll restoration while we\'re active\n  React.useEffect(() => {\n    window.history.scrollRestoration = "manual";\n    return () => {\n      window.history.scrollRestoration = "auto";\n    };\n  }, []);\n  // Save positions on pagehide\n  usePageHide(React.useCallback(() => {\n    if (navigation.state === "idle") {\n      let key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n    sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    window.history.scrollRestoration = "auto";\n  }, [storageKey, getKey, navigation.state, location, matches]));\n  // Read in any saved scroll locations\n  if (typeof document !== "undefined") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename = getKey && basename !== "/" ? (location, matches) => getKey(\n      // Strip the basename to match useLocation()\n      _extends({}, location, {\n        pathname: stripBasename(location.pathname, basename) || location.pathname\n      }), matches) : getKey;\n      let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKeyWithoutBasename);\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don\'t do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === "number") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(decodeURIComponent(location.hash.slice(1)));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n      // Don\'t reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\n * Setup a callback to be fired on the window\'s `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction useBeforeUnload(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener("beforeunload", callback, opts);\n    return () => {\n      window.removeEventListener("beforeunload", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Setup a callback to be fired on the window\'s `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener("pagehide", callback, opts);\n    return () => {\n      window.removeEventListener("pagehide", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt(_ref8) {\n  let {\n    when,\n    message\n  } = _ref8;\n  let blocker = unstable_useBlocker(when);\n  React.useEffect(() => {\n    if (blocker.state === "blocked") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird "race" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n  React.useEffect(() => {\n    if (blocker.state === "blocked" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n//#endregion\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///70072\n')},96828:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('var react__WEBPACK_IMPORTED_MODULE_0___namespace_cache;\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AW: () => (/* binding */ Route),\n/* harmony export */   F0: () => (/* binding */ Router),\n/* harmony export */   TH: () => (/* binding */ useLocation),\n/* harmony export */   UO: () => (/* binding */ useParams),\n/* harmony export */   Z5: () => (/* binding */ Routes),\n/* harmony export */   s0: () => (/* binding */ useNavigate)\n/* harmony export */ });\n/* unused harmony exports Await, MemoryRouter, Navigate, Outlet, RouterProvider, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_mapRouteProperties, UNSAFE_useRouteId, UNSAFE_useRoutesImpl, createMemoryRouter, createRoutesFromChildren, createRoutesFromElements, renderMatches, unstable_useBlocker, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useMatch, useMatches, useNavigation, useNavigationType, useOutlet, useOutletContext, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes */\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(35466);\n/* harmony import */ var _remix_run_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(21300);\n/**\n * React Router v6.16.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n\n\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nconst DataRouterContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nif (false) {}\nconst DataRouterStateContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nif (false) {}\nconst AwaitContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nif (false) {}\n\n/**\n * A Navigator is a "location changer"; it\'s how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid "tearing" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\n\nconst NavigationContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nif (false) {}\nconst LocationContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nif (false) {}\nconst RouteContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\nif (false) {}\nconst RouteErrorContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nif (false) {}\n\n/**\n * Returns the full href for the given "to" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nfunction useHref(to, _temp) {\n  let {\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  !useInRouterContext() ?  false ? 0 : UNSAFE_invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to, {\n    relative\n  });\n  let joinedPathname = pathname;\n\n  // If we\'re operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== "/") {\n    joinedPathname = pathname === "/" ? basename : joinPaths([basename, pathname]);\n  }\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nfunction useInRouterContext() {\n  return react__WEBPACK_IMPORTED_MODULE_0__.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you\'re using this it may mean you\'re doing some of your own\n * "routing" in your app, and we\'d like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nfunction useLocation() {\n  !useInRouterContext() ?  false ? 0 : (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__/* .UNSAFE_invariant */ .J0)(false) : void 0;\n  return react__WEBPACK_IMPORTED_MODULE_0__.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nfunction useNavigationType() {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know "active" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nfunction useMatch(pattern) {\n  !useInRouterContext() ?  false ? 0 : UNSAFE_invariant(false) : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return React.useMemo(() => matchPath(pattern, pathname), [pathname, pattern]);\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\nconst navigateEffectWarning = (/* unused pure expression or super */ null && ("You should call navigate() in a React.useEffect(), not when " + "your component is first rendered."));\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(cb) {\n  let isStatic = react__WEBPACK_IMPORTED_MODULE_0__.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nfunction useNavigate() {\n  let {\n    isDataRoute\n  } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\nfunction useNavigateUnstable() {\n  !useInRouterContext() ?  false ? 0 : (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__/* .UNSAFE_invariant */ .J0)(false) : void 0;\n  let dataRouterContext = react__WEBPACK_IMPORTED_MODULE_0__.useContext(DataRouterContext);\n  let {\n    basename,\n    navigator\n  } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(NavigationContext);\n  let {\n    matches\n  } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify((0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__/* .UNSAFE_getPathContributingMatches */ .Zq)(matches).map(match => match.pathnameBase));\n  let activeRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n     false ? 0 : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven\'t wired up our history listener yet\n    if (!activeRef.current) return;\n    if (typeof to === "number") {\n      navigator.go(to);\n      return;\n    }\n    let path = (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__/* .resolveTo */ .pC)(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === "path");\n\n    // If we\'re operating within a basename, prepend it to the pathname prior\n    // to handing off to history (but only if we\'re not in a data router,\n    // otherwise it\'ll prepend the basename inside of the router).\n    // If this is a root navigation, then we navigate to the raw basename\n    // which allows the basename to have full control over the presence of a\n    // trailing slash on root links\n    if (dataRouterContext == null && basename !== "/") {\n      path.pathname = path.pathname === "/" ? basename : (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__/* .joinPaths */ .RQ)([basename, path.pathname]);\n    }\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n  }, [basename, navigator, routePathnamesJson, locationPathname, dataRouterContext]);\n  return navigate;\n}\nconst OutletContext = /*#__PURE__*/(/* unused pure expression or super */ null && (React.createContext(null)));\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nfunction useOutletContext() {\n  return React.useContext(OutletContext);\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nfunction useOutlet(context) {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return /*#__PURE__*/React.createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nfunction useParams() {\n  let {\n    matches\n  } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nfunction useResolvedPath(to, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase));\n  return React.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === "path"), [to, routePathnamesJson, locationPathname, relative]);\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route\'s\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nfunction useRoutes(routes, locationArg) {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nfunction useRoutesImpl(routes, locationArg, dataRouterState) {\n  !useInRouterContext() ?  false ? 0 : (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__/* .UNSAFE_invariant */ .J0)(false) : void 0;\n  let {\n    navigator\n  } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(NavigationContext);\n  let {\n    matches: parentMatches\n  } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : "/";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : "/";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (false) {}\n  let locationFromContext = useLocation();\n  let location;\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n    let parsedLocationArg = typeof locationArg === "string" ? (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__/* .parsePath */ .cP)(locationArg) : locationArg;\n    !(parentPathnameBase === "/" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ?  false ? 0 : (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__/* .UNSAFE_invariant */ .J0)(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || "/";\n  let remainingPathname = parentPathnameBase === "/" ? pathname : pathname.slice(parentPathnameBase.length) || "/";\n  let matches = (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__/* .matchRoutes */ .fp)(routes, {\n    pathname: remainingPathname\n  });\n  if (false) {}\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__/* .joinPaths */ .RQ)([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname]),\n    pathnameBase: match.pathnameBase === "/" ? parentPathnameBase : (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__/* .joinPaths */ .RQ)([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])\n  })), parentMatches, dataRouterState);\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(LocationContext.Provider, {\n      value: {\n        location: _extends({\n          pathname: "/",\n          search: "",\n          hash: "",\n          state: null,\n          key: "default"\n        }, location),\n        navigationType: _remix_run_router__WEBPACK_IMPORTED_MODULE_1__/* .Action */ .aU.Pop\n      }\n    }, renderedMatches);\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__/* .isRouteErrorResponse */ .WK)(error) ? error.status + " " + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = "rgba(200,200,200, 0.5)";\n  let preStyles = {\n    padding: "0.5rem",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: "2px 4px",\n    backgroundColor: lightgrey\n  };\n  let devInfo = null;\n  if (false) {}\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("h2", null, "Unexpected Application Error!"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("h3", {\n    style: {\n      fontStyle: "italic"\n    }\n  }, message), stack ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("pre", {\n    style: preStyles\n  }, stack) : null, devInfo);\n}\nconst defaultErrorElement = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultErrorComponent, null);\nclass RenderErrorBoundary extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error: error\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click "back" to the\n    // previous page that didn\'t have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we\'re in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location || state.revalidation !== "idle" && props.revalidation === "idle") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    }\n\n    // If we\'re not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error("React Router caught the following error during render", error, errorInfo);\n  }\n  render() {\n    return this.state.error ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(RouteContext.Provider, {\n      value: this.props.routeContext\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    })) : this.props.children;\n  }\n}\nfunction RenderedRoute(_ref) {\n  let {\n    routeContext,\n    match,\n    children\n  } = _ref;\n  let dataRouterContext = react__WEBPACK_IMPORTED_MODULE_0__.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\nfunction _renderMatches(matches, parentMatches, dataRouterState) {\n  var _dataRouterState2;\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n  if (dataRouterState === void 0) {\n    dataRouterState = null;\n  }\n  if (matches == null) {\n    var _dataRouterState;\n    if ((_dataRouterState = dataRouterState) != null && _dataRouterState.errors) {\n      // Don\'t bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = (_dataRouterState2 = dataRouterState) == null ? void 0 : _dataRouterState2.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]));\n    !(errorIndex >= 0) ?  false ? 0 : (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__/* .UNSAFE_invariant */ .J0)(false) : void 0;\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors == null ? void 0 : errors[match.route.id] : null;\n    // Only data routers handle errors\n    let errorElement = null;\n    if (dataRouterState) {\n      errorElement = match.route.errorElement || defaultErrorElement;\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children;\n      if (error) {\n        children = errorElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won\'t re-use the\n        // ReactElement since it\'s identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(RenderedRoute, {\n        match: match,\n        routeContext: {\n          outlet,\n          matches,\n          isDataRoute: dataRouterState != null\n        },\n        children: children\n      });\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      revalidation: dataRouterState.revalidation,\n      component: errorElement,\n      error: error,\n      children: getChildren(),\n      routeContext: {\n        outlet: null,\n        matches,\n        isDataRoute: true\n      }\n    }) : getChildren();\n  }, null);\n}\nvar DataRouterHook = /*#__PURE__*/function (DataRouterHook) {\n  DataRouterHook["UseBlocker"] = "useBlocker";\n  DataRouterHook["UseRevalidator"] = "useRevalidator";\n  DataRouterHook["UseNavigateStable"] = "useNavigate";\n  return DataRouterHook;\n}(DataRouterHook || {});\nvar DataRouterStateHook = /*#__PURE__*/function (DataRouterStateHook) {\n  DataRouterStateHook["UseBlocker"] = "useBlocker";\n  DataRouterStateHook["UseLoaderData"] = "useLoaderData";\n  DataRouterStateHook["UseActionData"] = "useActionData";\n  DataRouterStateHook["UseRouteError"] = "useRouteError";\n  DataRouterStateHook["UseNavigation"] = "useNavigation";\n  DataRouterStateHook["UseRouteLoaderData"] = "useRouteLoaderData";\n  DataRouterStateHook["UseMatches"] = "useMatches";\n  DataRouterStateHook["UseRevalidator"] = "useRevalidator";\n  DataRouterStateHook["UseNavigateStable"] = "useNavigate";\n  DataRouterStateHook["UseRouteId"] = "useRouteId";\n  return DataRouterStateHook;\n}(DataRouterStateHook || {});\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + " must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = react__WEBPACK_IMPORTED_MODULE_0__.useContext(DataRouterContext);\n  !ctx ?  false ? 0 : (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__/* .UNSAFE_invariant */ .J0)(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = react__WEBPACK_IMPORTED_MODULE_0__.useContext(DataRouterStateContext);\n  !state ?  false ? 0 : (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__/* .UNSAFE_invariant */ .J0)(false) : void 0;\n  return state;\n}\nfunction useRouteContext(hookName) {\n  let route = react__WEBPACK_IMPORTED_MODULE_0__.useContext(RouteContext);\n  !route ?  false ? 0 : (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__/* .UNSAFE_invariant */ .J0)(false) : void 0;\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  !thisRoute.route.id ?  false ? 0 : (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__/* .UNSAFE_invariant */ .J0)(false) : void 0;\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nfunction useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an "idle" navigation when\n * no navigation is in progress\n */\nfunction useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return React.useMemo(() => ({\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation\n  }), [dataRouterContext.router.revalidate, state.revalidation]);\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route "handle" property\n */\nfunction useMatches() {\n  let {\n    matches,\n    loaderData\n  } = useDataRouterState(DataRouterStateHook.UseMatches);\n  return React.useMemo(() => matches.map(m => UNSAFE_convertRouteMatchToUiMatch(m, loaderData)), [matches, loaderData]);\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nfunction useLoaderData() {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  if (state.errors && state.errors[routeId] != null) {\n    console.error("You cannot `useLoaderData` in an errorElement (routeId: " + routeId + ")");\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nfunction useActionData() {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let route = React.useContext(RouteContext);\n  !route ?  false ? 0 : UNSAFE_invariant(false) : void 0;\n  return Object.values((state == null ? void 0 : state.actionData) || {})[0];\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nfunction useRouteError() {\n  var _state$errors;\n  let error = react__WEBPACK_IMPORTED_MODULE_0__.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\nfunction useAsyncValue() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._data;\n}\n\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\nfunction useAsyncError() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._error;\n}\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nfunction useBlocker(shouldBlock) {\n  let {\n    router,\n    basename\n  } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey, setBlockerKey] = React.useState("");\n  let blockerFunction = React.useCallback(arg => {\n    if (typeof shouldBlock !== "function") {\n      return !!shouldBlock;\n    }\n    if (basename === "/") {\n      return shouldBlock(arg);\n    }\n\n    // If they provided us a function and we\'ve got an active basename, strip\n    // it from the locations we expose to the user to match the behavior of\n    // useLocation\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = arg;\n    return shouldBlock({\n      currentLocation: _extends({}, currentLocation, {\n        pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname\n      }),\n      nextLocation: _extends({}, nextLocation, {\n        pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname\n      }),\n      historyAction\n    });\n  }, [basename, shouldBlock]);\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don\'t get an orphaned blockerFunction in the router with a\n  // key of "".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== "") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n  let activeRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n     false ? 0 : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven\'t wired up our router subscriber yet\n    if (!activeRef.current) return;\n    if (typeof to === "number") {\n      router.navigate(to);\n    } else {\n      router.navigate(to, _extends({\n        fromRouteId: id\n      }, options));\n    }\n  }, [router, id]);\n  return navigate;\n}\nconst alreadyWarned = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n     false ? 0 : void 0;\n  }\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn\'t exist in `React`:\n  * import { startTransition } from "react"\n  * import * as React from from "react";\n    "startTransition" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from "react";\n    "startTransition" in React ? React["startTransition"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from "react";\n    const START_TRANSITION = "startTransition";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = "startTransition";\nconst startTransitionImpl = /*#__PURE__*/ (react__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (react__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(react__WEBPACK_IMPORTED_MODULE_0__, 2)))[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  let [state, setStateImpl] = React.useState(router.state);\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || "/";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n\n  // The fragment and {null} here are important!  We need them to keep React 18\'s\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id\'s\n  // so we need to ensure it remains the same on the client even though\n  // we don\'t need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator\n  }, state.initialized ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    state: state\n  }) : fallbackElement))), null);\n}\nfunction DataRoutes(_ref2) {\n  let {\n    routes,\n    state\n  } = _ref2;\n  return useRoutesImpl(routes, undefined, state);\n}\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nfunction MemoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex,\n    future\n  } = _ref3;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nfunction Navigate(_ref4) {\n  let {\n    to,\n    replace,\n    state,\n    relative\n  } = _ref4;\n  !useInRouterContext() ?  false ? 0 : UNSAFE_invariant(false) : void 0;\n   false ? 0 : void 0;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(to, UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase), locationPathname, relative === "path");\n  let jsonPath = JSON.stringify(path);\n  React.useEffect(() => navigate(JSON.parse(jsonPath), {\n    replace,\n    state,\n    relative\n  }), [navigate, jsonPath, relative, replace, state]);\n  return null;\n}\n/**\n * Renders the child route\'s element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nfunction Route(_props) {\n   false ? 0 : (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__/* .UNSAFE_invariant */ .J0)(false);\n}\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won\'t render a <Router> directly. Instead, you\'ll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nfunction Router(_ref5) {\n  let {\n    basename: basenameProp = "/",\n    children = null,\n    location: locationProp,\n    navigationType = _remix_run_router__WEBPACK_IMPORTED_MODULE_1__/* .Action */ .aU.Pop,\n    navigator,\n    static: staticProp = false\n  } = _ref5;\n  !!useInRouterContext() ?  false ? 0 : (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__/* .UNSAFE_invariant */ .J0)(false) : void 0;\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, "/");\n  let navigationContext = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp\n  }), [basename, navigator, staticProp]);\n  if (typeof locationProp === "string") {\n    locationProp = (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__/* .parsePath */ .cP)(locationProp);\n  }\n  let {\n    pathname = "/",\n    search = "",\n    hash = "",\n    state = null,\n    key = "default"\n  } = locationProp;\n  let locationContext = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n    let trailingPathname = (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__/* .stripBasename */ .Zn)(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n   false ? 0 : void 0;\n  if (locationContext == null) {\n    return null;\n  }\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(LocationContext.Provider, {\n    children: children,\n    value: locationContext\n  }));\n}\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nfunction Routes(_ref6) {\n  let {\n    children,\n    location\n  } = _ref6;\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nfunction Await(_ref7) {\n  let {\n    children,\n    errorElement,\n    resolve\n  } = _ref7;\n  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {\n    resolve: resolve,\n    errorElement: errorElement\n  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));\n}\nvar AwaitRenderStatus = /*#__PURE__*/function (AwaitRenderStatus) {\n  AwaitRenderStatus[AwaitRenderStatus["pending"] = 0] = "pending";\n  AwaitRenderStatus[AwaitRenderStatus["success"] = 1] = "success";\n  AwaitRenderStatus[AwaitRenderStatus["error"] = 2] = "error";\n  return AwaitRenderStatus;\n}(AwaitRenderStatus || {});\nconst neverSettledPromise = new Promise(() => {});\nclass AwaitErrorBoundary extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error("<Await> caught the following error during render", error, errorInfo);\n  }\n  render() {\n    let {\n      children,\n      errorElement,\n      resolve\n    } = this.props;\n    let promise = null;\n    let status = AwaitRenderStatus.pending;\n    if (!(resolve instanceof Promise)) {\n      // Didn\'t get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, "_tracked", {\n        get: () => true\n      });\n      Object.defineProperty(promise, "_data", {\n        get: () => resolve\n      });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, "_tracked", {\n        get: () => true\n      });\n      Object.defineProperty(promise, "_error", {\n        get: () => renderError\n      });\n    } else if (resolve._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status = promise._error !== undefined ? AwaitRenderStatus.error : promise._data !== undefined ? AwaitRenderStatus.success : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, "_tracked", {\n        get: () => true\n      });\n      promise = resolve.then(data => Object.defineProperty(resolve, "_data", {\n        get: () => data\n      }), error => Object.defineProperty(resolve, "_error", {\n        get: () => error\n      }));\n    }\n    if (status === AwaitRenderStatus.error && promise._error instanceof _remix_run_router__WEBPACK_IMPORTED_MODULE_1__/* .AbortedDeferredError */ .X3) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: errorElement\n      });\n    }\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: children\n      });\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\nfunction ResolveAwait(_ref8) {\n  let {\n    children\n  } = _ref8;\n  let data = useAsyncValue();\n  let toRender = typeof children === "function" ? children(data) : children;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, toRender);\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React "children" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nfunction createRoutesFromChildren(children, parentPath) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  let routes = [];\n  react__WEBPACK_IMPORTED_MODULE_0__.Children.forEach(children, (element, index) => {\n    if (! /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n    let treePath = [...parentPath, index];\n    if (element.type === react__WEBPACK_IMPORTED_MODULE_0__.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));\n      return;\n    }\n    !(element.type === Route) ?  false ? 0 : (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__/* .UNSAFE_invariant */ .J0)(false) : void 0;\n    !(!element.props.index || !element.props.children) ?  false ? 0 : (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__/* .UNSAFE_invariant */ .J0)(false) : void 0;\n    let route = {\n      id: element.props.id || treePath.join("-"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy\n    };\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children, treePath);\n    }\n    routes.push(route);\n  });\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null\n  };\n  if (route.Component) {\n    if (false) {}\n    Object.assign(updates, {\n      element: /*#__PURE__*/React.createElement(route.Component),\n      Component: undefined\n    });\n  }\n  if (route.ErrorBoundary) {\n    if (false) {}\n    Object.assign(updates, {\n      errorElement: /*#__PURE__*/React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined\n    });\n  }\n  return updates;\n}\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createMemoryHistory({\n      initialEntries: opts == null ? void 0 : opts.initialEntries,\n      initialIndex: opts == null ? void 0 : opts.initialIndex\n    }),\n    hydrationData: opts == null ? void 0 : opts.hydrationData,\n    routes,\n    mapRouteProperties\n  }).initialize();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///96828\n')},46751:(__unused_webpack_module,exports)=>{"use strict";eval('/*\n React\n react.production.min.js\n\n Copyright (c) Meta Platforms, Inc. and affiliates.\n\n This source code is licensed under the MIT license found in the\n LICENSE file in the root directory of this source tree.\n*/\n\n\nvar l = Symbol.for("react.element"),\n  n = Symbol.for("react.portal"),\n  p = Symbol.for("react.fragment"),\n  q = Symbol.for("react.strict_mode"),\n  r = Symbol.for("react.profiler"),\n  t = Symbol.for("react.provider"),\n  u = Symbol.for("react.context"),\n  v = Symbol.for("react.forward_ref"),\n  w = Symbol.for("react.suspense"),\n  x = Symbol.for("react.memo"),\n  y = Symbol.for("react.lazy"),\n  z = Symbol.iterator;\nfunction A(a) {\n  if (null === a || "object" !== typeof a) return null;\n  a = z && a[z] || a["@@iterator"];\n  return "function" === typeof a ? a : null;\n}\nvar B = {\n    isMounted: function () {\n      return !1;\n    },\n    enqueueForceUpdate: function () {},\n    enqueueReplaceState: function () {},\n    enqueueSetState: function () {}\n  },\n  C = Object.assign,\n  D = {};\nfunction E(a, b, c) {\n  this.props = a;\n  this.context = b;\n  this.refs = D;\n  this.updater = c || B;\n}\nE.prototype.isReactComponent = {};\nE.prototype.setState = function (a, b) {\n  if ("object" !== typeof a && "function" !== typeof a && null != a) throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");\n  this.updater.enqueueSetState(this, a, b, "setState");\n};\nE.prototype.forceUpdate = function (a) {\n  this.updater.enqueueForceUpdate(this, a, "forceUpdate");\n};\nfunction F() {}\nF.prototype = E.prototype;\nfunction G(a, b, c) {\n  this.props = a;\n  this.context = b;\n  this.refs = D;\n  this.updater = c || B;\n}\nvar H = G.prototype = new F();\nH.constructor = G;\nC(H, E.prototype);\nH.isPureReactComponent = !0;\nvar I = Array.isArray,\n  J = Object.prototype.hasOwnProperty,\n  K = {\n    current: null\n  },\n  L = {\n    key: !0,\n    ref: !0,\n    __self: !0,\n    __source: !0\n  };\nfunction M(a, b, c) {\n  var f,\n    d = {},\n    e = null,\n    g = null;\n  if (null != b) for (f in void 0 !== b.ref && (g = b.ref), void 0 !== b.key && (e = "" + b.key), b) J.call(b, f) && !L.hasOwnProperty(f) && (d[f] = b[f]);\n  var h = arguments.length - 2;\n  if (1 === h) d.children = c;else if (1 < h) {\n    for (var k = Array(h), m = 0; m < h; m++) k[m] = arguments[m + 2];\n    d.children = k;\n  }\n  if (a && a.defaultProps) for (f in h = a.defaultProps, h) void 0 === d[f] && (d[f] = h[f]);\n  return {\n    $$typeof: l,\n    type: a,\n    key: e,\n    ref: g,\n    props: d,\n    _owner: K.current\n  };\n}\nfunction N(a, b) {\n  return {\n    $$typeof: l,\n    type: a.type,\n    key: b,\n    ref: a.ref,\n    props: a.props,\n    _owner: a._owner\n  };\n}\nfunction O(a) {\n  return "object" === typeof a && null !== a && a.$$typeof === l;\n}\nfunction escape(a) {\n  var b = {\n    "=": "=0",\n    ":": "=2"\n  };\n  return "$" + a.replace(/[=:]/g, function (c) {\n    return b[c];\n  });\n}\nvar P = /\\/+/g;\nfunction Q(a, b) {\n  return "object" === typeof a && null !== a && null != a.key ? escape("" + a.key) : b.toString(36);\n}\nfunction R(a, b, c, f, d) {\n  var e = typeof a;\n  if ("undefined" === e || "boolean" === e) a = null;\n  var g = !1;\n  if (null === a) g = !0;else switch (e) {\n    case "string":\n    case "number":\n      g = !0;\n      break;\n    case "object":\n      switch (a.$$typeof) {\n        case l:\n        case n:\n          g = !0;\n      }\n  }\n  if (g) return g = a, d = d(g), a = "" === f ? "." + Q(g, 0) : f, I(d) ? (c = "", null != a && (c = a.replace(P, "$&/") + "/"), R(d, b, c, "", function (m) {\n    return m;\n  })) : null != d && (O(d) && (d = N(d, c + (!d.key || g && g.key === d.key ? "" : ("" + d.key).replace(P, "$&/") + "/") + a)), b.push(d)), 1;\n  g = 0;\n  f = "" === f ? "." : f + ":";\n  if (I(a)) for (var h = 0; h < a.length; h++) {\n    e = a[h];\n    var k = f + Q(e, h);\n    g += R(e, b, c, k, d);\n  } else if (k = A(a), "function" === typeof k) for (a = k.call(a), h = 0; !(e = a.next()).done;) e = e.value, k = f + Q(e, h++), g += R(e, b, c, k, d);else if ("object" === e) throw b = String(a), Error("Objects are not valid as a React child (found: " + ("[object Object]" === b ? "object with keys {" + Object.keys(a).join(", ") + "}" : b) + "). If you meant to render a collection of children, use an array instead.");\n  return g;\n}\nfunction S(a, b, c) {\n  if (null == a) return a;\n  var f = [],\n    d = 0;\n  R(a, f, "", "", function (e) {\n    return b.call(c, e, d++);\n  });\n  return f;\n}\nfunction T(a) {\n  if (-1 === a._status) {\n    var b = a._result;\n    b = b();\n    b.then(function (c) {\n      if (0 === a._status || -1 === a._status) a._status = 1, a._result = c;\n    }, function (c) {\n      if (0 === a._status || -1 === a._status) a._status = 2, a._result = c;\n    });\n    -1 === a._status && (a._status = 0, a._result = b);\n  }\n  if (1 === a._status) return a._result.default;\n  throw a._result;\n}\nvar U = {\n  current: null\n};\nfunction V() {\n  return new WeakMap();\n}\nfunction W() {\n  return {\n    s: 0,\n    v: void 0,\n    o: null,\n    p: null\n  };\n}\nvar X = {\n    current: null\n  },\n  Y = {\n    transition: null\n  },\n  Z = {\n    ReactCurrentDispatcher: X,\n    ReactCurrentCache: U,\n    ReactCurrentBatchConfig: Y,\n    ReactCurrentOwner: K\n  };\nexports.Children = {\n  map: S,\n  forEach: function (a, b, c) {\n    S(a, function () {\n      b.apply(this, arguments);\n    }, c);\n  },\n  count: function (a) {\n    var b = 0;\n    S(a, function () {\n      b++;\n    });\n    return b;\n  },\n  toArray: function (a) {\n    return S(a, function (b) {\n      return b;\n    }) || [];\n  },\n  only: function (a) {\n    if (!O(a)) throw Error("React.Children.only expected to receive a single React element child.");\n    return a;\n  }\n};\nexports.Component = E;\nexports.Fragment = p;\nexports.Profiler = r;\nexports.PureComponent = G;\nexports.StrictMode = q;\nexports.Suspense = w;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Z;\nexports.cache = function (a) {\n  return function () {\n    var b = U.current;\n    if (!b) return a.apply(null, arguments);\n    var c = b.getCacheForType(V);\n    b = c.get(a);\n    void 0 === b && (b = W(), c.set(a, b));\n    c = 0;\n    for (var f = arguments.length; c < f; c++) {\n      var d = arguments[c];\n      if ("function" === typeof d || "object" === typeof d && null !== d) {\n        var e = b.o;\n        null === e && (b.o = e = new WeakMap());\n        b = e.get(d);\n        void 0 === b && (b = W(), e.set(d, b));\n      } else e = b.p, null === e && (b.p = e = new Map()), b = e.get(d), void 0 === b && (b = W(), e.set(d, b));\n    }\n    if (1 === b.s) return b.v;\n    if (2 === b.s) throw b.v;\n    try {\n      var g = a.apply(null, arguments);\n      c = b;\n      c.s = 1;\n      return c.v = g;\n    } catch (h) {\n      throw g = b, g.s = 2, g.v = h, h;\n    }\n  };\n};\nexports.cloneElement = function (a, b, c) {\n  if (null === a || void 0 === a) throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + a + ".");\n  var f = C({}, a.props),\n    d = a.key,\n    e = a.ref,\n    g = a._owner;\n  if (null != b) {\n    void 0 !== b.ref && (e = b.ref, g = K.current);\n    void 0 !== b.key && (d = "" + b.key);\n    if (a.type && a.type.defaultProps) var h = a.type.defaultProps;\n    for (k in b) J.call(b, k) && !L.hasOwnProperty(k) && (f[k] = void 0 === b[k] && void 0 !== h ? h[k] : b[k]);\n  }\n  var k = arguments.length - 2;\n  if (1 === k) f.children = c;else if (1 < k) {\n    h = Array(k);\n    for (var m = 0; m < k; m++) h[m] = arguments[m + 2];\n    f.children = h;\n  }\n  return {\n    $$typeof: l,\n    type: a.type,\n    key: d,\n    ref: e,\n    props: f,\n    _owner: g\n  };\n};\nexports.createContext = function (a) {\n  a = {\n    $$typeof: u,\n    _currentValue: a,\n    _currentValue2: a,\n    _threadCount: 0,\n    Provider: null,\n    Consumer: null,\n    _defaultValue: null,\n    _globalName: null\n  };\n  a.Provider = {\n    $$typeof: t,\n    _context: a\n  };\n  return a.Consumer = a;\n};\nexports.createElement = M;\nexports.createFactory = function (a) {\n  var b = M.bind(null, a);\n  b.type = a;\n  return b;\n};\nexports.createRef = function () {\n  return {\n    current: null\n  };\n};\nexports.forwardRef = function (a) {\n  return {\n    $$typeof: v,\n    render: a\n  };\n};\nexports.isValidElement = O;\nexports.lazy = function (a) {\n  return {\n    $$typeof: y,\n    _payload: {\n      _status: -1,\n      _result: a\n    },\n    _init: T\n  };\n};\nexports.memo = function (a, b) {\n  return {\n    $$typeof: x,\n    type: a,\n    compare: void 0 === b ? null : b\n  };\n};\nexports.startTransition = function (a) {\n  var b = Y.transition;\n  Y.transition = {};\n  try {\n    a();\n  } finally {\n    Y.transition = b;\n  }\n};\nexports.unstable_act = function () {\n  throw Error("act(...) is not supported in production builds of React.");\n};\nexports.unstable_useCacheRefresh = function () {\n  return X.current.useCacheRefresh();\n};\nexports.use = function (a) {\n  return X.current.use(a);\n};\nexports.useCallback = function (a, b) {\n  return X.current.useCallback(a, b);\n};\nexports.useContext = function (a) {\n  return X.current.useContext(a);\n};\nexports.useDebugValue = function () {};\nexports.useDeferredValue = function (a, b) {\n  return X.current.useDeferredValue(a, b);\n};\nexports.useEffect = function (a, b) {\n  return X.current.useEffect(a, b);\n};\nexports.useId = function () {\n  return X.current.useId();\n};\nexports.useImperativeHandle = function (a, b, c) {\n  return X.current.useImperativeHandle(a, b, c);\n};\nexports.useInsertionEffect = function (a, b) {\n  return X.current.useInsertionEffect(a, b);\n};\nexports.useLayoutEffect = function (a, b) {\n  return X.current.useLayoutEffect(a, b);\n};\nexports.useMemo = function (a, b) {\n  return X.current.useMemo(a, b);\n};\nexports.useOptimistic = function (a, b) {\n  return X.current.useOptimistic(a, b);\n};\nexports.useReducer = function (a, b, c) {\n  return X.current.useReducer(a, b, c);\n};\nexports.useRef = function (a) {\n  return X.current.useRef(a);\n};\nexports.useState = function (a) {\n  return X.current.useState(a);\n};\nexports.useSyncExternalStore = function (a, b, c) {\n  return X.current.useSyncExternalStore(a, b, c);\n};\nexports.useTransition = function () {\n  return X.current.useTransition();\n};\nexports.version = "18.3.0-canary-c5b937576-20231219";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///46751\n')},35466:(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval("\n\nif (true) {\n  module.exports = __webpack_require__(46751);\n} else {}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzU0NjYuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250Ly4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzPzhmNzAiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LmRldmVsb3BtZW50LmpzJyk7XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///35466\n")},18794:(__unused_webpack_module,exports)=>{"use strict";eval('/*\n React\n scheduler.production.min.js\n\n Copyright (c) Meta Platforms, Inc. and affiliates.\n\n This source code is licensed under the MIT license found in the\n LICENSE file in the root directory of this source tree.\n*/\n\n\nfunction f(a, c) {\n  var b = a.length;\n  a.push(c);\n  a: for (; 0 < b;) {\n    var d = b - 1 >>> 1,\n      e = a[d];\n    if (0 < g(e, c)) a[d] = c, a[b] = e, b = d;else break a;\n  }\n}\nfunction h(a) {\n  return 0 === a.length ? null : a[0];\n}\nfunction k(a) {\n  if (0 === a.length) return null;\n  var c = a[0],\n    b = a.pop();\n  if (b !== c) {\n    a[0] = b;\n    a: for (var d = 0, e = a.length, v = e >>> 1; d < v;) {\n      var w = 2 * (d + 1) - 1,\n        C = a[w],\n        m = w + 1,\n        x = a[m];\n      if (0 > g(C, b)) m < e && 0 > g(x, C) ? (a[d] = x, a[m] = b, d = m) : (a[d] = C, a[w] = b, d = w);else if (m < e && 0 > g(x, b)) a[d] = x, a[m] = b, d = m;else break a;\n    }\n  }\n  return c;\n}\nfunction g(a, c) {\n  var b = a.sortIndex - c.sortIndex;\n  return 0 !== b ? b : a.id - c.id;\n}\nexports.unstable_now = void 0;\nif ("object" === typeof performance && "function" === typeof performance.now) {\n  var l = performance;\n  exports.unstable_now = function () {\n    return l.now();\n  };\n} else {\n  var n = Date,\n    p = n.now();\n  exports.unstable_now = function () {\n    return n.now() - p;\n  };\n}\nvar q = [],\n  r = [],\n  t = 1,\n  u = null,\n  y = 3,\n  z = !1,\n  A = !1,\n  B = !1,\n  D = "function" === typeof setTimeout ? setTimeout : null,\n  E = "function" === typeof clearTimeout ? clearTimeout : null,\n  F = "undefined" !== typeof setImmediate ? setImmediate : null;\n"undefined" !== typeof navigator && void 0 !== navigator.scheduling && void 0 !== navigator.scheduling.isInputPending ? navigator.scheduling.isInputPending.bind(navigator.scheduling) : null;\nfunction G(a) {\n  for (var c = h(r); null !== c;) {\n    if (null === c.callback) k(r);else if (c.startTime <= a) k(r), c.sortIndex = c.expirationTime, f(q, c);else break;\n    c = h(r);\n  }\n}\nfunction H(a) {\n  B = !1;\n  G(a);\n  if (!A) if (null !== h(q)) A = !0, I();else {\n    var c = h(r);\n    null !== c && J(H, c.startTime - a);\n  }\n}\nvar K = !1,\n  L = -1,\n  M = 5,\n  N = -1;\nfunction O() {\n  return exports.unstable_now() - N < M ? !1 : !0;\n}\nfunction P() {\n  if (K) {\n    var a = exports.unstable_now();\n    N = a;\n    var c = !0;\n    try {\n      a: {\n        A = !1;\n        B && (B = !1, E(L), L = -1);\n        z = !0;\n        var b = y;\n        try {\n          b: {\n            G(a);\n            for (u = h(q); null !== u && !(u.expirationTime > a && O());) {\n              var d = u.callback;\n              if ("function" === typeof d) {\n                u.callback = null;\n                y = u.priorityLevel;\n                var e = d(u.expirationTime <= a);\n                a = exports.unstable_now();\n                if ("function" === typeof e) {\n                  u.callback = e;\n                  G(a);\n                  c = !0;\n                  break b;\n                }\n                u === h(q) && k(q);\n                G(a);\n              } else k(q);\n              u = h(q);\n            }\n            if (null !== u) c = !0;else {\n              var v = h(r);\n              null !== v && J(H, v.startTime - a);\n              c = !1;\n            }\n          }\n          break a;\n        } finally {\n          u = null, y = b, z = !1;\n        }\n        c = void 0;\n      }\n    } finally {\n      c ? Q() : K = !1;\n    }\n  }\n}\nvar Q;\nif ("function" === typeof F) Q = function () {\n  F(P);\n};else if ("undefined" !== typeof MessageChannel) {\n  var R = new MessageChannel(),\n    S = R.port2;\n  R.port1.onmessage = P;\n  Q = function () {\n    S.postMessage(null);\n  };\n} else Q = function () {\n  D(P, 0);\n};\nfunction I() {\n  K || (K = !0, Q());\n}\nfunction J(a, c) {\n  L = D(function () {\n    a(exports.unstable_now());\n  }, c);\n}\nexports.unstable_IdlePriority = 5;\nexports.unstable_ImmediatePriority = 1;\nexports.unstable_LowPriority = 4;\nexports.unstable_NormalPriority = 3;\nexports.unstable_Profiling = null;\nexports.unstable_UserBlockingPriority = 2;\nexports.unstable_cancelCallback = function (a) {\n  a.callback = null;\n};\nexports.unstable_continueExecution = function () {\n  A || z || (A = !0, I());\n};\nexports.unstable_forceFrameRate = function (a) {\n  0 > a || 125 < a ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : M = 0 < a ? Math.floor(1E3 / a) : 5;\n};\nexports.unstable_getCurrentPriorityLevel = function () {\n  return y;\n};\nexports.unstable_getFirstCallbackNode = function () {\n  return h(q);\n};\nexports.unstable_next = function (a) {\n  switch (y) {\n    case 1:\n    case 2:\n    case 3:\n      var c = 3;\n      break;\n    default:\n      c = y;\n  }\n  var b = y;\n  y = c;\n  try {\n    return a();\n  } finally {\n    y = b;\n  }\n};\nexports.unstable_pauseExecution = function () {};\nexports.unstable_requestPaint = function () {};\nexports.unstable_runWithPriority = function (a, c) {\n  switch (a) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n      break;\n    default:\n      a = 3;\n  }\n  var b = y;\n  y = a;\n  try {\n    return c();\n  } finally {\n    y = b;\n  }\n};\nexports.unstable_scheduleCallback = function (a, c, b) {\n  var d = exports.unstable_now();\n  "object" === typeof b && null !== b ? (b = b.delay, b = "number" === typeof b && 0 < b ? d + b : d) : b = d;\n  switch (a) {\n    case 1:\n      var e = -1;\n      break;\n    case 2:\n      e = 250;\n      break;\n    case 5:\n      e = 1073741823;\n      break;\n    case 4:\n      e = 1E4;\n      break;\n    default:\n      e = 5E3;\n  }\n  e = b + e;\n  a = {\n    id: t++,\n    callback: c,\n    priorityLevel: a,\n    startTime: b,\n    expirationTime: e,\n    sortIndex: -1\n  };\n  b > d ? (a.sortIndex = b, f(r, a), null === h(q) && a === h(r) && (B ? (E(L), L = -1) : B = !0, J(H, b - d))) : (a.sortIndex = e, f(q, a), A || z || (A = !0, I()));\n  return a;\n};\nexports.unstable_shouldYield = O;\nexports.unstable_wrapCallback = function (a) {\n  var c = y;\n  return function () {\n    var b = y;\n    y = c;\n    try {\n      return a.apply(this, arguments);\n    } finally {\n      y = b;\n    }\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///18794\n')},27767:(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval("\n\nif (true) {\n  module.exports = __webpack_require__(18794);\n} else {}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjc3NjcuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250Ly4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9pbmRleC5qcz83MWQ4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLmRldmVsb3BtZW50LmpzJyk7XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///27767\n")},12807:module=>{eval('//\n\nmodule.exports = function shallowEqual(objA, objB, compare, compareContext) {\n  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;\n  if (ret !== void 0) {\n    return !!ret;\n  }\n  if (objA === objB) {\n    return true;\n  }\n  if (typeof objA !== "object" || !objA || typeof objB !== "object" || !objB) {\n    return false;\n  }\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n\n  // Test for A\'s keys different from B.\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n    if (!bHasOwnProperty(key)) {\n      return false;\n    }\n    var valueA = objA[key];\n    var valueB = objB[key];\n    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n    if (ret === false || ret === void 0 && valueA !== valueB) {\n      return false;\n    }\n  }\n  return true;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTI4MDcuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250Ly4vbm9kZV9tb2R1bGVzL3NoYWxsb3dlcXVhbC9pbmRleC5qcz8zMWEzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gc2hhbGxvd0VxdWFsKG9iakEsIG9iakIsIGNvbXBhcmUsIGNvbXBhcmVDb250ZXh0KSB7XG4gIHZhciByZXQgPSBjb21wYXJlID8gY29tcGFyZS5jYWxsKGNvbXBhcmVDb250ZXh0LCBvYmpBLCBvYmpCKSA6IHZvaWQgMDtcbiAgaWYgKHJldCAhPT0gdm9pZCAwKSB7XG4gICAgcmV0dXJuICEhcmV0O1xuICB9XG4gIGlmIChvYmpBID09PSBvYmpCKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgaWYgKHR5cGVvZiBvYmpBICE9PSBcIm9iamVjdFwiIHx8ICFvYmpBIHx8IHR5cGVvZiBvYmpCICE9PSBcIm9iamVjdFwiIHx8ICFvYmpCKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHZhciBrZXlzQSA9IE9iamVjdC5rZXlzKG9iakEpO1xuICB2YXIga2V5c0IgPSBPYmplY3Qua2V5cyhvYmpCKTtcbiAgaWYgKGtleXNBLmxlbmd0aCAhPT0ga2V5c0IubGVuZ3RoKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHZhciBiSGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmJpbmQob2JqQik7XG5cbiAgLy8gVGVzdCBmb3IgQSdzIGtleXMgZGlmZmVyZW50IGZyb20gQi5cbiAgZm9yICh2YXIgaWR4ID0gMDsgaWR4IDwga2V5c0EubGVuZ3RoOyBpZHgrKykge1xuICAgIHZhciBrZXkgPSBrZXlzQVtpZHhdO1xuICAgIGlmICghYkhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgdmFyIHZhbHVlQSA9IG9iakFba2V5XTtcbiAgICB2YXIgdmFsdWVCID0gb2JqQltrZXldO1xuICAgIHJldCA9IGNvbXBhcmUgPyBjb21wYXJlLmNhbGwoY29tcGFyZUNvbnRleHQsIHZhbHVlQSwgdmFsdWVCLCBrZXkpIDogdm9pZCAwO1xuICAgIGlmIChyZXQgPT09IGZhbHNlIHx8IHJldCA9PT0gdm9pZCAwICYmIHZhbHVlQSAhPT0gdmFsdWVCKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG4gIHJldHVybiB0cnVlO1xufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///12807\n')},30149:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  Z: () => (/* binding */ es6)\n});\n\n// EXTERNAL MODULE: ./node_modules/cookie/index.js\nvar cookie = __webpack_require__(7802);\n;// CONCATENATED MODULE: ./node_modules/universal-cookie/es6/utils.js\n\nfunction hasDocumentCookie() {\n  // Can we get/set cookies on document.cookie?\n  return typeof document === 'object' && typeof document.cookie === 'string';\n}\nfunction cleanCookies() {\n  document.cookie.split(';').forEach(function (c) {\n    document.cookie = c.replace(/^ +/, '').replace(/=.*/, '=;expires=' + new Date().toUTCString() + ';path=/');\n  });\n}\nfunction parseCookies(cookies) {\n  if (typeof cookies === 'string') {\n    return cookie/* parse */.Q(cookies);\n  } else if (typeof cookies === 'object' && cookies !== null) {\n    return cookies;\n  } else {\n    return {};\n  }\n}\nfunction readCookie(value, options = {}) {\n  const cleanValue = cleanupCookieValue(value);\n  if (!options.doNotParse) {\n    try {\n      return JSON.parse(cleanValue);\n    } catch (e) {\n      // At least we tried\n    }\n  }\n  // Ignore clean value if we failed the deserialization\n  // It is not relevant anymore to trim those values\n  return value;\n}\nfunction cleanupCookieValue(value) {\n  // express prepend j: before serializing a cookie\n  if (value && value[0] === 'j' && value[1] === ':') {\n    return value.substr(2);\n  }\n  return value;\n}\n;// CONCATENATED MODULE: ./node_modules/universal-cookie/es6/Cookies.js\n\n\nclass Cookies {\n  constructor(cookies, defaultSetOptions = {}) {\n    this.changeListeners = [];\n    this.HAS_DOCUMENT_COOKIE = false;\n    this.update = () => {\n      if (!this.HAS_DOCUMENT_COOKIE) {\n        return;\n      }\n      const previousCookies = this.cookies;\n      this.cookies = cookie/* parse */.Q(document.cookie);\n      this._checkChanges(previousCookies);\n    };\n    const domCookies = typeof document === 'undefined' ? '' : document.cookie;\n    this.cookies = parseCookies(cookies || domCookies);\n    this.defaultSetOptions = defaultSetOptions;\n    this.HAS_DOCUMENT_COOKIE = hasDocumentCookie();\n  }\n  _emitChange(params) {\n    for (let i = 0; i < this.changeListeners.length; ++i) {\n      this.changeListeners[i](params);\n    }\n  }\n  _checkChanges(newCookies) {\n    const names = new Set(Object.keys(newCookies).concat(Object.keys(this.cookies)));\n    names.forEach(name => {\n      if (newCookies[name] !== this.cookies[name]) {\n        this._emitChange({\n          name,\n          value: readCookie(newCookies[name])\n        });\n      }\n    });\n  }\n  _startPolling() {\n    this.pollingInterval = setInterval(this.update, 300);\n  }\n  _stopPolling() {\n    if (this.pollingInterval) {\n      clearInterval(this.pollingInterval);\n    }\n  }\n  get(name, options = {}) {\n    if (!options.doNotUpdate) {\n      this.update();\n    }\n    return readCookie(this.cookies[name], options);\n  }\n  getAll(options = {}) {\n    if (!options.doNotUpdate) {\n      this.update();\n    }\n    const result = {};\n    for (let name in this.cookies) {\n      result[name] = readCookie(this.cookies[name], options);\n    }\n    return result;\n  }\n  set(name, value, options) {\n    if (options) {\n      options = Object.assign(Object.assign({}, this.defaultSetOptions), options);\n    } else {\n      options = this.defaultSetOptions;\n    }\n    const stringValue = typeof value === 'string' ? value : JSON.stringify(value);\n    this.cookies = Object.assign(Object.assign({}, this.cookies), {\n      [name]: stringValue\n    });\n    if (this.HAS_DOCUMENT_COOKIE) {\n      document.cookie = cookie/* serialize */.q(name, stringValue, options);\n    }\n    this._emitChange({\n      name,\n      value,\n      options\n    });\n  }\n  remove(name, options) {\n    const finalOptions = options = Object.assign(Object.assign({}, options), {\n      expires: new Date(1970, 1, 1, 0, 0, 1),\n      maxAge: 0\n    });\n    this.cookies = Object.assign({}, this.cookies);\n    delete this.cookies[name];\n    if (this.HAS_DOCUMENT_COOKIE) {\n      document.cookie = cookie/* serialize */.q(name, '', finalOptions);\n    }\n    this._emitChange({\n      name,\n      value: undefined,\n      options\n    });\n  }\n  addChangeListener(callback) {\n    this.changeListeners.push(callback);\n    if (this.changeListeners.length === 1) {\n      if (typeof window === 'object' && 'cookieStore' in window) {\n        window.cookieStore.addEventListener('change', this.update);\n      } else {\n        this._startPolling();\n      }\n    }\n  }\n  removeChangeListener(callback) {\n    const idx = this.changeListeners.indexOf(callback);\n    if (idx >= 0) {\n      this.changeListeners.splice(idx, 1);\n    }\n    if (this.changeListeners.length === 0) {\n      if (typeof window === 'object' && 'cookieStore' in window) {\n        window.cookieStore.removeEventListener('change', this.update);\n      } else {\n        this._stopPolling();\n      }\n    }\n  }\n}\n;// CONCATENATED MODULE: ./node_modules/universal-cookie/es6/index.js\n\n/* harmony default export */ const es6 = (Cookies);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///30149\n")},66878:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";eval('\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(35466);\n// EXTERNAL MODULE: ./node_modules/react-dom/client.js\nvar client = __webpack_require__(3897);\n// EXTERNAL MODULE: ./node_modules/react-router-dom/dist/index.js\nvar dist = __webpack_require__(70072);\n// EXTERNAL MODULE: ./node_modules/react-router-dom/node_modules/react-router/dist/index.js\nvar react_router_dist = __webpack_require__(96828);\n// EXTERNAL MODULE: ./node_modules/universal-cookie/es6/index.js + 2 modules\nvar es6 = __webpack_require__(30149);\n// EXTERNAL MODULE: ./node_modules/react-cookie/es6/CookiesContext.js + 1 modules\nvar CookiesContext = __webpack_require__(95897);\n;// CONCATENATED MODULE: ./node_modules/react-cookie/es6/CookiesProvider.js\n\n\n\nclass CookiesProvider extends react.Component {\n  constructor(props) {\n    super(props);\n    if (props.cookies) {\n      this.cookies = props.cookies;\n    } else {\n      this.cookies = new es6/* default */.Z(undefined, props.defaultSetOptions);\n    }\n  }\n  render() {\n    return react.createElement(CookiesContext/* Provider */.zt, {\n      value: this.cookies\n    }, this.props.children);\n  }\n}\n// EXTERNAL MODULE: ./node_modules/react-helmet-async/lib/index.esm.js\nvar index_esm = __webpack_require__(88506);\n// EXTERNAL MODULE: ./node_modules/react-dom/server.browser.js\nvar server_browser = __webpack_require__(75703);\n;// CONCATENATED MODULE: ./src/index.js\n\n\n\n\n\n\n\n\nvar Main2 = /*#__PURE__*/(0,react.lazy)(function () {\n  return Promise.all(/* import() */[__webpack_require__.e(626), __webpack_require__.e(750), __webpack_require__.e(131)]).then(__webpack_require__.bind(__webpack_require__, 58131));\n});\nvar Main2_a_queze = /*#__PURE__*/(0,react.lazy)(function () {\n  return Promise.all(/* import() */[__webpack_require__.e(626), __webpack_require__.e(750), __webpack_require__.e(313)]).then(__webpack_require__.bind(__webpack_require__, 87313));\n});\nvar Result = /*#__PURE__*/(0,react.lazy)(function () {\n  return Promise.all(/* import() */[__webpack_require__.e(626), __webpack_require__.e(750), __webpack_require__.e(966), __webpack_require__.e(502)]).then(__webpack_require__.bind(__webpack_require__, 17502));\n});\nvar Main2_make_queze = /*#__PURE__*/(0,react.lazy)(function () {\n  return Promise.all(/* import() */[__webpack_require__.e(626), __webpack_require__.e(226), __webpack_require__.e(750), __webpack_require__.e(379), __webpack_require__.e(599)]).then(__webpack_require__.bind(__webpack_require__, 27599));\n});\nvar Make_a_queze_modify = /*#__PURE__*/(0,react.lazy)(function () {\n  return Promise.all(/* import() */[__webpack_require__.e(626), __webpack_require__.e(226), __webpack_require__.e(750), __webpack_require__.e(379), __webpack_require__.e(960)]).then(__webpack_require__.bind(__webpack_require__, 83960));\n});\nvar Choose_queze_type = /*#__PURE__*/(0,react.lazy)(function () {\n  return Promise.all(/* import() */[__webpack_require__.e(750), __webpack_require__.e(721)]).then(__webpack_require__.bind(__webpack_require__, 92856));\n});\nvar Main2_a_queze_1and1 = /*#__PURE__*/(0,react.lazy)(function () {\n  return Promise.all(/* import() */[__webpack_require__.e(626), __webpack_require__.e(750), __webpack_require__.e(230)]).then(__webpack_require__.bind(__webpack_require__, 93230));\n});\nvar Community = /*#__PURE__*/(0,react.lazy)(function () {\n  return Promise.all(/* import() */[__webpack_require__.e(626), __webpack_require__.e(750), __webpack_require__.e(54)]).then(__webpack_require__.bind(__webpack_require__, 9054));\n});\nvar Quezeshow_result = /*#__PURE__*/(0,react.lazy)(function () {\n  return Promise.all(/* import() */[__webpack_require__.e(626), __webpack_require__.e(750), __webpack_require__.e(499)]).then(__webpack_require__.bind(__webpack_require__, 33499));\n});\nvar Make_quezeshow = /*#__PURE__*/(0,react.lazy)(function () {\n  return Promise.all(/* import() */[__webpack_require__.e(626), __webpack_require__.e(226), __webpack_require__.e(750), __webpack_require__.e(490), __webpack_require__.e(782), __webpack_require__.e(627)]).then(__webpack_require__.bind(__webpack_require__, 21627));\n});\nvar Quezeshow_main = /*#__PURE__*/(0,react.lazy)(function () {\n  return Promise.all(/* import() */[__webpack_require__.e(626), __webpack_require__.e(750), __webpack_require__.e(880), __webpack_require__.e(989)]).then(__webpack_require__.bind(__webpack_require__, 34989));\n});\nvar Guide_main = /*#__PURE__*/(0,react.lazy)(function () {\n  return Promise.all(/* import() */[__webpack_require__.e(750), __webpack_require__.e(176)]).then(__webpack_require__.bind(__webpack_require__, 70368));\n});\nvar Quezeshow_queze = /*#__PURE__*/(0,react.lazy)(function () {\n  return Promise.all(/* import() */[__webpack_require__.e(626), __webpack_require__.e(750), __webpack_require__.e(970)]).then(__webpack_require__.bind(__webpack_require__, 41970));\n});\nvar Machugi = /*#__PURE__*/(0,react.lazy)(function () {\n  return Promise.all(/* import() */[__webpack_require__.e(626), __webpack_require__.e(750), __webpack_require__.e(880), __webpack_require__.e(315)]).then(__webpack_require__.bind(__webpack_require__, 94315));\n});\nvar Space = /*#__PURE__*/(/* unused pure expression or super */ null && (lazy(function () {\n  return Promise.all(/* import() */[__webpack_require__.e(626), __webpack_require__.e(750), __webpack_require__.e(360)]).then(__webpack_require__.bind(__webpack_require__, 66360));\n})));\nvar Make_space = /*#__PURE__*/(/* unused pure expression or super */ null && (lazy(function () {\n  return Promise.all(/* import() */[__webpack_require__.e(626), __webpack_require__.e(226), __webpack_require__.e(750), __webpack_require__.e(490), __webpack_require__.e(617)]).then(__webpack_require__.bind(__webpack_require__, 54617));\n})));\nvar In_space = /*#__PURE__*/(/* unused pure expression or super */ null && (lazy(function () {\n  return Promise.all(/* import() */[__webpack_require__.e(626), __webpack_require__.e(750), __webpack_require__.e(817)]).then(__webpack_require__.bind(__webpack_require__, 94817));\n})));\nvar Make_space_quezeshow = /*#__PURE__*/(/* unused pure expression or super */ null && (lazy(function () {\n  return Promise.all(/* import() */[__webpack_require__.e(626), __webpack_require__.e(226), __webpack_require__.e(750), __webpack_require__.e(490), __webpack_require__.e(782), __webpack_require__.e(345)]).then(__webpack_require__.bind(__webpack_require__, 60345));\n})));\nvar Make_quezeshow_modify = /*#__PURE__*/(0,react.lazy)(function () {\n  return Promise.all(/* import() */[__webpack_require__.e(626), __webpack_require__.e(226), __webpack_require__.e(750), __webpack_require__.e(490), __webpack_require__.e(782), __webpack_require__.e(204)]).then(__webpack_require__.bind(__webpack_require__, 65204));\n});\nvar Guide_basic = /*#__PURE__*/(0,react.lazy)(function () {\n  return Promise.all(/* import() */[__webpack_require__.e(750), __webpack_require__.e(871)]).then(__webpack_require__.bind(__webpack_require__, 15549));\n});\nvar Continue_speaking = /*#__PURE__*/(0,react.lazy)(function () {\n  return Promise.all(/* import() */[__webpack_require__.e(626), __webpack_require__.e(750), __webpack_require__.e(880), __webpack_require__.e(755)]).then(__webpack_require__.bind(__webpack_require__, 55755));\n});\nvar New_word_queze = /*#__PURE__*/(0,react.lazy)(function () {\n  return Promise.all(/* import() */[__webpack_require__.e(626), __webpack_require__.e(750), __webpack_require__.e(880), __webpack_require__.e(802)]).then(__webpack_require__.bind(__webpack_require__, 82802));\n});\nvar Quezeshow_before = /*#__PURE__*/(0,react.lazy)(function () {\n  return Promise.all(/* import() */[__webpack_require__.e(626), __webpack_require__.e(750), __webpack_require__.e(966), __webpack_require__.e(107)]).then(__webpack_require__.bind(__webpack_require__, 39107));\n});\nvar rootElement = document.getElementById(\'root\');\nvar root = client.createRoot(rootElement);\nvar app = /*#__PURE__*/react.createElement("div", {\n  className: "Main_root_"\n}, /*#__PURE__*/react.createElement(dist/* BrowserRouter */.VK, null, /*#__PURE__*/react.createElement(react.Suspense, {\n  fallback: /*#__PURE__*/react.createElement("div", null, "loadind...")\n}, /*#__PURE__*/react.createElement(CookiesProvider, null, /*#__PURE__*/react.createElement(index_esm/* HelmetProvider */.B6, null, /*#__PURE__*/react.createElement(react_router_dist/* Routes */.Z5, null, /*#__PURE__*/react.createElement(react_router_dist/* Route */.AW, {\n  path: "/",\n  element: /*#__PURE__*/react.createElement(Main2, null)\n}), /*#__PURE__*/react.createElement(react_router_dist/* Route */.AW, {\n  path: "/ayoworldrankmakequeze",\n  element: /*#__PURE__*/react.createElement(Main2_make_queze, null)\n}), /*#__PURE__*/react.createElement(react_router_dist/* Route */.AW, {\n  path: "/result",\n  element: /*#__PURE__*/react.createElement(Result, null)\n}), /*#__PURE__*/react.createElement(react_router_dist/* Route */.AW, {\n  path: "/ayoworldrankaqueze",\n  element: /*#__PURE__*/react.createElement(Main2_a_queze, null)\n}), /*#__PURE__*/react.createElement(react_router_dist/* Route */.AW, {\n  path: "/makeaquezemodify",\n  element: /*#__PURE__*/react.createElement(Make_a_queze_modify, null)\n}), /*#__PURE__*/react.createElement(react_router_dist/* Route */.AW, {\n  path: "/makequezeshowmodify",\n  element: /*#__PURE__*/react.createElement(Make_quezeshow_modify, null)\n}), /*#__PURE__*/react.createElement(react_router_dist/* Route */.AW, {\n  path: "/quezeshow_before/:roomnum",\n  element: /*#__PURE__*/react.createElement(Quezeshow_before, null)\n}), /*#__PURE__*/react.createElement(react_router_dist/* Route */.AW, {\n  path: "/quezeshow_before",\n  element: /*#__PURE__*/react.createElement(Quezeshow_before, null)\n}), /*#__PURE__*/react.createElement(react_router_dist/* Route */.AW, {\n  path: "/choosequezetype",\n  element: /*#__PURE__*/react.createElement(Choose_queze_type, null)\n}), /*#__PURE__*/react.createElement(react_router_dist/* Route */.AW, {\n  path: "/oneandeone",\n  element: /*#__PURE__*/react.createElement(Main2_a_queze_1and1, null)\n}), /*#__PURE__*/react.createElement(react_router_dist/* Route */.AW, {\n  path: "/community",\n  element: /*#__PURE__*/react.createElement(Community, null)\n}), /*#__PURE__*/react.createElement(react_router_dist/* Route */.AW, {\n  path: "/quezeshow_result",\n  element: /*#__PURE__*/react.createElement(Quezeshow_result, null)\n}), /*#__PURE__*/react.createElement(react_router_dist/* Route */.AW, {\n  path: "/make_quezeshow",\n  element: /*#__PURE__*/react.createElement(Make_quezeshow, null)\n}), /*#__PURE__*/react.createElement(react_router_dist/* Route */.AW, {\n  path: "/quezeshow_main",\n  element: /*#__PURE__*/react.createElement(Quezeshow_main, null)\n}), /*#__PURE__*/react.createElement(react_router_dist/* Route */.AW, {\n  path: "/machugi",\n  element: /*#__PURE__*/react.createElement(Machugi, null)\n}), /*#__PURE__*/react.createElement(react_router_dist/* Route */.AW, {\n  path: "/quezeshow_queze",\n  element: /*#__PURE__*/react.createElement(Quezeshow_queze, null)\n}), /*#__PURE__*/react.createElement(react_router_dist/* Route */.AW, {\n  path: "/guide",\n  element: /*#__PURE__*/react.createElement(Guide_basic, null)\n}), /*#__PURE__*/react.createElement(react_router_dist/* Route */.AW, {\n  path: "/continue_speaking",\n  element: /*#__PURE__*/react.createElement(Continue_speaking, null)\n}), /*#__PURE__*/react.createElement(react_router_dist/* Route */.AW, {\n  path: "/new_word_queze",\n  element: /*#__PURE__*/react.createElement(New_word_queze, null)\n}), /*#__PURE__*/react.createElement(react_router_dist/* Route */.AW, {\n  path: "/guide_main",\n  element: /*#__PURE__*/react.createElement(Guide_main, null)\n})))))));\nif (rootElement !== null && rootElement !== void 0 && rootElement.hasChildNodes()) {\n  // 이미 child nodes가 있는 경우, 기존 root를 사용하여 업데이트\n  // hydrate(app, rootElement);\n  // console.log(\'hydrateRoot\',rootElement.childNodes,rootElement);\n  (0,client.hydrateRoot)(rootElement, app);\n} else {\n  // child nodes가 없는 경우, root를 render로 초기화\n  root.render(app, rootElement);\n}\n// root.render(app);\n// if (module.hot){\n//   module.hot.accept()\n// }\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///66878\n')}},__webpack_module_cache__={},leafPrototypes,getProto,inProgress,dataWebpackPrefix;function __webpack_require__(I){var g=__webpack_module_cache__[I];if(void 0!==g)return g.exports;var n=__webpack_module_cache__[I]={id:I,loaded:!1,exports:{}};return __webpack_modules__[I].call(n.exports,n,n.exports,__webpack_require__),n.loaded=!0,n.exports}__webpack_require__.m=__webpack_modules__,__webpack_require__.n=I=>{var g=I&&I.__esModule?()=>I.default:()=>I;return __webpack_require__.d(g,{a:g}),g},getProto=Object.getPrototypeOf?I=>Object.getPrototypeOf(I):I=>I.__proto__,__webpack_require__.t=function(I,g){if(1&g&&(I=this(I)),8&g)return I;if("object"==typeof I&&I){if(4&g&&I.__esModule)return I;if(16&g&&"function"==typeof I.then)return I}var n=Object.create(null);__webpack_require__.r(n);var t={};leafPrototypes=leafPrototypes||[null,getProto({}),getProto([]),getProto(getProto)];for(var e=2&g&&I;"object"==typeof e&&!~leafPrototypes.indexOf(e);e=getProto(e))Object.getOwnPropertyNames(e).forEach((g=>t[g]=()=>I[g]));return t.default=()=>I,__webpack_require__.d(n,t),n},__webpack_require__.d=(I,g)=>{for(var n in g)__webpack_require__.o(g,n)&&!__webpack_require__.o(I,n)&&Object.defineProperty(I,n,{enumerable:!0,get:g[n]})},__webpack_require__.f={},__webpack_require__.e=I=>Promise.all(Object.keys(__webpack_require__.f).reduce(((g,n)=>(__webpack_require__.f[n](I,g),g)),[])),__webpack_require__.u=I=>I+".bundle.js",__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(I){if("object"==typeof window)return window}}(),__webpack_require__.o=(I,g)=>Object.prototype.hasOwnProperty.call(I,g),inProgress={},dataWebpackPrefix="front:",__webpack_require__.l=(I,g,n,t)=>{if(inProgress[I])inProgress[I].push(g);else{var e,B;if(void 0!==n)for(var c=document.getElementsByTagName("script"),C=0;C<c.length;C++){var i=c[C];if(i.getAttribute("src")==I||i.getAttribute("data-webpack")==dataWebpackPrefix+n){e=i;break}}e||(B=!0,(e=document.createElement("script")).charset="utf-8",e.timeout=120,__webpack_require__.nc&&e.setAttribute("nonce",__webpack_require__.nc),e.setAttribute("data-webpack",dataWebpackPrefix+n),e.src=I),inProgress[I]=[g];var l=(g,n)=>{e.onerror=e.onload=null,clearTimeout(a);var t=inProgress[I];if(delete inProgress[I],e.parentNode&&e.parentNode.removeChild(e),t&&t.forEach((I=>I(n))),g)return g(n)},a=setTimeout(l.bind(null,void 0,{type:"timeout",target:e}),12e4);e.onerror=l.bind(null,e.onerror),e.onload=l.bind(null,e.onload),B&&document.head.appendChild(e)}},__webpack_require__.r=I=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(I,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(I,"__esModule",{value:!0})},__webpack_require__.nmd=I=>(I.paths=[],I.children||(I.children=[]),I),(()=>{var I;__webpack_require__.g.importScripts&&(I=__webpack_require__.g.location+"");var g=__webpack_require__.g.document;if(!I&&g&&(g.currentScript&&(I=g.currentScript.src),!I)){var n=g.getElementsByTagName("script");if(n.length)for(var t=n.length-1;t>-1&&!I;)I=n[t--].src}if(!I)throw new Error("Automatic publicPath is not supported in this browser");I=I.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),__webpack_require__.p=I})(),(()=>{__webpack_require__.b=document.baseURI||self.location.href;var I={179:0};__webpack_require__.f.j=(g,n)=>{var t=__webpack_require__.o(I,g)?I[g]:void 0;if(0!==t)if(t)n.push(t[2]);else{var e=new Promise(((n,e)=>t=I[g]=[n,e]));n.push(t[2]=e);var B=__webpack_require__.p+__webpack_require__.u(g),c=new Error;__webpack_require__.l(B,(n=>{if(__webpack_require__.o(I,g)&&(0!==(t=I[g])&&(I[g]=void 0),t)){var e=n&&("load"===n.type?"missing":n.type),B=n&&n.target&&n.target.src;c.message="Loading chunk "+g+" failed.\n("+e+": "+B+")",c.name="ChunkLoadError",c.type=e,c.request=B,t[1](c)}}),"chunk-"+g,g)}};var g=(g,n)=>{var t,e,[B,c,C]=n,i=0;if(B.some((g=>0!==I[g]))){for(t in c)__webpack_require__.o(c,t)&&(__webpack_require__.m[t]=c[t]);C&&C(__webpack_require__)}for(g&&g(n);i<B.length;i++)e=B[i],__webpack_require__.o(I,e)&&I[e]&&I[e][0](),I[e]=0},n=self.webpackChunkfront=self.webpackChunkfront||[];n.forEach(g.bind(null,0)),n.push=g.bind(null,n.push.bind(n))})(),__webpack_require__.nc=void 0;var __webpack_exports__=__webpack_require__(66878)})();